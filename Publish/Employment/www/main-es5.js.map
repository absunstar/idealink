{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/Account/account.module.ts","webpack:///src/app/Account/account/account.component.ts","webpack:///src/app/Account/account/account.component.html","webpack:///src/app/Account/change-password/change-password.component.ts","webpack:///src/app/Account/change-password/change-password.component.html","webpack:///src/app/Admin/admin-job-list/admin-job-list.component.ts","webpack:///src/app/Admin/admin-job-list/admin-job-list.component.html","webpack:///src/app/Admin/admin.module.ts","webpack:///src/app/Admin/company-approval/company-approval.component.ts","webpack:///src/app/Admin/company-approval/company-approval.component.html","webpack:///src/app/Admin/company-list/company-list.component.ts","webpack:///src/app/Admin/company-list/company-list.component.html","webpack:///src/app/Admin/job-approval/job-approval.component.ts","webpack:///src/app/Admin/job-approval/job-approval.component.html","webpack:///src/app/Admin/login/login.component.ts","webpack:///src/app/Admin/login/login.component.html","webpack:///src/app/Config/company-config/company-config.component.ts","webpack:///src/app/Config/company-config/company-config.component.html","webpack:///src/app/Config/config.module.ts","webpack:///src/app/Config/job-fair-create/job-fair-create.component.ts","webpack:///src/app/Config/job-fair-create/job-fair-create.component.html","webpack:///src/app/Config/job-fair-register/job-fair-register.component.ts","webpack:///src/app/Config/job-fair-register/job-fair-register.component.html","webpack:///src/app/Config/menu/menu.component.ts","webpack:///src/app/Config/menu/menu.component.html","webpack:///src/app/DataManagement/city/city.component.ts","webpack:///src/app/DataManagement/city/city.component.html","webpack:///src/app/DataManagement/country/country.component.ts","webpack:///src/app/DataManagement/country/country.component.html","webpack:///src/app/DataManagement/data-management.module.ts","webpack:///src/app/DataManagement/data-menu/data-menu.component.ts","webpack:///src/app/DataManagement/data-menu/data-menu.component.html","webpack:///src/app/DataManagement/industry/industry.component.ts","webpack:///src/app/DataManagement/industry/industry.component.html","webpack:///src/app/DataManagement/job-fields/job-fields.component.ts","webpack:///src/app/DataManagement/job-fields/job-fields.component.html","webpack:///src/app/DataManagement/job-sub-field/job-sub-field.component.ts","webpack:///src/app/DataManagement/job-sub-field/job-sub-field.component.html","webpack:///src/app/DataManagement/languages/languages.component.ts","webpack:///src/app/DataManagement/languages/languages.component.html","webpack:///src/app/DataManagement/qualification/qualification.component.ts","webpack:///src/app/DataManagement/qualification/qualification.component.html","webpack:///src/app/DataManagement/years-of-experience/years-of-experience.component.ts","webpack:///src/app/DataManagement/years-of-experience/years-of-experience.component.html","webpack:///src/app/Employer/applied-job-seekers/applied-job-seekers.component.ts","webpack:///src/app/Employer/applied-job-seekers/applied-job-seekers.component.html","webpack:///src/app/Employer/company-view/company-view.component.ts","webpack:///src/app/Employer/company-view/company-view.component.html","webpack:///src/app/Employer/employer-dashboard/employer-dashboard.component.ts","webpack:///src/app/Employer/employer-dashboard/employer-dashboard.component.html","webpack:///src/app/Employer/employer-menu/employer-menu.component.ts","webpack:///src/app/Employer/employer-menu/employer-menu.component.html","webpack:///src/app/Employer/employer-my-companies/employer-my-companies.component.ts","webpack:///src/app/Employer/employer-my-companies/employer-my-companies.component.html","webpack:///src/app/Employer/employer-post-job/employer-post-job.component.ts","webpack:///src/app/Employer/employer-post-job/employer-post-job.component.html","webpack:///src/app/Employer/employer.module.ts","webpack:///src/app/Employer/empoyer-my-jobs/empoyer-my-jobs.component.ts","webpack:///src/app/Employer/empoyer-my-jobs/empoyer-my-jobs.component.html","webpack:///src/app/Employer/empoyer-profile/empoyer-profile.component.ts","webpack:///src/app/Employer/empoyer-profile/empoyer-profile.component.html","webpack:///src/app/Employer/empoyer-short-list-resumes/empoyer-short-list-resumes.component.ts","webpack:///src/app/Employer/empoyer-short-list-resumes/empoyer-short-list-resumes.component.html","webpack:///src/app/Employer/filter.pipe.ts","webpack:///src/app/Employer/job-view/job-view.component.ts","webpack:///src/app/Employer/job-view/job-view.component.html","webpack:///src/app/Employer/pager.service.ts","webpack:///src/app/Employer/search/search.component.html","webpack:///src/app/Employer/search/search.component.ts","webpack:///src/app/Enum/ConfigForm.enum.ts","webpack:///src/app/Enum/JobStatus.enum.ts","webpack:///src/app/Enum/JobType.enum.ts","webpack:///src/app/Enum/TranslateType.enum.ts","webpack:///src/app/Enum/UserGender.enum.ts","webpack:///src/app/Enum/UserType.enum.ts","webpack:///src/app/JobFair/create/create.component.ts","webpack:///src/app/JobFair/create/create.component.html","webpack:///src/app/JobFair/job-fair.module.ts","webpack:///src/app/JobFair/list/list.component.ts","webpack:///src/app/JobFair/list/list.component.html","webpack:///src/app/JobFair/register/register.component.ts","webpack:///src/app/JobFair/register/register.component.html","webpack:///src/app/JobSeeker/applied-jobs/applied-jobs.component.ts","webpack:///src/app/JobSeeker/applied-jobs/applied-jobs.component.html","webpack:///src/app/JobSeeker/approve-contact/approve-contact.component.ts","webpack:///src/app/JobSeeker/approve-contact/approve-contact.component.html","webpack:///src/app/JobSeeker/job-seeker-dashboard/job-seeker-dashboard.component.ts","webpack:///src/app/JobSeeker/job-seeker-dashboard/job-seeker-dashboard.component.html","webpack:///src/app/JobSeeker/job-seeker-menu/job-seeker-menu.component.ts","webpack:///src/app/JobSeeker/job-seeker-menu/job-seeker-menu.component.html","webpack:///src/app/JobSeeker/jobseeker.module.ts","webpack:///src/app/JobSeeker/resume/resume.component.ts","webpack:///src/app/JobSeeker/resume/resume.component.html","webpack:///src/app/JobSeeker/search/search.component.ts","webpack:///src/app/JobSeeker/search/search.component.html","webpack:///src/app/JobSeeker/short-list-jobs/short-list-jobs.component.ts","webpack:///src/app/JobSeeker/short-list-jobs/short-list-jobs.component.html","webpack:///src/app/Reports/report.module.ts","webpack:///src/app/Reports/stats-job-seeker-per-job/stats-job-seeker-per-job.component.ts","webpack:///src/app/Reports/stats-job-seeker-per-job/stats-job-seeker-per-job.component.html","webpack:///src/app/Reports/stats-job/stats-job.component.ts","webpack:///src/app/Reports/stats-job/stats-job.component.html","webpack:///src/app/Reports/stats/stats.component.ts","webpack:///src/app/Reports/stats/stats.component.html","webpack:///src/app/Translate/translatelist/translatelist.component.ts","webpack:///src/app/Translate/translatelist/translatelist.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/common/ConfigForms/AdminConfig/create-form/create-form.component.ts","webpack:///src/app/common/ConfigForms/AdminConfig/create-form/create-form.component.html","webpack:///src/app/common/ConfigForms/components/SelectMulti/selectmulti.component.ts","webpack:///src/app/common/ConfigForms/components/button/button.component.ts","webpack:///src/app/common/ConfigForms/components/checkbox/checkbox.component.ts","webpack:///src/app/common/ConfigForms/components/date/date.component.ts","webpack:///src/app/common/ConfigForms/components/dynamic-field/dynamic-field.directive.ts","webpack:///src/app/common/ConfigForms/components/dynamic-form/dynamic-form.component.ts","webpack:///src/app/common/ConfigForms/components/input/input.component.ts","webpack:///src/app/common/ConfigForms/components/radiobutton/radiobutton.component.ts","webpack:///src/app/common/ConfigForms/components/select/select.component.ts","webpack:///src/app/common/ConfigForms/field.interface.ts","webpack:///src/app/common/confirmation-dialog/confirmation-dialog.component.ts","webpack:///src/app/common/confirmation-dialog/confirmation-dialog.component.html","webpack:///src/app/common/confirmation-dialog/confirmation-dialog.service.ts","webpack:///src/app/common/pagination/components/custom-pagination/custom-pagination.component.ts","webpack:///src/app/common/pagination/components/custom-pagination/custom-pagination.component.html","webpack:///src/app/common/pagination/page.ts","webpack:///src/app/common/pagination/pageable.ts","webpack:///src/app/common/pagination/services/custom-pagination.service.ts","webpack:///src/app/common/search-employer/search-employer.component.ts","webpack:///src/app/common/search-employer/search-employer.component.html","webpack:///src/app/common/search-job-seeker/search-job-seeker.component.ts","webpack:///src/app/common/search-job-seeker/search-job-seeker.component.html","webpack:///src/app/common/sharedmodule.module.ts","webpack:///src/app/common/upload-files/upload-files.component.ts","webpack:///src/app/common/upload-files/upload-files.component.html","webpack:///src/app/constants.ts","webpack:///src/app/core/NgbDateCustomParserFormatter.class.ts","webpack:///src/app/core/account.service.ts","webpack:///src/app/core/admin-route-guard.ts","webpack:///src/app/core/auth-interceptor.service.ts","webpack:///src/app/core/auth-service.component.ts","webpack:///src/app/core/core.module.ts","webpack:///src/app/core/pipe/filter.pipe.ts","webpack:///src/app/core/pipe/searchfilter.pipe.ts","webpack:///src/app/core/project.service.ts","webpack:///src/app/core/utils.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/home/policy/policy.component.ts","webpack:///src/app/home/policy/policy.component.html","webpack:///src/app/home/register-success/register-success.component.ts","webpack:///src/app/home/register-success/register-success.component.html","webpack:///src/app/home/signin-redirect-callback.component.ts","webpack:///src/app/home/signout-redirect-callback.component.ts","webpack:///src/app/home/term/term.component.ts","webpack:///src/app/home/term/term.component.html","webpack:///src/app/home/unauthorized.component.ts","webpack:///src/app/home/unauthorized.component.html","webpack:///src/app/interface/Model/ModelAccountSearch.class.ts","webpack:///src/app/interface/Model/ModelApplyCreate.class.ts","webpack:///src/app/interface/Model/ModelApplyHire.class.ts","webpack:///src/app/interface/Model/ModelApplyList.class.ts","webpack:///src/app/interface/Model/ModelChangePassword.class.ts","webpack:///src/app/interface/Model/ModelCompany.class.ts","webpack:///src/app/interface/Model/ModelCompanyAddEmployer.class.ts","webpack:///src/app/interface/Model/ModelConfigForm.class.ts","webpack:///src/app/interface/Model/ModelConfigFormGet.class.ts","webpack:///src/app/interface/Model/ModelFileUpload.class.ts","webpack:///src/app/interface/Model/ModelId.interface.ts","webpack:///src/app/interface/Model/ModelIdName.class.ts","webpack:///src/app/interface/Model/ModelJob.class.ts","webpack:///src/app/interface/Model/ModelJobFair.class.ts","webpack:///src/app/interface/Model/ModelJobFairAttendance.class.ts","webpack:///src/app/interface/Model/ModelJobFairRegisteration.class.ts","webpack:///src/app/interface/Model/ModelJobFilter.class.ts","webpack:///src/app/interface/Model/ModelJobSearch.class.ts","webpack:///src/app/interface/Model/ModelJobSeeker.class.ts","webpack:///src/app/interface/Model/ModelJobSeekerSearch.class.ts","webpack:///src/app/interface/Model/ModelMyAssignedAccount.class.ts","webpack:///src/app/interface/Model/ModelPaging.interface.ts","webpack:///src/app/interface/Model/ModelReportDates.class.ts","webpack:///src/app/interface/Model/ModelShowMessage.class.ts","webpack:///src/app/interface/Model/ModelSubEntity.class.ts","webpack:///src/app/interface/Model/ModelTranslateList.class.ts","webpack:///src/app/interface/Model/ModelUserProfile.class.ts","webpack:///src/app/interface/Model/ModelUserType.class.ts","webpack:///src/app/interface/Response/Job.class.ts","webpack:///src/app/interface/Response/JobSeeker.class.ts","webpack:///src/app/interface/Response/ReportJobSeekerGender.class.ts","webpack:///src/app/interface/Response/UserProfile.class.ts","webpack:///src/app/interface/baseComponent.class.ts","webpack:///src/app/model/auth-context.ts","webpack:///src/app/services/GenericService.service.ts","webpack:///src/app/services/apply.service.ts","webpack:///src/app/services/config-form.service.ts","webpack:///src/app/services/country.service.ts","webpack:///src/app/services/favourite.service.ts","webpack:///src/app/services/files.service.ts","webpack:///src/app/services/industry.service.ts","webpack:///src/app/services/job-fair.service.ts","webpack:///src/app/services/job-fields.service.ts","webpack:///src/app/services/job-seeker.service.ts","webpack:///src/app/services/job.service.ts","webpack:///src/app/services/languages.service.ts","webpack:///src/app/services/loginuser.service.ts","webpack:///src/app/services/misc.service.ts","webpack:///src/app/services/qualification.service.ts","webpack:///src/app/services/service-company.service.ts","webpack:///src/app/services/show-message.service.ts","webpack:///src/app/services/translate-service.service.ts","webpack:///src/app/services/userprofile.service.ts","webpack:///src/app/services/years-of-experience.service.ts","webpack:///src/app/ztest/test/test.component.ts","webpack:///src/app/ztest/test/test.component.html","webpack:///src/app/ztest/test/test.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AccountModule","forChild","path","component","declarations","imports","providers","AccountComponent","BLServiceUserProfile","router","paginationService","modalService","confirmationDialogService","BLServiceShowMessage","BLServiceLoginUser","BLTranslate","pageTitle","filterType","filtertxt","modelNameEdited","modelIsCreate","page","isClicked","get","subscribe","res","AccountActivationLinkFailed","AccountActivationLinkSuccess","AccountPasswordSucess","AccountPasswordFailed","loadData","lstUserType","getUserTypes","getSearch","pageable","pageCurrent","next","lst","lstUserProfile","pageSize","totalElements","totalCount","content","lstResult","error","err","message","getNextPage","getPreviousPage","Id","confirmActivation","confirmed","setActivate","response","Success","sendMessage","confirmDeactivation","setDeActivate","modelObj","open","backdropClass","centered","modelForm","valid","model","Name","Type","Email","EnumUserTypes","Admin","create","dismissAll","update","obj","type","UserId","getGetByid","navigate","Limit","ResendActivationLink","ResendPasswordLink","filterbtn","createBtn","getloadPageCurrent","selector","templateUrl","styleUrls","ChangePasswordComponent","CheckConfirm","ChangePassword","NewPassword","ConfirmPassword","Save","AdminJobListComponent","BLService","BLServiceCompany","modelFilter","ListCompany","lstCompanies","CurrentPage","AdminJobSearch","status","AdminModule","data","PageName","CompanyApprovalComponent","GetCompanyWaitingApproval","confirm","setApproved","setRejected","CompanyListComponent","ListAnyCompanyPaged","JobApprovalComponent","GetJobWaitingApproval","LoginComponent","_authService","loginAdmin","login","CompanyConfigComponent","formType","Company","ConfigModule","JobFairCreateComponent","JobFairCreate","JobFairRegisterComponent","JobFairRegister","MenuComponent","CityComponent","route","param","snapshot","paramMap","MainId","PAGE_SIZE","CountryObj","subItems","length","SubActivate","SubDeActivate","filter","item","toLocaleLowerCase","indexOf","trim","SubCreate","SubUpdate","_id","City","Translate","onBack","CountryComponent","getAll","Country","DataManagementModule","schemas","DataMenuComponent","pageName","IndustryComponent","Industry","JobFieldsComponent","JobField","JobSubFieldComponent","MainObj","JobSubFields","LanguagesComponent","Languages","QualificationComponent","Qualification","YearsOfExperienceComponent","YearsOfExperience","AppliedJobSeekersComponent","show","JobName","JobId","Hire","UnHire","ListAll","Job","CompanyViewComponent","BLCompany","BLJob","profileId","objProfile","GetJobsByCompanyId","lstJobs","EmployerDashboardComponent","EmployerMenuComponent","userName","UserNameChanged","EmployerMyCompaniesComponent","BLUserProfile","GetMyUser","objUser","modelCompnayId","getCompanyEmployers","AddEmployer","ListCompanyEmployers","modellstCompanyEmployer","RemoveEmployer","EmployerPostJobComponent","BLCountry","BLIndustry","BLQualification","BLExperience","BLJobFields","objJob","todayDate","Date","Address","CityId","CountryId","IndustryId","JobFieldId","JobSubFieldId","JobSubField","QualificationId","ExperienceId","Experience","CompanyId","Deadline","Description","Skills","Benefits","Gender","Remuneration","d","modelEndDate","year","getUTCFullYear","month","getUTCMonth","day","getUTCDate","MapToModel","LoadJob","userProfile","MyCompanies","x","IsApproved","getListActive","LkupCountry","onCountrySelect","LkupIndustry","LkupQualification","LkupExperience","LkupJobField","onJobFieldSelect","LkupCity","sub","find","y","IsActive","sort","a","b","localeCompare","LkupJobSubField","updateDraft","updateDraftPublish","updatePublish","onEndDateSelect","onCancel","EmployerModule","forRoot","EmpoyerMyJobsComponent","searchData","Object","filterText","Search","ListAllByEmployerId","GetMyJobStats","jobStats","replace","event","searchText","target","value","tableSearch","EmpoyerProfileComponent","BLServiceConfigForm","IsUploading","regConfig","GetByType","forEach","inputType","label","name","options","order","validations","push","form","fields","createControl","About","Establish","Phone","SocialFacebook","SocialGooglePlus","SocialLinkedin","SocialTwitter","Website","modelEstablishDate","dateOld","InitDynamicForm","filename","FileName","CompanyLogo","modelSaveBtn","OnFileUpload","UploadStatus","onEstDateSelect","EmpoyerShortListResumesComponent","FilterLPipe","items","some","key","String","toLowerCase","includes","JobViewComponent","BLApply","BLJobLoginUser","BLFavourite","cookies","location","IsJobApply","IsJobFavourite","IsLoggedIn","CheckMyFavourite","CheckMyApply","set","JSON","stringify","GetData","EmployerJobViewNoDesc","EmployerJobViewNoSkill","EmployerJobViewNoBenefit","gender","DeActivateByJobId","Create","size","modelMessage","back","goback","PagerService","totalItems","currentPage","totalPages","Math","ceil","startPage","endPage","startIndex","endIndex","min","pages","providedIn","SearchComponent","fb","BLLanguages","http","hideCheck","less1","limts1","less2","limts2","less3","limts3","modelSearch","hideCheck1","hideCheck2","hideCheck3","arrayCheck","arrayCheck1","arrayCheck2","arrayCheck3","arrayCheck4","Qualificationid","cityId","request","recentSkillSearch","recentLocSearch","onlySkill","onlySkillHTM","OnlylocationHTM","Onlylocation","lessText","searchComp","isReadMore","SCLTH","coun","Refbutton","JobCumpanyC","JobFieldC","IndustryC","ExperienceC","allData","allDataBackup","pager","pagedItems","$","css","company","console","log","createForm","companyViewInit","priv","parse","privT","undefined","losding","url","apiRoot","post","currentData","hide","assign","setPage","onsubCountfilter","onsubCountremoveFilter","setTimeout","set1","set2","set3","set4","set5","allcount","LkupLanguage","domD","i","element","filterMenu","counts","Count","Number","LkupJobFieldcount","FilterData","contactForm","group","skills","getONlyloc","getskills","l","k","toString","laction","lactionskil","split","map","charAt","toUpperCase","substr","currentDataOG","D","myCheckboxes","checked","fildsubmintfilte","index","splice","filte","v","CityiId","filterTextValidation","alllist","c","j","n","currentDatas","headers","searchTextC","bdcApi","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","getApi","enableHighAccuracy","timeout","maximumAge","city","controls","setValue","parents","removeClass","addClass","attr","prop","innerHTML","htmlDecode","onSubmit","LkupExperienceExtra","LkupIndustryExtra","LkupJobFieldExtra","click","input","doc","DOMParser","parseFromString","documentElement","textContent","getPager","slice","Obj","hf","di","applyFilter","objectnull","dd","dat","findata","Datafit","Datafits","users","result","f","search","getLocation","submit","ConfigForm","JobStatus","JobType","TranslateType","UserGender","UserType","CreateComponent","BLJobFair","modelId","EventDate","modelEventDate","fileType","IsOnline","onDateSelect","onLocationChange","JobFairModule","ListComponent","BLServiceJobFair","modelAttendance","idx","JobFairId","SetAttendance","flag","IsAdmin","lstJobFair","isJobSeeker","Export","window","RegisterComponent","BLJobSeeker","isRegstered","isChecked","checkUser","LoadUser","userId","UserIsJobSeekerChanged","pipe","jobfair","CheckRegister","modelUser","JobTitle","DOB","modelDOBDate","Register","reset","AppliedJobsComponent","ApproveContactComponent","ContactPermissioGetApprovalList","ContactPermissionApprove","ContactPermissionReject","JobSeekerDashboardComponent","JobSeekerMenuComponent","JobseekerModule","ResumeComponent","BLServiceFile","BLJobSeekerLoginUser","JobSeekerId","objJobSeeker","modelJobSeeker","IsEditDescription","IsEditProfile","IsDatesCorrect","SeekerCertifiateFileError","LoadFav","getData","UserIsLoggedInChanged","val","IsFavourite","ProfilePicture","getTime","ConvertToModel","modelDOB","join","dob","today","birthDate","getFullYear","age","m","getMonth","getDate","UpdateDescription","UpdateProfile","UpdateInfo","IsCreate","modelCertificate","modelEduStart","FileToUpload","StartDate","s","title","modelTitle","modelEducation","modelIsEducation","modelIsWork","modelIsExtra","modelEduEnd","EndDate","CompareDates","formData","FormData","append","UploadFile","CertificatePath","UpdateCertificateDB","AddCertification","UpdateCertification","AddEducation","UpdateEducation","AddWorkExperience","UpdateWorkExperience","AddExtraCurricular","UpdateExtraCurricular","RemoveCertification","RemoveEducation","RemoveWorkExperience","RemoveExtraCurricular","files","saveFile","fileName","$element","scrollIntoView","behavior","block","inline","ContactPermissionRequest","ImportCertification","scrollToElement","Import","arrayCheck5","modelSearchR","SearchbyGender","aipfiltercall","che","el","animate","scrollTop","filterreq","GenderId","LanguageId","datareq","dta","it","allclearFilter","ShortListJobsComponent","ReportModule","StatsJobSeekerPerJobComponent","BLServiceApply","ReportJobSeekerAppliedPerJobCount","CompareDatesEqual","onStartDateSelect","StatsJobComponent","lstJobCount","ListAnyCompany","ListAnyJobFields","ReportJobCount","StatsComponent","reportCountJobSeeker","reportCountCompany","reportCountGender","reportCountHired","ReportJobSeekerCount","ReportJobSeekerGenderCount","ReportCompanyCount","ReportJobSeekerHiredCount","TranslatelistComponent","BLServiceTranslate","paramType","paramId","loadTitle","ListTranslationByType","lstData","SaveListTranslation","msgSavedSuccessfully","OnRedrirectBack","routes","AppRoutingModule","AppComponent","BLServiceMisc","BLServiceJob","_snackBar","translate","msgClass","msgText","isLoggedIn","isAdmin","isEmployer","isCurrentPageHome","IsRoleUndefined","currentYear","IsAppear","CountApproval","isLoggedInMYadd","CheckLogin","addLangs","selectLang","localStorage","getItem","setDefaultLang","IsRTL","IsAzureLoginEnabled","MCTWebsiteURL","GetApprovalCounts","events","firstChild","outlet","msgChanged","msg","duration","panelClass","UserIdChanged","UserRoleChanged","userRole","ForceUserSelectRole","UserIsAdminChanged","UserIsEmployerChanged","MCTURL","GetIsLoggedInFunction","self","reject","Islogged","loggedIn","logout","use","setItem","reload","GetJobWaitingApprovalCount","count","GetCompanyWaitingApprovalCount","switchLang","AppModule","bootstrap","entryComponents","CreateFormComponent","FormInputs","removeAt","ctl","Order","required","max","Label","maxLength","InputType","array","IsRequired","opt","yy","xx","buildoptions","adminForm","buildFormInputs","ConvertToForm","option","control","frm","obj1","obj2","FormType","Form","Update","addFormInputs","SelectMultiComponent","template","styles","ButtonComponent","CheckboxComponent","DateComponent","componentMapper","button","select","selectmulti","date","radiobutton","checkbox","DynamicFieldDirective","resolver","container","factory","resolveComponentFactory","field","componentRef","createComponent","instance","DynamicFormComponent","ref","preventDefault","stopPropagation","emit","validateAllFormFields","bindValidations","addControl","validList","validator","compose","formGroup","markAsTouched","onlySelf","exportAs","InputComponent","RadiobuttonComponent","SelectComponent","Validator","strName","FieldConfig","ConfirmationDialogComponent","dialogRef","close","dismiss","accept","decline","ConfirmationDialogService","btnOkText","btnCancelText","dialogSize","modalRef","componentInstance","CustomPaginationComponent","nextPageEvent","previousPageEvent","loadPageCurrentEvent","PageCurrent","Page","_totalElements","PageTotalCount","Pageable","PageDisplayCount","IsFirst","IsLast","_PageTotalCount","PAGE_FIRST_NUMBER","PAGE_Display_Count","_pageCurrent","PageDisplayList","indexStart","indexEnd","_pageSize","CalculateLastFirst","calculateDisplayPage","CustomPaginationService","SearchEmployerComponent","OnSelect","noResult","suggestions$","observer","query","searchActiveEmployer","errorMessage","selectedOption","typeaheadLoading","onSelect","changeTypeaheadLoading","typeaheadNoResults","SearchJobSeekerComponent","searchActiveJobSeeker","SharedModule","provide","useClass","loader","useFactory","httpTranslateLoader","deps","UploadFilesComponent","IsDropZone","fileToUpload","droppedFile","fileEntry","isFile","file","Upload","relativePath","acceptExtensions","fileExtenstion","pop","OrgFileName","Constants","clientRoot","stsAuthority","clientId","NgbDateCustomParserFormatter","dateParts","isNumber","toInteger","padNumber","parseInt","isNaN","AccountService","_httpClient","put","userInfo","AdminRouteGuard","state","authContext","EmployerRouteGuard","JobSeekerRouteGuard","AuthInterceptorService","_router","startsWith","getAccessToken","token","lang","authReq","clone","handle","_","respError","formatError","toPromise","AuthService","_loginChangedSubject","_authContextSubject","loginChanged","asObservable","authContextChanged","stsSettings","authority","client_id","redirect_uri","scope","response_type","post_logout_redirect_uri","automaticSilentRenew","silent_redirect_uri","stsSettingsAdmin","_userManager","addAccessTokenExpired","addUserLoaded","user","_user","loadSecurityContext","expired","signinRedirect","signinSilent","getUser","userCurrent","signinRedirectCallback","catch","signoutRedirect","signoutRedirectCallback","access_token","context","claims","CoreModule","multi","FilterPipe","args","SearchfilterPipe","ProjectService","projectId","project","delete","userPermission","milestone","Utils","ErrorEvent","HomeComponent","BLUserProfileService","BLServiceMessage","BLServiceLoggedIn","passwordPattern","msgShow","isTermAgreed","msgRedirect","msgIsSuccess","isSuccess","Send","userType","UpdateUserRole","PolicyComponent","RegisterSuccessComponent","SigninRedirectCallbackComponent","completeLogin","replaceUrl","SignoutRedirectCallbackComponent","completeLogout","TermComponent","UnauthorizedComponent","ModelAccountSearch","ModelApplyCreate","ModelApplyHire","ModelApplyList","ModelChangePassword","ModelCompany","ModelCompanyAddEmployer","ModelConfigForm","ModelFieldConfig","ModelOptions","ModelConfigFormGet","ModelFileUpload","ModelId","ModelIdName","ModelJob","ModelJobFair","ModelJobFairAttendance","ModelJobFairRegisteration","ModelAdminJobSearch","ModelJobSearch","ModelJobSeeker","ModelResumeItem","ModelResumeCertification","ModelJobSeekerSearch","ModelMyAssignedAccount","ModelPaging","ModelReportDates","ModelReportJob","ShowMessage","EnumShowMessage","isSucess","ModelSubEntity","ModelTranslateList","ModelUserProfile","UserTypeList","UserTypeItem","cJobItem","cJobSeekerItem","ResponseResumeItem","ResponseResumeCertification","ResponseContactInformationRequest","ReportJobSeekerGender","Male","Female","Other","cUserProfileList","cUserProfileItem","cEntityObj","baseComponent","emailPattern","textEditorConfig","editable","spellcheck","minHeight","defaultParagraphSeparator","defaultFontName","toolbarHiddenButtons","Init","msgDeactivatedSuccessfully","msgActivatedSuccessfully","msgsetDeactivate","msgsetActivate","msgDeletedSuccessfully","msgsetDeleted","msgUpdatedsuccessfully","msgsetRemove","dateToday","dateFrom","dateTo","d1","d2","AuthContext","Value","FullName","ServiceGeneric","ControllerName","httpClient","apiURL","handleError","ServiceApply","Message","ServiceConfigForm","ServiceCountry","ServiceFavourite","ServiceFiles","ServiceIndustry","ServiceJobFair","ServiceJobFields","ServiceJobSeeker","BLServiceFiles","ServiceJob","ServiceLanguages","ServiceLoginUser","_userId","_userName","_userRole","_userIsLoggedIn","_userIsAdmin","_userIsEmployer","_userIsJobSeeker","Role","MiscService","ServiceQualification","ServiceCompany","ServiceShowMessage","_msgSubject","ServiceTranslateList","ServiceUserProfile","subPartnerId","AccountId","ServiceYearsOfExperience","TestComponent","TestModule","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { AccountComponent } from './account/account.component';\r\nimport { SharedModule } from 'src/app/common/sharedmodule.module';\r\nimport { RouterModule } from '@angular/router';\r\nimport {  AdminRouteGuard } from 'src/app/core/admin-route-guard';\r\nimport { ChangePasswordComponent } from './change-password/change-password.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AccountComponent,\r\n    ChangePasswordComponent\r\n  ],\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      { path: 'account/account', component: AccountComponent },\r\n      { path: 'account/ChangePassword', component: ChangePasswordComponent },\r\n    ])\r\n  ],\r\n  providers:[\r\n    AdminRouteGuard\r\n  ]\r\n})\r\nexport class AccountModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { cUserProfileList, cUserProfileItem } from 'src/app/interface/Response/UserProfile.class';\r\nimport { Page } from 'src/app/common/pagination/page';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { CustomPaginationService } from 'src/app/common/pagination/services/custom-pagination.service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ServiceUserProfile } from 'src/app/services/userprofile.service';\r\nimport { NgForm, FormControl, Validators } from '@angular/forms';\r\nimport { ModelUserProfile } from 'src/app/interface/Model/ModelUserProfile.class';\r\nimport { UserTypeItem, UserTypeList } from 'src/app/interface/Model/ModelUserType.class';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { UserType } from 'src/app/Enum/UserType.enum';\r\nimport { ConfirmationDialogService } from 'src/app/common/confirmation-dialog/confirmation-dialog.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-account',\r\n  templateUrl: './account.component.html',\r\n  styleUrls: ['./account.component.scss']\r\n})\r\nexport class AccountComponent extends baseComponent implements OnInit {\r\n  \r\n  get EnumUserTypes() { return UserType };\r\n  pageTitle: string = 'User Accounts';\r\n  lstUserProfile: cUserProfileList;\r\n  lstUserType: UserTypeItem[];\r\n  filterType: string = \"0\";\r\n  filtertxt: string = '';\r\n  modelNameEdited: string = '';\r\n  modelObj: cUserProfileItem;\r\n  modelIsCreate: boolean = true;\r\n  page: Page<cUserProfileItem> = new Page();\r\n  isClicked = false;\r\n  AccountActivationLinkFailed: string;\r\n  AccountActivationLinkSuccess: string;\r\n  AccountPasswordSucess:string;\r\n  AccountPasswordFailed:string;\r\n\r\n  constructor(private BLServiceUserProfile: ServiceUserProfile,\r\n    private router: Router,\r\n    private paginationService: CustomPaginationService,\r\n    private modalService: NgbModal,\r\n    private confirmationDialogService: ConfirmationDialogService,\r\n    BLServiceShowMessage: ServiceShowMessage,\r\n    BLServiceLoginUser: ServiceLoginUser,BLTranslate: TranslateService,) {\r\n    super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\r\n    this.BLTranslate.get(\"AccountActivationLinkFailed\").subscribe(res => { this.AccountActivationLinkFailed = res; });\r\n    this.BLTranslate.get(\"AccountActivationLinkSuccess\").subscribe(res => { this.AccountActivationLinkSuccess = res; });\r\n    this.BLTranslate.get(\"AccountPasswordSucess\").subscribe(res => { this.AccountPasswordSucess = res; });\r\n    this.BLTranslate.get(\"AccountPasswordFailed\").subscribe(res => { this.AccountPasswordFailed = res; });\r\n   \r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n    this.lstUserType = new UserTypeList().getUserTypes();\r\n  }\r\n  private loadData(): void {\r\n    this.BLServiceUserProfile.getSearch(this.page.pageable.pageCurrent, this.filtertxt, this.filterType).subscribe({\r\n      next: lst => {\r\n\r\n        this.lstUserProfile = lst;\r\n        this.page.pageable.pageSize = lst.pageSize;\r\n        this.page.totalElements = lst.totalCount;\r\n        this.page.content = lst.lstResult;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  public getNextPage(): void {\r\n    this.page.pageable = this.paginationService.getNextPage(this.page);\r\n    this.loadData();\r\n  }\r\n\r\n  public getPreviousPage(): void {\r\n    this.page.pageable = this.paginationService.getPreviousPage(this.page);\r\n    this.loadData();\r\n  }\r\n  public getloadPageCurrent(): void {\r\n    this.loadData();\r\n  }\r\n  setActivate(Id: string): void {\r\n    this.confirmationDialogService.confirmActivation()\r\n      .then((confirmed) => {\r\n        if (!confirmed)\r\n          return;\r\n        this.BLServiceUserProfile.setActivate(Id).subscribe({\r\n          next: response => {\r\n            this.message.Success(\"Activated successfully.\");\r\n            this.BLServiceShowMessage.sendMessage(this.message);\r\n            this.loadData();\r\n          },\r\n          error: err => this.message.Error(err)\r\n        });\r\n      });\r\n  }\r\n  setDeActivate(Id: string): void {\r\n    this.confirmationDialogService.confirmDeactivation()\r\n      .then((confirmed) => {\r\n        if (!confirmed)\r\n          return;\r\n        this.BLServiceUserProfile.setDeActivate(Id).subscribe({\r\n          next: response => {\r\n            this.message.Success(\"Deactivated successfully.\");\r\n            this.BLServiceShowMessage.sendMessage(this.message);\r\n            this.loadData();\r\n          },\r\n          error: err => this.message.Error(err)\r\n        });\r\n      });\r\n  }\r\n  filterbtn(): void {\r\n    this.page.pageable.pageCurrent = 1;\r\n    this.loadData();\r\n  }\r\n  createBtn(content): void {\r\n    this.modelObj = new cUserProfileItem;\r\n    this.modelIsCreate = true;\r\n    this.isClicked = false;\r\n    this.modelNameEdited = \"\";\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  modelSaveBtn(modelForm: NgForm): void {\r\n    if (!modelForm.valid)\r\n      return;\r\n    this.isClicked = true;\r\n    var model = new ModelUserProfile();\r\n    model.Id = this.modelObj.Id;\r\n    model.Name = this.modelObj.Name;\r\n    model.Type = this.modelObj.Type;\r\n    model.Email = this.modelObj.Email;\r\n    \r\n\r\n    if (this.modelIsCreate) {\r\n      model.Type = this.EnumUserTypes.Admin;\r\n      this.BLServiceUserProfile.create(model).subscribe({\r\n        next: response => {\r\n          this.message.Success(\"Saved successfully.\");\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.isClicked = false;\r\n          this.modalService.dismissAll();\r\n        },\r\n        error: err => {this.message.Error(err)\r\n          this.isClicked = false;}\r\n      });\r\n    }\r\n    else {\r\n      this.BLServiceUserProfile.update(model).subscribe({\r\n        next: response => {\r\n          this.message.Success(\"Saved successfully.\");\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.isClicked = false;\r\n          this.modalService.dismissAll();\r\n        },\r\n        error: err => { this.message.Error(err);\r\n          this.isClicked = false; }\r\n      });\r\n    }\r\n  }\r\n  openBackDropCustomClass(content, obj: cUserProfileItem) {\r\n    this.modelObj = obj;\r\n    this.modelIsCreate = false;\r\n    this.isClicked = false;\r\n    this.modelNameEdited = obj.Name;\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  ConvertUserType(type: number) {\r\n    return UserType[type];\r\n  }\r\n  \r\n  ReloadTheAccount(UserId: string) {\r\n    this.BLServiceUserProfile.getGetByid(UserId).subscribe({\r\n      next: obj => {\r\n        \r\n        this.modelObj = obj;\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  onView(Id: string) {\r\n    this.router.navigate(['JobSeeker/Resume/' + Id]);\r\n  }\r\n  onLimit(UserId: string) {\r\n    this.BLServiceUserProfile.Limit(UserId).subscribe({\r\n      next: obj => {\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  ResendActivationLink(Email: string) {\r\n    this.BLServiceUserProfile.ResendActivationLink(Email).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.AccountActivationLinkSuccess);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        //this.loadData();\r\n      },\r\n      error: err => {\r\n        this.message.Error(this.AccountActivationLinkFailed);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n      }\r\n    });\r\n  }\r\n  ResendPasswordLink(Email: string) {\r\n    this.BLServiceUserProfile.ResendPasswordLink(Email).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.AccountPasswordSucess);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        //this.loadData();\r\n      },\r\n      error: err => {\r\n        this.message.Error(this.AccountPasswordFailed);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n      }\r\n    });\r\n  }\r\n}\r\n","<section class=\"accounts\">\r\n  <div class=\"container FullWidth\">\r\n    <div class=\"row\">\r\n      <div class=\"col-sm-12 col-lg-12 col-xl-12\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-12 col-lg-12 \">\r\n            <h4 class=\"fz20\">{{'AccountpageTitle' | translate }}</h4>\r\n          </div>\r\n          <div class=\"col-sm-5 md-form\">\r\n            <mat-form-field class=\"example-full-width\">\r\n              <mat-label>{{'AccountSearch' | translate }}</mat-label>\r\n              <input type=\"text\" placeholder=\"{{'AccountSearchType' | translate }}\" matInput [(ngModel)]=\"filtertxt\">\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-sm-5 md-form\">\r\n            <mat-form-field>\r\n              <mat-label>{{'AccountUserType' | translate }}</mat-label>\r\n              <mat-select id=\"filterTypeId\" placeholder=\"Filter by Type\" [(ngModel)]=\"filterType\" name=\"filterTypeId\">\r\n                <mat-option value=\"0\">{{'AccountSelect' | translate }}</mat-option>\r\n                <mat-option *ngFor=\"let item of lstUserType\" value=\"{{item.Id}}\">{{item.Name}}</mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n\r\n          </div>\r\n          <div class=\"col-sm-2 md-form\">\r\n            <input type=\"submit\" value=\"{{'GenericSubmit' | translate }}\" class=\"btn btn-thm pull-right\"\r\n              (click)=\"filterbtn()\">\r\n          </div>\r\n          <div class=\"col-sm-12 md-form pull-right\">\r\n            <input type=\"button\" class=\"pull-right btn btn-orange\" value=\"{{'GenericCreateNew' | translate }}\"\r\n              (click)=\"createBtn(content)\">\r\n          </div>\r\n          <div class=\"col-md-12 col-lg-12\">\r\n            <div class=\"ui_kit_table\">\r\n              <table class=\"table\">\r\n                <thead class=\"thead-light\">\r\n                  <tr>\r\n                    <th scope=\"col\">{{'GenericName' | translate }}</th>\r\n                    <th scope=\"col\">{{'GenericEmail' | translate }}</th>\r\n                    <th scope=\"col\">{{'GenericType' | translate }}</th>\r\n                    <th scope=\"col\">{{'GenericAction' | translate }}</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody *ngIf='page.content && page.content.length'>\r\n                  <tr *ngFor='let obj of page.content'>\r\n                    <td>{{ obj.Name}}</td>\r\n                    <td>{{ obj.Email}}</td>\r\n                    <td>{{ ConvertUserType(obj.Type)}}</td>\r\n                    <td>\r\n                      <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-primary\"\r\n                        value=\"{{'GenericEdit' | translate }}\" (click)=\"openBackDropCustomClass(content,obj)\">\r\n                      <input *ngIf=\"!obj.IsActive\" type=\"button\" class=\"btn btn-success\"\r\n                        value=\"{{'GenericActivate' | translate }}\" (click)=\"setActivate(obj.Id)\">\r\n                      <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-danger\"\r\n                        value=\"{{'GenericDeactivate' | translate }}\" (click)=\"setDeActivate(obj.Id)\">\r\n                      <input *ngIf=\"obj.Type == 3\" type=\"button\" class=\"btn btn-Yellow\"\r\n                        value=\"{{'GenericView' | translate }}\" (click)=\"onView(obj.Id)\">\r\n                      <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-warning\"\r\n                        value=\"{{'AccountResendLink' | translate }}\" (click)=\"ResendActivationLink(obj.Email)\">\r\n                      <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-success\"\r\n                        value=\"{{'AccountPasswordLink' | translate }}\" (click)=\"ResendPasswordLink(obj.Email)\">\r\n                      <input *ngIf=\"obj.Type == 2 && obj.IsEmployerLimitedCompanies\" type=\"button\"\r\n                        class=\"btn btn-Yellow LimitedCompanies\" value=\"{{'GenericLimited' | translate }}\"\r\n                        (click)=\"onLimit(obj.Id)\">\r\n                      <input *ngIf=\"obj.Type == 2 && !obj.IsEmployerLimitedCompanies\" type=\"button\"\r\n                        class=\"btn btn-Yellow mt-2\" value=\"{{'GenericUnLimited' | translate }}\" (click)=\"onLimit(obj.Id)\">\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-12 col-lg-12\">\r\n            <app-custom-pagination [page]=\"page\" (nextPageEvent)=\"getNextPage()\" (previousPageEvent)=\"getPreviousPage()\"\r\n              (loadPageCurrentEvent)=\"getloadPageCurrent()\">\r\n            </app-custom-pagination>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n\r\n\r\n<div>\r\n  <ng-template role=\"dialog\" #content let-modal class=\"modal fade\">\r\n    <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header white-text text-center\">\r\n\r\n          <h6 class=\"modal-title\">\r\n            {{(modelIsCreate ? 'GenericCreate' : 'GenericEditing') | translate}} : {{modelIsCreate? (\"GenericNew\" |\r\n            translate) : modelNameEdited}}\r\n          </h6>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n\r\n          <form novalidate (ngSubmit)=\"modelSaveBtn(modelForm)\" #modelForm=\"ngForm\">\r\n            <div class=\"form-group \">\r\n              <mat-form-field class=\"example-full-width\">\r\n                <mat-label>{{'GenericName' | translate }}</mat-label>\r\n                <input matInput id=\"modelNameId\" type=\"text\" placeholder=\"{{'GenericRequiredName' | translate }}\"\r\n                  required [(ngModel)]=\"modelObj.Name\" #modelNameVar=\"ngModel\" name=\"modelName\"\r\n                  [ngClass]=\"{'is-invalid': (modelNameVar.touched || modelNameVar.dirty) && !modelNameVar.valid }\" />\r\n                <mat-error *ngIf=\"modelNameVar.errors?.required\">{{'AccountEnterName' | translate }}</mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n            <div class=\"form-group \">\r\n              <mat-form-field class=\"example-full-width\">\r\n                {{'GenericEmail' | translate }}\r\n                <input matInput oninput=\"this.value = this.value.toLowerCase()\" id=\"modelEmailId\" type=\"email\"\r\n                  placeholder=\"{{'GenericRequiredEmail' | translate }}\" [pattern]=\"emailPattern\" required\r\n                  disabled=\"{{!modelIsCreate}}\" [(ngModel)]=\"modelObj.Email\" #modelEmailVar=\"ngModel\" name=\"modelEmail\"\r\n                  [ngClass]=\"{'is-invalid': (modelEmailVar.touched || modelEmailVar.dirty) && !modelEmailVar.valid }\" />\r\n                <mat-error *ngIf=\"modelEmailVar.errors?.required\">{{'GenericEnterEmail' | translate }}</mat-error>\r\n                <mat-error *ngIf=\"modelEmailVar.errors?.pattern\">{{'GenericEnterEmailValid' | translate }}</mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"form-group pull-right md-form\">\r\n              <button class=\"btn  btn-thm\" type=\"submit\"\r\n                [title]=\"modelForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\"\r\n                [disabled]=\"!modelForm.valid || isClicked\">Save <i class=\"fa fa-spinner fa-spin\"\r\n                  *ngIf=\"isClicked\"></i></button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" class=\"btn border-green btn-transparent\" (click)=\"modal.close()\">{{'GenericClose' |\r\n            translate }}</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </ng-template>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ConfirmationDialogService } from 'src/app/common/confirmation-dialog/confirmation-dialog.service';\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\nimport { ModelChangePassword } from 'src/app/interface/Model/ModelChangePassword.class';\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\nimport { ServiceUserProfile } from 'src/app/services/userprofile.service';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.css']\n})\nexport class ChangePasswordComponent extends baseComponent implements OnInit {\n  \n  modelObj: ModelChangePassword = new ModelChangePassword();\n\n  constructor(private BLServiceUserProfile: ServiceUserProfile,\n    private confirmationDialogService: ConfirmationDialogService,\n    BLServiceShowMessage: ServiceShowMessage,\n    BLServiceLoginUser: ServiceLoginUser, BLTranslate: TranslateService,) { \n      super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\n     }\n\n  ngOnInit(): void {\n  }\n  Save(modelForm) {\n\n    if (!modelForm.valid)\n      return;\n    \n    if(this.CheckConfirm())\n      return;\n\n    this.BLServiceUserProfile.ChangePassword(this.modelObj).subscribe({\n      next: response => {\n        this.message.Success(\"Saved successfully.\");\n        this.BLServiceShowMessage.sendMessage(this.message);\n\n      },\n      error: err => this.message.Error(err)\n    });\n\n  }\n  CheckConfirm():boolean{\n    return  this.modelObj.NewPassword  && this.modelObj.ConfirmPassword  &&\n    this.modelObj.NewPassword !== this.modelObj.ConfirmPassword\n  }\n}\n","<section class=\"accounts\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-sm-12 col-lg-12 col-xl-12\">\n                <div class=\"row\">\n                    <div class=\"col-md-12 col-lg-12 \">\n                        <h4 class=\"fz20\">\n                            {{\"ChangePasswordPageTitle\" | translate}}\n                        </h4>\n                    </div>\n                    <div class=\"col-sm-12 col-lg-12 col-xl-12\">\n                        <div class=\"my_profile_form_area\">\n                            <form novalidate #modelForm=\"ngForm\">\n                                <div class=\"row\">\n                                    <div class=\"col-lg-4\">\n                                        <mat-form-field class=\"demo-full-width\">\n                                            <input matInput type=\"password\" id=\"formGroupExampleInput1\"\n                                                [(ngModel)]=\"modelObj.OldPassword\" required\n                                                #modelStatusOldPasswordVar=\"ngModel\" name=\"modelStatusOldPassword\"\n                                                [ngClass]=\"{'is-invalid': (modelStatusOldPasswordVar.touched || modelStatusOldPasswordVar.dirty) && !modelStatusOldPasswordVar.valid }\"\n                                                placeholder=\"{{'ChangePasswordOldPassword' | translate }}\">\n                                            <mat-error\n                                                *ngIf=\"modelStatusOldPasswordVar.touched && modelStatusOldPasswordVar.errors?.required\">\n                                                {{'ChangePasswordOldPasswordError' | translate }}</mat-error>\n                                        </mat-form-field>\n                                    </div>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"col-lg-4\">\n                                        <mat-form-field class=\"demo-full-width\">\n                                            <input matInput type=\"password\" id=\"formGroupExampleInput1\"\n                                                [(ngModel)]=\"modelObj.NewPassword\" required\n                                                #modelStatusNewPasswordVar=\"ngModel\" name=\"modelStatusNewPassword\"\n                                                [ngClass]=\"{'is-invalid': (modelStatusNewPasswordVar.touched || modelStatusNewPasswordVar.dirty) && !modelStatusNewPasswordVar.valid }\"\n                                                placeholder=\"{{'ChangePasswordNewPassword' | translate }}\">\n                                            <mat-error\n                                                *ngIf=\"modelStatusNewPasswordVar.touched && modelStatusNewPasswordVar.errors?.required\">\n                                                {{'ChangePasswordNewPasswordError' | translate }}</mat-error>\n                                        </mat-form-field>\n                                    </div>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"col-lg-4\">\n                                        <mat-form-field class=\"demo-full-width\">\n                                            <input matInput type=\"password\" id=\"formGroupExampleInput1\"\n                                                [(ngModel)]=\"modelObj.ConfirmPassword\" required\n                                                #modelStatusConfirmPasswordVar=\"ngModel\"\n                                                name=\"modelStatusConfirmPassword\"\n                                                [ngClass]=\"{'is-invalid': (modelStatusConfirmPasswordVar.touched || modelStatusConfirmPasswordVar.dirty) && !modelStatusConfirmPasswordVar.valid}\"\n                                                placeholder=\"{{'ChangePasswordConfirmPassword' | translate }}\">\n                                            <mat-error\n                                                *ngIf=\"modelStatusConfirmPasswordVar.touched && modelStatusConfirmPasswordVar.errors?.required\">\n                                                {{'ChangePasswordConfirmPasswordError' | translate }}</mat-error>\n                                        </mat-form-field>\n                                        <div class=\"valError matErrorDate\"\n                                        *ngIf=\"CheckConfirm()\">\n                                        {{'ChangePasswordConfirmPasswordMissmatch' | translate }}</div>\n                                    </div>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"col-xl-4 col-lg-4 col-sm-4 d-inline-flex\">\n                                        <div class=\"col-md-12 col-lg-12\">\n                                            <div class=\"my_profile_input\">\n                                                <button class=\"btn btn-lg w-75 btn-thm\" (click)=\"Save(modelForm)\"\n                                                    [title]=\"(modelForm.valid  ) ? 'Save your entered data' : 'Disabled until the form data is valid'\"\n                                                    [disabled]=\"!(modelForm.valid)\">{{'GenericSave' | translate }}\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ConfirmationDialogService } from 'src/app/common/confirmation-dialog/confirmation-dialog.service';\nimport { Page } from 'src/app/common/pagination/page';\nimport { CustomPaginationService } from 'src/app/common/pagination/services/custom-pagination.service';\nimport { JobStatus } from 'src/app/Enum/JobStatus.enum';\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\nimport { ModelAdminJobSearch } from 'src/app/interface/Model/ModelJobFilter.class';\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\nimport { CompanyEmployers } from 'src/app/interface/Response/CompanyEmployer.class';\nimport { cJobList, cJobItem } from 'src/app/interface/Response/Job.class';\nimport { JobStats } from 'src/app/interface/Response/JobStats.class';\nimport { ServiceJob } from 'src/app/services/job.service';\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\nimport { ServiceCompany } from 'src/app/services/service-company.service';\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\n\n@Component({\n  selector: 'app-admin-job-list',\n  templateUrl: './admin-job-list.component.html',\n  styleUrls: ['./admin-job-list.component.css']\n})\nexport class AdminJobListComponent extends baseComponent implements OnInit {\n\n  pageTitle: string = 'My Companies';\n  lstResult: cJobList;\n  message: ShowMessage = new ShowMessage();\n  //filtertxt: string = '';\n  page: Page<cJobItem> = new Page();\n  jobStats: JobStats;\n  modelFilter: ModelAdminJobSearch = new ModelAdminJobSearch();\n  lstCompanies: CompanyEmployers;\n\n  constructor(private router: Router,\n    private BLService: ServiceJob,\n    private BLServiceCompany: ServiceCompany,\n    private paginationService: CustomPaginationService,\n    private confirmationDialogService: ConfirmationDialogService,\n    BLServiceShowMessage: ServiceShowMessage,\n    BLServiceLoginUser: ServiceLoginUser,BLTranslate: TranslateService,) {\n    super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\n  }\n\n  ngOnInit(): void {\n    this.loadData();\n    \n    this.BLServiceCompany.ListCompany().subscribe({\n      next: lst => {\n        this.lstCompanies = lst;\n       \n      },\n      error: err => this.message.Error(err)\n    });\n  }\n\n  private loadData(): void {\n    this.modelFilter.CurrentPage = this.page.pageable.pageCurrent;\n    this.BLService.AdminJobSearch(this.modelFilter).subscribe({\n      next: lst => {\n        this.lstResult = lst;\n        this.page.pageable.pageSize = lst.pageSize;\n        this.page.totalElements = lst.totalCount;\n        this.page.content = lst.lstResult;\n      },\n      error: err => this.message.Error(err)\n    });\n  }\n  public getNextPage(): void {\n    this.page.pageable = this.paginationService.getNextPage(this.page);\n    this.loadData();\n  }\n\n  public getPreviousPage(): void {\n    this.page.pageable = this.paginationService.getPreviousPage(this.page);\n    this.loadData();\n  }\n  public getloadPageCurrent(): void {\n    this.loadData();\n  }\n  // setActivate(Id: string): void {\n  //   this.confirmationDialogService.confirmActivation()\n  //     .then((confirmed) => {\n  //       if (!confirmed)\n  //         return;\n  //       this.BLService.setActivate(Id).subscribe({\n  //         next: response => {\n  //           this.message.Success(\"Activated successfully.\");\n  //           this.BLServiceShowMessage.sendMessage(this.message);\n  //           this.loadData();\n  //         },\n  //         error: err => this.message.Error(err)\n  //       });\n  //     });\n  // }\n  // setDeActivate(Id: string): void {\n  //   this.confirmationDialogService.confirmDeactivation()\n  //     .then((confirmed) => {\n  //       if (!confirmed)\n  //         return;\n  //       this.BLService.setDeActivate(Id).subscribe({\n  //         next: response => {\n  //           this.message.Success(\"Deactivated successfully.\");\n  //           this.BLServiceShowMessage.sendMessage(this.message);\n  //           this.loadData();\n  //         },\n  //         error: err => this.message.Error(err)\n  //       });\n  //     });\n  // }\n  filterbtn() {\n    this.loadData();\n  }\n  // createBtn() {\n  //   this.router.navigate(['Employer/PostJob']);\n  // }\n  // onEdit(Id: string) {\n  //   this.router.navigate(['Employer/PostJob/' + Id]);\n  // }\n  onView(Id: string) {\n    this.router.navigate(['Employer/Job/' + Id]);\n  }\n  GetStatus(status: number) {\n    return JobStatus[status];\n  }\n}\n","<section class=\"accounts\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-sm-12 col-lg-12 col-xl-12\">\n                <div class=\"row\">\n                    <div class=\"col-md-12 col-lg-12 \">\n                        <h4 class=\"fz20\">{{'HomeJobApproval' | translate }}</h4>\n                    </div>\n                    <div class=\"col-sm-3 col-lg-3\">\n                        <div class=\"candidate_revew_select\">\n                            <mat-form-field >\n                            <mat-label >{{'EmployerPostJobCompany' | translate }}</mat-label>\n                            <mat-select  \n                                [(ngModel)]=\"modelFilter.CompanyId\"  #modelCompanyVar=\"ngModel\"\n                                name=\"modelCompany\"\n                                [ngClass]=\"{'is-invalid': (modelCompanyVar.touched || modelCompanyVar.dirty) && !modelCompanyVar.valid }\">\n                                <mat-option value=\"-1\">{{'EmployerPostJobCompanySelect' | translate }}</mat-option>\n                                <mat-option *ngFor=\"let item of lstCompanies\" value=\"{{item._id}}\">\n                                    {{item.Name}}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"col-sm-3 col-lg-3\">\n                        <div class=\"candidate_revew_select\">\n                            <mat-form-field >\n                            <mat-label >{{'EmployerMyJobsStatus' | translate }}</mat-label>\n                            <mat-select \n                                [(ngModel)]=\"modelFilter.StatusId\"  #modelStatusVar=\"ngModel\"\n                                name=\"modelStatus\"\n                                [ngClass]=\"{'is-invalid': (modelStatusVar.touched || modelStatusVar.dirty) && !modelStatusVar.valid }\">\n                                <mat-option value=\"-1\">{{'EmployerPostJobStatusSelect' | translate }}</mat-option>\n                                <mat-option value=\"1\">{{'EmployerPostJobStatusDraft' | translate }}</mat-option>\n                                <mat-option value=\"2\">{{'EmployerPostJobStatusApproved' | translate }}</mat-option>\n                                <mat-option value=\"3\">{{'EmployerPostJobStatusPulished' | translate }}</mat-option>\n                                <mat-option value=\"4\">{{'EmployerPostJobStatusRejected' | translate }}</mat-option>\n                                <mat-option value=\"5\">{{'EmployerPostJobStatusClosed' | translate }}</mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"col-sm-6 col-lg-6 \">\n                        <div class=\"candidate_revew_select\">\n                            <mat-form-field class=\"w-75\">\n                                <mat-label>{{'EmployerMyJobsSearchFor' | translate }}</mat-label>\n                                <input type=\"text\" placeholder=\"{{'EmployerMyJobsSearchBy' | translate }}\" matInput\n                                    [(ngModel)]=\"modelFilter.filterText\">\n                            </mat-form-field>\n                            <input type=\"submit\" value=\"{{'GenericSubmit' | translate }}\" class=\"btn btn-thm\" (click)=\"filterbtn()\">\n                        </div>\n                    </div>\n                    \n                    <div class=\"col-lg-12\">\n                        <hr>\n                    </div>\n                    <div class=\"col-lg-12\">\n                        <div class=\"cnddte_fvrt_job candidate_job_reivew style2\">\n                            <div class=\"table-responsive job_review_table\">\n                                <table class=\"table\">\n                                    <thead class=\"thead-light\">\n                                        <tr>\n                                            <th scope=\"col\">{{'EmployerMyJobsJobTitle' | translate }}</th>\n                                            <th scope=\"col\">{{'EmployerMyJobsApplications' | translate }}</th>\n                                            <th scope=\"col\">{{'EmployerMyJobsStatus' | translate }}</th>\n                                            <th scope=\"col\"></th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        <tr class=\"{{item.IsActive ? 'bg-green' : 'bg-red'}}\"\n                                            *ngFor=\"let item of page.content\">\n                                            <td scope=\"row\">\n                                                <h4 class=\"ProfileTitle\">{{item.Name}}</h4>\n                                                <h6>(<em>{{item?.Company?.Name == '' ? \"'EmployerMyJobsCompanyNA' | translate\" : item.Company.Name}}</em>)\n                                                </h6>\n                                                <p><span class=\"flaticon-location-pin\"></span>\n                                                    {{item?.Country?.Name == '' ? \"'EmployerCompanyViewCountryNA' | translate\" : item.Country.Name}},\n                                                    {{ item?.City?.Name == '' ? \"'EmployerCompanyViewCityNA' | translate\" : item.City.Name}}\n                                                </p>\n                                                <ul>\n                                                    <li class=\"list-inline-item\"><a href=\"#\"><span\n                                                                class=\"flaticon-event\"> {{'EmployerMyJobsCreated' | translate }}: </span></a></li>\n                                                    <li class=\"list-inline-item\"><a class=\"color-black22\"\n                                                            href=\"#\"><b>{{item.CreatedAt | date:'MMM d, y'}}</b></a>\n                                                    </li>\n                                                    <li class=\"list-inline-item\"><a href=\"#\"><span\n                                                                class=\"flaticon-event\"> {{'EmployerMyJobsExpiry' | translate }}: </span></a></li>\n                                                    <li class=\"list-inline-item\"><a class=\"color-black22\"\n                                                            href=\"#\"><b>{{item.Deadline | date:'MMM d, y'}}</b></a></li>\n                                                </ul>\n                                            </td>\n                                            <td><span class=\"color-black22\"><b>{{item?.ApplicantCount}}</b></span> {{'EmployerMyJobsApplication1' | translate }}</td>\n                                            <td class=\"text-thm2\">{{GetStatus(item.Status)}}</td>\n                                            <td>\n                                                <ul class=\"view_edit_delete_list text-center\">\n                                                    <li class=\"list-inline-item  bg-purple \"><a\n                                                        [routerLink]=\"['/Employer/AppliedResume/' + item._id]\" routerLinkActive=\"router-link-active\"  data-toggle=\"tooltip\"\n                                                        data-placement=\"bottom\" title=\"Resume\"><span\n                                                            class=\"flaticon-manager\"></span></a></li>\n                                                    <li class=\"list-inline-item  bg-orange\"><a\n                                                            (click)=\"onView(item._id)\" data-toggle=\"tooltip\"\n                                                            data-placement=\"bottom\" title=\"{{'GenericView' | translate }}\"><span\n                                                                class=\"flaticon-eye\"></span></a></li>\n                                                    <!-- <li class=\"list-inline-item  bg-blue\"><a (click)=\"onEdit(item._id)\"\n                                                            data-toggle=\"tooltip\" data-placement=\"bottom\"\n                                                            title=\"{{'GenericEdit' | translate }}\"><span class=\"flaticon-edit\"></span></a></li>\n                                                    <li *ngIf=\"item.IsActive\" class=\"list-inline-item  bg-red\">\n                                                        <a (click)=\"setDeActivate(item._id)\" data-toggle=\"tooltip\"\n                                                            data-placement=\"bottom\" title=\"{{'GenericDeactivate' | translate }}\"><span\n                                                                class=\"flaticon-rubbish-bin\"></span></a></li>\n                                                    <li *ngIf=\"!item.IsActive\" class=\"list-inline-item  bg-green\"><a\n                                                            (click)=\"setActivate(item._id)\" data-toggle=\"tooltip\"\n                                                            data-placement=\"bottom\" title=\"{{'GenericActivate' | translate }}\"><span\n                                                                class=\"flaticon-unlocked\"></span></a></li> -->\n                                                </ul>\n                                            </td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-lg-12\">\n                        <app-custom-pagination [page]=\"page\" (nextPageEvent)=\"getNextPage()\"\n                            (previousPageEvent)=\"getPreviousPage()\" (loadPageCurrentEvent)=\"getloadPageCurrent()\">\n                        </app-custom-pagination>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    </div>\n</section>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SharedModule } from '../common/sharedmodule.module';\r\nimport { JobApprovalComponent } from './job-approval/job-approval.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { CompanyApprovalComponent } from './company-approval/company-approval.component';\r\nimport { AdminJobListComponent } from './admin-job-list/admin-job-list.component';\r\nimport { CompanyListComponent } from './company-list/company-list.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    JobApprovalComponent,\r\n    LoginComponent,\r\n    CompanyApprovalComponent,\r\n    AdminJobListComponent,\r\n    CompanyListComponent\r\n  ],\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      { path: 'Admin/JobApproval', component: JobApprovalComponent},\r\n      { path: 'Admin/CompanyApproval', component: CompanyApprovalComponent},\r\n      { path: 'Admin/Login', component: LoginComponent, data:{PageName:\"home\"}},\r\n      { path: 'Admin/JobsList', component: AdminJobListComponent },\r\n      { path: 'Admin/CompanyList', component: CompanyListComponent },\r\n    ])\r\n  ]\r\n})\r\nexport class AdminModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ConfirmationDialogService } from 'src/app/common/confirmation-dialog/confirmation-dialog.service';\nimport { Page } from 'src/app/common/pagination/page';\nimport { CustomPaginationService } from 'src/app/common/pagination/services/custom-pagination.service';\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\nimport { cCompanyItem, cCompanyList } from 'src/app/interface/Response/Company.class';\nimport { ServiceCompany } from 'src/app/services/service-company.service';\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\n\n@Component({\n  selector: 'app-company-approval',\n  templateUrl: './company-approval.component.html',\n  styleUrls: ['./company-approval.component.css']\n})\nexport class CompanyApprovalComponent implements OnInit {\n  pageTitle: string = 'Job Approval';\n  lstResult: cCompanyList;\n  message: ShowMessage = new ShowMessage();\n  filtertxt: string = '';\n\n  page: Page<cCompanyItem> = new Page();\n\n  constructor(private BLService: ServiceCompany,\n    private confirmationDialogService: ConfirmationDialogService,\n    private paginationService: CustomPaginationService,\n    private BLServiceShowMessage: ServiceShowMessage,\n    private modalService: NgbModal,\n    private router: Router) { }\n\n\n  ngOnInit() {\n    this.loadData();\n  }\n  private loadData(): void {\n    this.BLService.GetCompanyWaitingApproval(this.page.pageable.pageCurrent, this.filtertxt).subscribe({\n      next: lst => {\n        this.lstResult = lst;\n        this.page.pageable.pageSize = lst.pageSize;\n        this.page.totalElements = lst.totalCount;\n        this.page.content = lst.lstResult;\n      },\n      error: err => this.message.Error(err)\n    });\n  }\n  public getNextPage(): void {\n    this.page.pageable = this.paginationService.getNextPage(this.page);\n    this.loadData();\n  }\n\n  public getPreviousPage(): void {\n    this.page.pageable = this.paginationService.getPreviousPage(this.page);\n    this.loadData();\n  }\n  public getloadPageCurrent(): void {\n    this.loadData();\n  }\n  Approve(Id: string): void {\n    this.confirmationDialogService.confirm(\"Are you sure you want to Approve?\")\n      .then((confirmed) => {\n        if (!confirmed)\n          return;\n        this.BLService.setApproved(Id).subscribe({\n          next: response => {\n            this.message.Success(\"Approved successfully.\");\n            this.BLServiceShowMessage.sendMessage(this.message);\n            this.loadData();\n          },\n          error: err => this.message.Error(err)\n        });\n      });\n  }\n  Reject(Id: string): void {\n    this.confirmationDialogService.confirm(\"Are you sure you want to Reject?\")\n      .then((confirmed) => {\n        if (!confirmed)\n          return;\n        this.BLService.setRejected(Id).subscribe({\n          next: response => {\n            this.message.Success(\"Reject successfully.\");\n            this.BLServiceShowMessage.sendMessage(this.message);\n            this.loadData();\n          },\n          error: err => this.message.Error(err)\n        });\n      });\n  }\n  filterbtn(): void {\n    this.page.pageable.pageCurrent = 1;\n    this.loadData();\n  }\n  View(Id: string) {\n    this.router.navigate(['/Employer/Company/' + Id])\n  }\n\n\n}\n","<section class=\"accounts\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-sm-12 col-lg-12 col-xl-12\">\n          <div class=\"row\">\n            <div class=\"col-md-12 col-lg-12 \">\n              <h4 class=\"fz20\">{{'HomeCompanyApproval' | translate }}</h4>\n            </div>\n            <div class=\"col-md-6 col-lg-6 \">\n                <mat-form-field class=\"w-75\">\n                    <mat-label>{{'ApprovalCompanySearchFor' | translate }}</mat-label>\n                    <input type=\"text\" placeholder=\"{{'ApprovalCompanySearch' | translate }}\" matInput\n                        [(ngModel)]=\"filtertxt\">\n                </mat-form-field>\n                <input type=\"submit\" value=\"{{'GenericSubmit' | translate }}\" class=\"btn btn-thm\" (click)=\"filterbtn()\">\n            </div>\n            \n            <div class=\"col-md-12 col-lg-12\">\n              <div class=\"ui_kit_table\">\n                <table class=\"table\">\n                  <thead class=\"thead-light\">\n                    <tr>\n                      <th scope=\"col\">{{'GenericCompanyName' | translate }}</th>\n                      <th scope=\"col\">{{'DataIndustry' | translate }}</th>\n                      <th scope=\"col\">{{'DataCountry' | translate }}</th>\n                      <th scope=\"col\">{{'DataCity' | translate }}</th>\n                      <th scope=\"col\">{{'GenericAction' | translate }}</th>\n                    </tr>\n                  </thead>\n                  <tbody *ngIf='page.content && page.content.length'>\n                    <tr *ngFor='let obj of page.content'>\n                      <td>{{ obj.Name}} </td>\n                      <td>{{ obj.Industry.Name}}</td>\n                      <td>{{ obj.Country.Name}}</td>\n                      <td>{{ obj.City.Name}}</td>\n                      <td>\n                        <input type=\"button\" class=\"btn btn-primary\" value=\"{{'GenericApprove' | translate }}\"\n                          (click)=\"Approve(obj._id)\">\n                        <input type=\"button\" class=\"btn btn-danger\" value=\"{{'GenericReject' | translate }}\"\n                          (click)=\"Reject(obj._id)\">\n                          <input type=\"button\" class=\"btn btn-warning\" value=\"{{'GenericView' | translate }}\"\n                          (click)=\"View(obj._id)\">\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n            </div>\n            <div class=\"col-md-12 col-lg-12\">\n              <app-custom-pagination [page]=\"page\" (nextPageEvent)=\"getNextPage()\" (previousPageEvent)=\"getPreviousPage()\"\n                (loadPageCurrentEvent)=\"getloadPageCurrent()\">\n              </app-custom-pagination>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Page } from 'src/app/common/pagination/page';\nimport { CustomPaginationService } from 'src/app/common/pagination/services/custom-pagination.service';\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\nimport { cCompanyList, cCompanyItem } from 'src/app/interface/Response/Company.class';\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\nimport { ServiceCompany } from 'src/app/services/service-company.service';\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\nimport { ServiceUserProfile } from 'src/app/services/userprofile.service';\n\n@Component({\n  selector: 'app-company-list',\n  templateUrl: './company-list.component.html',\n  styleUrls: ['./company-list.component.css']\n})\nexport class CompanyListComponent extends baseComponent implements OnInit {\n\n  pageTitle: string = 'My Companies';\n  lstResult: cCompanyList;\n  message: ShowMessage = new ShowMessage();\n  filtertxt: string = '';\n  page: Page<cCompanyItem> = new Page();\n\n  constructor(private router: Router,\n    private BLService: ServiceCompany,\n    private paginationService: CustomPaginationService,\n    BLServiceShowMessage: ServiceShowMessage,\n    BLServiceLoginUser: ServiceLoginUser,BLTranslate: TranslateService,) {\n    super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\n  }\n\n  ngOnInit(): void {\n    this.loadData();\n  }\n  \n  private loadData(): void {\n    this.BLService.ListAnyCompanyPaged(this.page.pageable.pageCurrent, this.filtertxt).subscribe({\n      next: lst => {debugger;\n        this.lstResult = lst;\n        this.page.pageable.pageSize = lst.pageSize;\n        this.page.totalElements = lst.totalCount;\n        this.page.content = lst.lstResult;\n      },\n      error: err => this.message.Error(err)\n    });\n  }\n  public getNextPage(): void {\n    this.page.pageable = this.paginationService.getNextPage(this.page);\n    this.loadData();\n  }\n\n  public getPreviousPage(): void {\n    this.page.pageable = this.paginationService.getPreviousPage(this.page);\n    this.loadData();\n  }\n  public getloadPageCurrent(): void {\n    this.loadData();\n  }\n\n  filterbtn() {\n    this.loadData();\n  }\n  onView(Id:string){\n    this.router.navigate(['Employer/Company/' + Id]);\n  }\n}\n","<section class=\"accounts\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-sm-12 col-lg-12 col-xl-12\">\n                <div class=\"row\">\n                    <div class=\"col-md-12 col-lg-12 \">\n                        <h4 class=\"fz20\">{{'AccountpageTitle' | translate }}</h4>\n                    </div>\n                    <div class=\"col-sm-6 col-lg-6\">\n                        <div class=\"candidate_revew_select\">\n                            <mat-form-field class=\"w-75\">\n                                <mat-label>{{'EmployerMyCompanySearchfor' | translate }}</mat-label>\n                                <input type=\"text\" placeholder=\"{{'EmployerMyCompanySearchBy' | translate }}\" matInput\n                                    [(ngModel)]=\"filtertxt\">\n                            </mat-form-field>\n                            <input type=\"submit\" value=\"{{'GenericSubmit' | translate }}\" class=\"btn btn-thm\"\n                                (click)=\"filterbtn()\">\n                        </div>\n                    </div>\n                    <div class=\"col-lg-12\">\n                        <hr>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div *ngFor=\"let item of page.content\" class=\"col-sm-6 col-lg-6 col-xl-4 mt30\">\n                        <div class=\"employe_grid {{item.IsActive ? 'bg-green' : 'bg-red'}} text-center\" (click)=\"onView(item._id)\">\n                            <div class=\"thumb\">\n\n                                <img src=\"{{item?.CompanyLogo}}\">\n                            </div>\n                            <div class=\"details\">\n                                <h4>{{item.Name}}</h4>\n                                <p class=\"text-thm2\">{{item.Industry.Name == '' ? \"'EmployerMyCompanyNoIndustry' |\n                                    translate\" :\n                                    item.Industry.Name}}</p>\n                                <p><span class=\"flaticon-location-pin\"></span> {{item.Country.Name + ', ' +\n                                    item.City.Name }}\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n                <div class=\"col-md-12 col-lg-12\">\n                    <app-custom-pagination [page]=\"page\" (nextPageEvent)=\"getNextPage()\"\n                        (previousPageEvent)=\"getPreviousPage()\" (loadPageCurrentEvent)=\"getloadPageCurrent()\">\n                    </app-custom-pagination>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n","import { Component, OnInit } from '@angular/core';\r\nimport { cJobList, cJobItem } from 'src/app/interface/Response/Job.class';\r\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\r\nimport { Page } from 'src/app/common/pagination/page';\r\nimport { ServiceJob } from 'src/app/services/job.service';\r\nimport { CustomPaginationService } from 'src/app/common/pagination/services/custom-pagination.service';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Router } from '@angular/router';\r\nimport { ModelIdName } from 'src/app/interface/Model/ModelIdName.class';\r\nimport { NgForm } from '@angular/forms';\r\nimport { cGenericIdNameItem } from 'src/app/interface/Response/GenericIdName.class';\r\nimport { ConfirmationDialogService } from 'src/app/common/confirmation-dialog/confirmation-dialog.service';\r\n\r\n@Component({\r\n  selector: 'app-job-approval',\r\n  templateUrl: './job-approval.component.html',\r\n  styleUrls: ['./job-approval.component.css']\r\n})\r\nexport class JobApprovalComponent implements OnInit {\r\n\r\n  pageTitle: string = 'Job Approval';\r\n  lstResult: cJobList;\r\n  message: ShowMessage = new ShowMessage();\r\n  filtertxt: string = '';\r\n\r\n  page: Page<cJobItem> = new Page();\r\n\r\n  constructor(private BLService: ServiceJob,\r\n    private confirmationDialogService: ConfirmationDialogService,\r\n    private paginationService: CustomPaginationService,\r\n    private BLServiceShowMessage: ServiceShowMessage,\r\n    private modalService: NgbModal,\r\n    private router: Router) { }\r\n\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n  private loadData(): void {\r\n    this.BLService.GetJobWaitingApproval(this.page.pageable.pageCurrent, this.filtertxt).subscribe({\r\n      next: lst => {\r\n        this.lstResult = lst;\r\n        this.page.pageable.pageSize = lst.pageSize;\r\n        this.page.totalElements = lst.totalCount;\r\n        this.page.content = lst.lstResult;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  public getNextPage(): void {\r\n    this.page.pageable = this.paginationService.getNextPage(this.page);\r\n    this.loadData();\r\n  }\r\n\r\n  public getPreviousPage(): void {\r\n    this.page.pageable = this.paginationService.getPreviousPage(this.page);\r\n    this.loadData();\r\n  }\r\n  public getloadPageCurrent(): void {\r\n    this.loadData();\r\n  }\r\n  Approve(Id: string): void {\r\n    this.confirmationDialogService.confirm(\"Are you sure you want to Approve?\")\r\n      .then((confirmed) => {\r\n        if (!confirmed)\r\n          return;\r\n        this.BLService.setApproved(Id).subscribe({\r\n          next: response => {\r\n            this.message.Success(\"Approved successfully.\");\r\n            this.BLServiceShowMessage.sendMessage(this.message);\r\n            this.loadData();\r\n          },\r\n          error: err => this.message.Error(err)\r\n        });\r\n      });\r\n  }\r\n  Reject(Id: string): void {\r\n    this.confirmationDialogService.confirm(\"Are you sure you want to Reject?\")\r\n      .then((confirmed) => {\r\n        if (!confirmed)\r\n          return;\r\n        this.BLService.setRejected(Id).subscribe({\r\n          next: response => {\r\n            this.message.Success(\"Reject successfully.\");\r\n            this.BLServiceShowMessage.sendMessage(this.message);\r\n            this.loadData();\r\n          },\r\n          error: err => this.message.Error(err)\r\n        });\r\n      });\r\n  }\r\n  filterbtn(): void {\r\n    this.page.pageable.pageCurrent = 1;\r\n    this.loadData();\r\n  }\r\n  View(Id: string) {\r\n    this.router.navigate(['/Employer/Job/' + Id])\r\n  }\r\n\r\n\r\n}\r\n","<section class=\"accounts\">\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-12 col-lg-12 col-xl-12\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12 col-lg-12 \">\r\n              <h4 class=\"fz20\">{{'HomeJobApproval' | translate }}</h4>\r\n            </div>\r\n            <div class=\"col-md-6 col-lg-6 \">\r\n                <mat-form-field class=\"w-75\">\r\n                    <mat-label>{{'ApprovalJobSearchFor' | translate }}</mat-label>\r\n                    <input type=\"text\" placeholder=\"{{'ApprovalJobSearch' | translate }}\" matInput\r\n                        [(ngModel)]=\"filtertxt\">\r\n                </mat-form-field>\r\n                <input type=\"submit\" value=\"{{'GenericSubmit' | translate }}\" class=\"btn btn-thm\" (click)=\"filterbtn()\">\r\n            </div>\r\n            \r\n            <div class=\"col-md-12 col-lg-12\">\r\n              <div class=\"ui_kit_table\">\r\n                <table class=\"table\">\r\n                  <thead class=\"thead-light\">\r\n                    <tr>\r\n                      <th scope=\"col\">{{'GenericCompanyName' | translate }}</th>\r\n                      <th scope=\"col\">{{'GenericName' | translate }}</th>\r\n                      <th scope=\"col\">{{'GenericJobTitle' | translate }}</th>\r\n                      <th scope=\"col\">{{'GenericJobSubfield' | translate }}</th>\r\n                      <th scope=\"col\">{{'GenericAction' | translate }}</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody *ngIf='page.content && page.content.length'>\r\n                    <tr *ngFor='let obj of page.content'>\r\n                      <td>{{ obj.Company.Name}} </td>\r\n                      <td>{{ obj.Name}}</td>\r\n                      <td>{{ obj.JobField.Name}}</td>\r\n                      <td>{{ obj.JobSubField.Name}}</td>\r\n                      <td>\r\n                        <input type=\"button\" class=\"btn btn-primary\" value=\"{{'GenericApprove' | translate }}\"\r\n                          (click)=\"Approve(obj._id)\">\r\n                        <input type=\"button\" class=\"btn btn-danger\" value=\"{{'GenericReject' | translate }}\"\r\n                          (click)=\"Reject(obj._id)\">\r\n                          <input type=\"button\" class=\"btn btn-warning\" value=\"{{'GenericView' | translate }}\"\r\n                          (click)=\"View(obj._id)\">\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-12 col-lg-12\">\r\n              <app-custom-pagination [page]=\"page\" (nextPageEvent)=\"getNextPage()\" (previousPageEvent)=\"getPreviousPage()\"\r\n                (loadPageCurrentEvent)=\"getloadPageCurrent()\">\r\n              </app-custom-pagination>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/core/auth-service.component';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private _authService: AuthService) { }\n\n  ngOnInit(): void {\n  }\n  login() {\n    this._authService.loginAdmin();\n  }\n}\n","<section class=\"accounts\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-sm-12 col-lg-12 col-xl-12\">\n          <div class=\"row\">\n            <div class=\"col-md-12 col-lg-12 text-center\">\n                <a class=\"btn btn-md btn-transparent bg-Orange text-white w-25 \" (click)=\"login()\"><i\n                    class=\"fas fa-user-lock\"></i>{{'GenericLogin' | translate }}</a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n","import { Component, OnInit } from '@angular/core';\nimport { ConfigForm } from 'src/app/Enum/ConfigForm.enum';\n\n@Component({\n  selector: 'app-company-config',\n  templateUrl: './company-config.component.html',\n  styleUrls: ['./company-config.component.css']\n})\nexport class CompanyConfigComponent implements OnInit {\n\n  formType: ConfigForm = ConfigForm.Company;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section class=\"our-dashbord dashbord\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-sm-12 col-lg-2 col-xl-2 dn-smd\">\n                <app-config-menu [pageName]=\"'create'\"></app-config-menu>\n            </div>\n            <div class=\"col-sm-12 col-lg-10 col-xl-10\">\n                <div class=\"row\">\n                    <app-create-form [pageTitle]=\"'ConfigJobFairCreate' | translate \" [formType]=\"formType\"></app-create-form>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { JobFairCreateComponent } from './job-fair-create/job-fair-create.component';\r\nimport { SharedModule } from '../common/sharedmodule.module';\r\nimport { RouterModule } from '@angular/router';\r\nimport { JobFairRegisterComponent } from './job-fair-register/job-fair-register.component';\r\nimport { MenuComponent } from './menu/menu.component';\r\nimport { CompanyConfigComponent } from './company-config/company-config.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    JobFairCreateComponent,\r\n    JobFairRegisterComponent,\r\n    MenuComponent,\r\n    CompanyConfigComponent\r\n  ],\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n        { path: 'Config/JobFairCreate', component: JobFairCreateComponent },\r\n        { path: 'Config/JobFairRegister', component: JobFairRegisterComponent },\r\n        { path: 'Config/Company', component: CompanyConfigComponent }\r\n      ])\r\n  ]\r\n})\r\nexport class ConfigModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ConfigForm } from 'src/app/Enum/ConfigForm.enum';\r\n\r\n@Component({\r\n  selector: 'app-job-fair-create',\r\n  templateUrl: './job-fair-create.component.html',\r\n  styleUrls: ['./job-fair-create.component.css']\r\n})\r\nexport class JobFairCreateComponent implements OnInit {\r\n\r\n  formType: ConfigForm = ConfigForm.JobFairCreate;\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<section class=\"our-dashbord dashbord\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12 col-lg-2 col-xl-2 dn-smd\">\r\n                <app-config-menu [pageName]=\"'create'\"></app-config-menu>\r\n            </div>\r\n            <div class=\"col-sm-12 col-lg-10 col-xl-10\">\r\n                <div class=\"row\">\r\n                    <app-create-form [pageTitle]=\"'ConfigJobFairCreate' | translate \" [formType]=\"formType\"></app-create-form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ConfigForm } from 'src/app/Enum/ConfigForm.enum';\r\n\r\n@Component({\r\n  selector: 'app-job-fair-register',\r\n  templateUrl: './job-fair-register.component.html',\r\n  styleUrls: ['./job-fair-register.component.css']\r\n})\r\nexport class JobFairRegisterComponent implements OnInit {\r\n\r\n  formType: ConfigForm = ConfigForm.JobFairRegister;\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<section class=\"our-dashbord dashbord\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12 col-lg-2 col-xl-2 dn-smd\">\r\n                <app-config-menu [pageName]=\"'register'\"></app-config-menu>\r\n            </div>\r\n            <div class=\"col-sm-12 col-lg-10 col-xl-10\">\r\n                <div class=\"row\">\r\n                    <app-create-form [pageTitle]=\"'ConfigJobFairRegister' | translate\" [formType]=\"formType\"></app-create-form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-config-menu',\r\n  templateUrl: './menu.component.html',\r\n  styleUrls: ['./menu.component.css']\r\n})\r\nexport class MenuComponent implements OnInit {\r\n\r\n  @Input() pageName :string;\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","\r\n<div class=\"dashbord_nav_list\">\r\n    <ul>\r\n        <li class=\"{{pageName.toLocaleLowerCase() == 'create' ? 'active' : ''}}\"><a routerLink=\"/Config/JobFairCreate\"><span class=\"flaticon-dashboard\"></span>{{'ConfigMenuCreate' | translate }}</a></li>\r\n        <li class=\"{{pageName.toLocaleLowerCase() == 'register' ? 'active' : ''}}\"><a routerLink=\"/Config/JobFairRegister\"><span class=\"flaticon-analysis\"></span>{{'ConfigMenuRegister' | translate }}</a></li>\r\n        <li class=\"{{pageName.toLocaleLowerCase() == 'company' ? 'active' : ''}}\"><a routerLink=\"/Config/Company\"><span class=\"flaticon-briefcase\"></span>{{'EmployerPostJobCompany' | translate }}</a></li>\r\n    </ul>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgForm } from '@angular/forms';\r\n\r\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\r\nimport { CustomPaginationService } from 'src/app/common/pagination/services/custom-pagination.service';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { Page } from 'src/app/common/pagination/page';\r\nimport { cGenericIdNameItem, cGenericSubItem } from 'src/app/interface/Response/GenericIdName.class';\r\nimport { ServiceCountry } from 'src/app/services/country.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Constants } from 'src/app/constants';\r\nimport { ModelSubEntity } from 'src/app/interface/Model/ModelSubEntity.class';\r\nimport { ConfirmationDialogService } from 'src/app/common/confirmation-dialog/confirmation-dialog.service';\r\nimport { TranslateType } from 'src/app/Enum/TranslateType.enum';\r\n\r\n@Component({\r\n  selector: 'app-city',\r\n  templateUrl: './city.component.html',\r\n  styleUrls: ['./city.component.css']\r\n})\r\nexport class CityComponent implements OnInit {\r\n\r\n\r\n  pageTitle: string = 'City';\r\n  lstResult: cGenericSubItem[];\r\n  message: ShowMessage = new ShowMessage();\r\n  filtertxt: string = '';\r\n  modelObj: ModelSubEntity;\r\n  modelIsCreate: boolean;\r\n  modelNameEdited: string = '';\r\n  MainId: string;\r\n  CountryObj: cGenericIdNameItem;\r\n\r\n  page: Page<cGenericSubItem> = new Page();\r\n\r\n  constructor(private BLService: ServiceCountry,\r\n    private paginationService: CustomPaginationService,\r\n    private BLServiceShowMessage: ServiceShowMessage,\r\n    private modalService: NgbModal,\r\n    private confirmationDialogService: ConfirmationDialogService,\r\n    private route: ActivatedRoute,\r\n    private router: Router) { }\r\n\r\n\r\n  ngOnInit() {\r\n    const param = this.route.snapshot.paramMap.get('Id');\r\n    if (param) {\r\n      this.MainId = param;\r\n      this.page.pageable.pageSize = Constants.PAGE_SIZE;\r\n      this.loadData();\r\n    }\r\n  }\r\n  private loadData(): void {\r\n    this.BLService.getGetByid(this.MainId).subscribe({\r\n      next: lst => {\r\n        this.CountryObj = lst;\r\n        this.lstResult = lst.subItems;\r\n        this.page.totalElements = lst.subItems.length;\r\n        this.page.content = lst.subItems;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  setActivate(Id: string): void {\r\n    this.confirmationDialogService.confirmActivation()\r\n      .then((confirmed) => {\r\n        if (!confirmed)\r\n          return;\r\n\r\n        var model = new ModelSubEntity();\r\n        model.Id = Id;\r\n        model.MainId = this.MainId;\r\n\r\n        this.BLService.SubActivate(model).subscribe({\r\n          next: response => {\r\n            this.message.Success(\"Activated successfully.\");\r\n            this.BLServiceShowMessage.sendMessage(this.message);\r\n            this.loadData();\r\n          },\r\n          error: err => this.message.Error(err)\r\n        });\r\n      });\r\n  }\r\n  setDeActivate(Id: string): void {\r\n    this.confirmationDialogService.confirmDeactivation()\r\n      .then((confirmed) => {\r\n        if (!confirmed)\r\n          return;\r\n          \r\n        var model = new ModelSubEntity();\r\n        model.Id = Id;\r\n        model.MainId = this.MainId;\r\n\r\n        this.BLService.SubDeActivate(model).subscribe({\r\n          next: response => {\r\n            this.message.Success(\"Deactivated successfully.\");\r\n            this.BLServiceShowMessage.sendMessage(this.message);\r\n            this.loadData();\r\n          },\r\n          error: err => this.message.Error(err)\r\n        });\r\n      });\r\n  }\r\n  filterbtn(): void {\r\n    var lst = this.CountryObj.subItems.filter((item: cGenericSubItem) =>\r\n      item.Name.toLocaleLowerCase().indexOf(this.filtertxt.toLocaleLowerCase()) !== -1);\r\n\r\n    this.page.totalElements = lst.length;\r\n    this.page.content = lst;\r\n    this.lstResult = lst;\r\n    this.page.totalElements = lst.length;\r\n    this.page.content = lst;\r\n  }\r\n  createBtn(content): void {\r\n    this.modelIsCreate = true;\r\n    \r\n    this.modelObj = new ModelSubEntity();\r\n    this.modelObj.MainId = this.MainId;\r\n\r\n    this.modelNameEdited = \"\";\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  modelSaveBtn(modelForm: NgForm): void {\r\n    this.modelObj.Name = this.modelObj.Name.trim();\r\n\r\n    if (!modelForm.valid || this.modelObj.Name == \"\")\r\n      return;\r\n    \r\n    if (this.modelIsCreate) {\r\n      this.BLService.SubCreate(this.modelObj).subscribe({\r\n        next: response => {\r\n          this.message.Success(\"Saved successfully.\");\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.modalService.dismissAll();\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n    else {\r\n      this.BLService.SubUpdate(this.modelObj).subscribe({\r\n        next: response => {\r\n          this.message.Success(\"Saved successfully.\");\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.modalService.dismissAll();\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n  }\r\n  openBackDropCustomClass(content, obj: cGenericIdNameItem) {\r\n    this.modelObj = new ModelSubEntity();\r\n    this.modelObj.Id = obj._id;\r\n    this.modelObj.Name = obj.Name;\r\n    this.modelObj.MainId = this.MainId;\r\n\r\n    this.modelNameEdited = obj.Name;\r\n    this.modelIsCreate = false;\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n\r\n  onBack(): void {\r\n    this.router.navigate(['/DataManagement/Country']);\r\n  }\r\n  Translate(){\r\n    this.router.navigate(['/Translate/' + TranslateType.City + '/' + this.MainId]);\r\n  }\r\n}\r\n","<section class=\"our-dashbord dashbord\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12 col-lg-4 col-xl-3 dn-smd\">\r\n                <app-data-menu [pageName]=\"'country'\"></app-data-menu>\r\n            </div>\r\n            <div class=\"col-sm-12 col-lg-8 col-xl-9\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12 col-lg-12 \">\r\n                        <h4 class=\"fz20\">{{'DataCity' | translate}}</h4>\r\n                    </div>\r\n                    <div class=\"col-md-6 col-lg-6 \">\r\n                        <mat-form-field class=\"w-75\">\r\n                            <mat-label>{{'DataCitySearch' | translate }}</mat-label>\r\n                            <input type=\"text\" placeholder=\"{{'DataCitySearchBy' | translate }}\" matInput\r\n                                [(ngModel)]=\"filtertxt\">\r\n                        </mat-form-field>\r\n                        <input type=\"submit\" value=\"{{'GenericSubmit' | translate }}\" class=\"btn btn-thm\" (click)=\"filterbtn()\">\r\n                    </div>\r\n                    <div class=\"col-md-6 col-lg-6 pull-right\">\r\n                        <input type=\"button\" class=\"pull-right btn btn-orange\" value=\"{{'GenericCreateNew' | translate }}\"\r\n                            (click)=\"createBtn(content)\">\r\n                            <input type=\"button\" class=\"btn btn-success pull-right btnGreen\"\r\n                            value=\"{{'GenericTranslate' | translate }}\" (click)=\"Translate()\">\r\n                    </div>\r\n                    <div class=\"col-md-12 col-lg-12\">\r\n                        <div class=\"ui_kit_table\">\r\n                            <table class=\"table\">\r\n                                <thead class=\"thead-light\">\r\n                                    <tr>\r\n                                        <th scope=\"col\">{{'GenericName' | translate }}</th>\r\n                                        <th scope=\"col\">{{'GenericAction' | translate }}</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody *ngIf='lstResult && lstResult.length'>\r\n                                    <tr *ngFor='let obj of lstResult | slice: (page.pageable.pageCurrent-1) * page.pageable.pageSize : (page.pageable.pageCurrent-1) * page.pageable.pageSize + page.pageable.pageSize'>\r\n                                        <td>{{ obj.Name}}</td>\r\n                                        <td>\r\n                                            <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-primary\"\r\n                                                value=\"{{'GenericEdit' | translate }}\" (click)=\"openBackDropCustomClass(content,obj)\">\r\n                                            <input *ngIf=\"!obj.IsActive\" type=\"button\" class=\"btn btn-success\"\r\n                                                value=\"{{'GenericActivate' | translate }}\" (click)=\"setActivate(obj._id)\">\r\n                                            <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-danger\"\r\n                                                value=\"{{'GenericDeactivate' | translate }}\" (click)=\"setDeActivate(obj._id)\">\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-12 col-lg-12\">\r\n                        <app-custom-pagination [page]=\"page\" >\r\n                        </app-custom-pagination>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <button class='btn btn-outline-secondary' (click)='onBack()' style='width:80px'>\r\n                        <i class='fa fa-chevron-left'></i> {{'GenericBack' | translate }}\r\n                      </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n\r\n\r\n<div>\r\n    <ng-template role=\"dialog\" #content let-modal class=\"modal fade\">\r\n        <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header white-text text-center\">\r\n\r\n                    <h6 class=\"modal-title\">\r\n                        {{(modelIsCreate ? 'GenericCreate'   : 'GenericEditing') | translate}} : {{modelIsCreate? (\"GenericNew\" | translate) : modelNameEdited}}\r\n                    </h6>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n\r\n                    <form novalidate (ngSubmit)=\"modelSaveBtn(modelForm)\" #modelForm=\"ngForm\">\r\n                        <div class=\"form-group \">\r\n                            <mat-form-field class=\"example-full-width\">\r\n                                <mat-label>{{'GenericName' | translate }}</mat-label>\r\n                                <input matInput id=\"modelNameId\" type=\"text\" placeholder=\"{{'GenericRequiredName' | translate }}\" required\r\n                                    [(ngModel)]=\"modelObj.Name\" #modelNameVar=\"ngModel\" name=\"modelName\"\r\n                                    [ngClass]=\"{'is-invalid': (modelNameVar.touched || modelNameVar.dirty) && !modelNameVar.valid }\" />\r\n                                <mat-error *ngIf=\"modelNameVar.errors?.required\">{{'DataCityError' | translate }}\r\n                                </mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"form-group pull-right md-form\">\r\n                            <button class=\"btn  btn-thm\" type=\"submit\" style=\"width:100px\"\r\n                                [title]=\"modelForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\"\r\n                                [disabled]=\"!modelForm.valid\">{{'GenericSave' | translate }}</button></div>\r\n                    </form>\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                    <button type=\"button\" class=\"btn border-green btn-transparent\"\r\n                        (click)=\"modal.close()\">{{'GenericClose' | translate }}</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </ng-template>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgForm } from '@angular/forms';\r\n\r\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\r\nimport { CustomPaginationService } from 'src/app/common/pagination/services/custom-pagination.service';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { Page } from 'src/app/common/pagination/page';\r\nimport { cGenericIdNameList, cGenericIdNameItem } from 'src/app/interface/Response/GenericIdName.class';\r\nimport { ModelIdName } from 'src/app/interface/Model/ModelIdName.class';\r\nimport { ServiceCountry } from 'src/app/services/country.service';\r\nimport { Router } from '@angular/router';\r\nimport { ConfirmationDialogService } from 'src/app/common/confirmation-dialog/confirmation-dialog.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TranslateType } from 'src/app/Enum/TranslateType.enum';\r\n\r\n@Component({\r\n  selector: 'app-country',\r\n  templateUrl: './country.component.html',\r\n  styleUrls: ['./country.component.css']\r\n})\r\nexport class CountryComponent implements OnInit {\r\n\r\n  pageTitle: string = 'Country';\r\n  lstResult: cGenericIdNameList;\r\n  message: ShowMessage = new ShowMessage();\r\n  filtertxt: string = '';\r\n  modelObj: ModelIdName;\r\n  modelIsCreate: boolean;\r\n  modelNameEdited: string = '';\r\n\r\n  page: Page<cGenericIdNameItem> = new Page();\r\n\r\n  constructor(private BLService: ServiceCountry,\r\n    BLTranslate: TranslateService,\r\n    private paginationService: CustomPaginationService,\r\n    private BLServiceShowMessage: ServiceShowMessage,\r\n    private confirmationDialogService: ConfirmationDialogService,\r\n    private modalService: NgbModal,\r\n    private router: Router) { }\r\n\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n  private loadData(): void {\r\n    this.BLService.getAll(this.page.pageable.pageCurrent, this.filtertxt).subscribe({\r\n      next: lst => {\r\n        this.lstResult = lst;\r\n        this.page.pageable.pageSize = lst.pageSize;\r\n        this.page.totalElements = lst.totalCount;\r\n        this.page.content = lst.lstResult;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  public getNextPage(): void {\r\n    this.page.pageable = this.paginationService.getNextPage(this.page);\r\n    this.loadData();\r\n  }\r\n\r\n  public getPreviousPage(): void {\r\n    this.page.pageable = this.paginationService.getPreviousPage(this.page);\r\n    this.loadData();\r\n  }\r\n  public getloadPageCurrent(): void {\r\n    this.loadData();\r\n  }\r\n  setActivate(Id: string): void {\r\n    this.confirmationDialogService.confirmActivation()\r\n      .then((confirmed) => {\r\n        if (!confirmed)\r\n          return;\r\n        this.BLService.setActivate(Id).subscribe({\r\n          next: response => {\r\n            this.message.Success(\"Activated successfully.\");\r\n            this.BLServiceShowMessage.sendMessage(this.message);\r\n            this.loadData();\r\n          },\r\n          error: err => this.message.Error(err)\r\n        });\r\n      });\r\n  }\r\n  setDeActivate(Id: string): void {\r\n    this.confirmationDialogService.confirmDeactivation()\r\n      .then((confirmed) => {\r\n        if (!confirmed)\r\n          return;\r\n        this.BLService.setDeActivate(Id).subscribe({\r\n          next: response => {\r\n            this.message.Success(\"Deactivated successfully.\");\r\n            this.BLServiceShowMessage.sendMessage(this.message);\r\n            this.loadData();\r\n          },\r\n          error: err => this.message.Error(err)\r\n        });\r\n      });\r\n  }\r\n  filterbtn(): void {\r\n    this.page.pageable.pageCurrent = 1;\r\n    this.loadData();\r\n  }\r\n  createBtn(content): void {\r\n    this.modelIsCreate = true;\r\n    this.modelObj = new ModelIdName();\r\n    this.modelNameEdited = \"\";\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  modelSaveBtn(modelForm: NgForm): void {\r\n    this.modelObj.Name = this.modelObj.Name.trim();\r\n\r\n    if (!modelForm.valid || this.modelObj.Name == \"\")\r\n      return;\r\n\r\n    if (this.modelIsCreate) {\r\n      this.BLService.create(this.modelObj).subscribe({\r\n        next: response => {\r\n          this.message.Success(\"Saved successfully.\");\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.modalService.dismissAll();\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n    else {\r\n      this.BLService.update(this.modelObj).subscribe({\r\n        next: response => {\r\n          this.message.Success(\"Saved successfully.\");\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.modalService.dismissAll();\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n  }\r\n  openBackDropCustomClass(content, obj: cGenericIdNameItem) {\r\n    this.modelObj = new ModelIdName();\r\n    this.modelObj.Id = obj._id;\r\n    this.modelObj.Name = obj.Name;\r\n    this.modelNameEdited = obj.Name;\r\n    this.modelIsCreate = false;\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  GoToSubs(Id: string) {\r\n    this.router.navigate(['/DataManagement/City/' + Id]);\r\n  }\r\n  Translate(){\r\n    this.router.navigate(['/Translate/' + TranslateType.Country + '/0']);\r\n  }\r\n}\r\n","<section class=\"our-dashbord dashbord\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12 col-lg-4 col-xl-3 dn-smd\">\r\n                <app-data-menu [pageName]=\"'country'\"></app-data-menu>\r\n            </div>\r\n            <div class=\"col-sm-12 col-lg-8 col-xl-9\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12 col-lg-12 \">\r\n                        <h4 class=\"fz20\">{{'DataCountry' | translate}}</h4>\r\n                    </div>\r\n                    <div class=\"col-md-6 col-lg-6 \">\r\n                        <mat-form-field class=\"w-75\">\r\n                            <mat-label>{{'DataCountrySearch' | translate }}</mat-label>\r\n                            <input type=\"text\" placeholder=\"{{'DataCountrySearchBy' | translate }}\" matInput\r\n                                [(ngModel)]=\"filtertxt\">\r\n                        </mat-form-field>\r\n                        <input type=\"submit\" value=\"{{'GenericSubmit' | translate }}\" class=\"btn btn-thm\" (click)=\"filterbtn()\">\r\n                    </div>\r\n                    <div class=\"col-md-6 col-lg-6 pull-right\">\r\n                        <input type=\"button\" class=\"pull-right btn btn-orange\" value=\"{{'GenericCreateNew' | translate }}\"\r\n                            (click)=\"createBtn(content)\">\r\n                        <input type=\"button\" class=\"btn btn-success pull-right btnGreen\"\r\n                            value=\"{{'GenericTranslate' | translate }}\" (click)=\"Translate()\">\r\n                    </div>\r\n                    <div class=\"col-md-12 col-lg-12\">\r\n                        <div class=\"ui_kit_table\">\r\n                            <table class=\"table\">\r\n                                <thead class=\"thead-light\">\r\n                                    <tr>\r\n                                        <th scope=\"col\">{{'GenericName' | translate }}</th>\r\n                                        <th scope=\"col\">{{'GenericAction' | translate }}</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody *ngIf='page.content && page.content.length'>\r\n                                    <tr *ngFor='let obj of page.content'>\r\n                                        <td>{{ obj.Name}}</td>\r\n                                        <td>\r\n                                            <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-primary\"\r\n                                                value=\"{{'GenericEdit' | translate }}\" (click)=\"openBackDropCustomClass(content,obj)\">\r\n                                            <input *ngIf=\"!obj.IsActive\" type=\"button\" class=\"btn btn-success\"\r\n                                                value=\"{{'GenericActivate' | translate }}\" (click)=\"setActivate(obj._id)\">\r\n                                            <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-danger\"\r\n                                                value=\"{{'GenericDeactivate' | translate }}\" (click)=\"setDeActivate(obj._id)\">\r\n                                            <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-info\"\r\n                                                value=\"Cities\" (click)=\"GoToSubs(obj._id)\">\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-12 col-lg-12\">\r\n                        <app-custom-pagination [page]=\"page\" (nextPageEvent)=\"getNextPage()\"\r\n                            (previousPageEvent)=\"getPreviousPage()\" (loadPageCurrentEvent)=\"getloadPageCurrent()\">\r\n                        </app-custom-pagination>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n\r\n\r\n<div>\r\n    <ng-template role=\"dialog\" #content let-modal class=\"modal fade\">\r\n        <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header white-text text-center\">\r\n\r\n                    <h6 class=\"modal-title\">\r\n                        {{(modelIsCreate ? 'GenericCreate'   : 'GenericEditing') | translate}} : {{modelIsCreate? (\"GenericNew\" | translate) : modelNameEdited}}\r\n                    </h6>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n\r\n                    <form novalidate (ngSubmit)=\"modelSaveBtn(modelForm)\" #modelForm=\"ngForm\">\r\n                        <div class=\"form-group \">\r\n                            <mat-form-field class=\"example-full-width\">\r\n                                <mat-label>{{'GenericName' | translate }}</mat-label>\r\n                                <input matInput id=\"modelNameId\" type=\"text\" placeholder=\"{{'GenericRequiredName' | translate }}\" required\r\n                                    [(ngModel)]=\"modelObj.Name\" #modelNameVar=\"ngModel\" name=\"modelName\"\r\n                                    [ngClass]=\"{'is-invalid': (modelNameVar.touched || modelNameVar.dirty) && !modelNameVar.valid }\" />\r\n                                <mat-error *ngIf=\"modelNameVar.errors?.required\">{{'DataCountryError' | translate }}\r\n                                </mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"form-group pull-right md-form\">\r\n                            <button class=\"btn  btn-thm\" type=\"submit\" style=\"width:100px\"\r\n                                [title]=\"modelForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\"\r\n                                [disabled]=\"!modelForm.valid\">{{'GenericSave' | translate }}</button></div>\r\n                    </form>\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                    <button type=\"button\" class=\"btn border-green btn-transparent\"\r\n                        (click)=\"modal.close()\">{{'GenericClose' | translate }}</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </ng-template>\r\n</div>","import { NgModule, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { SharedModule } from '../common/sharedmodule.module';\r\nimport { LanguagesComponent } from './languages/languages.component';\r\nimport { DataMenuComponent } from './data-menu/data-menu.component';\r\nimport { CountryComponent } from './country/country.component';\r\nimport { IndustryComponent } from './industry/industry.component';\r\nimport { JobFieldsComponent } from './job-fields/job-fields.component';\r\nimport { QualificationComponent } from './qualification/qualification.component';\r\nimport { YearsOfExperienceComponent } from './years-of-experience/years-of-experience.component';\r\nimport { CityComponent } from './city/city.component';\r\nimport { JobSubFieldComponent } from './job-sub-field/job-sub-field.component';\r\nimport { ConfirmationDialogService } from '../common/confirmation-dialog/confirmation-dialog.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LanguagesComponent,\r\n    DataMenuComponent,\r\n    CountryComponent,\r\n    IndustryComponent,\r\n    JobFieldsComponent,\r\n    QualificationComponent,\r\n    YearsOfExperienceComponent,\r\n    CityComponent,\r\n    JobSubFieldComponent\r\n  ],\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      { path: 'DataManagement/Languages', component: LanguagesComponent},\r\n      { path: 'DataManagement/Country', component: CountryComponent},\r\n      { path: 'DataManagement/City/:Id', component: CityComponent},\r\n      { path: 'DataManagement/Industry', component: IndustryComponent},\r\n      { path: 'DataManagement/JobFields', component: JobFieldsComponent},\r\n      { path: 'DataManagement/JobSubFields/:Id', component: JobSubFieldComponent},\r\n      { path: 'DataManagement/Qualification', component: QualificationComponent},\r\n      { path: 'DataManagement/YearsOfExperience', component: YearsOfExperienceComponent},\r\n      \r\n    ])\r\n  ],\r\n  providers: [ ConfirmationDialogService ],\r\n  schemas: [ CUSTOM_ELEMENTS_SCHEMA,NO_ERRORS_SCHEMA  ]\r\n})\r\nexport class DataManagementModule { }\r\n","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-data-menu',\r\n  templateUrl: './data-menu.component.html',\r\n  styleUrls: ['./data-menu.component.css']\r\n})\r\nexport class DataMenuComponent implements OnInit {\r\n  @Input() pageName:string = \"\";\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"user_profile\">\r\n    <div class=\"media\">\r\n        <img src=\"/assets/images/team/e1.png\" class=\"align-self-start mr-3 rounded-circle\" alt=\"e1.png\">\r\n        <div class=\"media-body\">\r\n            <h5 class=\"mt-0\">Hi</h5>\r\n            <!-- <p>Bothell, WA, USA</p> -->\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"dashbord_nav_list\">\r\n    <ul>\r\n        <li class=\"{{pageName.toLocaleLowerCase() == 'languages' ? 'active' : ''}}\"><a routerLink=\"/DataManagement/Languages\"><span class=\"flaticon-dashboard\"></span>{{'DataLanguage' | translate }}</a></li>\r\n        <li class=\"{{pageName.toLocaleLowerCase() == 'country' ? 'active' : ''}}\"><a routerLink=\"/DataManagement/Country\"><span class=\"flaticon-dashboard\"></span>{{'DataCountry' | translate }}</a></li>\r\n        <li class=\"{{pageName.toLocaleLowerCase() == 'industry' ? 'active' : ''}}\"><a routerLink=\"/DataManagement/Industry\"><span class=\"flaticon-dashboard\"></span>{{'DataIndustry' | translate }}</a></li>\r\n        <li class=\"{{pageName.toLocaleLowerCase() == 'jobfields' ? 'active' : ''}}\"><a routerLink=\"/DataManagement/JobFields\"><span class=\"flaticon-dashboard\"></span>{{'DataJobField' | translate }}</a></li>\r\n        <li class=\"{{pageName.toLocaleLowerCase() == 'qualification' ? 'active' : ''}}\"><a routerLink=\"/DataManagement/Qualification\"><span class=\"flaticon-dashboard\"></span>{{'DataQualification' | translate }}</a></li>\r\n        <li class=\"{{pageName.toLocaleLowerCase() == 'yearsofexperience' ? 'active' : ''}}\"><a routerLink=\"/DataManagement/YearsOfExperience\"><span class=\"flaticon-dashboard\"></span>{{'DataYearsOfExperience' | translate }}</a></li>\r\n    </ul>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgForm } from '@angular/forms';\r\n\r\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\r\nimport { CustomPaginationService } from 'src/app/common/pagination/services/custom-pagination.service';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { Page } from 'src/app/common/pagination/page';\r\nimport { cGenericIdNameList, cGenericIdNameItem } from 'src/app/interface/Response/GenericIdName.class';\r\nimport { ModelIdName } from 'src/app/interface/Model/ModelIdName.class';\r\nimport { ServiceIndustry } from 'src/app/services/industry.service';\r\nimport { ConfirmationDialogService } from 'src/app/common/confirmation-dialog/confirmation-dialog.service';\r\nimport { TranslateType } from 'src/app/Enum/TranslateType.enum';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-industry',\r\n  templateUrl: './industry.component.html',\r\n  styleUrls: ['./industry.component.css']\r\n})\r\nexport class IndustryComponent implements OnInit {\r\n\r\n \r\n\r\n  pageTitle: string = 'Industry';\r\n  lstResult: cGenericIdNameList;\r\n  message: ShowMessage = new ShowMessage();\r\n  filtertxt: string = '';\r\n  modelObj:ModelIdName;\r\n  modelIsCreate: boolean;\r\n  modelNameEdited: string = '';\r\n\r\n  page: Page<cGenericIdNameItem> = new Page();\r\n\r\n  constructor(private BLService: ServiceIndustry,\r\n    private confirmationDialogService: ConfirmationDialogService,\r\n    private paginationService: CustomPaginationService,\r\n    private BLServiceShowMessage: ServiceShowMessage,\r\n    private router: Router,\r\n    private modalService: NgbModal) { }\r\n\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n  private loadData(): void {\r\n    this.BLService.getAll(this.page.pageable.pageCurrent, this.filtertxt).subscribe({\r\n      next: lst => {\r\n        this.lstResult = lst;\r\n        this.page.pageable.pageSize = lst.pageSize;\r\n        this.page.totalElements = lst.totalCount;\r\n        this.page.content = lst.lstResult;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  public getNextPage(): void {\r\n    this.page.pageable = this.paginationService.getNextPage(this.page);\r\n    this.loadData();\r\n  }\r\n\r\n  public getPreviousPage(): void {\r\n    this.page.pageable = this.paginationService.getPreviousPage(this.page);\r\n    this.loadData();\r\n  }\r\n  public getloadPageCurrent(): void {\r\n    this.loadData();\r\n  }\r\n  setActivate(Id: string): void {\r\n    this.confirmationDialogService.confirmActivation()\r\n      .then((confirmed) => {\r\n        if (!confirmed)\r\n          return;\r\n        this.BLService.setActivate(Id).subscribe({\r\n          next: response => {\r\n            this.message.Success(\"Activated successfully.\");\r\n            this.BLServiceShowMessage.sendMessage(this.message);\r\n            this.loadData();\r\n          },\r\n          error: err => this.message.Error(err)\r\n        });\r\n      });\r\n  }\r\n  setDeActivate(Id: string): void {\r\n    this.confirmationDialogService.confirmDeactivation()\r\n      .then((confirmed) => {\r\n        if (!confirmed)\r\n          return;\r\n        this.BLService.setDeActivate(Id).subscribe({\r\n          next: response => {\r\n            this.message.Success(\"Deactivated successfully.\");\r\n            this.BLServiceShowMessage.sendMessage(this.message);\r\n            this.loadData();\r\n          },\r\n          error: err => this.message.Error(err)\r\n        });\r\n      });\r\n  }\r\n  filterbtn(): void {\r\n    this.page.pageable.pageCurrent = 1;\r\n    this.loadData();\r\n  }\r\n  createBtn(content): void {\r\n    this.modelIsCreate = true;\r\n    this.modelObj = new ModelIdName();\r\n    this.modelNameEdited = \"\";\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  modelSaveBtn(modelForm: NgForm): void {\r\n    this.modelObj.Name = this.modelObj.Name.trim();\r\n\r\n    if (!modelForm.valid || this.modelObj.Name == \"\")\r\n      return;\r\n      \r\n    if (this.modelIsCreate) {\r\n      this.BLService.create(this.modelObj).subscribe({\r\n        next: response => {\r\n          this.message.Success(\"Saved successfully.\");\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.modalService.dismissAll();\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n    else {\r\n      this.BLService.update(this.modelObj).subscribe({\r\n        next: response => {\r\n          this.message.Success(\"Saved successfully.\");\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.modalService.dismissAll();\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n  }\r\n  openBackDropCustomClass(content, obj:cGenericIdNameItem) {\r\n    this.modelObj = new ModelIdName();\r\n    this.modelObj.Id = obj._id;\r\n    this.modelObj.Name = obj.Name;\r\n    this.modelNameEdited = obj.Name;\r\n    this.modelIsCreate = false;\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n\r\n  Translate(){\r\n    this.router.navigate(['/Translate/' + TranslateType.Industry + '/0']);\r\n  }\r\n\r\n}\r\n","<section class=\"our-dashbord dashbord\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12 col-lg-4 col-xl-3 dn-smd\">\r\n                <app-data-menu [pageName]=\"'industry'\"></app-data-menu>\r\n            </div>\r\n            <div class=\"col-sm-12 col-lg-8 col-xl-9\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12 col-lg-12 \">\r\n                        <h4 class=\"fz20\">{{'DataIndustry' | translate}}</h4>\r\n                    </div>\r\n                    <div class=\"col-md-6 col-lg-6 \">\r\n                        <mat-form-field class=\"w-75\">\r\n                            <mat-label>{{'DataIndustrySearch' | translate }}</mat-label>\r\n                            <input type=\"text\" placeholder=\"{{'DataIndustrySearchBy' | translate }}\" matInput [(ngModel)]=\"filtertxt\">\r\n                        </mat-form-field>\r\n                        <input type=\"submit\" value=\"{{'GenericSubmit' | translate }}\" class=\"btn btn-thm\" (click)=\"filterbtn()\">\r\n                    </div>\r\n                    <div class=\"col-md-6 col-lg-6 pull-right\">\r\n                        <input type=\"button\" class=\"pull-right btn btn-orange\" value=\"{{'GenericCreateNew' | translate }}\"\r\n                            (click)=\"createBtn(content)\">\r\n                            <input type=\"button\" class=\"btn btn-success pull-right btnGreen\"\r\n                            value=\"{{'GenericTranslate' | translate }}\" (click)=\"Translate()\">\r\n                    </div>\r\n                    <div class=\"col-md-12 col-lg-12\">\r\n                        <div class=\"ui_kit_table\">\r\n                            <table class=\"table\">\r\n                                <thead class=\"thead-light\">\r\n                                    <tr>\r\n                                        <th scope=\"col\">{{'GenericName' | translate }}</th>\r\n                                        <th scope=\"col\">{{'GenericAction' | translate }}</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody *ngIf='page.content && page.content.length'>\r\n                                    <tr *ngFor='let obj of page.content'>\r\n                                        <td>{{ obj.Name}}</td>\r\n                                        <td>\r\n                                            <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-primary\"\r\n                                                value=\"{{'GenericEdit' | translate }}\"\r\n                                             (click)=\"openBackDropCustomClass(content,obj)\"> \r\n                                            <input *ngIf=\"!obj.IsActive\" type=\"button\" class=\"btn btn-success\"\r\n                                                value=\"{{'GenericActivate' | translate }}\" (click)=\"setActivate(obj._id)\">\r\n                                            <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-danger\"\r\n                                                value=\"{{'GenericDeactivate' | translate }}\" (click)=\"setDeActivate(obj._id)\">\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-12 col-lg-12\">\r\n                        <app-custom-pagination [page]=\"page\" (nextPageEvent)=\"getNextPage()\"\r\n                            (previousPageEvent)=\"getPreviousPage()\" (loadPageCurrentEvent)=\"getloadPageCurrent()\">\r\n                        </app-custom-pagination>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n\r\n\r\n<div>\r\n    <ng-template role=\"dialog\" #content let-modal class=\"modal fade\">\r\n        <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header white-text text-center\">\r\n\r\n                    <h6 class=\"modal-title\">\r\n                        {{(modelIsCreate ? 'GenericCreate'   : 'GenericEditing') | translate}} : {{modelIsCreate? (\"GenericNew\" | translate) : modelNameEdited}}\r\n                    </h6>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n\r\n                    <form novalidate (ngSubmit)=\"modelSaveBtn(modelForm)\" #modelForm=\"ngForm\">\r\n                        <div class=\"form-group \">\r\n                            <mat-form-field class=\"example-full-width\">\r\n                                <mat-label>{{'GenericName' | translate }}</mat-label>\r\n                                <input matInput id=\"modelNameId\" type=\"text\" placeholder=\"{{'GenericRequiredName' | translate }}\" required\r\n                                    [(ngModel)]=\"modelObj.Name\" #modelNameVar=\"ngModel\" name=\"modelName\"\r\n                                    [ngClass]=\"{'is-invalid': (modelNameVar.touched || modelNameVar.dirty) && !modelNameVar.valid }\" />\r\n                                    <mat-error *ngIf=\"modelNameVar.errors?.required\">{{'DataIndustryError' | translate }}\r\n                                </mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"form-group pull-right md-form\">\r\n                            <button class=\"btn  btn-thm\" type=\"submit\" style=\"width:100px\"\r\n                                [title]=\"modelForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\"\r\n                                [disabled]=\"!modelForm.valid\">{{'GenericSave' | translate }}</button></div>\r\n                    </form>\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                    <button type=\"button\" class=\"btn border-green btn-transparent\"\r\n                        (click)=\"modal.close()\">{{'GenericClose' | translate }}</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </ng-template>\r\n</div> ","import { Component, OnInit } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgForm } from '@angular/forms';\r\n\r\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\r\nimport { CustomPaginationService } from 'src/app/common/pagination/services/custom-pagination.service';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { Page } from 'src/app/common/pagination/page';\r\nimport { cGenericIdNameList, cGenericIdNameItem } from 'src/app/interface/Response/GenericIdName.class';\r\nimport { ModelIdName } from 'src/app/interface/Model/ModelIdName.class';\r\nimport { ServiceJobFields } from 'src/app/services/job-fields.service';\r\nimport { Router } from '@angular/router';\r\nimport { ConfirmationDialogService } from 'src/app/common/confirmation-dialog/confirmation-dialog.service';\r\nimport { TranslateType } from 'src/app/Enum/TranslateType.enum';\r\n\r\n@Component({\r\n  selector: 'app-job-fields',\r\n  templateUrl: './job-fields.component.html',\r\n  styleUrls: ['./job-fields.component.css']\r\n})\r\nexport class JobFieldsComponent implements OnInit {\r\n\r\n\r\n  pageTitle: string = 'Job Field';\r\n  lstResult: cGenericIdNameList;\r\n  message: ShowMessage = new ShowMessage();\r\n  filtertxt: string = '';\r\n  modelObj:ModelIdName;\r\n  modelIsCreate: boolean;\r\n  modelNameEdited: string = '';\r\n\r\n  page: Page<cGenericIdNameItem> = new Page();\r\n\r\n  constructor(private BLService: ServiceJobFields,\r\n    private confirmationDialogService: ConfirmationDialogService,\r\n    private paginationService: CustomPaginationService,\r\n    private BLServiceShowMessage: ServiceShowMessage,\r\n    private modalService: NgbModal,\r\n    private router: Router) { }\r\n\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n  private loadData(): void {\r\n    this.BLService.getAll(this.page.pageable.pageCurrent, this.filtertxt).subscribe({\r\n      next: lst => {\r\n        this.lstResult = lst;\r\n        this.page.pageable.pageSize = lst.pageSize;\r\n        this.page.totalElements = lst.totalCount;\r\n        this.page.content = lst.lstResult;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  public getNextPage(): void {\r\n    this.page.pageable = this.paginationService.getNextPage(this.page);\r\n    this.loadData();\r\n  }\r\n\r\n  public getPreviousPage(): void {\r\n    this.page.pageable = this.paginationService.getPreviousPage(this.page);\r\n    this.loadData();\r\n  }\r\n  public getloadPageCurrent(): void {\r\n    this.loadData();\r\n  }\r\n  setActivate(Id: string): void {\r\n    this.confirmationDialogService.confirmActivation()\r\n      .then((confirmed) => {\r\n        if (!confirmed)\r\n          return;\r\n        this.BLService.setActivate(Id).subscribe({\r\n          next: response => {\r\n            this.message.Success(\"Activated successfully.\");\r\n            this.BLServiceShowMessage.sendMessage(this.message);\r\n            this.loadData();\r\n          },\r\n          error: err => this.message.Error(err)\r\n        });\r\n      });\r\n  }\r\n  setDeActivate(Id: string): void {\r\n    this.confirmationDialogService.confirmDeactivation()\r\n      .then((confirmed) => {\r\n        if (!confirmed)\r\n          return;\r\n        this.BLService.setDeActivate(Id).subscribe({\r\n          next: response => {\r\n            this.message.Success(\"Deactivated successfully.\");\r\n            this.BLServiceShowMessage.sendMessage(this.message);\r\n            this.loadData();\r\n          },\r\n          error: err => this.message.Error(err)\r\n        });\r\n      });\r\n  }\r\n  filterbtn(): void {\r\n    this.page.pageable.pageCurrent = 1;\r\n    this.loadData();\r\n  }\r\n  createBtn(content): void {\r\n    this.modelIsCreate = true;\r\n    this.modelObj = new ModelIdName();\r\n    this.modelNameEdited = \"\";\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  modelSaveBtn(modelForm: NgForm): void {\r\n    this.modelObj.Name = this.modelObj.Name.trim();\r\n\r\n    if (!modelForm.valid || this.modelObj.Name == \"\")\r\n      return;\r\n      \r\n    if (this.modelIsCreate) {\r\n      this.BLService.create(this.modelObj).subscribe({\r\n        next: response => {\r\n          this.message.Success(\"Saved successfully.\");\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.modalService.dismissAll();\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n    else {\r\n      this.BLService.update(this.modelObj).subscribe({\r\n        next: response => {\r\n          this.message.Success(\"Saved successfully.\");\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.modalService.dismissAll();\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n  }\r\n  openBackDropCustomClass(content, obj:cGenericIdNameItem) {\r\n    this.modelObj = new ModelIdName();\r\n    this.modelObj.Id = obj._id;\r\n    this.modelObj.Name = obj.Name;\r\n    this.modelNameEdited = obj.Name;\r\n    this.modelIsCreate = false;\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  GoToSubs(Id:string){\r\n    this.router.navigate(['/DataManagement/JobSubFields/' + Id]);\r\n  }\r\n  Translate(){\r\n    this.router.navigate(['/Translate/' + TranslateType.JobField + '/0']);\r\n  }\r\n}\r\n","<section class=\"our-dashbord dashbord\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12 col-lg-4 col-xl-3 dn-smd\">\r\n                <app-data-menu [pageName]=\"'jobfields'\"></app-data-menu>\r\n            </div>\r\n            <div class=\"col-sm-12 col-lg-8 col-xl-9\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12 col-lg-12 \">\r\n                        <h4 class=\"fz20\">{{'DataJobField' | translate}}</h4>\r\n                    </div>\r\n                    <div class=\"col-md-6 col-lg-6 \">\r\n                        <mat-form-field class=\"w-75\">\r\n                            <mat-label>{{'DataJobFieldSearch' | translate }}</mat-label>\r\n                            <input type=\"text\" placeholder=\"{{'DataJobFieldSearchBy' | translate }}\" matInput\r\n                                [(ngModel)]=\"filtertxt\">\r\n                        </mat-form-field>\r\n                        <input type=\"submit\" value=\"{{'GenericSubmit' | translate }}\" class=\"btn btn-thm\" (click)=\"filterbtn()\">\r\n                    </div>\r\n                    <div class=\"col-md-6 col-lg-6 pull-right\">\r\n                        <input type=\"button\" class=\"pull-right btn btn-orange\" value=\"{{'GenericCreateNew' | translate }}\"\r\n                            (click)=\"createBtn(content)\">\r\n                            <input type=\"button\" class=\"btn btn-success pull-right btnGreen\"\r\n                            value=\"{{'GenericTranslate' | translate }}\" (click)=\"Translate()\">\r\n                    </div>\r\n                    <div class=\"col-md-12 col-lg-12\">\r\n                        <div class=\"ui_kit_table\">\r\n                            <table class=\"table\">\r\n                                <thead class=\"thead-light\">\r\n                                    <tr>\r\n                                        <th scope=\"col\">{{'GenericName' | translate }}</th>\r\n                                        <th scope=\"col\">{{'GenericAction' | translate }}</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody *ngIf='page.content && page.content.length'>\r\n                                    <tr *ngFor='let obj of page.content'>\r\n                                        <td>{{ obj.Name}}</td>\r\n                                        <td>\r\n                                            <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-primary\"\r\n                                                value=\"{{'GenericEdit' | translate }}\" (click)=\"openBackDropCustomClass(content,obj)\">\r\n                                            <input *ngIf=\"!obj.IsActive\" type=\"button\" class=\"btn btn-success\"\r\n                                                value=\"{{'GenericActivate' | translate }}\" (click)=\"setActivate(obj._id)\">\r\n                                            <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-danger\"\r\n                                                value=\"{{'GenericDeactivate' | translate }}\" (click)=\"setDeActivate(obj._id)\">\r\n                                            <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-info\"\r\n                                                value=\"Subfields\" (click)=\"GoToSubs(obj._id)\">\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-12 col-lg-12\">\r\n                        <app-custom-pagination [page]=\"page\" (nextPageEvent)=\"getNextPage()\"\r\n                            (previousPageEvent)=\"getPreviousPage()\" (loadPageCurrentEvent)=\"getloadPageCurrent()\">\r\n                        </app-custom-pagination>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n\r\n\r\n<div>\r\n    <ng-template role=\"dialog\" #content let-modal class=\"modal fade\">\r\n        <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header white-text text-center\">\r\n\r\n                    <h6 class=\"modal-title\">\r\n                        {{(modelIsCreate ? 'GenericCreate'   : 'GenericEditing') | translate}} : {{modelIsCreate? (\"GenericNew\" | translate) : modelNameEdited}}\r\n                    </h6>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n\r\n                    <form novalidate (ngSubmit)=\"modelSaveBtn(modelForm)\" #modelForm=\"ngForm\">\r\n                        <div class=\"form-group \">\r\n                            <mat-form-field class=\"example-full-width\">\r\n                                <mat-label>{{'GenericName' | translate }}</mat-label>\r\n                                <input matInput id=\"modelNameId\" type=\"text\" placeholder=\"{{'GenericRequiredName' | translate }}\" required\r\n                                    [(ngModel)]=\"modelObj.Name\" #modelNameVar=\"ngModel\" name=\"modelName\"\r\n                                    [ngClass]=\"{'is-invalid': (modelNameVar.touched || modelNameVar.dirty) && !modelNameVar.valid }\" />\r\n                                    <mat-error *ngIf=\"modelNameVar.errors?.required\">{{'DataJobFieldError' | translate }}\r\n                                </mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"form-group pull-right md-form\">\r\n                            <button class=\"btn  btn-thm\" type=\"submit\" style=\"width:100px\"\r\n                                [title]=\"modelForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\"\r\n                                [disabled]=\"!modelForm.valid\">{{'GenericSave' | translate }}</button></div>\r\n                    </form>\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                    <button type=\"button\" class=\"btn border-green btn-transparent\"\r\n                        (click)=\"modal.close()\">{{'GenericClose' | translate }}</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </ng-template>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgForm } from '@angular/forms';\r\n\r\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\r\nimport { CustomPaginationService } from 'src/app/common/pagination/services/custom-pagination.service';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { Page } from 'src/app/common/pagination/page';\r\nimport { cGenericIdNameItem, cGenericSubItem } from 'src/app/interface/Response/GenericIdName.class';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Constants } from 'src/app/constants';\r\nimport { ModelSubEntity } from 'src/app/interface/Model/ModelSubEntity.class';\r\nimport { ServiceJobFields } from 'src/app/services/job-fields.service';\r\nimport { ConfirmationDialogService } from 'src/app/common/confirmation-dialog/confirmation-dialog.service';\r\nimport { TranslateType } from 'src/app/Enum/TranslateType.enum';\r\n\r\n\r\n@Component({\r\n  selector: 'app-job-sub-field',\r\n  templateUrl: './job-sub-field.component.html',\r\n  styleUrls: ['./job-sub-field.component.css']\r\n})\r\nexport class JobSubFieldComponent implements OnInit {\r\n\r\n  pageTitle: string = 'Job Subfield';\r\n  lstResult: cGenericSubItem[];\r\n  message: ShowMessage = new ShowMessage();\r\n  filtertxt: string = '';\r\n  modelObj: ModelSubEntity;\r\n  modelIsCreate: boolean;\r\n  modelNameEdited: string = '';\r\n  MainId: string;\r\n  MainObj: cGenericIdNameItem;\r\n\r\n  page: Page<cGenericSubItem> = new Page();\r\n\r\n  constructor(private BLService: ServiceJobFields,\r\n    private paginationService: CustomPaginationService,\r\n    private confirmationDialogService: ConfirmationDialogService,\r\n    private BLServiceShowMessage: ServiceShowMessage,\r\n    private modalService: NgbModal,\r\n    private route: ActivatedRoute,\r\n    private router: Router) { }\r\n\r\n\r\n  ngOnInit() {\r\n    const param = this.route.snapshot.paramMap.get('Id');\r\n    if (param) {\r\n      this.MainId = param;\r\n      this.page.pageable.pageSize = Constants.PAGE_SIZE;\r\n      this.loadData();\r\n    }\r\n  }\r\n  private loadData(): void {\r\n    this.BLService.getGetByid(this.MainId).subscribe({\r\n      next: lst => {\r\n        this.MainObj = lst;\r\n        this.lstResult = lst.subItems;\r\n        this.page.totalElements = lst.subItems.length;\r\n        this.page.content = lst.subItems;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  setActivate(Id: string): void {\r\n    this.confirmationDialogService.confirmActivation()\r\n      .then((confirmed) => {\r\n        if (!confirmed)\r\n          return;\r\n\r\n        var model = new ModelSubEntity();\r\n        model.Id = Id;\r\n        model.MainId = this.MainId;\r\n\r\n        this.BLService.SubActivate(model).subscribe({\r\n          next: response => {\r\n            this.message.Success(\"Activated successfully.\");\r\n            this.BLServiceShowMessage.sendMessage(this.message);\r\n            this.loadData();\r\n          },\r\n          error: err => this.message.Error(err)\r\n        });\r\n      });\r\n  }\r\n  setDeActivate(Id: string): void {\r\n    this.confirmationDialogService.confirmDeactivation()\r\n      .then((confirmed) => {\r\n        if (!confirmed)\r\n          return;\r\n\r\n        var model = new ModelSubEntity();\r\n        model.Id = Id;\r\n        model.MainId = this.MainId;\r\n\r\n        this.BLService.SubDeActivate(model).subscribe({\r\n          next: response => {\r\n            this.message.Success(\"Deactivated successfully.\");\r\n            this.BLServiceShowMessage.sendMessage(this.message);\r\n            this.loadData();\r\n          },\r\n          error: err => this.message.Error(err)\r\n        });\r\n      });\r\n  }\r\n  filterbtn(): void {\r\n    var lst = this.MainObj.subItems.filter((item: cGenericSubItem) =>\r\n      item.Name.toLocaleLowerCase().indexOf(this.filtertxt.toLocaleLowerCase()) !== -1);\r\n\r\n    this.page.totalElements = lst.length;\r\n    this.page.content = lst;\r\n    this.lstResult = lst;\r\n\r\n  }\r\n  createBtn(content): void {\r\n    this.modelIsCreate = true;\r\n\r\n    this.modelObj = new ModelSubEntity();\r\n    this.modelObj.MainId = this.MainId;\r\n\r\n    this.modelNameEdited = \"\";\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  modelSaveBtn(modelForm: NgForm): void {\r\n    this.modelObj.Name = this.modelObj.Name.trim();\r\n\r\n    if (!modelForm.valid || this.modelObj.Name == \"\")\r\n      return;\r\n\r\n    if (this.modelIsCreate) {\r\n      this.BLService.SubCreate(this.modelObj).subscribe({\r\n        next: response => {\r\n          this.message.Success(\"Saved successfully.\");\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.modalService.dismissAll();\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n    else {\r\n      this.BLService.SubUpdate(this.modelObj).subscribe({\r\n        next: response => {\r\n          this.message.Success(\"Saved successfully.\");\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.modalService.dismissAll();\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n  }\r\n  openBackDropCustomClass(content, obj: cGenericIdNameItem) {\r\n    this.modelObj = new ModelSubEntity();\r\n    this.modelObj.Id = obj._id;\r\n    this.modelObj.Name = obj.Name;\r\n    this.modelObj.MainId = this.MainId;\r\n\r\n    this.modelNameEdited = obj.Name;\r\n    this.modelIsCreate = false;\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n\r\n  onBack(): void {\r\n    this.router.navigate(['/DataManagement/JobFields']);\r\n  }\r\n  Translate(){\r\n    this.router.navigate(['/Translate/' + TranslateType.JobSubFields + '/' + this.MainId]);\r\n  }\r\n}\r\n","<section class=\"our-dashbord dashbord\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12 col-lg-4 col-xl-3 dn-smd\">\r\n                <app-data-menu [pageName]=\"'jobfields'\"></app-data-menu>\r\n            </div>\r\n            <div class=\"col-sm-12 col-lg-8 col-xl-9\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12 col-lg-12 \">\r\n                        <h4 class=\"fz20\">{{'DataJobSubfield' | translate }}</h4>\r\n                    </div>\r\n                    <div class=\"col-md-6 col-lg-6 \">\r\n                        <mat-form-field class=\"w-75\">\r\n                            <mat-label>{{'DataJobSubfieldSearch' | translate }}</mat-label>\r\n                            <input type=\"text\" placeholder=\"{{'DataJobSubfieldSearchBy' | translate }}\" matInput\r\n                                [(ngModel)]=\"filtertxt\">\r\n                        </mat-form-field>\r\n                        <input type=\"submit\" value=\"{{'GenericSubmit' | translate }}\" class=\"btn btn-thm\" (click)=\"filterbtn()\">\r\n                    </div>\r\n                    <div class=\"col-md-6 col-lg-6 pull-right\">\r\n                        <input type=\"button\" class=\"pull-right btn btn-orange\" value=\"{{'GenericCreateNew' | translate }}\"\r\n                            (click)=\"createBtn(content)\">\r\n                            <input type=\"button\" class=\"btn btn-success pull-right btnGreen\"\r\n                            value=\"{{'GenericTranslate' | translate }}\" (click)=\"Translate()\">\r\n                    </div>\r\n                    <div class=\"col-md-12 col-lg-12\">\r\n                        <div class=\"ui_kit_table\">\r\n                            <table class=\"table\">\r\n                                <thead class=\"thead-light\">\r\n                                    <tr>\r\n                                        <th scope=\"col\">{{'GenericName' | translate }}</th>\r\n                                        <th scope=\"col\">{{'GenericAction' | translate }}</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody *ngIf='lstResult && lstResult.length'>\r\n                                    <tr *ngFor='let obj of lstResult | slice: (page.pageable.pageCurrent-1) * page.pageable.pageSize : (page.pageable.pageCurrent-1) * page.pageable.pageSize + page.pageable.pageSize'>\r\n                                        <td>{{ obj.Name}}</td>\r\n                                        <td>\r\n                                            <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-primary\"\r\n                                                value=\"{{'GenericEdit' | translate }}\" (click)=\"openBackDropCustomClass(content,obj)\">\r\n                                            <input *ngIf=\"!obj.IsActive\" type=\"button\" class=\"btn btn-success\"\r\n                                                value=\"{{'GenericActivate' | translate }}\" (click)=\"setActivate(obj._id)\">\r\n                                            <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-danger\"\r\n                                                value=\"{{'GenericDeactivate' | translate }}\" (click)=\"setDeActivate(obj._id)\">\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-12 col-lg-12\">\r\n                        <app-custom-pagination [page]=\"page\" >\r\n                        </app-custom-pagination>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <button class='btn btn-outline-secondary' (click)='onBack()' style='width:80px'>\r\n                        <i class='fa fa-chevron-left'></i> {{'GenericBack' | translate }}\r\n                      </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n\r\n\r\n<div>\r\n    <ng-template role=\"dialog\" #content let-modal class=\"modal fade\">\r\n        <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header white-text text-center\">\r\n\r\n                    <h6 class=\"modal-title\">\r\n                        {{(modelIsCreate ? 'GenericCreate'   : 'GenericEditing') | translate}} : {{modelIsCreate? (\"GenericNew\" | translate) : modelNameEdited}}\r\n                    </h6>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n\r\n                    <form novalidate (ngSubmit)=\"modelSaveBtn(modelForm)\" #modelForm=\"ngForm\">\r\n                        <div class=\"form-group \">\r\n                            <mat-form-field class=\"example-full-width\">\r\n                                <mat-label>{{'GenericName' | translate }}</mat-label>\r\n                                <input matInput id=\"modelNameId\" type=\"text\" placeholder=\"{{'GenericRequiredName' | translate }}\" required\r\n                                    [(ngModel)]=\"modelObj.Name\" #modelNameVar=\"ngModel\" name=\"modelName\"\r\n                                    [ngClass]=\"{'is-invalid': (modelNameVar.touched || modelNameVar.dirty) && !modelNameVar.valid }\" />\r\n                                    <mat-error *ngIf=\"modelNameVar.errors?.required\">{{'DataJobSubfieldError' | translate }}\r\n                                </mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"form-group pull-right md-form\">\r\n                            <button class=\"btn  btn-thm\" type=\"submit\" style=\"width:100px\"\r\n                                [title]=\"modelForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\"\r\n                                [disabled]=\"!modelForm.valid\">{{'GenericSave' | translate }}</button></div>\r\n                    </form>\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                    <button type=\"button\" class=\"btn border-green btn-transparent\"\r\n                        (click)=\"modal.close()\">{{'GenericClose' | translate }}</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </ng-template>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgForm } from '@angular/forms';\r\n\r\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\r\nimport { CustomPaginationService } from 'src/app/common/pagination/services/custom-pagination.service';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { Page } from 'src/app/common/pagination/page';\r\nimport { cGenericIdNameList, cGenericIdNameItem } from 'src/app/interface/Response/GenericIdName.class';\r\nimport { ModelIdName } from 'src/app/interface/Model/ModelIdName.class';\r\nimport { ServiceLanguages } from 'src/app/services/languages.service';\r\nimport { ConfirmationDialogService } from 'src/app/common/confirmation-dialog/confirmation-dialog.service';\r\nimport { TranslateType } from 'src/app/Enum/TranslateType.enum';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-languages',\r\n  templateUrl: './languages.component.html',\r\n  styleUrls: ['./languages.component.css']\r\n})\r\nexport class LanguagesComponent implements OnInit {\r\n\r\n\r\n  pageTitle: string = 'Language';\r\n  lstResult: cGenericIdNameList;\r\n  message: ShowMessage = new ShowMessage();\r\n  filtertxt: string = '';\r\n  modelObj:ModelIdName;\r\n  modelIsCreate: boolean;\r\n  modelNameEdited: string = '';\r\n\r\n  page: Page<cGenericIdNameItem> = new Page();\r\n\r\n  constructor(private BLService: ServiceLanguages,\r\n    private confirmationDialogService: ConfirmationDialogService,\r\n    private paginationService: CustomPaginationService,\r\n    private BLServiceShowMessage: ServiceShowMessage,\r\n    private router: Router,\r\n    private modalService: NgbModal) { }\r\n\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n  private loadData(): void {\r\n    this.BLService.getAll(this.page.pageable.pageCurrent, this.filtertxt).subscribe({\r\n      next: lst => {\r\n        this.lstResult = lst;\r\n        this.page.pageable.pageSize = lst.pageSize;\r\n        this.page.totalElements = lst.totalCount;\r\n        this.page.content = lst.lstResult;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  public getNextPage(): void {\r\n    this.page.pageable = this.paginationService.getNextPage(this.page);\r\n    this.loadData();\r\n  }\r\n\r\n  public getPreviousPage(): void {\r\n    this.page.pageable = this.paginationService.getPreviousPage(this.page);\r\n    this.loadData();\r\n  }\r\n  public getloadPageCurrent(): void {\r\n    this.loadData();\r\n  }\r\n  setActivate(Id: string): void {\r\n    this.confirmationDialogService.confirmActivation()\r\n      .then((confirmed) => {\r\n        if (!confirmed)\r\n          return;\r\n        this.BLService.setActivate(Id).subscribe({\r\n          next: response => {\r\n            this.message.Success(\"Activated successfully.\");\r\n            this.BLServiceShowMessage.sendMessage(this.message);\r\n            this.loadData();\r\n          },\r\n          error: err => this.message.Error(err)\r\n        });\r\n      });\r\n  }\r\n  setDeActivate(Id: string): void {\r\n    this.confirmationDialogService.confirmDeactivation()\r\n      .then((confirmed) => {\r\n        if (!confirmed)\r\n          return;\r\n        this.BLService.setDeActivate(Id).subscribe({\r\n          next: response => {\r\n            this.message.Success(\"Deactivated successfully.\");\r\n            this.BLServiceShowMessage.sendMessage(this.message);\r\n            this.loadData();\r\n          },\r\n          error: err => this.message.Error(err)\r\n        });\r\n      });\r\n  }\r\n  filterbtn(): void {\r\n    this.page.pageable.pageCurrent = 1;\r\n    this.loadData();\r\n  }\r\n  createBtn(content): void {\r\n    this.modelIsCreate = true;\r\n    this.modelObj = new ModelIdName();\r\n    this.modelNameEdited = \"\";\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  modelSaveBtn(modelForm: NgForm): void {\r\n    this.modelObj.Name = this.modelObj.Name.trim();\r\n\r\n    if (!modelForm.valid || this.modelObj.Name == \"\")\r\n      return;\r\n\r\n    if (this.modelIsCreate) {\r\n      this.BLService.create(this.modelObj).subscribe({\r\n        next: response => {\r\n          this.message.Success(\"Saved successfully.\");\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.modalService.dismissAll();\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n    else {\r\n      this.BLService.update(this.modelObj).subscribe({\r\n        next: response => {\r\n          this.message.Success(\"Saved successfully.\");\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.modalService.dismissAll();\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n  }\r\n  openBackDropCustomClass(content, obj:cGenericIdNameItem) {\r\n    this.modelObj = new ModelIdName();\r\n    this.modelObj.Id = obj._id;\r\n    this.modelObj.Name = obj.Name;\r\n    this.modelNameEdited = obj.Name;\r\n    this.modelIsCreate = false;\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  Translate(){\r\n    this.router.navigate(['/Translate/' + TranslateType.Languages + '/0']);\r\n  }\r\n}\r\n","<section class=\"our-dashbord dashbord\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12 col-lg-4 col-xl-3 dn-smd\">\r\n                <app-data-menu [pageName]=\"'languages'\"></app-data-menu>\r\n            </div>\r\n            <div class=\"col-sm-12 col-lg-8 col-xl-9\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12 col-lg-12 \">\r\n                        <h4 class=\"fz20\">{{'DataLanguage' | translate }}</h4>\r\n                    </div>\r\n                    <div class=\"col-md-6 col-lg-6 \">\r\n                        <mat-form-field class=\"w-75\">\r\n                            <mat-label>{{'DataLanguageSearch' | translate }}</mat-label>\r\n                            <input type=\"text\" placeholder=\"{{'DataLanguageSearchBy' | translate }}\" matInput [(ngModel)]=\"filtertxt\">\r\n                        </mat-form-field>\r\n                        <input type=\"submit\" value=\"{{'GenericSubmit' | translate }}\" class=\"btn btn-thm\" (click)=\"filterbtn()\">\r\n                    </div>\r\n                    <div class=\"col-md-6 col-lg-6 pull-right\">\r\n                        <input type=\"button\" class=\"pull-right btn btn-orange\" value=\"{{'GenericCreateNew' | translate }}\"\r\n                            (click)=\"createBtn(content)\">\r\n                            <input type=\"button\" class=\"btn btn-success pull-right btnGreen\"\r\n                            value=\"{{'GenericTranslate' | translate }}\" (click)=\"Translate()\">\r\n                    </div>\r\n                    <div class=\"col-md-12 col-lg-12\">\r\n                        <div class=\"ui_kit_table\">\r\n                            <table class=\"table\">\r\n                                <thead class=\"thead-light\">\r\n                                    <tr>\r\n                                        <th scope=\"col\">{{'GenericName' | translate }}</th>\r\n                                        <th scope=\"col\">{{'GenericAction' | translate }}</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody *ngIf='page.content && page.content.length'>\r\n                                    <tr *ngFor='let obj of page.content'>\r\n                                        <td>{{ obj.Name}}</td>\r\n                                        <td>\r\n                                            <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-primary\"\r\n                                                value=\"{{'GenericEdit' | translate }}\"\r\n                                             (click)=\"openBackDropCustomClass(content,obj)\"> \r\n                                            <input *ngIf=\"!obj.IsActive\" type=\"button\" class=\"btn btn-success\"\r\n                                                value=\"{{'GenericActivate' | translate }}\" (click)=\"setActivate(obj._id)\">\r\n                                            <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-danger\"\r\n                                                value=\"{{'GenericDeactivate' | translate }}\" (click)=\"setDeActivate(obj._id)\">\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-12 col-lg-12\">\r\n                        <app-custom-pagination [page]=\"page\" (nextPageEvent)=\"getNextPage()\"\r\n                            (previousPageEvent)=\"getPreviousPage()\" (loadPageCurrentEvent)=\"getloadPageCurrent()\">\r\n                        </app-custom-pagination>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n\r\n\r\n<div>\r\n    <ng-template role=\"dialog\" #content let-modal class=\"modal fade\">\r\n        <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header white-text text-center\">\r\n\r\n                    <h6 class=\"modal-title\">\r\n                        {{(modelIsCreate ? 'GenericCreate'   : 'GenericEditing') | translate}} : {{modelIsCreate? (\"GenericNew\" | translate) : modelNameEdited}}\r\n                    </h6>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n\r\n                    <form novalidate (ngSubmit)=\"modelSaveBtn(modelForm)\" #modelForm=\"ngForm\">\r\n                        <div class=\"form-group \">\r\n                            <mat-form-field class=\"example-full-width\">\r\n                                <mat-label>{{'GenericName' | translate }}</mat-label>\r\n                                <input matInput id=\"modelNameId\" type=\"text\" placeholder=\"{{'GenericRequiredName' | translate }}\" required\r\n                                    [(ngModel)]=\"modelObj.Name\" #modelNameVar=\"ngModel\" name=\"modelName\" onblur=\"this.value = this.value.trim()\"\r\n                                    [ngClass]=\"{'is-invalid': (modelNameVar.touched || modelNameVar.dirty) && !modelNameVar.valid }\" />\r\n                                    <mat-error *ngIf=\"modelNameVar.errors?.required\">{{'DataLanguageError' | translate }}\r\n                                </mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"form-group pull-right md-form\">\r\n                            <button class=\"btn  btn-thm\" type=\"submit\" style=\"width:100px\"\r\n                                [title]=\"modelForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\"\r\n                                [disabled]=\"!modelForm.valid\">{{'GenericSave' | translate }}</button></div>\r\n                    </form>\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                    <button type=\"button\" class=\"btn border-green btn-transparent\"\r\n                        (click)=\"modal.close()\">{{'GenericClose' | translate }}</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </ng-template>\r\n</div> ","import { Component, OnInit } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgForm } from '@angular/forms';\r\n\r\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\r\nimport { CustomPaginationService } from 'src/app/common/pagination/services/custom-pagination.service';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { Page } from 'src/app/common/pagination/page';\r\nimport { cGenericIdNameList, cGenericIdNameItem } from 'src/app/interface/Response/GenericIdName.class';\r\nimport { ModelIdName } from 'src/app/interface/Model/ModelIdName.class';\r\nimport { ServiceQualification } from 'src/app/services/qualification.service';\r\nimport { ConfirmationDialogService } from 'src/app/common/confirmation-dialog/confirmation-dialog.service';\r\nimport { TranslateType } from 'src/app/Enum/TranslateType.enum';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-qualification',\r\n  templateUrl: './qualification.component.html',\r\n  styleUrls: ['./qualification.component.css']\r\n})\r\nexport class QualificationComponent implements OnInit {\r\n\r\n  \r\n\r\n  pageTitle: string = 'Qualification';\r\n  lstResult: cGenericIdNameList;\r\n  message: ShowMessage = new ShowMessage();\r\n  filtertxt: string = '';\r\n  modelObj:ModelIdName;\r\n  modelIsCreate: boolean;\r\n  modelNameEdited: string = '';\r\n\r\n  page: Page<cGenericIdNameItem> = new Page();\r\n\r\n  constructor(private BLService: ServiceQualification,\r\n    private paginationService: CustomPaginationService,\r\n    private BLServiceShowMessage: ServiceShowMessage,\r\n    private confirmationDialogService: ConfirmationDialogService,\r\n    private router: Router,\r\n    private modalService: NgbModal) { }\r\n\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n  private loadData(): void {\r\n    this.BLService.getAll(this.page.pageable.pageCurrent, this.filtertxt).subscribe({\r\n      next: lst => {\r\n        this.lstResult = lst;\r\n        this.page.pageable.pageSize = lst.pageSize;\r\n        this.page.totalElements = lst.totalCount;\r\n        this.page.content = lst.lstResult;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  public getNextPage(): void {\r\n    this.page.pageable = this.paginationService.getNextPage(this.page);\r\n    this.loadData();\r\n  }\r\n\r\n  public getPreviousPage(): void {\r\n    this.page.pageable = this.paginationService.getPreviousPage(this.page);\r\n    this.loadData();\r\n  }\r\n  public getloadPageCurrent(): void {\r\n    this.loadData();\r\n  }\r\n  setActivate(Id: string): void {\r\n    this.confirmationDialogService.confirmActivation()\r\n      .then((confirmed) => {\r\n        if (!confirmed)\r\n          return;\r\n        this.BLService.setActivate(Id).subscribe({\r\n          next: response => {\r\n            this.message.Success(\"Activated successfully.\");\r\n            this.BLServiceShowMessage.sendMessage(this.message);\r\n            this.loadData();\r\n          },\r\n          error: err => this.message.Error(err)\r\n        });\r\n      });\r\n  }\r\n  setDeActivate(Id: string): void {\r\n    this.confirmationDialogService.confirmDeactivation()\r\n      .then((confirmed) => {\r\n        if (!confirmed)\r\n          return;\r\n        this.BLService.setDeActivate(Id).subscribe({\r\n          next: response => {\r\n            this.message.Success(\"Deactivated successfully.\");\r\n            this.BLServiceShowMessage.sendMessage(this.message);\r\n            this.loadData();\r\n          },\r\n          error: err => this.message.Error(err)\r\n        });\r\n      });\r\n  }\r\n  filterbtn(): void {\r\n    this.page.pageable.pageCurrent = 1;\r\n    this.loadData();\r\n  }\r\n  createBtn(content): void {\r\n    this.modelIsCreate = true;\r\n    this.modelObj = new ModelIdName();\r\n    this.modelNameEdited = \"\";\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  modelSaveBtn(modelForm: NgForm): void {\r\n    this.modelObj.Name = this.modelObj.Name.trim();\r\n\r\n    if (!modelForm.valid || this.modelObj.Name == \"\")\r\n      return;\r\n      \r\n    if (this.modelIsCreate) {\r\n      this.BLService.create(this.modelObj).subscribe({\r\n        next: response => {\r\n          this.message.Success(\"Saved successfully.\");\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.modalService.dismissAll();\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n    else {\r\n      this.BLService.update(this.modelObj).subscribe({\r\n        next: response => {\r\n          this.message.Success(\"Saved successfully.\");\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.modalService.dismissAll();\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n  }\r\n  openBackDropCustomClass(content, obj:cGenericIdNameItem) {\r\n    this.modelObj = new ModelIdName();\r\n    this.modelObj.Id = obj._id;\r\n    this.modelObj.Name = obj.Name;\r\n    this.modelNameEdited = obj.Name;\r\n    this.modelIsCreate = false;\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  Translate(){\r\n    this.router.navigate(['/Translate/' + TranslateType.Qualification + '/0']);\r\n  }\r\n}\r\n","<section class=\"our-dashbord dashbord\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12 col-lg-4 col-xl-3 dn-smd\">\r\n                <app-data-menu [pageName]=\"'qualification'\"></app-data-menu>\r\n            </div>\r\n            <div class=\"col-sm-12 col-lg-8 col-xl-9\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12 col-lg-12 \">\r\n                        <h4 class=\"fz20\">{{'DataQualification' | translate }}</h4>\r\n                    </div>\r\n                    <div class=\"col-md-6 col-lg-6 \">\r\n                        <mat-form-field class=\"w-75\">\r\n                            <mat-label>{{'DataQualificationSearch' | translate }}</mat-label>\r\n                            <input type=\"text\" placeholder=\"{{'DataQualificationSearchBy' | translate }}\" matInput [(ngModel)]=\"filtertxt\">\r\n                        </mat-form-field>\r\n                        <input type=\"submit\" value=\"{{'GenericSubmit' | translate }}\" class=\"btn btn-thm\" (click)=\"filterbtn()\">\r\n                    </div>\r\n                    <div class=\"col-md-6 col-lg-6 pull-right\">\r\n                        <input type=\"button\" class=\"pull-right btn btn-orange\" value=\"{{'GenericCreateNew' | translate }}\"\r\n                            (click)=\"createBtn(content)\">\r\n                            <input type=\"button\" class=\"btn btn-success pull-right btnGreen\"\r\n                            value=\"{{'GenericTranslate' | translate }}\" (click)=\"Translate()\">\r\n                    </div>\r\n                    <div class=\"col-md-12 col-lg-12\">\r\n                        <div class=\"ui_kit_table\">\r\n                            <table class=\"table\">\r\n                                <thead class=\"thead-light\">\r\n                                    <tr>\r\n                                        <th scope=\"col\">{{'GenericName' | translate }}</th>\r\n                                        <th scope=\"col\">{{'GenericAction' | translate }}</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody *ngIf='page.content && page.content.length'>\r\n                                    <tr *ngFor='let obj of page.content'>\r\n                                        <td>{{ obj.Name}}</td>\r\n                                        <td>\r\n                                            <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-primary\"\r\n                                                value=\"{{'GenericEdit' | translate }}\"\r\n                                             (click)=\"openBackDropCustomClass(content,obj)\"> \r\n                                            <input *ngIf=\"!obj.IsActive\" type=\"button\" class=\"btn btn-success\"\r\n                                                value=\"{{'GenericActivate' | translate }}\" (click)=\"setActivate(obj._id)\">\r\n                                            <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-danger\"\r\n                                                value=\"{{'GenericDeactivate' | translate }}\" (click)=\"setDeActivate(obj._id)\">\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-12 col-lg-12\">\r\n                        <app-custom-pagination [page]=\"page\" (nextPageEvent)=\"getNextPage()\"\r\n                            (previousPageEvent)=\"getPreviousPage()\" (loadPageCurrentEvent)=\"getloadPageCurrent()\">\r\n                        </app-custom-pagination>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n\r\n\r\n<div>\r\n    <ng-template role=\"dialog\" #content let-modal class=\"modal fade\">\r\n        <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header white-text text-center\">\r\n\r\n                    <h6 class=\"modal-title\">\r\n                        {{(modelIsCreate ? 'GenericCreate'   : 'GenericEditing') | translate}} : {{modelIsCreate? (\"GenericNew\" | translate) : modelNameEdited}}\r\n                    </h6>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n\r\n                    <form novalidate (ngSubmit)=\"modelSaveBtn(modelForm)\" #modelForm=\"ngForm\">\r\n                        <div class=\"form-group \">\r\n                            <mat-form-field class=\"example-full-width\">\r\n                                <mat-label>{{'GenericName' | translate }}</mat-label>\r\n                                <input matInput id=\"modelNameId\" type=\"text\" placeholder=\"{{'GenericRequiredName' | translate }}\" required\r\n                                    [(ngModel)]=\"modelObj.Name\" #modelNameVar=\"ngModel\" name=\"modelName\"\r\n                                    [ngClass]=\"{'is-invalid': (modelNameVar.touched || modelNameVar.dirty) && !modelNameVar.valid }\" />\r\n                                    <mat-error *ngIf=\"modelNameVar.errors?.required\">{{'DataQualificationError' | translate }}\r\n                                </mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"form-group pull-right md-form\">\r\n                            <button class=\"btn  btn-thm\" type=\"submit\" style=\"width:100px\"\r\n                                [title]=\"modelForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\"\r\n                                [disabled]=\"!modelForm.valid\">{{'GenericSave' | translate }}</button></div>\r\n                    </form>\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                    <button type=\"button\" class=\"btn border-green btn-transparent\"\r\n                        (click)=\"modal.close()\">{{'GenericClose' | translate }}</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </ng-template>\r\n</div> ","import { Component, OnInit } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgForm } from '@angular/forms';\r\n\r\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\r\nimport { CustomPaginationService } from 'src/app/common/pagination/services/custom-pagination.service';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { Page } from 'src/app/common/pagination/page';\r\nimport { cGenericIdNameList, cGenericIdNameItem } from 'src/app/interface/Response/GenericIdName.class';\r\nimport { ModelIdName } from 'src/app/interface/Model/ModelIdName.class';\r\nimport { ServiceYearsOfExperience } from 'src/app/services/years-of-experience.service';\r\nimport { ConfirmationDialogService } from 'src/app/common/confirmation-dialog/confirmation-dialog.service';\r\nimport { TranslateType } from 'src/app/Enum/TranslateType.enum';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-years-of-experience',\r\n  templateUrl: './years-of-experience.component.html',\r\n  styleUrls: ['./years-of-experience.component.css']\r\n})\r\nexport class YearsOfExperienceComponent implements OnInit {\r\n\r\n  \r\n\r\n  pageTitle: string = 'Years Of Experience';\r\n  lstResult: cGenericIdNameList;\r\n  message: ShowMessage = new ShowMessage();\r\n  filtertxt: string = '';\r\n  modelObj:ModelIdName;\r\n  modelIsCreate: boolean;\r\n  modelNameEdited: string = '';\r\n\r\n  page: Page<cGenericIdNameItem> = new Page();\r\n\r\n  constructor(private BLService: ServiceYearsOfExperience,\r\n    private paginationService: CustomPaginationService,\r\n    private BLServiceShowMessage: ServiceShowMessage,\r\n    private confirmationDialogService: ConfirmationDialogService,\r\n    private router: Router,\r\n    private modalService: NgbModal) { }\r\n\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n  private loadData(): void {\r\n    this.BLService.getAll(this.page.pageable.pageCurrent, this.filtertxt).subscribe({\r\n      next: lst => {\r\n        this.lstResult = lst;\r\n        this.page.pageable.pageSize = lst.pageSize;\r\n        this.page.totalElements = lst.totalCount;\r\n        this.page.content = lst.lstResult;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  public getNextPage(): void {\r\n    this.page.pageable = this.paginationService.getNextPage(this.page);\r\n    this.loadData();\r\n  }\r\n\r\n  public getPreviousPage(): void {\r\n    this.page.pageable = this.paginationService.getPreviousPage(this.page);\r\n    this.loadData();\r\n  }\r\n  public getloadPageCurrent(): void {\r\n    this.loadData();\r\n  }\r\n  setActivate(Id: string): void {\r\n    this.confirmationDialogService.confirmActivation()\r\n      .then((confirmed) => {\r\n        if (!confirmed)\r\n          return;\r\n        this.BLService.setActivate(Id).subscribe({\r\n          next: response => {\r\n            this.message.Success(\"Activated successfully.\");\r\n            this.BLServiceShowMessage.sendMessage(this.message);\r\n            this.loadData();\r\n          },\r\n          error: err => this.message.Error(err)\r\n        });\r\n      });\r\n  }\r\n  setDeActivate(Id: string): void {\r\n    this.confirmationDialogService.confirmDeactivation()\r\n      .then((confirmed) => {\r\n        if (!confirmed)\r\n          return;\r\n        this.BLService.setDeActivate(Id).subscribe({\r\n          next: response => {\r\n            this.message.Success(\"Deactivated successfully.\");\r\n            this.BLServiceShowMessage.sendMessage(this.message);\r\n            this.loadData();\r\n          },\r\n          error: err => this.message.Error(err)\r\n        });\r\n      });\r\n  }\r\n  filterbtn(): void {\r\n    this.page.pageable.pageCurrent = 1;\r\n    this.loadData();\r\n  }\r\n  createBtn(content): void {\r\n    this.modelIsCreate = true;\r\n    this.modelObj = new ModelIdName();\r\n    this.modelNameEdited = \"\";\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  modelSaveBtn(modelForm: NgForm): void {\r\n    this.modelObj.Name = this.modelObj.Name.trim();\r\n\r\n    if (!modelForm.valid || this.modelObj.Name == \"\")\r\n      return;\r\n      \r\n    if (this.modelIsCreate) {\r\n      this.BLService.create(this.modelObj).subscribe({\r\n        next: response => {\r\n          this.message.Success(\"Saved successfully.\");\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.modalService.dismissAll();\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n    else {\r\n      this.BLService.update(this.modelObj).subscribe({\r\n        next: response => {\r\n          this.message.Success(\"Saved successfully.\");\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.modalService.dismissAll();\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n  }\r\n  openBackDropCustomClass(content, obj:cGenericIdNameItem) {\r\n    this.modelObj = new ModelIdName();\r\n    this.modelObj.Id = obj._id;\r\n    this.modelObj.Name = obj.Name;\r\n    this.modelNameEdited = obj.Name;\r\n    this.modelIsCreate = false;\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  Translate(){\r\n    this.router.navigate(['/Translate/' + TranslateType.YearsOfExperience + '/0']);\r\n  }\r\n}\r\n","<section class=\"our-dashbord dashbord\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12 col-lg-4 col-xl-3 dn-smd\">\r\n                <app-data-menu [pageName]=\"'yearsofexperience'\"></app-data-menu>\r\n            </div>\r\n            <div class=\"col-sm-12 col-lg-8 col-xl-9\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12 col-lg-12 \">\r\n                        <h4 class=\"fz20\">{{'DataYearsOfExperience' | translate }}</h4>\r\n                    </div>\r\n                    <div class=\"col-md-6 col-lg-6 d-inline\">\r\n                        <mat-form-field class=\"w-75\">\r\n                            <mat-label>{{'DataYearsOfExperienceSearch' | translate }}</mat-label>\r\n                            <input type=\"text\" placeholder=\"{{'DataYearsOfExperienceSearchBy' | translate }}\" matInput [(ngModel)]=\"filtertxt\">\r\n                        </mat-form-field>\r\n                        <input type=\"submit\" value=\"{{'GenericSubmit' | translate }}\" class=\"btn btn-thm\" (click)=\"filterbtn()\">\r\n                    </div>\r\n                    <div class=\"col-md-6 col-lg-6 pull-right\">\r\n                        <input type=\"button\" class=\"pull-right btn btn-orange\" value=\"{{'GenericCreateNew' | translate }}\"\r\n                            (click)=\"createBtn(content)\">\r\n                            <input type=\"button\" class=\"btn btn-success pull-right btnGreen\"\r\n                            value=\"{{'GenericTranslate' | translate }}\" (click)=\"Translate()\">\r\n                    </div>\r\n                    <div class=\"col-md-12 col-lg-12\">\r\n                        <div class=\"ui_kit_table\">\r\n                            <table class=\"table\">\r\n                                <thead class=\"thead-light\">\r\n                                    <tr>\r\n                                        <th scope=\"col\">{{'GenericName' | translate }}</th>\r\n                                        <th scope=\"col\">{{'GenericAction' | translate }}</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody *ngIf='page.content && page.content.length'>\r\n                                    <tr *ngFor='let obj of page.content'>\r\n                                        <td>{{ obj.Name}}</td>\r\n                                        <td>\r\n                                            <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-primary\"\r\n                                                value=\"{{'GenericEdit' | translate }}\"\r\n                                             (click)=\"openBackDropCustomClass(content,obj)\"> \r\n                                            <input *ngIf=\"!obj.IsActive\" type=\"button\" class=\"btn btn-success\"\r\n                                                value=\"{{'GenericActivate' | translate }}\" (click)=\"setActivate(obj._id)\">\r\n                                            <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-danger\"\r\n                                                value=\"{{'GenericDeactivate' | translate }}\" (click)=\"setDeActivate(obj._id)\">\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-12 col-lg-12\">\r\n                        <app-custom-pagination [page]=\"page\" (nextPageEvent)=\"getNextPage()\"\r\n                            (previousPageEvent)=\"getPreviousPage()\" (loadPageCurrentEvent)=\"getloadPageCurrent()\">\r\n                        </app-custom-pagination>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n\r\n\r\n<div>\r\n    <ng-template role=\"dialog\" #content let-modal class=\"modal fade\">\r\n        <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header white-text text-center\">\r\n\r\n                    <h6 class=\"modal-title\">\r\n                        {{(modelIsCreate ? 'GenericCreate'   : 'GenericEditing') | translate}} : {{modelIsCreate? (\"GenericNew\" | translate) : modelNameEdited}}\r\n                    </h6>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n\r\n                    <form novalidate (ngSubmit)=\"modelSaveBtn(modelForm)\" #modelForm=\"ngForm\">\r\n                        <div class=\"form-group \">\r\n                            <mat-form-field class=\"example-full-width\">\r\n                                <mat-label>{{'GenericName' | translate }}</mat-label>\r\n                                <input matInput id=\"modelNameId\" type=\"text\" placeholder=\"{{'GenericRequiredName' | translate }}\" required\r\n                                    [(ngModel)]=\"modelObj.Name\" #modelNameVar=\"ngModel\" name=\"modelName\"\r\n                                    [ngClass]=\"{'is-invalid': (modelNameVar.touched || modelNameVar.dirty) && !modelNameVar.valid }\" />\r\n                                    <mat-error *ngIf=\"modelNameVar.errors?.required\">{{'DataYearsOfExperienceError' | translate }}\r\n                                </mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"form-group pull-right md-form\">\r\n                            <button class=\"btn  btn-thm\" type=\"submit\" style=\"width:100px\"\r\n                                [title]=\"modelForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\"\r\n                                [disabled]=\"!modelForm.valid\">{{'GenericSave' | translate }}</button></div>\r\n                    </form>\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                    <button type=\"button\" class=\"btn border-green btn-transparent\"\r\n                        (click)=\"modal.close()\">{{'GenericClose' | translate }}</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </ng-template>\r\n</div> ","import { Component, OnInit } from '@angular/core';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { cApplyList, cApplyItem } from 'src/app/interface/Response/Apply.class';\r\nimport { Page } from 'src/app/common/pagination/page';\r\nimport { ServiceApply } from 'src/app/services/apply.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { CustomPaginationService } from 'src/app/common/pagination/services/custom-pagination.service';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-applied-job-seekers',\r\n  templateUrl: './applied-job-seekers.component.html',\r\n  styleUrls: ['./applied-job-seekers.component.css']\r\n})\r\nexport class AppliedJobSeekersComponent extends baseComponent implements OnInit {\r\n\r\n  lstResult: cApplyList;\r\n  show = false;\r\n  filtertxt: string = '';\r\n  page: Page<cApplyItem> = new Page();\r\n  JobName: string = \"\";\r\n  JobId: string;\r\n\r\n  constructor(private BLService: ServiceApply,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private paginationService: CustomPaginationService,\r\n    BLServiceShowMessage: ServiceShowMessage,\r\n    BLServiceLoginUser: ServiceLoginUser,BLTranslate: TranslateService,) {\r\n    super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const param = this.route.snapshot.paramMap.get(\"Id\");\r\n    if (param)\r\n    {\r\n      this.JobId = param;\r\n    }\r\n    this.loadData();\r\n  }\r\n  onView(Id: string) {\r\n    this.router.navigate(['JobSeeker/Resume/' + Id]);\r\n  }\r\n  onHired(Id:string){\r\n    this.BLService.Hire(Id, this.JobId).subscribe({\r\n      next: lst => {\r\n        this.message.Success(\"Saved successfully.\");\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  onUnHired(Id:string){\r\n    this.BLService.UnHire(Id, this.JobId).subscribe({\r\n      next: lst => {\r\n        this.message.Success(\"Saved successfully.\");\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  private loadData(): void {\r\n    this.BLService.ListAll(this.page.pageable.pageCurrent, this.filtertxt, this.JobId).subscribe({\r\n      next: lst => {\r\n        this.lstResult = lst;\r\n        this.page.pageable.pageSize = lst.pageSize;\r\n        this.page.totalElements = lst.totalCount;\r\n        this.page.content = lst.lstResult;\r\n\r\n        if (lst.totalCount > 0)\r\n          this.JobName = lst.lstResult[0].Job.Name;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  filterbtn(): void {\r\n    this.page.pageable.pageCurrent = 1;\r\n    this.loadData();\r\n  }\r\n  public getNextPage(): void {\r\n    this.page.pageable = this.paginationService.getNextPage(this.page);\r\n    this.loadData();\r\n  }\r\n\r\n  public getPreviousPage(): void {\r\n    this.page.pageable = this.paginationService.getPreviousPage(this.page);\r\n    this.loadData();\r\n  }\r\n  public getloadPageCurrent(): void {\r\n    this.loadData();\r\n  }\r\n}\r\n\r\n","<section class=\"our-dashbord dashbord\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12 col-lg-4 col-xl-3 dn-smd\">\r\n                <app-employer-menu [pageName]=\"'managemyjobs'\"></app-employer-menu>\r\n            </div>\r\n            <div class=\"col-sm-12 col-lg-8 col-xl-9\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-lg-12\">\r\n                        <h4 class=\"fz20\">{{'EmployerApplyJobSeekerSearch' | translate }}: {{JobName}}.</h4>\r\n                    </div>\r\n                    <div class=\"col-md-6 col-lg-6 \">\r\n                        <mat-form-field class=\"w-75\">\r\n                            <mat-label>{{'EmployerApplySerachFor' | translate }}</mat-label>\r\n                            <input type=\"text\" placeholder=\"{{'EmployerApplySerachBy' | translate }}\" matInput\r\n                                [(ngModel)]=\"filtertxt\">\r\n                        </mat-form-field>\r\n                        <input type=\"submit\" value=\"{{'GenericSubmit' | translate }}\" class=\"btn btn-thm\"\r\n                            (click)=\"filterbtn()\">\r\n                    </div>\r\n                    <div class=\"col-lg-12\" *ngFor=\"let item of lstResult?.lstResult\">\r\n                        <div class=\"candidate_list_view style2\">\r\n                            <div class=\"thumb\">\r\n                                <img class=\"img-fluid rounded-circle ProfilePicture ProfilePictureSmaller\"\r\n                                    src=\"{{item?.JobSeeker.URL}}\">\r\n                                <div class=\"cpi_av_rating\"><span></span></div>\r\n                            </div>\r\n                            <div class=\"content mt25 fn-xl float-right\">\r\n                                <button (click)=\"onView(item.JobSeeker._id)\"\r\n                                    class=\"btn btn-block btn-thm   \">{{'EmployerApplyViewResume' | translate }} <span\r\n                                        class=\"flaticon-right-arrow pl10\"></span></button>\r\n                                <button *ngIf=\"!item.IsHired\" (click)=\"onHired(item.JobSeeker._id)\"\r\n                                    class=\"btn btn-block btn-primary   \">{{'EmployerApplyHire' | translate }} <span\r\n                                        class=\"flaticon-right-arrow pl10\"></span></button>\r\n                                <button *ngIf=\"item.IsHired\" (click)=\"onUnHired(item.JobSeeker._id)\"\r\n                                    class=\"btn btn-block  bg-blue\">{{'EmployerApplyUnHire' | translate }} <span\r\n                                        class=\"flaticon-right-arrow pl10\"></span></button>\r\n                            </div>\r\n                            <div class=\"content mt25 fn-xl\">\r\n                                <h4 class=\"title\">{{item.JobSeeker.Name}} <small class=\"verified text-thm2 pl10\"><i\r\n                                            class=\"fa fa-check-circle\"></i></small></h4>\r\n                                <p class=\"text-thm2\">{{item.JobSeeker.SubName}} </p>\r\n                            </div>\r\n                            <div class=\"col-lg-12 content mt25 fn-xl\">\r\n                                <p class=\"text-body message\" [class.show]=\"show\">{{item.Message}} </p>\r\n                                <a *ngIf=\"item.Message.length > 30\" class=\"text-green\" (click)=\"show = !show\">{{ show ?\r\n                                    'Show Less' : 'Show More' | translate}}</a>\r\n                            </div>\r\n\r\n                            <ul class=\"review_list\"></ul>\r\n                            <ul class=\"address_list\"></ul>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-12 col-lg-12 mt25\">\r\n                        <app-custom-pagination [page]=\"page\" (nextPageEvent)=\"getNextPage()\"\r\n                            (previousPageEvent)=\"getPreviousPage()\" (loadPageCurrentEvent)=\"getloadPageCurrent()\">\r\n                        </app-custom-pagination>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>","import { Component, OnInit } from '@angular/core';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { ServiceCompany } from 'src/app/services/service-company.service';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { cCompanyItem } from 'src/app/interface/Response/Company.class';\r\nimport { ServiceJob } from 'src/app/services/job.service';\r\nimport { cJobItem } from 'src/app/interface/Response/Job.class';\r\nimport { JobType } from 'src/app/Enum/JobType.enum';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-company-view',\r\n  templateUrl: './company-view.component.html',\r\n  styleUrls: ['./company-view.component.css']\r\n})\r\nexport class CompanyViewComponent extends baseComponent implements OnInit {\r\n\r\n  objProfile: cCompanyItem;\r\n  lstJobs: cJobItem[];\r\n  profileId: string;\r\n\r\n  constructor(\r\n    private BLCompany: ServiceCompany,\r\n    private BLJob :ServiceJob,\r\n    BLServiceShowMessage: ServiceShowMessage,\r\n    BLServiceLoginUser: ServiceLoginUser,BLTranslate: TranslateService,\r\n    private route: ActivatedRoute) {\r\n    super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\r\n  }\r\n  ngOnInit(): void {\r\n    const param = this.route.snapshot.paramMap.get('Id');\r\n    if (param) {\r\n      this.profileId = param;\r\n      this.BLCompany.getGetByid(param).subscribe({\r\n        next: obj => {debugger;\r\n          this.objProfile = obj;\r\n        },\r\n        error: err => {\r\n          this.message.Error(err);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n        }\r\n      });\r\n      this.BLJob.GetJobsByCompanyId(param).subscribe({\r\n        next: lst => {\r\n          this.lstJobs = lst;\r\n          \r\n        },\r\n        error: err => {\r\n          this.message.Error(err);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  GetJobType(type) {\r\n    return JobType[type];\r\n  }\r\n}\r\n","<section class=\"emplye_single_v2 mt70 mt50 pt50 shadow-sm p-3 mb-5 bg-white rounded\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-9 col-xl-9\">\r\n                <div class=\"candidate_personal_info style3\">\r\n                    <div class=\"thumb\">\r\n                        <img class=\"img-fluid companylogoview\" src=\"{{objProfile?.CompanyLogo}}\" alt=\"cl1.jpg\">\r\n                        <div class=\"cpi_av_rating\"><span></span></div>\r\n                    </div>\r\n                    <div class=\"details\">\r\n                        <h3>{{objProfile.Name}}</h3>\r\n                        <p class=\"text-thm2\">{{objProfile.Industry.Name}}</p>\r\n                        <ul class=\"address_list\">\r\n                            <li *ngIf=\"objProfile.Website != ''\" class=\"list-inline-item\"><a href=\"{{objProfile.Website}}\"><span class=\"flaticon-link text-thm\"></span>\r\n                                    {{objProfile.Website}}</a></li>\r\n                            <li class=\"list-inline-item\"><a href=\"#\"><span class=\"flaticon-phone-call text-thm\"></span>\r\n                                    {{objProfile.Phone}}</a></li>\r\n                            <li class=\"list-inline-item\"><a href=\"#\"><span class=\"flaticon-mail text-thm\"></span>\r\n                                    {{objProfile.Email}}</a></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-lg-3 col-xl-3\">\r\n                <div class=\"candidate_personal_overview style2\">\r\n                    <!-- <button class=\"btn btn-block btn-thm mb15\"><span\r\n                        class=\"flaticon-favorites fz24 pr10\"></span> Shortlist</button> -->\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n<section class=\"employe_details\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-xl-8\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-lg-12\">\r\n                        <div class=\"candidate_about_info style2\">\r\n                            <h4 class=\"fz20 mb30 ProfileTitle\">{{'EmployerCompanyViewDescription' | translate }}</h4>\r\n                            <div class=\"editor\" [innerHTML]=\"objProfile.About\"></div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-6 mt-2\" *ngFor=\"let objX of objProfile.data | keyvalue\">\r\n                        <div class=\"candidate_about_info style2\">\r\n                            <h4 class=\"fz20 mb30 ProfileTitle\">{{objX.key}}</h4>\r\n                            <div class=\"editor\" [innerHTML]=\"objX.value\"></div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-12\">\r\n                        <div class=\"my_resume_eduarea\">\r\n                            <h4 *ngIf=\"lstJobs?.length > 0\" class=\"title mb30\">{{'EmployerCompanyViewOpenPosition' | translate }}</h4>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-12\" *ngFor=\"let item of lstJobs\">\r\n                        <div class=\"fj_post style2 one\">\r\n                            <a routerLink=\"/Employer/Job/{{item._id}}\">\r\n                            <div class=\"details\">\r\n                                <h5 class=\"job_chedule text-thm2\">{{GetJobType(item?.Type)}}</h5>\r\n                                <h4>{{item.Name}}</h4>\r\n                                <p class=\"color-Red\">Apply before Deadline {{item?.Deadline | date:'MMM d, y'}}</p>\r\n                                <ul class=\"featurej_post\">\r\n                                    <li class=\"list-inline-item\"><span class=\"flaticon-location-pin\"></span><a href=\"#\"> {{(!item?.Country || (item?.Country.Name == '')) ? \"'EmployerCompanyViewCountryNA' | translate \"  : item?.Country.Name}},\r\n                                            {{ ( !item?.City ||  (item?.City.Name == '')) ? \"'EmployerCompanyViewCityNA' | translate\" : item?.City.Name}}</a></li>\r\n                                    <li class=\"list-inline-item\"><span class=\"flaticon-work pl20 \"></span> <a\r\n                                            href=\"#\">   {{item?.JobField.Name}}</a></li>\r\n                                </ul>\r\n                            </div>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                  \r\n                </div>\r\n            </div>\r\n            <div class=\"col-xl-4\">\r\n                <h4 class=\"fz20 mb30 ProfileTitle\">{{'EmployerCompanyViewInfo' | translate }}</h4>\r\n                <div class=\"candidate_working_widget style2 bgc-fa\">\r\n                    <div class=\"icon text-thm\"><span class=\"flaticon-label\"></span></div>\r\n                    <div class=\"details\">\r\n                        <p class=\"color-black22\">{{'EmployerCompanyViewPostedJobs' | translate }}</p>\r\n                        <p><b>{{lstJobs?.length}}</b></p>\r\n                    </div>\r\n                    <div class=\"icon text-thm\"><span class=\"flaticon-location-pin\"></span></div>\r\n                    <div class=\"details\">\r\n                        <p class=\"color-black22\">{{'EmployerCompanyViewLocations' | translate }}</p>\r\n                        <p><b>{{objProfile.Country.Name + ', ' + objProfile.City.Name}}</b></p>\r\n                    </div>\r\n                    <div class=\"icon text-thm\"><span class=\"flaticon-2-squares\"></span></div>\r\n                    <div class=\"details\">\r\n                        <p class=\"color-black22\">{{'EmployerCompanyViewIndustry' | translate }}</p>\r\n                        <p><b>{{objProfile.Industry.Name}}</b></p>\r\n                    </div>\r\n                    <div class=\"icon text-thm\"><span class=\"flaticon-timeline\"></span></div>\r\n                    <div class=\"details\">\r\n                        <p class=\"color-black22\">{{'EmployerCompanyViewSince' | translate }}</p>\r\n                        <p><b>{{objProfile.Establish | date:'dd/MM/yyyy'}}</b></p>\r\n                    </div>\r\n                </div>\r\n                <div class=\"job_shareing \">\r\n                    <div class=\"candidate_social_widget bgc-fa bg-green\">\r\n                        <ul>\r\n                            <li class=\"ProfileTitle\">{{'EmployerCompanyViewSocial' | translate }}</li>\r\n                            <li *ngIf=\"objProfile.SocialTwitter\"><a href=\"{{objProfile.SocialTwitter}}\" target=\"_blank\"><i class=\"fa fa-twitter\"></i></a></li>\r\n                            <li *ngIf=\"objProfile.SocialFacebook\"><a href=\"{{objProfile.SocialFacebook}}\" target=\"_blank\"><i class=\"fa fa-facebook\"></i></a></li>\r\n                            <li *ngIf=\"objProfile.SocialLinkedin\"><a href=\"{{objProfile.SocialLinkedin}}\" target=\"_blank\"><i class=\"fa fa-google\"></i></a></li>\r\n                            <li *ngIf=\"objProfile.SocialGooglePlus\"><a href=\"{{objProfile.SocialGooglePlus}}\" target=\"_blank\"><i class=\"fa fa-linkedin\"></i></a></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-employer-dashboard',\r\n  templateUrl: './employer-dashboard.component.html',\r\n  styleUrls: ['./employer-dashboard.component.css']\r\n})\r\nexport class EmployerDashboardComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<section class=\"our-dashbord dashbord\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12 col-lg-4 col-xl-3 dn-smd\">\r\n                <app-employer-menu [pageName]=\"'dashboard'\"></app-employer-menu>\r\n            </div>\r\n            <div class=\"col-sm-12 col-lg-8 col-xl-9\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-lg-12\">\r\n                        <h4 class=\"mb30\">Dashboard</h4>\r\n                    </div>\r\n                    <div class=\"col-sm-4 col-md-4 col-lg-4 col-xl-4\">\r\n                        <div class=\"ff_one\">\r\n                            <div class=\"icon\"><span class=\"flaticon-paper-plane\"></span></div>\r\n                            <div class=\"detais\">\r\n                                <div class=\"timer\">10</div>\r\n                                <p>Posted Jobs</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-4 col-md-4 col-lg-4 col-xl-4\">\r\n                        <div class=\"ff_one style2\">\r\n                            <div class=\"icon\"><span class=\"flaticon-favorites\"></span></div>\r\n                            <div class=\"detais\">\r\n                                <div class=\"timer\">107</div>\r\n                                <p>Applications</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-4 col-md-4 col-lg-4 col-xl-4\">\r\n                        <div class=\"ff_one style3\">\r\n                            <div class=\"icon\"><span class=\"flaticon-alarm\"></span></div>\r\n                            <div class=\"detais\">\r\n                                <div class=\"timer\">30</div>\r\n                                <p>Shortlisted</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-xl-8\">\r\n                        <div class=\"application_statics\">\r\n                            <h4>Applications Statistics</h4>\r\n                            <div class=\"c_container\"></div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-xl-4\">\r\n                        <div class=\"recent_job_trafic\">\r\n                            <h4>Traffic</h4>\r\n                            <div class=\"trafic_details\">\r\n                                <div class=\"circlechart\" data-percentage=\"60\">1.5 M</div>\r\n                                <h4>Traffic for the day</h4>\r\n                                <p>Traffic through the sources google and facebook for the day</p>\r\n                                <ul class=\"trafic_list float-left\">\r\n                                    <li>40%</li>\r\n                                    <li class=\"list-inline-item\"><span class=\"bgc-fb\"></span></li>\r\n                                    <li class=\"list-inline-item\">Facebook</li>\r\n                                </ul>\r\n                                <ul class=\"trafic_list\">\r\n                                    <li>60%</li>\r\n                                    <li class=\"list-inline-item\"><span class=\"bgc-gogle\"></span></li>\r\n                                    <li class=\"list-inline-item\">Facebook</li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-xl-8\">\r\n                        <div class=\"recent_job_apply\">\r\n                            <h4 class=\"title\">Recent Applicants</h4>\r\n                            <div class=\"candidate_list_view style3 mb50\">\r\n                                <div class=\"thumb\">\r\n                                    <img class=\"img-fluid rounded-circle\" src=\"images/team/1.jpg\" alt=\"1.jpg\">\r\n                                    <div class=\"cpi_av_rating\"><span>4.5</span></div>\r\n                                </div>\r\n                                <div class=\"content\">\r\n                                    <h4 class=\"title\">Ali TUFAN<span class=\"verified text-thm pl10\"><i class=\"fa fa-check-circle\"></i></span></h4>\r\n                                    <p>App Designer</p>\r\n                                    <ul class=\"review_list\">\r\n                                        <li class=\"list-inline-item\"><a href=\"#\"><i class=\"fa fa-star\"></i></a></li>\r\n                                        <li class=\"list-inline-item\"><a href=\"#\"><i class=\"fa fa-star\"></i></a></li>\r\n                                        <li class=\"list-inline-item\"><a href=\"#\"><i class=\"fa fa-star\"></i></a></li>\r\n                                        <li class=\"list-inline-item\"><a href=\"#\"><i class=\"fa fa-star\"></i></a></li>\r\n                                        <li class=\"list-inline-item\"><a href=\"#\"><i class=\"fa fa-star-o\"></i></a></li>\r\n                                    </ul>\r\n                                </div>\r\n                                <ul class=\"freelancer_place mt25 float-right fn-xsd tac-xsd\">\r\n                                    <li class=\"list-inline-item\"><a href=\"#\"><span class=\"flaticon-location-pin\"></span> Istanbul</a></li>\r\n                                    <li class=\"list-inline-item\"><a href=\"#\"><button class=\"btn btn-thm\">Hire</button></a></li>\r\n                                </ul>\r\n                            </div>\r\n                            <div class=\"candidate_list_view style3 mb50\">\r\n                                <div class=\"thumb\">\r\n                                    <img class=\"img-fluid rounded-circle\" src=\"images/team/c4.jpg\" alt=\"c4.jpg\">\r\n                                    <div class=\"cpi_av_rating\"><span>4.5</span></div>\r\n                                </div>\r\n                                <div class=\"content\">\r\n                                    <h4 class=\"title\">Peter KING<span class=\"verified text-thm pl10\"><i class=\"fa fa-check-circle\"></i></span></h4>\r\n                                    <p>iOS Expert + Node Dev</p>\r\n                                    <ul class=\"review_list\">\r\n                                        <li class=\"list-inline-item\"><a href=\"#\"><i class=\"fa fa-star\"></i></a></li>\r\n                                        <li class=\"list-inline-item\"><a href=\"#\"><i class=\"fa fa-star\"></i></a></li>\r\n                                        <li class=\"list-inline-item\"><a href=\"#\"><i class=\"fa fa-star\"></i></a></li>\r\n                                        <li class=\"list-inline-item\"><a href=\"#\"><i class=\"fa fa-star\"></i></a></li>\r\n                                        <li class=\"list-inline-item\"><a href=\"#\"><i class=\"fa fa-star-o\"></i></a></li>\r\n                                    </ul>\r\n                                </div>\r\n                                <ul class=\"freelancer_place mt25 float-right fn-xsd tac-xsd\">\r\n                                    <li class=\"list-inline-item\"><a href=\"#\"><span class=\"flaticon-location-pin\"></span> Istanbul</a></li>\r\n                                    <li class=\"list-inline-item\"><a href=\"#\"><button class=\"btn btn-thm\">Hire</button></a></li>\r\n                                </ul>\r\n                            </div>\r\n                            <div class=\"candidate_list_view style3\">\r\n                                <div class=\"thumb\">\r\n                                    <img class=\"img-fluid rounded-circle\" src=\"images/team/c2.jpg\">\r\n                                    <div class=\"cpi_av_rating\"><span>4.5</span></div>\r\n                                </div>\r\n                                <div class=\"content\">\r\n                                    <h4 class=\"title\">Nateila JOHN<span class=\"verified text-thm pl10\"><i class=\"fa fa-check-circle\"></i></span></h4>\r\n                                    <p>Front-End Developer</p>\r\n                                    <ul class=\"review_list\">\r\n                                        <li class=\"list-inline-item\"><a href=\"#\"><i class=\"fa fa-star\"></i></a></li>\r\n                                        <li class=\"list-inline-item\"><a href=\"#\"><i class=\"fa fa-star\"></i></a></li>\r\n                                        <li class=\"list-inline-item\"><a href=\"#\"><i class=\"fa fa-star\"></i></a></li>\r\n                                        <li class=\"list-inline-item\"><a href=\"#\"><i class=\"fa fa-star\"></i></a></li>\r\n                                        <li class=\"list-inline-item\"><a href=\"#\"><i class=\"fa fa-star-o\"></i></a></li>\r\n                                    </ul>\r\n                                </div>\r\n                                <ul class=\"freelancer_place mt25 float-right fn-xsd tac-xsd\">\r\n                                    <li class=\"list-inline-item\"><a href=\"#\"><span class=\"flaticon-location-pin\"></span> Istanbul</a></li>\r\n                                    <li class=\"list-inline-item\"><a href=\"#\"><button class=\"btn btn-thm\">Hire</button></a></li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-xl-4\">\r\n                        <div class=\"recent_job_activity\">\r\n                            <h4 class=\"title\">Activity</h4>\r\n                            <div class=\"grid\">\r\n                                <div class=\"color_bg float-left\"></div>\r\n                                <ul>\r\n                                    <li><span>Dobrick </span>published an article</li>\r\n                                    <li>2 hours ago</li>\r\n                                </ul>\r\n                            </div>\r\n                            <div class=\"grid\">\r\n                                <div class=\"color_bg two float-left\"></div>\r\n                                <ul>\r\n                                    <li><span>Stella </span>created an event</li>\r\n                                    <li>2 hours ago</li>\r\n                                </ul>\r\n                            </div>\r\n                            <div class=\"grid\">\r\n                                <div class=\"color_bg three float-left\"></div>\r\n                                <ul>\r\n                                    <li><span>Peter </span>submitted the reports</li>\r\n                                    <li>2 hours ago</li>\r\n                                </ul>\r\n                            </div>\r\n                            <div class=\"grid\">\r\n                                <div class=\"color_bg four float-left\"></div>\r\n                                <ul>\r\n                                    <li><span>Nateila </span>updated the docs</li>\r\n                                    <li>2 hours ago</li>\r\n                                </ul>\r\n                            </div>\r\n                            <div class=\"grid\">\r\n                                <div class=\"color_bg float-left\"></div>\r\n                                <ul>\r\n                                    <li><span>Dobrick </span>published an article</li>\r\n                                    <li>2 hours ago</li>\r\n                                </ul>\r\n                            </div>\r\n                            <div class=\"grid mb0\">\r\n                                <div class=\"color_bg two float-left\"></div>\r\n                                <ul>\r\n                                    <li><span>Stella </span>created an event</li>\r\n                                    <li>2 hours ago</li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\n\r\n@Component({\r\n  selector: 'app-employer-menu',\r\n  templateUrl: './employer-menu.component.html',\r\n  styleUrls: ['./employer-menu.component.css']\r\n})\r\nexport class EmployerMenuComponent implements OnInit {\r\n\r\n  userName: string;\r\n  @Input() pageName: string = \"\";\r\n  constructor(  protected BLServiceLoginUser: ServiceLoginUser) { \r\n    this.userName = this.BLServiceLoginUser.userName;\r\n    this.BLServiceLoginUser.UserNameChanged.subscribe(obj => {\r\n      this.userName = obj;\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"user_profile\">\r\n    <div class=\"media\">\r\n        <img src=\"/assets/images/team/e1.png\" class=\"align-self-start mr-3 rounded-circle\" alt=\"e1.png\">\r\n        <div class=\"media-body\">\r\n            <h5 class=\"mt-0\">{{'HomeHi' | translate }} {{userName}}</h5>\r\n            <!-- <p>Bothell, WA, USA</p> -->\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"dashbord_nav_list\">\r\n    <ul>\r\n        <!-- <li class=\"{{pageName.toLocaleLowerCase() == 'dashboard' ? 'active' : ''}}\"><a routerLink=\"/Employer/Dashboard\"><span class=\"flaticon-dashboard\"></span>Dashboard</a></li> -->\r\n        <li class=\"{{pageName.toLocaleLowerCase() == 'managemyjobs' ? 'active' : ''}}\"><a routerLink=\"/Employer/ManageMyJobs\"><span class=\"flaticon-paper-plane\"></span>{{'EmployerDashboardManageJobs' | translate }}</a></li>\r\n        <li class=\"{{pageName.toLocaleLowerCase() == 'postjob' ? 'active' : ''}}\"><a routerLink=\"/Employer/PostJob\"><span class=\"flaticon-resume\"></span>{{'EmployerDashboardNewJob' | translate }}</a></li>\r\n        <li class=\"{{pageName.toLocaleLowerCase() == 'managecompany' ? 'active' : ''}}\"><a routerLink=\"/Employer/ManageMyCompanies\"><span class=\"flaticon-analysis\"></span>{{'EmployerDashboardManageCompanies' | translate }}</a></li>\r\n        <li class=\"{{pageName.toLocaleLowerCase() == 'profile' ? 'active' : ''}}\"><a routerLink=\"/Employer/Profile\"><span class=\"flaticon-profile\"></span>{{'EmployerDashboardAddCompany' | translate }}</a></li>\r\n        <li class=\"{{pageName.toLocaleLowerCase() == 'shortlist' ? 'active' : ''}}\"><a routerLink=\"/Employer/ShortListResumes\"><span class=\"flaticon-favorites\"></span> {{'EmployerDashboardShortlistedResumes' | translate }}</a></li>\r\n    </ul>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ServiceCompany } from 'src/app/services/service-company.service';\r\nimport { cCompanyList, cCompanyItem } from 'src/app/interface/Response/Company.class';\r\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\r\nimport { Page } from 'src/app/common/pagination/page';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { CustomPaginationService } from 'src/app/common/pagination/services/custom-pagination.service';\r\nimport { CompanyEmployers } from 'src/app/interface/Response/CompanyEmployer.class';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ConfirmationDialogService } from 'src/app/common/confirmation-dialog/confirmation-dialog.service';\r\nimport { ServiceUserProfile } from 'src/app/services/userprofile.service';\r\nimport { cUserProfileItem } from 'src/app/interface/Response/UserProfile.class';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-employer-my-companies',\r\n  templateUrl: './employer-my-companies.component.html',\r\n  styleUrls: ['./employer-my-companies.component.css']\r\n})\r\nexport class EmployerMyCompaniesComponent extends baseComponent implements OnInit {\r\n\r\n  pageTitle: string = 'My Companies';\r\n  lstResult: cCompanyList;\r\n  message: ShowMessage = new ShowMessage();\r\n  filtertxt: string = '';\r\n  page: Page<cCompanyItem> = new Page();\r\n  modelCompnayId: string;\r\n  modellstCompanyEmployer: CompanyEmployers[];\r\n  objUser : cUserProfileItem;\r\n\r\n  constructor(private router: Router,\r\n    private BLService: ServiceCompany,\r\n    private BLUserProfile: ServiceUserProfile,\r\n    private paginationService: CustomPaginationService,\r\n    private confirmationDialogService: ConfirmationDialogService,\r\n    private modalService: NgbModal,\r\n    BLServiceShowMessage: ServiceShowMessage,\r\n    BLServiceLoginUser: ServiceLoginUser,BLTranslate: TranslateService,) {\r\n    super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadData();\r\n    this.BLUserProfile.GetMyUser().subscribe({\r\n      next: lst => {\r\n        this.objUser = lst;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  \r\n  private loadData(): void {\r\n    this.BLService.getAll(this.page.pageable.pageCurrent, this.filtertxt).subscribe({\r\n      next: lst => {\r\n        this.lstResult = lst;\r\n        this.page.pageable.pageSize = lst.pageSize;\r\n        this.page.totalElements = lst.totalCount;\r\n        this.page.content = lst.lstResult;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  public getNextPage(): void {\r\n    this.page.pageable = this.paginationService.getNextPage(this.page);\r\n    this.loadData();\r\n  }\r\n\r\n  public getPreviousPage(): void {\r\n    this.page.pageable = this.paginationService.getPreviousPage(this.page);\r\n    this.loadData();\r\n  }\r\n  public getloadPageCurrent(): void {\r\n    this.loadData();\r\n  }\r\n  setActivate(Id: string): void {\r\n    this.confirmationDialogService.confirmActivation()\r\n      .then((confirmed) => {\r\n        if (!confirmed)\r\n          return;\r\n        this.BLService.setActivate(Id).subscribe({\r\n          next: response => {\r\n            this.message.Success(\"Activated successfully.\");\r\n            this.BLServiceShowMessage.sendMessage(this.message);\r\n            this.loadData();\r\n          },\r\n          error: err => this.message.Error(err)\r\n        });\r\n      });\r\n  }\r\n  setDeActivate(Id: string): void {\r\n    this.confirmationDialogService.confirmDeactivation()\r\n      .then((confirmed) => {\r\n        if (!confirmed)\r\n          return;\r\n        this.BLService.setDeActivate(Id).subscribe({\r\n          next: response => {\r\n            this.message.Success(\"Deactivated successfully.\");\r\n            this.BLServiceShowMessage.sendMessage(this.message);\r\n            this.loadData();\r\n          },\r\n          error: err => this.message.Error(err)\r\n        });\r\n      });\r\n  }\r\n  filterbtn() {\r\n    this.loadData();\r\n  }\r\n  createBtn() {\r\n    this.router.navigate(['Employer/Profile']);\r\n  }\r\n  onEdit(Id: string) {\r\n    this.router.navigate(['Employer/Profile/' + Id]);\r\n  }\r\n  onView(Id:string){\r\n    this.router.navigate(['Employer/Company/' + Id]);\r\n  }\r\n  AssignEmployer(content, Id:string): void {\r\n    this.modelCompnayId = Id;\r\n    this.getCompanyEmployers();\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  OnSelectEmployer(UserId: string): void {\r\n    this.BLService.AddEmployer(UserId,this.modelCompnayId).subscribe({\r\n      next: response => {\r\n        this.message.Success(\"Employer added successfully.\");\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.getCompanyEmployers();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n   getCompanyEmployers(){\r\n    this.BLService.ListCompanyEmployers(this.modelCompnayId).subscribe({\r\n      next: lst => {\r\n        this.modellstCompanyEmployer = lst;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n   RemoveEmployer(Id:string ){\r\n    this.BLService.RemoveEmployer(Id,this.modelCompnayId).subscribe({\r\n      next: response => {\r\n        this.message.Success(\"Employer removed successfully.\");\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.getCompanyEmployers();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n}\r\n","<section class=\"cnddte_fvrt our-dashbord dashbord\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12 col-lg-4 col-xl-3 dn-smd\">\r\n                <app-employer-menu [pageName]=\"'managecompany'\"></app-employer-menu>\r\n            </div>\r\n            <div class=\"col-sm-12 col-lg-8 col-xl-9\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-lg-12\">\r\n                        <h4 class=\"mb30\">{{'EmployerMyCompanyYouManaging' | translate }}<b>{{objUser?.MyCompanies?.length}}</b> {{'EmployerMyCompanyCompanies' | translate }}</h4>\r\n                    </div>\r\n                    <div class=\"col-sm-6 col-lg-6\">\r\n                        <div class=\"candidate_revew_select\" >\r\n                            <mat-form-field class=\"w-75\">\r\n                                <mat-label>{{'EmployerMyCompanySearchfor' | translate }}</mat-label>\r\n                                <input type=\"text\" placeholder=\"{{'EmployerMyCompanySearchBy' | translate }}\" matInput\r\n                                    [(ngModel)]=\"filtertxt\">\r\n                            </mat-form-field>\r\n                            <input type=\"submit\" value=\"{{'GenericSubmit' | translate }}\" class=\"btn btn-thm\" (click)=\"filterbtn()\">\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-6 col-lg-6\">\r\n                        <div class=\"candidate_job_alart_btn text-right\">\r\n                            <input type=\"button\" class=\"pull-right btn btn-orange\" value=\"{{'GenericCreateNew' | translate }}\"\r\n                            (click)=\"createBtn()\">\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-12\"><hr></div>\r\n\r\n                    <div *ngFor=\"let item of page.content\" class=\"col-sm-6 col-lg-6 col-xl-4 mt30\">\r\n                        <div class=\"col-lg-12 text-center\">\r\n                            <ul class=\"view_edit_delete_list \">\r\n                                <li class=\"list-inline-item padding5 bg-orange\"><a (click)=\"onView(item._id)\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"{{'GenericView' | translate }}\"><span class=\"flaticon-eye\"></span></a></li>\r\n                                <li class=\"list-inline-item padding5 bg-blue\"><a (click)=\"onEdit(item._id)\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"{{'GenericEdit' | translate }}\"><span class=\"flaticon-edit\"></span></a></li>\r\n                                <li *ngIf=\"item.IsActive\" class=\"list-inline-item padding5 bg-red\"><a (click)=\"setDeActivate(item._id)\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"{{'GenericDeactivate' | translate }}\"><span class=\"flaticon-rubbish-bin\"></span></a></li>\r\n                                <li *ngIf=\"!item.IsActive\" class=\"list-inline-item padding5 bg-green\"><a (click)=\"setActivate(item._id)\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"{{'GenericActivate' | translate }}\"><span class=\"flaticon-unlocked\"></span></a></li>\r\n                                <li class=\"list-inline-item padding5 bg-yellow\"><a (click)=\"AssignEmployer(content,item._id)\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"{{'EmployerMyCompanyAssign' | translate }}\"><span class=\"flaticon-manager\"></span></a></li>\r\n                                <li *ngIf=\"item.IsApproved\" class=\"list-inline-item padding5 bg-green\"><a data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"{{'GenericApprove' | translate }}\"><span class=\"flaticon-tickMark\"></span></a></li>\r\n                            </ul>\r\n                        </div>\r\n                        <div class=\"employe_grid {{item.IsActive ? 'bg-green' : 'bg-red'}} text-center\">\r\n                            <div class=\"thumb\">\r\n                                \r\n                                <img src=\"{{item?.CompanyLogo}}\" >\r\n                            </div>\r\n                            <div class=\"details\">\r\n                                <h4>{{item.Name}}</h4>\r\n                                <p class=\"text-thm2\">{{item.Industry.Name == '' ? \"'EmployerMyCompanyNoIndustry' | translate\" : item.Industry.Name}}</p>\r\n                                <p><span class=\"flaticon-location-pin\"></span> {{item.Country.Name + ', ' + item.City.Name }}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-lg-12\">\r\n                        <app-custom-pagination [page]=\"page\" (nextPageEvent)=\"getNextPage()\"\r\n                        (previousPageEvent)=\"getPreviousPage()\" (loadPageCurrentEvent)=\"getloadPageCurrent()\">\r\n                        </app-custom-pagination>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n<div>\r\n    <ng-template role=\"dialog\" #content let-modal class=\"modal fade\">\r\n        <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header white-text text-center\">\r\n\r\n                    <h6 class=\"modal-title\">\r\n                        {{'EmployerMyCompanyAddOther' | translate }}\r\n                    </h6>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n\r\n                    <div>\r\n                        <app-search-employer (OnSelect)='OnSelectEmployer($event)'></app-search-employer>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <table class='table'\r\n                      *ngIf='modellstCompanyEmployer && modellstCompanyEmployer.length'>\r\n                      <thead>\r\n                        <tr>\r\n                          <th>{{'GenericName' | translate }}</th>\r\n                          <th>{{'GenericAction' | translate }}</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        <tr *ngFor='let obj of modellstCompanyEmployer'>\r\n                          <td>{{ obj.Name }}\r\n                          </td>\r\n                          <td>\r\n                            <input type=\"button\" class=\"btn btn-danger\" value=\"{{'GenericRemove' | translate }}\"\r\n                              (click)=\"RemoveEmployer(obj._id)\">\r\n                          </td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                <div class=\"modal-footer\">\r\n                    <button type=\"button\" class=\"btn border-green btn-transparent\"\r\n                        (click)=\"modal.close()\">{{'GenericClose' | translate }}</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </ng-template>\r\n</div>\r\n","import { Component, OnInit, AfterViewInit } from '@angular/core';\r\nimport { ModelJob } from 'src/app/interface/Model/ModelJob.class';\r\nimport { cGenericIdNameItem, cGenericSubItem } from 'src/app/interface/Response/GenericIdName.class';\r\nimport { cJobItem } from 'src/app/interface/Response/Job.class';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { ServiceIndustry } from 'src/app/services/industry.service';\r\nimport { ServiceCountry } from 'src/app/services/country.service';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { ServiceJob } from 'src/app/services/job.service';\r\nimport { ServiceQualification } from 'src/app/services/qualification.service';\r\nimport { ServiceYearsOfExperience } from 'src/app/services/years-of-experience.service';\r\nimport { ServiceJobFields } from 'src/app/services/job-fields.service';\r\nimport { ServiceUserProfile } from 'src/app/services/userprofile.service';\r\nimport { cUserProfileItem } from 'src/app/interface/Response/UserProfile.class';\r\nimport { NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgForm } from '@angular/forms';\r\nimport { JobStatus } from 'src/app/Enum/JobStatus.enum';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-employer-post-job',\r\n  templateUrl: './employer-post-job.component.html',\r\n  styleUrls: ['./employer-post-job.component.css']\r\n})\r\nexport class EmployerPostJobComponent extends baseComponent implements OnInit, AfterViewInit {\r\n\r\n  modelObj: ModelJob = new ModelJob();\r\n  LkupCountry: cGenericIdNameItem[];\r\n  LkupCity: cGenericSubItem[];\r\n  LkupIndustry: cGenericSubItem[];\r\n  LkupQualification: cGenericSubItem[];\r\n  LkupExperience: cGenericSubItem[];\r\n  LkupJobField: cGenericIdNameItem[];\r\n  LkupJobSubField: cGenericSubItem[];\r\n  modelIsCreate: boolean;\r\n  objJob: cJobItem = new cJobItem();\r\n  JobId: string;\r\n  userProfile: cUserProfileItem;\r\n  modelEndDate: NgbDateStruct;\r\n  todayDate: Date = new Date();\r\n\r\n  constructor(private BLCountry: ServiceCountry,\r\n    private BLIndustry: ServiceIndustry,\r\n    private BLQualification: ServiceQualification,\r\n    private BLExperience: ServiceYearsOfExperience,\r\n    private BLJobFields: ServiceJobFields,\r\n    private BLUserProfile: ServiceUserProfile,\r\n    private BLJob: ServiceJob,\r\n    BLServiceShowMessage: ServiceShowMessage,\r\n    BLServiceLoginUser: ServiceLoginUser, BLTranslate: TranslateService,\r\n    private router: Router,\r\n    private route: ActivatedRoute) {\r\n    super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\r\n  }\r\n  MapToModel(obj: cJobItem) {\r\n    this.modelObj.Address = obj.Address;\r\n    this.modelObj.CityId = obj.City._id;\r\n    this.modelObj.CountryId = obj.Country._id;\r\n    this.modelObj.IndustryId = obj.Industry._id;\r\n    this.modelObj.JobFieldId = obj.JobField._id;\r\n    this.modelObj.JobSubFieldId = obj.JobSubField._id;\r\n    this.modelObj.QualificationId = obj.Qualification._id;\r\n    this.modelObj.ExperienceId = obj.Experience._id;\r\n    this.modelObj.Name = obj.Name;\r\n    this.modelObj._id = obj._id;\r\n    this.modelObj.CompanyId = obj.Company._id;\r\n    this.modelObj.Deadline = obj.Deadline;\r\n    this.modelObj.Description = obj.Description;\r\n    this.modelObj.Skills = obj.Skills;\r\n    this.modelObj.Benefits = obj.Benefits;\r\n    this.modelObj.Gender = obj.Gender;\r\n    this.modelObj.Type = obj.Type;\r\n    this.modelObj.Remuneration = obj.Remuneration;\r\n\r\n    var d = new Date(this.modelObj.Deadline);\r\n    this.modelEndDate = {\r\n      year: d.getUTCFullYear(), month: d.getUTCMonth() + 1\r\n      , day: d.getUTCDate()\r\n    };\r\n  }\r\n  ngAfterViewInit() {\r\n\r\n  }\r\n  LoadJob() {\r\n    this.BLJob.getGetByid(this.JobId).subscribe({\r\n      next: obj => {\r\n        this.objJob = obj;\r\n        this.MapToModel(obj);\r\n      },\r\n      error: err => {\r\n        this.message.Error(err);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n      }\r\n    });\r\n  }\r\n  ngOnInit(): void {\r\n    this.modelIsCreate = true;\r\n    const param = this.route.snapshot.paramMap.get('Id');\r\n    if (param) {\r\n      this.modelIsCreate = false;\r\n      this.JobId = param;\r\n      this.LoadJob();\r\n    }\r\n    this.BLUserProfile.GetMyUser().subscribe({\r\n      next: obj => {\r\n        this.userProfile = obj;\r\n        this.userProfile.MyCompanies = this.userProfile.MyCompanies.filter(x=>x.IsApproved == true);\r\n      },\r\n      error: err => {\r\n        this.message.Error(err);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n      }\r\n    });\r\n    this.BLCountry.getListActive().subscribe({\r\n      next: lst => {\r\n        this.LkupCountry = lst;\r\n        this.onCountrySelect();\r\n      },\r\n      error: err => {\r\n        this.message.Error(err);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n      }\r\n    });\r\n    this.BLIndustry.getListActive().subscribe({\r\n      next: lst => {\r\n        this.LkupIndustry = lst;\r\n      },\r\n      error: err => {\r\n        this.message.Error(err);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n      }\r\n    });\r\n    this.BLQualification.getListActive().subscribe({\r\n      next: lst => {\r\n        this.LkupQualification = lst;\r\n      },\r\n      error: err => {\r\n        this.message.Error(err);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n      }\r\n    });\r\n    this.BLExperience.getListActive().subscribe({\r\n      next: lst => {\r\n        this.LkupExperience = lst;\r\n      },\r\n      error: err => {\r\n        this.message.Error(err);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n      }\r\n    });\r\n    this.BLJobFields.getListActive().subscribe({\r\n      next: lst => {\r\n        this.LkupJobField = lst;\r\n        this.onJobFieldSelect();\r\n      },\r\n      error: err => {\r\n        this.message.Error(err);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n      }\r\n    });\r\n  }\r\n  onCountrySelect() {\r\n    this.LkupCity = [];\r\n\r\n    var sub = this.LkupCountry?.find(x => x._id == this.modelObj.CountryId)?.subItems;\r\n    if (!sub || sub.length == 0)\r\n      return;\r\n\r\n    this.LkupCity = sub.filter(y => y.IsActive == true).sort((a, b) => a.Name.localeCompare(b.Name));\r\n  }\r\n  onJobFieldSelect() {\r\n    this.LkupJobSubField = [];\r\n\r\n    var sub = this.LkupJobField?.find(x => x._id == this.modelObj.JobFieldId)?.subItems;\r\n    if (!sub || sub.length == 0)\r\n      return;\r\n\r\n    this.LkupJobSubField = sub.filter(y => y.IsActive == true).sort((a, b) => a.Name.localeCompare(b.Name));\r\n  }\r\n  onEndDateSelect(param) {\r\n    this.modelObj.Deadline = new Date(param.year, param.month - 1, param.day);\r\n  }\r\n  onCancel() {\r\n    this.router.navigate(['Employer/ManageMyJobs']);\r\n  }\r\n  SaveDraft(modelForm: NgForm) {\r\n    // if (!modelForm.valid)\r\n    //   return;\r\n\r\n    if (this.modelIsCreate) {\r\n      this.BLJob.create(this.modelObj).subscribe({\r\n        next: response => {\r\n          \r\n          this.message.Success(\"Saved successfully.\");\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.router.navigate(['Employer/PostJob/' + response]);\r\n          //this.router.navigate(['Employer/ManageMyJobs']);\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n    else {\r\n      this.BLJob.updateDraft(this.modelObj).subscribe({\r\n        next: response => {\r\n          this.message.Success(\"Saved successfully.\");\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.router.navigate(['Employer/ManageMyJobs']);\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n  }\r\n  SaveDraftPublish(modelForm: NgForm) {\r\n    if (!modelForm.valid || !this.modelIsCreate)\r\n      return;\r\n    this.BLJob.updateDraftPublish(this.modelObj).subscribe({\r\n      next: response => {\r\n        this.message.Success(\"Saved successfully and sent to admin for approval.\");\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.router.navigate(['Employer/ManageMyJobs']);\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  SavePublish(modelForm: NgForm) {\r\n    if (!modelForm.valid || this.modelIsCreate)\r\n      return;\r\n    this.BLJob.updatePublish(this.modelObj).subscribe({\r\n      next: response => {\r\n        this.message.Success(\"Saved successfully and sent to admin for approval.\");\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.router.navigate(['Employer/ManageMyJobs']);\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  CanSaveDraft() {\r\n    return true;\r\n    //return this.objJob.Status != JobStatus.Closed\r\n  }\r\n  CanSavePublish() {\r\n    return !this.modelIsCreate //&& this.objJob.Status != JobStatus.Closed\r\n  }\r\n  CanSaveDraftPublish(){\r\n    return this.modelIsCreate //&& this.objJob.Status != JobStatus.Closed\r\n  }\r\n}\r\n","<section class=\"our-dashbord dashbord\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12 col-lg-4 col-xl-3 dn-smd\">\r\n                <app-employer-menu [pageName]=\"'postjob'\"></app-employer-menu>\r\n            </div>\r\n            <div class=\"col-sm-12 col-lg-8 col-xl-9\">\r\n                <div class=\"my_profile_form_area\">\r\n                    <form novalidate #modelForm=\"ngForm\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-lg-12\">\r\n                                <h4 class=\"fz20 mb20\">{{'EmployerPostJobPageTitle' | translate }}</h4>\r\n                            </div>\r\n                            <div class=\"col-lg-12 mt30\">\r\n                                <div class=\"my_profile_thumb_edit\"></div>\r\n                            </div>\r\n                            <div class=\"col-lg-6\">\r\n                                <div class=\"my_profile_input form-group\">\r\n                                    <label for=\"formGroupExampleInput1\">{{'EmployerPostJobTitle' | translate }}*</label>\r\n                                    <input type=\"text\" class=\"form-control\" id=\"formGroupExampleInput1\"\r\n                                        [(ngModel)]=\"modelObj.Name\" required #modelNameVar=\"ngModel\" name=\"modelName\"\r\n                                        [ngClass]=\"{'is-invalid': (modelNameVar.touched || modelNameVar.dirty) && !modelNameVar.valid }\"\r\n                                        placeholder=\"{{'EmployerPostJobTitleEnter' | translate }}\">\r\n                                    <div class=\"valError\" *ngIf=\"modelNameVar.touched && modelNameVar.errors?.required\">\r\n                                        {{'EmployerPostJobTitleError' | translate }}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-lg-6\">\r\n                                <div class=\"my_profile_input form-group\">\r\n                                    <label for=\"formGroupExampleInput2\">{{'EmployerPostJobCompany' | translate }}*</label>\r\n                                    <select class=\"browser-default custom-select\" data-actions-box=\"true\"\r\n                                        [(ngModel)]=\"modelObj.CompanyId\" required #modelCompanyVar=\"ngModel\"\r\n                                        name=\"modelCompany\"\r\n                                        [ngClass]=\"{'is-invalid': (modelCompanyVar.touched || modelCompanyVar.dirty) && !modelCompanyVar.valid }\">\r\n                                        <option value=\"-1\">{{'EmployerPostJobCompanySelect' | translate }}</option>\r\n                                        <option *ngFor=\"let item of userProfile?.MyCompanies\" value=\"{{item._id}}\">\r\n                                            {{item.Name}}\r\n                                        </option>\r\n                                    </select>\r\n                                    <div class=\"valError\"\r\n                                        *ngIf=\"modelCompanyVar.touched && modelCompanyVar.errors?.required\">{{'EmployerPostJobCompanyError' | translate }}\r\n                                       </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-lg-12\">\r\n                                <div class=\"my_resume_textarea\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"exampleFormControlTextarea1\">{{'EmployerPostJobResponsibilities' | translate }}*</label>\r\n                                        <angular-editor  class=\"editor\" [config]=\"textEditorConfig\" [placeholder]=\"'EmployerPostJobResponsibilitiesEnter' | translate\" required minlength=\"100\"\r\n                                        #modelDescription=\"ngModel\" name=\"modelDescription\"\r\n                                        [ngClass]=\"{'is-invalid': (modelDescription.touched || modelDescription.dirty) && !modelDescription.valid }\"\r\n                                        [(ngModel)]=\"modelObj.Description\"></angular-editor>\r\n                                    <div class=\"valError\" *ngIf=\"modelDescription.touched && modelDescription.errors?.required\">\r\n                                        {{'EmployerPostJobResponsibilitiesError' | translate }}</div>\r\n                                    </div>\r\n                                    <div class=\"valErrorTextArea\"\r\n                                            *ngIf=\"modelDescription.touched && modelDescription.errors?.minlength?.requiredLength >  +modelDescription.errors?.minlength?.actualLength\">\r\n                                            {{'EmployerPostJobResponsibilitiesErrorLength' | translate }}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-lg-12\">\r\n                                <div class=\"my_resume_textarea\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"exampleFormControlTextarea1\">{{'EmployerPostJobSkills' | translate }}*</label>\r\n                                        <angular-editor  class=\"editor\" [config]=\"textEditorConfig\" [placeholder]=\"'EmployerPostJobSkillsEnter' | translate\" required minlength=\"100\"\r\n                                        #modelSkills=\"ngModel\" name=\"modelSkills\"\r\n                                        [ngClass]=\"{'is-invalid': (modelSkills.touched || modelSkills.dirty) && !modelSkills.valid }\"\r\n                                        [(ngModel)]=\"modelObj.Skills\"></angular-editor>\r\n                                    <div class=\"valError\" *ngIf=\"modelSkills.touched && modelSkills.errors?.required\">\r\n                                        {{'EmployerPostJobSkillsError' | translate }} </div>\r\n                                    </div>\r\n                                    <div class=\"valErrorTextArea\"\r\n                                            *ngIf=\"modelSkills.touched && +modelSkills.errors?.minlength?.requiredLength >  +modelSkills.errors?.minlength?.actualLength\">\r\n                                            {{'EmployerPostJobSkillsErrorLength' | translate }}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-lg-12\">\r\n                                <div class=\"my_resume_textarea\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"exampleFormControlTextarea1\">{{'EmployerPostJobBenefits' | translate }}*</label>\r\n                                        <angular-editor  class=\"editor\" [config]=\"textEditorConfig\" [placeholder]=\"'EmployerPostJobBenefitsEnter' | translate\" required minlength=\"100\"\r\n                                        #modelBenefits=\"ngModel\" name=\"modelBenefits\"\r\n                                        [ngClass]=\"{'is-invalid': (modelBenefits.touched || modelBenefits.dirty) && !modelBenefits.valid }\"\r\n                                        [(ngModel)]=\"modelObj.Benefits\"></angular-editor>\r\n                                    <div class=\"valError\" *ngIf=\"modelBenefits.touched && modelBenefits.errors?.required\">\r\n                                        {{'EmployerPostJobBenefitsError' | translate }}</div>\r\n                                    </div>\r\n                                    <div class=\"valErrorTextArea\"\r\n                                            *ngIf=\"modelBenefits.touched && +modelBenefits.errors?.minlength?.requiredLength >  +modelBenefits.errors?.minlength?.actualLength\">\r\n                                            {{'EmployerPostJobBenefitsLength' | translate }}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-6 col-lg-6\">\r\n                                <div class=\"my_profile_select_box form-group\">\r\n                                    <label for=\"formGroupExampleInput1\">{{'EmployerPostJobType' | translate }}*</label><br>\r\n                                    <select class=\"browser-default custom-select\" data-actions-box=\"true\"\r\n                                        [(ngModel)]=\"modelObj.Type\" required #modelJobTypeVar=\"ngModel\"\r\n                                        name=\"modelJobType\"\r\n                                        [ngClass]=\"{'is-invalid': (modelJobTypeVar.touched || modelJobTypeVar.dirty) && !modelJobTypeVar.valid }\">\r\n                                        <option value=\"-1\">{{'EmployerPostJobTypeSelect' | translate }}</option>\r\n                                        <option value=\"1\">{{'EmployerPostJobTypeFull' | translate }}</option>\r\n                                        <option value=\"2\">{{'EmployerPostJobTypePart' | translate }}</option>\r\n                                        <option value=\"3\">{{'EmployerPostJobFreelance' | translate }}</option>\r\n                                    </select>\r\n                                    <div class=\"valError\"\r\n                                        *ngIf=\"modelJobTypeVar.touched && modelJobTypeVar.errors?.required\">\r\n                                        {{'EmployerPostJobTypeError' | translate }}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-6 col-lg-6\">\r\n                                <div class=\"my_profile_input form-group\">\r\n                                    <label for=\"formGroupExampleInputDate\">{{'EmployerPostJobDeadline' | translate }}*</label>\r\n                                    <div class=\"input-group ZeroBoxShadow\">\r\n                                        <input class=\"form-control\" placeholder=\"dd-mm-yyyy\" readonly name=\"dp\" \r\n                                            (dateSelect)=\"onEndDateSelect($event)\" [(ngModel)]=\"modelEndDate\"  [minDate]=\"dateToday\"\r\n                                            ngbDatepicker #d=\"ngbDatepicker\">\r\n                                        <div class=\"input-group-append calenderHeight\">\r\n                                            <button class=\"btn calcender\" (click)=\"d.toggle()\" type=\"button\"><i\r\n                                                    class=\"fa fa-calendar\" aria-hidden=\"true\"></i></button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-6 col-lg-6\">\r\n                                <div class=\"my_profile_select_box form-group\">\r\n                                    <label for=\"formGroupExampleInput1\">{{'EmployerPostJobField' | translate }}*</label><br>\r\n                                    <select class=\"browser-default custom-select\" [(ngModel)]=\"modelObj.JobFieldId\"\r\n                                        required #modelJobFieldVar=\"ngModel\" name=\"modelJobField\"\r\n                                        [ngClass]=\"{'is-invalid': (modelJobFieldVar.touched || modelJobFieldVar.dirty) && (!modelJobFieldVar.valid || modelObj.JobFieldId == '' || modelObj.JobFieldId == '-1') }\"\r\n                                        (change)=\"onJobFieldSelect()\">\r\n                                        <option value=\"-1\">{{'EmployerPostJobFieldSelect' | translate }}</option>\r\n                                        <option *ngFor=\"let item of LkupJobField\" value=\"{{item._id}}\">{{item.Name}}\r\n                                        </option>\r\n                                    </select>\r\n                                    <div class=\"valErrorSelect\"\r\n                                        *ngIf=\"modelJobFieldVar.touched && (modelJobFieldVar.errors?.required || modelObj.JobFieldId == '' || modelObj.JobFieldId == '-1')\">\r\n                                        {{'EmployerPostJobFieldError' | translate }}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-6 col-lg-6\">\r\n                                <div class=\"my_profile_select_box form-group\">\r\n                                    <label for=\"formGroupExampleInput1\">{{'EmployerPostJobSubField' | translate }}*</label><br>\r\n                                    <select class=\"browser-default custom-select\" [(ngModel)]=\"modelObj.JobSubFieldId\"\r\n                                        required #modelJobSubFieldVar=\"ngModel\" name=\"modelJobSubField\"\r\n                                        [ngClass]=\"{'is-invalid': (modelJobSubFieldVar.touched || modelJobSubFieldVar.dirty) && (!modelJobSubFieldVar.valid || modelObj.JobSubFieldId == '' || modelObj.JobSubFieldId == '-1') }\">\r\n                                        <option value=\"-1\">{{'EmployerPostJobSubFieldSelect' | translate }}</option>\r\n                                        <option *ngFor=\"let item of LkupJobSubField\" value=\"{{item._id}}\">{{item.Name}}\r\n                                        </option>\r\n                                    </select>\r\n                                    <div class=\"valErrorSelect\"\r\n                                        *ngIf=\"modelJobSubFieldVar.touched && (modelJobSubFieldVar.errors?.required || modelObj.JobSubFieldId == '' || modelObj.JobSubFieldId == '-1')\">\r\n                                        {{'EmployerPostJobSubFieldError' | translate }}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-6 col-lg-6\">\r\n                                <div class=\"my_profile_select_box form-group\">\r\n                                    <label for=\"formGroupExampleInput1\">{{'EmployerPostJobExperience' | translate }}*</label><br>\r\n                                    <select class=\"browser-default custom-select\" data-actions-box=\"true\"\r\n                                        [(ngModel)]=\"modelObj.ExperienceId\" required #modelExperienceVar=\"ngModel\"\r\n                                        name=\"modelExperience\"\r\n                                        [ngClass]=\"{'is-invalid': (modelExperienceVar.touched || modelExperienceVar.dirty) && !modelExperienceVar.valid }\">\r\n                                        <option value=\"-1\">{{'EmployerPostJobExperienceEnter' | translate }}</option>\r\n                                        <option *ngFor=\"let item of LkupExperience\" value=\"{{item._id}}\">{{item.Name}}\r\n                                        </option>\r\n                                    </select>\r\n                                    <div class=\"valError\"\r\n                                        *ngIf=\"modelExperienceVar.touched && modelExperienceVar.errors?.required\">\r\n                                        {{'EmployerPostJobExperienceError' | translate }}</div>\r\n                                </div>\r\n                            </div>\r\n                            <!-- <div class=\"col-md-6 col-lg-6\">\r\n                                <div class=\"my_profile_select_box form-group\">\r\n                                    <label for=\"formGroupExampleInput1\">{{'EmployerPostJobGender' | translate }}*</label><br>\r\n                                    <select class=\"browser-default custom-select\" data-actions-box=\"true\"\r\n                                        [(ngModel)]=\"modelObj.Gender\" required #modelGenderVar=\"ngModel\"\r\n                                        name=\"modelGender\"\r\n                                        [ngClass]=\"{'is-invalid': (modelGenderVar.touched || modelGenderVar.dirty) && !modelGenderVar.valid }\">\r\n                                        <option value=\"-1\">{{'EmployerPostJobGenderSelect' | translate }}</option>\r\n                                        <option value=\"1\">{{'EmployerPostJobGenderMale' | translate }}</option>\r\n                                        <option value=\"2\">{{'EmployerPostJobGenderFemale' | translate }}</option>\r\n                                        <option value=\"3\">{{'EmployerPostJobGenderBoth' | translate }}</option>\r\n                                    </select>\r\n                                    <div class=\"valError\"\r\n                                        *ngIf=\"modelGenderVar.touched && modelGenderVar.errors?.required\">\r\n                                        {{'EmployerPostJobGenderError' | translate }}</div>\r\n                                </div>\r\n                            </div> -->\r\n                            <div class=\"col-md-6 col-lg-6\">\r\n                                <div class=\"my_profile_select_box form-group\">\r\n                                    <label for=\"formGroupExampleInput1\">{{'EmployerPostJobIndustry' | translate }}*</label><br>\r\n                                    <select class=\"browser-default custom-select\" data-actions-box=\"true\"\r\n                                        [(ngModel)]=\"modelObj.IndustryId\" required #modelIndustryVar=\"ngModel\"\r\n                                        name=\"modelIndustry\"\r\n                                        [ngClass]=\"{'is-invalid': (modelIndustryVar.touched || modelIndustryVar.dirty) && !modelIndustryVar.valid }\">\r\n                                        <option value=\"-1\">{{'EmployerPostJobIndustrySelect' | translate }}</option>\r\n                                        <option *ngFor=\"let item of LkupIndustry\" value=\"{{item._id}}\">{{item.Name}}\r\n                                        </option>\r\n                                    </select>\r\n                                    <div class=\"valError\"\r\n                                        *ngIf=\"modelIndustryVar.touched && modelIndustryVar.errors?.required\">\r\n                                        {{'EmployerPostJobIndustryError' | translate }}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-6 col-lg-6\">\r\n                                <div class=\"my_profile_select_box form-group\">\r\n                                    <label for=\"formGroupExampleInput1\">{{'EmployerPostJobQualification' | translate }}*</label><br>\r\n                                    <select class=\"browser-default custom-select\" data-actions-box=\"true\"\r\n                                        [(ngModel)]=\"modelObj.QualificationId\" required #modelQualificationVar=\"ngModel\"\r\n                                        name=\"modelQualification\"\r\n                                        [ngClass]=\"{'is-invalid': (modelQualificationVar.touched || modelQualificationVar.dirty) && !modelQualificationVar.valid }\">\r\n                                        <option value=\"-1\">{{'EmployerPostJobQualificationSelect' | translate }}</option>\r\n                                        <option *ngFor=\"let item of LkupQualification\" value=\"{{item._id}}\">\r\n                                            {{item.Name}}\r\n                                        </option>\r\n                                    </select>\r\n                                    <div class=\"valError\"\r\n                                        *ngIf=\"modelQualificationVar.touched && modelQualificationVar.errors?.required\">\r\n                                        {{'EmployerPostJobQualificationError' | translate }}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-lg-6\">\r\n                                <div class=\"my_profile_input form-group\">\r\n                                    <label for=\"formGroupExampleInput1\">{{'JobRemuneration' | translate }}</label>\r\n                                    <input type=\"text\" class=\"form-control\" id=\"formGroupExampleInput1\"\r\n                                        [(ngModel)]=\"modelObj.Remuneration\"  #modelRemunerationVar=\"ngModel\" name=\"modelRemuneration\"\r\n                                        [ngClass]=\"{'is-invalid': (modelRemunerationVar.touched || modelRemunerationVar.dirty) && !modelRemunerationVar.valid }\"\r\n                                        placeholder=\"{{'EmployerPostJobRemunerationEnter' | translate }}\">\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-lg-12\">\r\n                                <h4 class=\"fz18 mb20\">{{'EmployerPostJobAddress' | translate }}</h4>\r\n                            </div>\r\n                            <div class=\"col-md-6 col-lg-6\">\r\n                                <div class=\"my_profile_select_box form-group\">\r\n                                    <label for=\"exampleFormControlInput9\">{{'EmployerPostJobCountry' | translate }}*</label><br>\r\n                                    <select class=\"browser-default custom-select\" [(ngModel)]=\"modelObj.CountryId\"\r\n                                        required #modelCountryVar=\"ngModel\" name=\"modelCountry\"\r\n                                        [ngClass]=\"{'is-invalid': (modelCountryVar.touched || modelCountryVar.dirty) && (!modelCountryVar.valid || modelObj.CountryId == '' || modelObj.CountryId == '-1') }\"\r\n                                        (change)=\"onCountrySelect()\">\r\n                                        <option value=\"-1\">{{'EmployerPostJobCountrySelect' | translate }}</option>\r\n                                        <option *ngFor=\"let item of LkupCountry\" value=\"{{item._id}}\">{{item.Name}}\r\n                                        </option>\r\n                                    </select>\r\n                                    <div class=\"valErrorSelect\"\r\n                                        *ngIf=\"modelCountryVar.touched && (modelCountryVar.errors?.required || modelObj.CountryId == '' || modelObj.CountryId == '-1')\">\r\n                                        {{'EmployerPostJobCountryError' | translate }}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-6 col-lg-6\">\r\n                                <div class=\"my_profile_select_box form-group\">\r\n                                    <label for=\"exampleFormControlInput9\">{{'EmployerPostJobCity' | translate }}*</label><br>\r\n                                    <select class=\"browser-default custom-select\" [(ngModel)]=\"modelObj.CityId\" required\r\n                                        #modelCityVar=\"ngModel\" name=\"modelCity\"\r\n                                        [ngClass]=\"{'is-invalid': (modelCityVar.touched || modelCityVar.dirty) && (!modelCityVar.valid || modelObj.CityId == '' || modelObj.CityId == '-1') }\">\r\n                                        <option value=\"-1\">{{'EmployerPostJobCitySelect' | translate }}</option>\r\n                                        <option *ngFor=\"let item of LkupCity\" value=\"{{item._id}}\">{{item.Name}}\r\n                                        </option>\r\n                                    </select>\r\n                                    <div class=\"valErrorSelect\"\r\n                                        *ngIf=\"modelCityVar.touched && (modelCityVar.errors?.required || modelObj.CityId == '' || modelObj.CityId == '-1')\">\r\n                                        {{'EmployerPostJobCityError' | translate }}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-lg-12\">\r\n                                <div class=\"my_resume_textarea\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"exampleFormControlTextarea2\">{{'EmployerPostJobFullddress' | translate }}</label>\r\n                                        <textarea class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\"\r\n                                            name=\"modelAddress\" [(ngModel)]=\"modelObj.Address\"\r\n                                            placeholder=\"{{'EmployerPostJobAddressEnter' | translate }}\"></textarea>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-lg-4\">\r\n                                <div class=\"my_profile_input\">\r\n                                    <button *ngIf=\"CanSaveDraft()\" class=\"btn btn-lg w-100 btn-thm\" (click)=\"SaveDraft(modelForm)\"\r\n                                        [title]=\"'EmployerPostJobDraftDesc' | translate\"\r\n                                        [disabled]=\"modelObj.Name == '' || modelObj.CompanyId == '-1' || modelObj.CompanyId == '' \">\r\n                                        {{'EmployerPostJobDraft' | translate }}</button>\r\n                                </div>\r\n                            </div>\r\n                            <div  class=\"col-lg-4\" >\r\n                                <div class=\"my_profile_input\">\r\n                                    <button *ngIf=\"CanSavePublish()\" class=\"btn btn-lg w-100 btn-orange\" (click)=\"SavePublish(modelForm)\"\r\n                                        [title]=\"modelForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\"\r\n                                        [disabled]=\"!modelForm.valid\">{{'EmployerPostJobPublish' | translate }}</button>\r\n                                    <button *ngIf=\"CanSaveDraftPublish()\" class=\"btn btn-lg w-100 btn-orange\" (click)=\"SaveDraftPublish(modelForm)\"\r\n                                        [title]=\"modelForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\"\r\n                                        [disabled]=\"!modelForm.valid\">{{'EmployerPostJobDraftPublish' | translate }}</button>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-lg-4 pull-right\">\r\n                                <div class=\"my_profile_input\">\r\n                                    <button class=\"btn btn-lg w-100 btn-transparent\" (click)=\"onCancel()\">{{'GenericCancel' | translate }}</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SharedModule } from '../common/sharedmodule.module';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FilterPipe } from '../core/pipe/filter.pipe';\r\nimport { EmployerDashboardComponent } from './employer-dashboard/employer-dashboard.component';\r\nimport { EmployerMenuComponent } from './employer-menu/employer-menu.component';\r\nimport { EmpoyerProfileComponent } from './empoyer-profile/empoyer-profile.component';\r\nimport { EmpoyerMyJobsComponent } from './empoyer-my-jobs/empoyer-my-jobs.component';\r\nimport { EmpoyerShortListResumesComponent } from './empoyer-short-list-resumes/empoyer-short-list-resumes.component';\r\nimport { EmployerPostJobComponent } from './employer-post-job/employer-post-job.component';\r\nimport { EmployerMyCompaniesComponent } from './employer-my-companies/employer-my-companies.component';\r\nimport { CompanyViewComponent } from './company-view/company-view.component';\r\nimport { JobViewComponent } from './job-view/job-view.component';\r\nimport { SearchComponent } from './search/search.component';\r\nimport { AppliedJobSeekersComponent } from './applied-job-seekers/applied-job-seekers.component';\r\nimport { CoreModule } from '../core/core.module';\r\nimport { FilterLPipe } from './filter.pipe';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    EmployerDashboardComponent,\r\n    EmployerMenuComponent,\r\n    EmpoyerProfileComponent,\r\n    EmpoyerMyJobsComponent,\r\n    EmpoyerShortListResumesComponent,\r\n    EmployerPostJobComponent,\r\n    EmployerMyCompaniesComponent,\r\n    CompanyViewComponent,\r\n    JobViewComponent,\r\n    SearchComponent,\r\n    AppliedJobSeekersComponent,\r\n    FilterLPipe,\r\n    \r\n    \r\n    // FilterPipe\r\n  ],\r\n  imports: [\r\n    SharedModule,\r\n    CoreModule,\r\n    // /JwPaginationModule,\r\n    // FilterPipe,\r\n    RouterModule.forRoot([\r\n      { path: 'Employer/Dashboard', component: EmployerDashboardComponent },\r\n      { path: 'Employer/Company/:Id', component: CompanyViewComponent },\r\n      { path: 'Employer/Profile', component: EmpoyerProfileComponent },\r\n      { path: 'Employer/Profile/:Id', component: EmpoyerProfileComponent },\r\n      { path: 'Employer/ManageMyCompanies', component: EmployerMyCompaniesComponent },\r\n      { path: 'Employer/PostJob', component: EmployerPostJobComponent },\r\n      { path: 'Employer/PostJob/:Id', component: EmployerPostJobComponent },\r\n      { path: 'Employer/Job/:Id', component: JobViewComponent, data:{PageName:\"home\"} },\r\n      { path: 'Employer/ManageMyJobs', component: EmpoyerMyJobsComponent,data:{PageName:\"home\"}  },\r\n      { path: 'Employer/ShortListResumes', component: EmpoyerShortListResumesComponent },\r\n      { path: 'Employer/Search', component: SearchComponent },\r\n      { path: 'Job/Search', component: SearchComponent, data:{PageName:\"home\"} },\r\n      { path: 'Employer/AppliedResume/:Id', component: AppliedJobSeekersComponent }\r\n    ])\r\n  ],\r\n  exports: [ SearchComponent]\r\n})\r\nexport class EmployerModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { cJobList, cJobItem } from 'src/app/interface/Response/Job.class';\r\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\r\nimport { Page } from 'src/app/common/pagination/page';\r\nimport { Router } from '@angular/router';\r\nimport { ServiceJob } from 'src/app/services/job.service';\r\nimport { CustomPaginationService } from 'src/app/common/pagination/services/custom-pagination.service';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { JobStatus } from 'src/app/Enum/JobStatus.enum';\r\nimport { ConfirmationDialogService } from 'src/app/common/confirmation-dialog/confirmation-dialog.service';\r\nimport { JobStats } from 'src/app/interface/Response/JobStats.class';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-empoyer-my-jobs',\r\n  templateUrl: './empoyer-my-jobs.component.html',\r\n  styleUrls: ['./empoyer-my-jobs.component.css']\r\n})\r\nexport class EmpoyerMyJobsComponent extends baseComponent implements OnInit {\r\n\r\n  pageTitle: string = 'My Companies';\r\n  lstResult: cJobList;\r\n  message: ShowMessage = new ShowMessage();\r\n  filtertxt: string = '';\r\n  page: Page<cJobItem> = new Page();\r\n  jobStats: JobStats;\r\n  searchData:any=[];\r\n  searchText: string;\r\n\r\n  constructor(private router: Router,\r\n    private BLService: ServiceJob,\r\n    private paginationService: CustomPaginationService,\r\n    private confirmationDialogService: ConfirmationDialogService,\r\n    BLServiceShowMessage: ServiceShowMessage,\r\n    BLServiceLoginUser: ServiceLoginUser,BLTranslate: TranslateService,) {\r\n    super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadData();\r\n    let req=Object({filterText:this.filtertxt})\r\n    this.BLService.Search(req).subscribe({\r\n      next: response => {\r\n        this.searchData= response.lstResult\r\n      }  \r\n    })\r\n  }\r\n\r\n  private loadData(): void {\r\n    this.BLService.ListAllByEmployerId(this.page.pageable.pageCurrent, this.filtertxt).subscribe({\r\n      next: lst => {\r\n        this.lstResult = lst;\r\n        this.page.pageable.pageSize = lst.pageSize;\r\n        this.page.totalElements = lst.totalCount;\r\n        this.page.content = lst.lstResult;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n    this.BLService.GetMyJobStats().subscribe({\r\n      next: lst => {\r\n        this.jobStats = lst;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  public getNextPage(): void {\r\n    this.page.pageable = this.paginationService.getNextPage(this.page);\r\n    this.loadData();\r\n  }\r\n\r\n  public getPreviousPage(): void {\r\n    this.page.pageable = this.paginationService.getPreviousPage(this.page);\r\n    this.loadData();\r\n  }\r\n  public getloadPageCurrent(): void {\r\n    this.loadData();\r\n  }\r\n  setActivate(Id: string): void {\r\n    this.confirmationDialogService.confirmActivation()\r\n      .then((confirmed) => {\r\n        if (!confirmed)\r\n          return;\r\n        this.BLService.setActivate(Id).subscribe({\r\n          next: response => {\r\n            this.message.Success(\"Activated successfully.\");\r\n            this.BLServiceShowMessage.sendMessage(this.message);\r\n            this.loadData();\r\n          },\r\n          error: err => this.message.Error(err)\r\n        });\r\n      });\r\n  }\r\n  setDeActivate(Id: string): void {\r\n    this.confirmationDialogService.confirmDeactivation()\r\n      .then((confirmed) => {\r\n        if (!confirmed)\r\n          return;\r\n        this.BLService.setDeActivate(Id).subscribe({\r\n          next: response => {\r\n            this.message.Success(\"Deactivated successfully.\");\r\n            this.BLServiceShowMessage.sendMessage(this.message);\r\n            this.loadData();\r\n          },\r\n          error: err => this.message.Error(err)\r\n        });\r\n      });\r\n  }\r\n  filterbtn() {\r\n    // this.loadData();\r\n    // let req=Object({filterText:this.filtertxt})\r\n    // this.BLService.Search(req).subscribe({\r\n    //   next: response => {\r\n    //     this.searchData= response.lstResult\r\n    //   }  \r\n    // })\r\n  }\r\n  createBtn() {\r\n    this.router.navigate(['Employer/PostJob']);\r\n  }\r\n  onEdit(Id: string) {\r\n    this.router.navigate(['Employer/PostJob/' + Id]);\r\n  }\r\n  onView(Id: string) {\r\n    this.router.navigate(['Employer/Job/' + Id]);\r\n  }\r\n  GetStatus(status: number) {\r\n    return JobStatus[status].replace(\"_\",\" \");\r\n  }\r\n\r\n  tableSearch(event) {\r\n    this.searchText = event.target.value\r\n  }\r\n}\r\n","<section class=\"cnddte_fvrt our-dashbord dashbord\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12 col-lg-4 col-xl-3 dn-smd\">\r\n                <app-employer-menu [pageName]=\"'managemyjobs'\"></app-employer-menu>\r\n            </div>\r\n            <div class=\"col-sm-12 col-lg-8 col-xl-9\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-lg-12\">\r\n                        <h4 class=\"mb30\">{{'EmployerMyJobsYouMange' | translate }}<b>{{jobStats?.JobCount}}</b> {{'EmployerMyJobsJobs' | translate }}</h4>\r\n                    </div>\r\n                    <div class=\"col-sm-4 col-md-4 col-lg-4 col-xl-4\">\r\n                        <div class=\"icon_boxs\">\r\n                            <div class=\"icon\"><span class=\"flaticon-work\"></span></div>\r\n                            <div class=\"details\">\r\n                                <h4>{{jobStats?.JobCount}} {{'EmployerMyJobsJobPosted' | translate }}</h4>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-4 col-md-4 col-lg-4 col-xl-4\">\r\n                        <div class=\"icon_boxs\">\r\n                            <div class=\"icon style2\"><span class=\"flaticon-resume\"></span></div>\r\n                            <div class=\"details\">\r\n                                <h4>{{jobStats?.ApplicantCount}} {{'EmployerMyJobsApplications' | translate }}</h4>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-4 col-md-4 col-lg-4 col-xl-4\">\r\n                        <div class=\"icon_boxs\">\r\n                            <div class=\"icon style3\"><span class=\"flaticon-work\"></span></div>\r\n                            <div class=\"details\">\r\n                                <h4>{{jobStats?.ActiveJobCount}} {{'EmployerMyJobsOpenJobs' | translate }}</h4>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-6 col-lg-6 mt-4\">\r\n                        <div class=\"candidate_revew_select\">\r\n                            <mat-form-field class=\"w-75\">\r\n                                <mat-label>{{'EmployerMyJobsSearchFor' | translate }}</mat-label>\r\n                                <!-- {{'EmployerMyJobsSearchBy' | translate }} -->\r\n                                <input type=\"text\" placeholder=\"Search by Job Title\" matInput\r\n                                    [(ngModel)]=\"filtertxt\" (keyup)=\"tableSearch($event)\">\r\n                            </mat-form-field>\r\n                            <input type=\"submit\" value=\"{{'GenericSubmit' | translate }}\" class=\"btn btn-thm\" (click)=\"filterbtn()\">\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-6 col-lg-6\">\r\n                        <div class=\"candidate_job_alart_btn text-right\">\r\n                            <input type=\"button\" class=\"pull-right btn btn-orange\" value=\"{{'GenericCreateNew' | translate }}\"\r\n                                (click)=\"createBtn()\">\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-12\">\r\n                        <hr>\r\n                    </div>\r\n                    <div class=\"col-lg-12\">\r\n                        <div class=\"cnddte_fvrt_job candidate_job_reivew style2\">\r\n                            <div class=\"table-responsive job_review_table\">\r\n                                <table class=\"table\">\r\n                                    <thead class=\"thead-light\">\r\n                                        <tr>\r\n                                            <th scope=\"col\">{{'EmployerMyJobsJobTitle' | translate }}</th>\r\n                                            <th scope=\"col\">{{'EmployerMyJobsApplications' | translate }}</th>\r\n                                            <th scope=\"col\">{{'EmployerMyJobsStatus' | translate }}</th>\r\n                                            <th scope=\"col\"></th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr class=\"{{item.IsActive ? 'bg-green' : 'bg-red'}}\"\r\n                                            *ngFor=\"let item of page.content |filterL:searchText\">\r\n                                            <td scope=\"row\">\r\n                                                <h4 class=\"ProfileTitle\">{{item.Name}}</h4>\r\n                                                <h6>(<em>{{item?.Company?.Name == '' ? \"'EmployerMyJobsCompanyNA' | translate\" : item.Company.Name}}</em>)\r\n                                                </h6>\r\n                                                <p><span class=\"flaticon-location-pin\"></span>\r\n                                                    {{item?.Country?.Name == '' ? \"'EmployerCompanyViewCountryNA' | translate\" : item.Country.Name}},\r\n                                                    {{ item?.City?.Name == '' ? \"'EmployerCompanyViewCityNA' | translate\" : item.City.Name}}\r\n                                                </p>\r\n                                                <ul>\r\n                                                    <li class=\"list-inline-item\"><a href=\"#\"><span\r\n                                                                class=\"flaticon-event\"> {{'EmployerMyJobsCreated' | translate }}: </span></a></li>\r\n                                                    <li class=\"list-inline-item\"><a class=\"color-black22\"\r\n                                                            href=\"#\"><b>{{item.CreatedAt | date:'MMM d, y'}}</b></a>\r\n                                                    </li>\r\n                                                    <li class=\"list-inline-item\"><a href=\"#\"><span\r\n                                                                class=\"flaticon-event\"> {{'EmployerMyJobsExpiry' | translate }}: </span></a></li>\r\n                                                    <li class=\"list-inline-item\"><a class=\"color-black22\"\r\n                                                            href=\"#\"><b>{{item.Deadline | date:'MMM d, y'}}</b></a></li>\r\n                                                </ul>\r\n                                            </td>\r\n                                            <td><span class=\"color-black22\"><b>{{item?.ApplicantCount}}</b></span> {{'EmployerMyJobsApplication1' | translate }}</td>\r\n                                            <td class=\"text-thm2\">{{GetStatus(item.Status)}}</td>\r\n                                            <td>\r\n                                                <ul class=\"view_edit_delete_list text-center\">\r\n                                                    <li class=\"list-inline-item  bg-purple \"><a\r\n                                                        [routerLink]=\"['/Employer/AppliedResume/' + item._id]\" routerLinkActive=\"router-link-active\"  data-toggle=\"tooltip\"\r\n                                                        data-placement=\"bottom\" title=\"Resume\"><span\r\n                                                            class=\"flaticon-manager\"></span></a></li>\r\n                                                    <li class=\"list-inline-item  bg-orange\"><a\r\n                                                            (click)=\"onView(item._id)\" data-toggle=\"tooltip\"\r\n                                                            data-placement=\"bottom\" title=\"{{'GenericView' | translate }}\"><span\r\n                                                                class=\"flaticon-eye\"></span></a></li>\r\n                                                    <li class=\"list-inline-item  bg-blue\"><a (click)=\"onEdit(item._id)\"\r\n                                                            data-toggle=\"tooltip\" data-placement=\"bottom\"\r\n                                                            title=\"{{'GenericEdit' | translate }}\"><span class=\"flaticon-edit\"></span></a></li>\r\n                                                    <li *ngIf=\"item.IsActive\" class=\"list-inline-item  bg-red\">\r\n                                                        <a (click)=\"setDeActivate(item._id)\" data-toggle=\"tooltip\"\r\n                                                            data-placement=\"bottom\" title=\"{{'GenericDeactivate' | translate }}\"><span\r\n                                                                class=\"flaticon-rubbish-bin\"></span></a></li>\r\n                                                    <li *ngIf=\"!item.IsActive\" class=\"list-inline-item  bg-green\"><a\r\n                                                            (click)=\"setActivate(item._id)\" data-toggle=\"tooltip\"\r\n                                                            data-placement=\"bottom\" title=\"{{'GenericActivate' | translate }}\"><span\r\n                                                                class=\"flaticon-unlocked\"></span></a></li>\r\n                                                </ul>\r\n                                            </td>\r\n                                        </tr>\r\n                                        <!-- <div id=\"myUL\" *ngIf=\"filterL: searchText; else noResults\" > -->\r\n                                            <!-- <tr *ngFor=\"let sfetch of searchData |filterL:searchText\" class=\"{{sfetch.IsActive ? 'bg-green' : 'bg-red'}}\">\r\n                                                <th scope=\"col\">{{sfetch.Name }}</th>\r\n                                                <th scope=\"col\">{{sfetch.Industry }}</th>\r\n                                                <th scope=\"col\">{{sfetch.Status }}</th>\r\n                                                <th scope=\"col\"></th>\r\n                                            </tr> -->\r\n                                        <!-- </div> -->\r\n                                        <!-- <ng-template #noResults>\r\n                                            <p>No results found for \"{{searchText}}\".</p>\r\n                                        </ng-template> -->\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-12\">\r\n                        <app-custom-pagination [page]=\"page\" (nextPageEvent)=\"getNextPage()\"\r\n                            (previousPageEvent)=\"getPreviousPage()\" (loadPageCurrentEvent)=\"getloadPageCurrent()\">\r\n                        </app-custom-pagination>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { cGenericIdNameItem, cGenericSubItem } from 'src/app/interface/Response/GenericIdName.class';\r\nimport { ServiceCountry } from 'src/app/services/country.service';\r\nimport { ServiceIndustry } from 'src/app/services/industry.service';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { ModelCompany } from 'src/app/interface/Model/ModelCompany.class';\r\nimport { NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ServiceCompany } from 'src/app/services/service-company.service';\r\nimport { cCompanyItem } from 'src/app/interface/Response/Company.class';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { DynamicFormComponent } from 'src/app/common/ConfigForms/components/dynamic-form/dynamic-form.component';\r\nimport { FieldConfig, Validator } from 'src/app/common/ConfigForms/field.interface';\r\nimport { ConfigForm } from 'src/app/Enum/ConfigForm.enum';\r\nimport { ServiceConfigForm } from 'src/app/services/config-form.service';\r\n\r\n@Component({\r\n  selector: 'app-empoyer-profile',\r\n  templateUrl: './empoyer-profile.component.html',\r\n  styleUrls: ['./empoyer-profile.component.css']\r\n})\r\nexport class EmpoyerProfileComponent extends baseComponent implements OnInit {\r\n\r\n  LkupCountry: cGenericIdNameItem[];\r\n  LkupCity: cGenericSubItem[];\r\n  LkupIndustry: cGenericSubItem[];\r\n  modelObj: ModelCompany = new ModelCompany();\r\n  modelEstablishDate: NgbDateStruct;\r\n  todayDate: Date = new Date();\r\n  modelIsCreate: boolean;\r\n  objProfile: cCompanyItem;\r\n  profileId: string;\r\n  IsUploading: boolean = false;\r\n  FileName: string;\r\n  dateOld: NgbDateStruct;\r\n  @ViewChild(DynamicFormComponent) form: DynamicFormComponent;\r\n  regConfig: FieldConfig[] = [];\r\n\r\n  constructor(private BLCountry: ServiceCountry,\r\n    private BLIndustry: ServiceIndustry,\r\n    private BLCompany: ServiceCompany,\r\n    BLServiceShowMessage: ServiceShowMessage,\r\n    BLServiceLoginUser: ServiceLoginUser, BLTranslate: TranslateService,\r\n    private router: Router,\r\n    private BLServiceConfigForm: ServiceConfigForm,\r\n    private route: ActivatedRoute) {\r\n    super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\r\n  }\r\n  InitDynamicForm() {\r\n    this.BLServiceConfigForm.GetByType(ConfigForm.Company).subscribe({\r\n      next: lst => {\r\n        this.regConfig = <FieldConfig[]>[];\r\n        lst.forEach(item => {\r\n\r\n          var obj = new FieldConfig();\r\n\r\n          obj.inputType = item.inputType;\r\n          obj.label = item.label;\r\n          obj.name = item.name;\r\n          obj.options = item.options;\r\n          obj.order = item.order;\r\n          obj.type = item.type;\r\n          obj.validations.push(new Validator(item.label));\r\n          if (this.modelObj.data)\r\n            obj.value = this.modelObj.data[item.name];\r\n\r\n          this.regConfig.push(obj);\r\n        });\r\n        this.form.fields = this.regConfig;\r\n        this.form.createControl();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n\r\n  }\r\n  MapToModel(obj: cCompanyItem) {\r\n    this.modelObj.About = obj.About;\r\n    this.modelObj.Address = obj.Address;\r\n    this.modelObj.CityId = obj.City._id;\r\n    this.modelObj.CountryId = obj.Country._id;\r\n    this.modelObj.Email = obj.Email;\r\n    this.modelObj.Establish = obj.Establish;\r\n    this.modelObj.IndustryId = obj.Industry._id;\r\n    this.modelObj.Name = obj.Name;\r\n    this.modelObj.Phone = obj.Phone;\r\n    this.modelObj.SocialFacebook = obj.SocialFacebook;\r\n    this.modelObj.SocialGooglePlus = obj.SocialGooglePlus;\r\n    this.modelObj.SocialLinkedin = obj.SocialLinkedin;\r\n    this.modelObj.SocialGooglePlus = obj.SocialGooglePlus;\r\n    this.modelObj.SocialTwitter = obj.SocialTwitter;\r\n    this.modelObj.Website = obj.Website;\r\n    this.modelObj._id = obj._id;\r\n    this.modelObj.data = obj.data;\r\n    \r\n    var d = new Date(this.modelObj.Establish);\r\n    this.modelEstablishDate = {\r\n      year: d.getUTCFullYear(), month: d.getUTCMonth() + 1\r\n      , day: d.getUTCDate() + 1\r\n    };\r\n  }\r\n  ngOnInit(): void {\r\n    this.modelIsCreate = true;\r\n    const param = this.route.snapshot.paramMap.get('Id');\r\n    if (param) {\r\n      this.modelIsCreate = false;\r\n      this.profileId = param;\r\n      this.BLCompany.getGetByid(param).subscribe({\r\n        next: obj => {\r\n          this.objProfile = obj;\r\n          this.MapToModel(obj);\r\n          this.onCountrySelect();\r\n        },\r\n        error: err => {\r\n          this.message.Error(err);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n        }\r\n      });\r\n    }\r\n    this.BLCountry.getListActive().subscribe({\r\n      next: lst => {\r\n        this.LkupCountry = lst;\r\n        this.onCountrySelect();\r\n      },\r\n      error: err => {\r\n        this.message.Error(err);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n      }\r\n    });\r\n    this.BLIndustry.getListActive().subscribe({\r\n      next: lst => {\r\n        this.LkupIndustry = lst;\r\n      },\r\n      error: err => {\r\n        this.message.Error(err);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n      }\r\n    });\r\n    var d = new Date();\r\n    this.dateOld = {\r\n      year: d.getUTCFullYear() - 100, month: d.getUTCMonth() + 1\r\n      , day: d.getUTCDate()\r\n    };\r\n    this.InitDynamicForm();\r\n  }\r\n  modelSaveBtn(modelForm: NgForm): void {\r\n    if (!modelForm.valid)\r\n      return;\r\n\r\n    this.modelObj.data = this.form.value;\r\n\r\n    if (this.modelIsCreate) {\r\n      this.BLCompany.create(this.modelObj).subscribe({\r\n        next: response => {\r\n          this.message.Success(\"Saved successfully and waiting admin approval.\");\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.router.navigate(['Employer/ManageMyCompanies']);\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n    else {\r\n      this.BLCompany.update(this.modelObj).subscribe({\r\n        next: response => {\r\n          this.message.Success(\"Saved successfully and waiting admin approval.\");\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.router.navigate(['Employer/ManageMyCompanies']);\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n  }\r\n  onCountrySelect() {\r\n    this.LkupCity = [];\r\n\r\n    var sub = this.LkupCountry?.find(x => x._id == this.modelObj.CountryId).subItems;\r\n    if (sub.length == 0)\r\n      return;\r\n\r\n    this.LkupCity = sub.filter(y => y.IsActive == true).sort((a, b) => a.Name.localeCompare(b.Name));\r\n  }\r\n  onEstDateSelect(param) {\r\n    this.modelObj.Establish = new Date(param.year, param.month - 1, param.day);\r\n  }\r\n  onCancel() {\r\n    this.router.navigate(['Employer/ManageMyCompanies']);\r\n  }\r\n  UploadStatus(status) {\r\n    this.IsUploading = status;\r\n  }\r\n  OnFileUpload(filename) {\r\n    this.FileName = filename;\r\n    this.modelObj.CompanyLogo = filename;\r\n  }\r\n}\r\n","<section class=\"our-dashbord dashbord\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12 col-lg-4 col-xl-3 dn-smd\">\r\n                <app-employer-menu [pageName]=\"'profile'\"></app-employer-menu>\r\n            </div>\r\n            <div class=\"col-sm-12 col-lg-8 col-xl-9\">\r\n                <div class=\"my_profile_form_area employer_profile\">\r\n                    <form novalidate (ngSubmit)=\"modelSaveBtn(modelForm)\" #modelForm=\"ngForm\">\r\n                        <div class=\"row\">\r\n\r\n                            <div class=\"col-lg-12\">\r\n                                <h4 class=\"fz20 mb20\">{{'EmployerProfilePageTitle' | translate }}</h4>\r\n                            </div>\r\n                            <div class=\"col-lg-12\">\r\n                                <div class=\"avatar-upload mb30 companylogoCreate\">\r\n                                    <div class=\"avatar-edit\">\r\n                                        <img src=\"{{objProfile?.CompanyLogo}}\">\r\n                                    </div>\r\n                                    <div class=\"avatar-preview\">\r\n                                        <app-upload-files acceptExtensions=\".png,.jpg,.jpeg\" (OnFileUpload)=\"OnFileUpload($event)\"\r\n                                        (UploadStatus)=\"UploadStatus($event)\"></app-upload-files>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-lg-12\">\r\n                                <div class=\"my_profile_thumb_edit\"></div>\r\n                            </div>\r\n                            <div class=\"col-md-6 col-lg-6\">\r\n                                <div class=\"my_profile_input form-group\">\r\n                                    <label for=\"formGroupExampleInput1\">{{'EmployerProfileCompanyName' | translate }}*</label>\r\n                                    <input type=\"text\" class=\"form-control\" id=\"formGroupExampleInput1\"\r\n                                        [(ngModel)]=\"modelObj.Name\" required #modelNameVar=\"ngModel\" name=\"modelName\"\r\n                                        [ngClass]=\"{'is-invalid': (modelNameVar.touched || modelNameVar.dirty) && !modelNameVar.valid }\"\r\n                                        placeholder=\"{{'EmployerProfileCompanyNameEnter' | translate }}\">\r\n                                    <div class=\"valError\" *ngIf=\"modelNameVar.touched && modelNameVar.errors?.required\">\r\n                                        {{'EmployerProfileCompanyNameError' | translate }}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-6 col-lg-6\">\r\n                                <div class=\"my_profile_input form-group\">\r\n                                    <label for=\"exampleFormControlInput1\">{{'EmployerProfileEmail' | translate }}*</label>\r\n                                    <input type=\"email\" oninput=\"this.value = this.value.toLowerCase()\"\r\n                                        [pattern]=\"emailPattern\" class=\"form-control\" id=\"exampleFormControlInput1\"\r\n                                        [(ngModel)]=\"modelObj.Email\" required #modelEmailVar=\"ngModel\" name=\"modelEmail\"\r\n                                        [ngClass]=\"{'is-invalid': (modelEmailVar.touched || modelEmailVar.dirty) && !modelEmailVar.valid }\"\r\n                                        placeholder=\"{{'EmployerProfileEmailEnter' | translate }}\">\r\n                                    <div class=\"valError\"\r\n                                        *ngIf=\"modelEmailVar.touched && modelEmailVar.errors?.required\">{{'EmployerProfileEmailError' | translate }}\r\n                                        </div>\r\n                                    <div class=\"valError\"\r\n                                        *ngIf=\"modelEmailVar.touched && modelEmailVar.errors?.pattern\">{{'EmployerProfileEmailErrorFormat' | translate }}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-6 col-lg-6\">\r\n                                <div class=\"my_profile_input form-group\">\r\n                                    <label for=\"exampleFormControlInput1\">{{'EmployerProfilePhone' | translate }}*</label>\r\n                                    <input type=\"number\" class=\"form-control\" id=\"exampleFormControlInput1\"\r\n                                        [(ngModel)]=\"modelObj.Phone\" required #modelPhoneVar=\"ngModel\" name=\"modelPhone\"\r\n                                        [ngClass]=\"{'is-invalid': (modelPhoneVar.touched || modelPhoneVar.dirty) && !modelPhoneVar.valid }\"\r\n                                        placeholder=\"{{'EmployerProfilePhoneEnter' | translate }}\">\r\n                                    <div class=\"valError\"\r\n                                        *ngIf=\"modelPhoneVar.touched && modelPhoneVar.errors?.required\">{{'EmployerProfilePhoneError' | translate }}\r\n                                       </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-6 col-lg-6\">\r\n                                <div class=\"my_profile_input form-group\">\r\n                                    <label for=\"exampleFormControlInput1\">{{'EmployerProfileWebsite' | translate }}*</label>\r\n                                    <input type=\"url\" class=\"form-control\" id=\"exampleFormControlInput1\"\r\n                                        [(ngModel)]=\"modelObj.Website\" required #modelWebsiteVar=\"ngModel\"\r\n                                        name=\"modelWebsite\"\r\n                                        [ngClass]=\"{'is-invalid': (modelWebsiteVar.touched || modelWebsiteVar.dirty) && !modelWebsiteVar.valid }\"\r\n                                        placeholder=\"{{'EmployerProfileWebsiteEnter' | translate }}\">\r\n                                    <div class=\"valError\"\r\n                                        *ngIf=\"modelWebsiteVar.touched && modelWebsiteVar.errors?.required\">{{'EmployerProfileWebsiteError' | translate }}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-6 col-lg-6\">\r\n                                <div class=\"my_profile_input form-group\">\r\n                                    <label for=\"formGroupExampleInput2\">{{'EmployerProfileEst' | translate }}</label>\r\n                                    <div class=\"input-group\">\r\n                                        <input class=\"form-control\" placeholder=\"dd-mm-yyyy\" readonly name=\"dp\" [minDate]=\"dateOld\"\r\n                                            (dateSelect)=\"onEstDateSelect($event)\" [(ngModel)]=\"modelEstablishDate\"\r\n                                            ngbDatepicker #d=\"ngbDatepicker\"  [maxDate]=\"dateToday\">\r\n                                        <div class=\"input-group-append\">\r\n                                            <button class=\"btn calcender\" (click)=\"d.toggle()\" type=\"button\"><i\r\n                                                    class=\"fa fa-calendar\" aria-hidden=\"true\"></i></button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-6 col-lg-6\">\r\n                                <div class=\"my_profile_select_box form-group\">\r\n                                    <label for=\"exampleFormControlInput2\">{{'EmployerProfileIndustry' | translate }}*</label><br>\r\n                                    <select class=\"browser-default custom-select\" data-actions-box=\"true\"\r\n                                        [(ngModel)]=\"modelObj.IndustryId\" required #modelIndustryVar=\"ngModel\"\r\n                                        name=\"modelIndustry\"\r\n                                        [ngClass]=\"{'is-invalid': (modelIndustryVar.touched || modelIndustryVar.dirty) && !modelIndustryVar.valid }\">\r\n                                        <option value=\"-1\">{{'EmployerProfileIndustryEnter' | translate }}</option>\r\n                                        <option *ngFor=\"let item of LkupIndustry\" value=\"{{item._id}}\">{{item.Name}}\r\n                                        </option>\r\n                                    </select>\r\n                                    <div class=\"valErrorSelect\"\r\n                                        *ngIf=\"modelIndustryVar.touched && (modelIndustryVar.errors?.required || modelObj.IndustryId == '' || modelObj.IndustryId == '-1')\">\r\n                                        {{'EmployerProfileIndustryError' | translate }}</div>\r\n                                   \r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-lg-12\">\r\n                                <div class=\"my_resume_textarea mt20\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"exampleFormControlTextarea1\">{{'EmployerProfileAbout' | translate }}*</label>\r\n                                            <angular-editor  class=\"editor\" [config]=\"textEditorConfig\"  minlength=\"100\" [(ngModel)]=\"modelObj.About\" required\r\n                                            #modelAboutVar=\"ngModel\" name=\"modelAbout\"\r\n                                            [ngClass]=\"{'is-invalid': (modelAboutVar.touched || modelAboutVar.dirty) && !modelAboutVar.valid }\"\r\n                                            placeholder=\"{{'EmployerProfileAboutEnter' | translate }}\"></angular-editor>\r\n                                        <div class=\"valErrorTextArea\"\r\n                                            *ngIf=\"modelAboutVar.touched && modelAboutVar.errors?.required \">\r\n                                            {{'EmployerProfileAboutError' | translate }}</div>\r\n                                        <div class=\"valErrorTextArea\"\r\n                                            *ngIf=\"modelAboutVar.touched && +modelAboutVar.errors?.minlength?.requiredLength >  +modelAboutVar.errors?.minlength?.actualLength\">\r\n                                            {{'EmployerProfileAboutLength' | translate }}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-lg-12\">\r\n                                <h4 class=\"fz18 mb20\">{{'EmployerProfileSocial' | translate }}</h4>\r\n                            </div>\r\n                            <div class=\"col-md-6 col-lg-6\">\r\n                                <div class=\"my_profile_input form-group\">\r\n                                    <label for=\"validationServerUsername\">{{'EmployerProfileFacebook' | translate }}</label>\r\n                                    <input type=\"text\" class=\"form-control\" id=\"formGroupExampleInput1\"\r\n                                        name=\"modelFacebook\" [(ngModel)]=\"modelObj.SocialFacebook\"\r\n                                        placeholder=\"{{'EmployerProfileFacebookEnter' | translate }}\">\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-6 col-lg-6\">\r\n                                <div class=\"my_profile_input form-group\">\r\n                                    <label for=\"validationServerUsername2\">{{'EmployerProfileTwitter' | translate }}</label>\r\n                                    <input type=\"text\" class=\"form-control\" id=\"formGroupExampleInput1\"\r\n                                        name=\"modelTwitter\" [(ngModel)]=\"modelObj.SocialTwitter\"\r\n                                        placeholder=\"{{'EmployerProfileTwitterEnter' | translate }}\">\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-6 col-lg-6\">\r\n                                <div class=\"my_profile_input form-group\">\r\n                                    <label for=\"validationServerUsername2\">{{'EmployerProfileLinkedin' | translate }}</label>\r\n                                    <input type=\"text\" class=\"form-control\" id=\"formGroupExampleInput1\"\r\n                                        name=\"modelLinkedin\" [(ngModel)]=\"modelObj.SocialLinkedin\"\r\n                                        placeholder=\"{{'EmployerProfileLinkedinEnter' | translate }}\">\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-6 col-lg-6\">\r\n                                <div class=\"my_profile_input form-group\">\r\n                                    <label for=\"validationServerUsername2\">{{'EmployerProfileGooglePlus' | translate }}</label>\r\n                                    <input type=\"text\" class=\"form-control\" id=\"formGroupExampleInput1\"\r\n                                        name=\"modelGoogle\" [(ngModel)]=\"modelObj.SocialGooglePlus\"\r\n                                        placeholder=\"{{'EmployerProfileGooglePlusEnter' | translate }}\">\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-lg-12\">\r\n                                <h4 class=\"fz18 mb20\">{{'EmployerProfileContactInformation' | translate }}</h4>\r\n                            </div>\r\n                            <div class=\"col-md-6 col-lg-6\">\r\n                                <div class=\"my_profile_select_box form-group\">\r\n                                    <label for=\"exampleFormControlInput9\">{{'EmployerPostJobCountry' | translate }}*</label><br>\r\n                                    <select class=\"browser-default custom-select\" [(ngModel)]=\"modelObj.CountryId\"\r\n                                        required #modelCountryVar=\"ngModel\" name=\"modelCountry\"\r\n                                        [ngClass]=\"{'is-invalid': (modelCountryVar.touched || modelCountryVar.dirty) && (!modelCountryVar.valid || modelObj.CountryId == '' || modelObj.CountryId == '-1') }\"\r\n                                        (change)=\"onCountrySelect()\">\r\n                                        <option value=\"-1\">{{'EmployerPostJobCountrySelect' | translate }}</option>\r\n                                        <option *ngFor=\"let item of LkupCountry\" value=\"{{item._id}}\">{{item.Name}}\r\n                                        </option>\r\n                                    </select>\r\n                                    <div class=\"valErrorSelect\"\r\n                                        *ngIf=\"modelCountryVar.touched && (modelCountryVar.errors?.required || modelObj.CountryId == '' || modelObj.CountryId == '-1')\">\r\n                                        {{'EmployerProfileCountryError' | translate }}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-6 col-lg-6\">\r\n                                <div class=\"my_profile_select_box form-group\">\r\n                                    <label for=\"exampleFormControlInput9\">{{'EmployerPostJobCity' | translate }}*</label><br>\r\n                                    <select class=\"browser-default custom-select\" [(ngModel)]=\"modelObj.CityId\" required\r\n                                        #modelCityVar=\"ngModel\" name=\"modelCity\"\r\n                                        [ngClass]=\"{'is-invalid': (modelCityVar.touched || modelCityVar.dirty) && (!modelCityVar.valid || modelObj.CityId == '' || modelObj.CityId == '-1') }\">\r\n                                        <option value=\"-1\">{{'EmployerPostJobCitySelect' | translate }}</option>\r\n                                        <option *ngFor=\"let item of LkupCity\" value=\"{{item._id}}\">{{item.Name}}\r\n                                        </option>\r\n                                    </select>\r\n                                    <div class=\"valErrorSelect\"\r\n                                        *ngIf=\"modelCityVar.touched && (modelCityVar.errors?.required || modelObj.CityId == '' || modelObj.CityId == '-1')\">\r\n                                        {{'EmployerProfileCityError' | translate }}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-lg-12\">\r\n                                <div class=\"my_resume_textarea mt20\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"exampleFormControlTextarea1\">{{'EmployerPostJobFullddress' | translate }}</label>\r\n                                        <textarea class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\"\r\n                                            name=\"modelAddress\" [(ngModel)]=\"modelObj.Address\"\r\n                                            placeholder=\"{{'EmployerPostJobAddressEnter' | translate }}\"></textarea>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-lg-12\">\r\n                                <dynamic-form [fields]=\"regConfig\"></dynamic-form>\r\n                            </div>\r\n                            <div class=\"col-lg-4\">\r\n                                <div class=\"my_profile_input\">\r\n                                    <button class=\"btn btn-lg btn-thm\"\r\n                                        [title]=\"(modelForm.valid  && form?.valid ) ? 'Save your entered data' : 'Disabled until the form data is valid'\"\r\n                                        [disabled]=\"!(modelForm.valid && form?.valid && !IsUploading)\">{{'GenericSave' | translate }}</button>\r\n                                    <button class=\"btn btn-lg btn-transparent\" (click)=\"onCancel()\">{{'GenericCancel' | translate }}</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>","import { Component, OnInit } from '@angular/core';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { ServiceFavourite } from 'src/app/services/favourite.service';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { cFavouriteItem } from 'src/app/interface/Response/Favourite.class';\r\nimport { Router } from '@angular/router';\r\nimport { ConfirmationDialogService } from 'src/app/common/confirmation-dialog/confirmation-dialog.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-empoyer-short-list-resumes',\r\n  templateUrl: './empoyer-short-list-resumes.component.html',\r\n  styleUrls: ['./empoyer-short-list-resumes.component.css']\r\n})\r\nexport class EmpoyerShortListResumesComponent extends baseComponent implements OnInit {\r\n\r\n  lstResult: cFavouriteItem[];\r\n\r\n  constructor(private BLService: ServiceFavourite,\r\n    private confirmationDialogService: ConfirmationDialogService,\r\n    private router: Router,\r\n    BLServiceShowMessage: ServiceShowMessage,\r\n    BLServiceLoginUser: ServiceLoginUser,BLTranslate: TranslateService,) {\r\n    super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadData();\r\n  }\r\n\r\n  private loadData(): void {\r\n    this.BLService.ListAll().subscribe({\r\n      next: lst => {\r\n        this.lstResult = lst;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  setDeActivate(Id: string): void {\r\n    this.confirmationDialogService.confirm(\"Are you sure you want to Remove from the shortlist?\")\r\n      .then((confirmed) => {\r\n        if (!confirmed)\r\n          return;\r\n        this.BLService.setDeActivate(Id).subscribe({\r\n          next: response => {\r\n            this.message.Success(\"Removed Successfully.\");\r\n            this.BLServiceShowMessage.sendMessage(this.message);\r\n            this.loadData();\r\n          },\r\n          error: err => this.message.Error(err)\r\n        });\r\n      });\r\n  }\r\n  onView(Id: string) {\r\n    this.router.navigate(['JobSeeker/Resume/' + Id]);\r\n  }\r\n}\r\n","<section class=\"our-dashbord dashbord\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12 col-lg-4 col-xl-3 dn-smd\">\r\n                <app-employer-menu [pageName]=\"'shortlist'\"></app-employer-menu>\r\n            </div>\r\n            <div class=\"col-sm-12 col-lg-8 col-xl-9\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-lg-12\">\r\n                        <h4 class=\"fz20\">{{'EmployerShortlistedResumesPageTitle' | translate }}</h4>\r\n                    </div>\r\n                    <div class=\"col-lg-12\" *ngFor=\"let item of lstResult\">\r\n                        <div class=\"candidate_list_view style2\">\r\n                            <div class=\"thumb\">\r\n                                <img class=\"img-fluid rounded-circle ProfilePicture ProfilePictureSmaller\" src=\"{{item.ImageURL}}\">\r\n                                <div class=\"cpi_av_rating ProfilePictureCircleSmaller\"><span></span></div>\r\n                            </div>\r\n                            <div class=\"content mt25 fn-xl\">\r\n                                <h4 class=\"title\">{{item.Name}} <small class=\"verified text-thm2 pl10\"><i class=\"fa fa-check-circle\"></i></small></h4>\r\n                                <p class=\"text-thm2\">{{item.Title}} </p>\r\n                            </div>\r\n                            <ul class=\"view_edit_delete_list mt25 float-right fn-xl\">\r\n                                <li *ngIf=\"item.ResumeURL != ''\" class=\"list-inline-item\"><a href=\"{{item.ResumeURL}}\" target=\"_blank\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"{{'EmployerShortlistedResumesDownloadCV' | translate }}\"><span class=\"flaticon-resume\"></span>{{'EmployerShortlistedResumesDownloadCV' | translate }}</a></li>\r\n                                <li class=\"list-inline-item  bg-orange\" (click)=\"onView(item.EntityId)\"><a\r\n                                    (click)=\"onView(item.EntityId)\" data-toggle=\"tooltip\"\r\n                                    data-placement=\"bottom\" title=\"{{'GenericView' | translate }}\"><span\r\n                                        class=\"flaticon-eye\"></span></a></li>\r\n                                <li class=\"list-inline-item\" (click)=\"setDeActivate(item._id)\"><a (click)=\"setDeActivate(item._id)\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"{{'GenericDelete' | translate }}\"><span class=\"flaticon-rubbish-bin\"></span></a></li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-12\" *ngIf=\"lstResult?.length == 0\">\r\n                        <div class=\"text-center bg-red noresult\">\r\n                            <span class=\"font-italic\">{{'EmployerShortlistedResumesNotFound' | translate }} </span><span>&#9785;</span>\r\n                           </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'filterL'\r\n})\r\nexport class FilterLPipe implements PipeTransform {\r\n  transform(items: any[], searchText: string): any[] {\r\n    if (!items) return [];\r\n    if (!searchText) return items;\r\n    return items.filter(item => {\r\n      return Object.keys(item).some(key => {\r\n        return String(item[key]).toLowerCase().includes(searchText.toLowerCase());\r\n      });\r\n      \r\n    });\r\n   }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { cJobItem } from 'src/app/interface/Response/Job.class';\r\nimport { ServiceJob } from 'src/app/services/job.service';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { JobType } from 'src/app/Enum/JobType.enum';\r\nimport { UserGender } from 'src/app/Enum/UserGender.enum';\r\nimport { ServiceFavourite } from 'src/app/services/favourite.service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ServiceApply } from 'src/app/services/apply.service';\r\nimport { ConfirmationDialogService } from 'src/app/common/confirmation-dialog/confirmation-dialog.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Location } from '@angular/common';\r\nimport { takeWhile } from 'rxjs/operators';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n\r\n@Component({\r\n  selector: 'app-job-view',\r\n  templateUrl: './job-view.component.html',\r\n  styleUrls: ['./job-view.component.css']\r\n})\r\nexport class JobViewComponent extends baseComponent implements OnInit {\r\n\r\n  objJob: cJobItem;\r\n  JobId: string;\r\n  modelMessage: string;\r\n  EmployerJobViewNoDesc: string;\r\n  EmployerJobViewNoSkill: string;\r\n  EmployerJobViewNoBenefit: string;\r\n  IsJobApply: boolean = false;\r\n  IsJobFavourite: boolean = false;\r\n\r\n  constructor(\r\n    private BLJob: ServiceJob,\r\n    private confirmationDialogService: ConfirmationDialogService,\r\n    private modalService: NgbModal,\r\n    private BLApply: ServiceApply,\r\n    private router: Router,\r\n    BLServiceShowMessage: ServiceShowMessage,\r\n    BLJobLoginUser: ServiceLoginUser, BLTranslate: TranslateService,\r\n    private BLFavourite: ServiceFavourite,\r\n    private route: ActivatedRoute,\r\n    private cookies :CookieService,\r\n    private location : Location) {\r\n    super(BLServiceShowMessage, BLJobLoginUser, BLTranslate)\r\n  }\r\n  loadData() {\r\n    if (this.IsLoggedIn) {\r\n      this.BLFavourite.CheckMyFavourite(this.JobId).subscribe({\r\n        next: obj => {\r\n          this.IsJobFavourite = obj;\r\n        },\r\n        error: err => {\r\n          this.message.Error(err);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n        }\r\n      });\r\n      this.BLApply.CheckMyApply(this.JobId).subscribe({\r\n        next: obj => {\r\n          this.IsJobApply = obj;\r\n        },\r\n        error: err => {\r\n          this.message.Error(err);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  GetData(param) {\r\n    this.BLJob.getGetByid(param).subscribe({\r\n      next: obj => {\r\n        this.objJob = obj;\r\n        this.loadData();\r\n      },\r\n      error: err => {\r\n        this.message.Error(err);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n      }\r\n    });\r\n  }\r\n  ngOnInit(): void {\r\n    const param = this.route.snapshot.paramMap.get('Id');\r\n   this.cookies.set('privT',JSON.stringify(true))\r\n\r\n    if (param) {\r\n      this.JobId = param;\r\n\r\n      // if (this.IsLoggedIn) {\r\n      this.GetData(param);\r\n      //}\r\n      // else {\r\n      //   this.BLServiceLoginUser.UserIsLoggedInChanged.pipe(takeWhile(val => true)).subscribe(obj => {\r\n      //     if (obj) {\r\n      //       this.GetData(param);\r\n\r\n      //     }\r\n      //   });\r\n      // }\r\n    }\r\n    this.BLTranslate.get(\"EmployerJobViewNoDesc\").subscribe(res => { this.EmployerJobViewNoDesc = res; });\r\n    this.BLTranslate.get(\"EmployerJobViewNoSkill\").subscribe(res => { this.EmployerJobViewNoSkill = res; });\r\n    this.BLTranslate.get(\"EmployerJobViewNoBenefit\").subscribe(res => { this.EmployerJobViewNoBenefit = res; });\r\n  }\r\n  GetJobType(type) {\r\n    return JobType[type];\r\n  }\r\n  GetGender(gender) {\r\n    return UserGender[gender];\r\n  }\r\n  onRemoveFavourite(): void {\r\n    this.confirmationDialogService.confirm(\"Are you sure you want to Remove from the shortlist?\")\r\n      .then((confirmed) => {\r\n        if (!confirmed)\r\n          return;\r\n        this.BLFavourite.DeActivateByJobId(this.JobId).subscribe({\r\n          next: response => {\r\n            this.message.Success(\"Removed Successfully.\");\r\n            this.BLServiceShowMessage.sendMessage(this.message);\r\n            this.loadData();\r\n          },\r\n          error: err => this.message.Error(err)\r\n        });\r\n      });\r\n  }\r\n\r\n  onAddFavourite() {\r\n\r\n    this.BLFavourite.Create(this.JobId).subscribe({\r\n      next: obj => {\r\n        this.message.Success(\"Saved successfully.\");\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => {\r\n        this.message.Error(err);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n      }\r\n    });\r\n  }\r\n  createBtn(content): void {\r\n    this.modalService.open(content, { size: 'lg', backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  modelSaveBtn(modelForm: NgForm): void {\r\n    if (!modelForm.valid)\r\n      return;\r\n\r\n    this.BLApply.Create(this.JobId, this.modelMessage).subscribe({\r\n      next: response => {\r\n        this.message.Success(\"Saved successfully.\");\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.modalService.dismissAll();\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  Approve(Id: string): void {\r\n    this.confirmationDialogService.confirm(\"Are you sure you want to Approve?\")\r\n      .then((confirmed) => {\r\n        if (!confirmed)\r\n          return;\r\n\r\n        this.BLJob.setApproved(Id).subscribe({\r\n          next: response => {\r\n            // if (response) {\r\n            this.message.Success(\"Approved successfully.\");\r\n            this.BLServiceShowMessage.sendMessage(this.message);\r\n            this.router.navigate(['/Admin/JobApproval']);\r\n            // }\r\n          },\r\n          error: err => this.message.Error(err)\r\n        });\r\n      });\r\n  }\r\n  Reject(Id: string): void {\r\n    this.confirmationDialogService.confirm(\"Are you sure you want to Reject?\")\r\n      .then((confirmed) => {\r\n        if (!confirmed)\r\n          return;\r\n\r\n        this.BLJob.setRejected(Id).subscribe({\r\n          next: response => {\r\n            this.message.Success(\"Reject successfully.\");\r\n            this.BLServiceShowMessage.sendMessage(this.message);\r\n            this.router.navigate(['/Admin/JobApproval']);\r\n          },\r\n          error: err => this.message.Error(err)\r\n        });\r\n      });\r\n  }\r\n\r\n\r\n  goback() {\r\n    this.location.back();\r\n  }\r\n}\r\n","<section class=\"emplye_single_v2 mt70 mt50 pt50 jobView\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <a class=\"backloc\" href=\"javascript:void(0)\" (click)=\"goback()\"> < Back</a>\r\n            <div class=\"col-lg-8 col-xl-8\">\r\n                <div class=\"candidate_personal_info style2\">\r\n                    <div class=\"details\">\r\n                        <span class=\"text-thm2 fwb\">{{GetJobType(objJob?.Type)}}</span>\r\n                        <h3>{{objJob?.Name}}</h3>\r\n                        <p>Posted {{objJob?.CreatedAt | date:'MMM d, y'}} by <a\r\n                                routerLink=\"/Employer/Company/{{objJob?.Company._id}}\"\r\n                                class=\"text-thm2\">{{objJob?.Company.Name}}</a></p>\r\n                        <ul class=\"address_list\">\r\n                            <li class=\"list-inline-objJob\"><a href=\"#\"><span class=\"flaticon-location-pin\"></span>\r\n                                    {{(!objJob?.Country || (objJob?.Country.Name == '')) ? \"'EmployerCompanyViewCountryNA' | translate\" : objJob?.Country.Name}},\r\n                                    {{ ( !objJob?.City ||  (objJob?.City.Name == '')) ? \"'EmployerCompanyViewCityNA' | translate\" : objJob?.City.Name}}</a>\r\n                            </li>\r\n                            <li class=\"list-inline-item \"><a class=\"color-Red\"><span\r\n                                        class=\"flaticon-open-envelope-with-letter color-Red\"></span>\r\n                                    {{'EmployerJobViewApplyDeadline' | translate }}\r\n                                    {{objJob?.Deadline | date:'MMM d, y'}}</a></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div class=\"row job_meta_list mt30\" *ngIf=\"isJobSeeker\">\r\n                        <div class=\"col-sm-6 col-lg-6\"><button (click)=\"createBtn(content)\" [disabled]=\"IsJobApply\"\r\n                                class=\"btn btn-block btn-thm\">{{(IsJobApply ? 'EmployerJobViewApplyAlready' : 'EmployerJobViewApply') | translate }}<span\r\n                                    class=\"flaticon-right-arrow pl10\"></span></button></div>\r\n                        <div class=\"col-sm-6 col-lg-6\" *ngIf=\"!IsJobFavourite\"><button (click)=\"onAddFavourite()\" \r\n                                class=\"btn btn-block btn-primary\"><span class=\"flaticon-favorites fz24 pr10\"></span>\r\n                                {{'EmployerJobViewFavourite' | translate }}</button></div>\r\n                        <div class=\"col-sm-6 col-lg-6\" *ngIf=\"IsJobFavourite\"><button (click)=\"onRemoveFavourite()\"\r\n                                    class=\"btn btn-block btn-danger\"><span class=\"flaticon-favorites fz24 pr10\"></span>\r\n                                    {{'GenericRemove' | translate}} {{'EmployerJobViewFavourite' | translate }}</button></div>\r\n                    </div>\r\n                    <div class=\"row personer_information_company bg-green rounded\">\r\n                        <div class=\"col-sm-4 col-lg-4\">\r\n                            <div class=\"icon text-thm\"><span class=\"flaticon-work\"></span></div>\r\n                            <div class=\"details\">\r\n                                <p>{{'GenericJobField' | translate }}</p>\r\n                                <p>{{objJob?.JobField.Name}}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-4 col-lg-4\">\r\n                            <div class=\"icon text-thm\"><span class=\"flaticon-controls\"></span></div>\r\n                            <div class=\"details\">\r\n                                <p>{{'GenericJobSubfield' | translate }}</p>\r\n                                <p>{{objJob?.JobSubField.Name}}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-4 col-lg-4\">\r\n                            <div class=\"icon text-thm\"><span class=\"flaticon-paper\"></span></div>\r\n                            <div class=\"details\">\r\n                                <p>{{'EmployerJobViewExperience' | translate }}</p>\r\n                                <p>{{objJob?.Experience.Name}}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-4 col-lg-4\">\r\n                            <div class=\"icon text-thm\"><span class=\"flaticon-line-chart\"></span></div>\r\n                            <div class=\"details\">\r\n                                <p>{{'EmployerPostJobIndustry' | translate }}</p>\r\n                                <p>{{objJob?.Industry.Name}}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-4 col-lg-4\">\r\n                            <div class=\"icon text-thm\"><span class=\"flaticon-mortarboard\"></span></div>\r\n                            <div class=\"details\">\r\n                                <p>{{'EmployerPostJobQualification' | translate }}</p>\r\n                                <p>{{objJob?.Qualification.Name}}</p>\r\n                            </div>\r\n                        </div>\r\n                        <!--<div class=\"col-sm-4 col-lg-4\">\r\n                             <div class=\"icon text-thm\"><span class=\"flaticon-gender\"></span></div>\r\n                            <div class=\"details\">\r\n                                <p>{{'EmployerPostJobGender' | translate }}</p>\r\n                                <p>{{GetGender(objJob?.Gender)}}</p>\r\n                            </div> \r\n                        </div>-->\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-lg-4 col-xl-4\" >\r\n                <div class=\"candidate_personal_overview bg-green style3\" *ngIf=\"!IsLoggedIn\">\r\n                    <span class=\"color-Red\"><span\r\n                        class=\"flaticon-alarm fz24 pr10\"></span> {{\"LogintoApply\" | translate}}</span>\r\n                </div>\r\n                <div class=\"candidate_personal_overview bg-green style3\" *ngIf=\"IsLoggedIn\">\r\n                    <div class=\"thumb\">\r\n                        <img class=\"img-fluid rounded \" src=\"{{objJob?.Company.URL}}\" alt=\"cs1.jpg\">\r\n                    </div>\r\n                    <ul class=\"company_job_list mt30 mb30\">\r\n                        <li class=\"list-inline-objJob\"><a class=\"mt25\"\r\n                                routerLink=\"/Employer/Company/{{objJob?.Company._id}}\">{{'EmployerProfilePageTitle' | translate }}\r\n                                <span class=\"flaticon-right-arrow pl10\"></span></a></li>\r\n                        <li *ngIf=\"IsAdmin && objJob.Status == 3\" class=\"list-inline-objJob mt5 pt-2\">\r\n                            <input type=\"button\" class=\"btn btn-primary\" value=\"{{'GenericApprove' | translate }}\"\r\n                                (click)=\"Approve(objJob?._id)\">\r\n                            <input type=\"button\" class=\"btn btn-danger\" value=\"{{'GenericReject' | translate }}\"\r\n                                (click)=\"Reject(objJob?._id)\">\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-xl-8\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-lg-12\">\r\n                        <div class=\"candidate_about_info style2 mt10\">\r\n                            <h4 class=\"fz20 mb30\">{{'EmployerPostJobResponsibilities' | translate }}</h4>\r\n                            <div class=\"editor\"\r\n                                innerHTML='{{objJob?.Description == \"\" ? EmployerJobViewNoDesc : objJob?.Description}}'>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-xl-8\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-lg-12\">\r\n                        <div class=\"candidate_about_info style2 mt10\">\r\n                            <h4 class=\"fz20 mb30\">{{'EmployerPostJobSkills' | translate }}</h4>\r\n                            <div class=\"editor\"\r\n                                innerHTML='{{objJob?.Skills == \"\" ? EmployerJobViewNoSkill : objJob?.Skills}}'></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-xl-8\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-lg-12\">\r\n                        <div class=\"candidate_about_info style2 mt10\">\r\n                            <h4 class=\"fz20 mb30\">{{'EmployerPostJobBenefits' | translate }}</h4>\r\n                            <div class=\"editor\"\r\n                                innerHTML=\"{{objJob?.Benefits == '' ? EmployerJobViewNoBenefit : objJob?.Benefits}}\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-xl-8\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-lg-12\">\r\n                        <div class=\"candidate_about_info style2 mt10\">\r\n                            <h4 class=\"fz20 mb30\">{{'JobRemuneration' | translate }}</h4>\r\n                            <div class=\"editor\"\r\n                                innerHTML=\"{{objJob?.Remuneration}}\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n       \r\n    </div>\r\n</section>\r\n<div>\r\n    <ng-template role=\"dialog\" #content let-modal class=\"modal fade\">\r\n        <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header white-text text-center\">\r\n\r\n                    <h6 class=\"modal-title\">\r\n                        {{'EmployerJobViewTell' | translate }}\r\n                    </h6>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n\r\n                    <form novalidate (ngSubmit)=\"modelSaveBtn(modelForm)\" #modelForm=\"ngForm\">\r\n                        <div class=\"form-group \">\r\n                            <mat-form-field class=\"example-full-width\">\r\n                                <mat-label>{{'EmployerJobViewMessage' | translate }}</mat-label>\r\n                                <textarea matInput id=\"modelNameId\" type=\"text\"\r\n                                    placeholder=\"{{'EmployerJobViewMessageEnter' | translate }}\" required rows=\"8\"\r\n                                    [(ngModel)]=\"modelMessage\" #modelNameVar=\"ngModel\" name=\"modelName\"\r\n                                    [ngClass]=\"{'is-invalid': (modelNameVar.touched || modelNameVar.dirty) && !modelNameVar.valid }\"></textarea>\r\n                                <mat-error *ngIf=\"modelNameVar.errors?.required\">\r\n                                    {{'EmployerJobViewMessageError' | translate }}\r\n                                </mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"form-group pull-right md-form\">\r\n                            <button class=\"btn  btn-thm\" type=\"submit\" style=\"width:100px\"\r\n                                [title]=\"modelForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\"\r\n                                [disabled]=\"!modelForm.valid\">{{'GenericSave' | translate }}</button></div>\r\n                    </form>\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                    <button type=\"button\" class=\"btn border-green btn-transparent\"\r\n                        (click)=\"modal.close()\">{{'GenericClose' | translate }}</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </ng-template>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport * as _ from 'underscore';\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\nexport class PagerService {\r\n    constructor() { \r\n    \r\n    }\r\n    getPager(totalItems: number, currentPage: number = 1, pageSize: number = 15) {\r\n        // calculate total pages\r\n        let totalPages = Math.ceil(totalItems / pageSize);\r\n\r\n        let startPage: number, endPage: number;\r\n        // if (totalPages <= 10) {\r\n        //     // less than 10 total pages so show all\r\n        //     startPage = 1;\r\n        //     endPage = totalPages;\r\n        // } else {\r\n        //     // more than 10 total pages so calculate start and end pages\r\n        //     if (currentPage <= 6) {\r\n        //         startPage = 1;\r\n        //         endPage = 10;\r\n        //     } else if (currentPage + 4 >= totalPages) {\r\n        //         startPage = totalPages - 9;\r\n        //         endPage = totalPages;\r\n        //     } else {\r\n        //         startPage = currentPage - 5;\r\n        //         endPage = currentPage + 4;\r\n        //     }\r\n        // }\r\n        \r\n        if (totalPages <= 5) {\r\n            startPage = 1;\r\n            endPage = totalPages;\r\n        } else {\r\n            if (currentPage <= 3) {\r\n                startPage = 1;\r\n                endPage = 5;\r\n            } else if (currentPage + 1 >= totalPages) {\r\n                startPage = totalPages - 4;\r\n                endPage = totalPages;\r\n            } else {\r\n                startPage = currentPage - 2;\r\n                endPage = currentPage+2;\r\n            }\r\n        }\r\n\r\n        // calculate start and end item indexes\r\n        let startIndex = (currentPage - 1) * pageSize;\r\n        let endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\r\n\r\n        // create an array of pages to ng-repeat in the pager control\r\n        let pages = _.range(startPage, endPage + 1);\r\n\r\n        // return object with all pager properties required by the view\r\n        return {\r\n            totalItems: totalItems,\r\n            currentPage: currentPage,\r\n            pageSize: pageSize,\r\n            totalPages: totalPages,\r\n            startPage: startPage,\r\n            endPage: endPage,\r\n            startIndex: startIndex,\r\n            endIndex: endIndex,\r\n            pages: pages\r\n        };\r\n    }\r\n}","<section class=\"our-faq bgc-fa mt50\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12 col-lg-12 col-xl-12 contactForm\">\r\n                <form  novalidate  [formGroup]=\"contactForm\" class=\" text-center mb30\">\r\n                    <div class=\"input-group\">\r\n                        <input type=\"text\" class=\"form-control\" placeholder=\"{{'DesignationsJobFieldsCompany'|translate}}\" name=\"skills\" formControlName=\"skills\" (keydown)=\"search($event)\" [matAutocomplete]=\"auto\">\r\n                    </div>\r\n                    <mat-autocomplete #auto=\"matAutocomplete\">\r\n                        <mat-option *ngFor=\"let item of currentDatas\" [value]=\"item\" >\r\n                        <!-- <div *ngIf=\"item != ''\">  -->\r\n                            <!-- {{item.Name}}  -->\r\n                            {{ item }}\r\n                             <!-- {{ item.JobField }} -->\r\n                        <!-- </div> -->\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <div class=\"input-group\">\r\n                        <input type=\"text\" class=\"form-control\" placeholder=\"{{'EmployerCompanyViewLocations' | translate}}\" name=\"location\" formControlName=\"location\">\r\n                        <!-- (focusout)=\"trigger($event)\" -->\r\n                        <div class=\"locationBox\"><a href=\"javascript:void(0)\"  (click)=\"getLocation()\"class=\"currentLoc\">{{'CurrentLocation'| translate}}</a></div>\r\n                    </div>\r\n                    <button mat-raised-button color=\"primary\" (click)=\"onSubmit(contactForm)\">{{'Search'|translate}}</button>      \r\n                   <a href=\"javascript:void(0)\"  *ngIf=\" Refbutton\" (click)=\"getref()\" title=\"Refresh\"  class=\"currentLocs\"><i class=\"fa fa-refresh\" aria-hidden=\"true\"></i></a>             \r\n                </form>\r\n                <div class=\"searchLast\" *ngIf=\"onlySkillHTM.length >= 1 || OnlylocationHTM.length >= 1\"> {{'RecentSearch'|translate}} : \r\n                    <span class=\"history\" *ngFor=\"let item of (onlySkillHTM | slice: -3);let i= index\" (click)=\"skillset(i,$event)\">{{htmlDecode(item)}}</span>\r\n                    <span class=\"history\" *ngFor=\"let item of (OnlylocationHTM|slice:-2);let i= index\" (click)=\"locationset(i,$event)\">{{htmlDecode(item)}}</span> \r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-10 col-lg-10 col-xl-10\">\r\n                <div class=\"mb30\" *ngIf=\"arrayCheck4.length>0 || arrayCheck.length > 0 || arrayCheck1.length > 0 || arrayCheck2.length > 0 || arrayCheck3.length > 0\"> {{'Filterby'|translate}}: \r\n                    <!-- <span class=\"filterCount\">{{ this.totalfilterCheck }} </span> -->\r\n                    <span class=\"filterData\" (click)=\"filterCheck(i,item)\" *ngFor=\"let item of arrayCheck;let i = index\"> {{ item }} <span class=\"closeIcon\">&#10006;</span> </span>\r\n                    <span class=\"filterData\" (click)=\"filterCheck1(i,item)\" *ngFor=\"let item of arrayCheck1;let i = index\"> {{ item }} <span class=\"closeIcon\">&#10006;</span> </span>\r\n                    <span class=\"filterData\" (click)=\"filterCheck2(i,item)\" *ngFor=\"let item of arrayCheck2;let i = index\"> {{ item }} <span class=\"closeIcon\">&#10006;</span> </span>\r\n                    <span class=\"filterData\" (click)=\"filterCheck3(i,item)\" *ngFor=\"let item of arrayCheck3;let i = index\"> {{ item }} <span class=\"closeIcon\">&#10006;</span> </span>  \r\n                    <span class=\"filterData\" (click)=\"filterCheck4(i,item)\" *ngFor=\"let item of arrayCheck4;let i = index\"> {{ item }} <span class=\"closeIcon\">&#10006;</span>  </span>  \r\n                     \r\n                </div>\r\n\r\n            </div>\r\n            <div class=\"col-md-2 col-lg-2 col-xl-2\">\r\n                <div class=\"removeFilter\"  *ngIf=\"arrayCheck4.length>0 || arrayCheck.length > 0 || arrayCheck1.length > 0 || arrayCheck2.length > 0 || arrayCheck3.length > 0\">\r\n                    <a href=\"javascript:void(0)\" class=\"clearFilter\" (click)=\"removeFilter()\">{{'ClearAll'|translate}}</a>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-lg-3 col-xl-3 dn-smd no-pad\" >\r\n                <form novalidate (ngSubmit)=\"submit()\" class=\"leftSide\">\r\n                    <!-- <div class=\"faq_search_widget mb30\">\r\n                        <h4 class=\"fz20 mb15\">{{'EmployerSearchPageTitle' | translate }}</h4>\r\n                        <div class=\"input-group mb-3\">\r\n                            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"modelSearch.filterText\" placeholder=\"{{'EmployerSearchBy' | translate }} \" name=\"filterText\"\r\n                            (keydown.enter)=\"FilterData()\">\r\n                            <div class=\"input-group-append\">\r\n                                <button class=\"btn font-weight-lighter\" type=\"button\" id=\"button-addon2\" (click)=\"searchData()\"><span\r\n                                        class=\"flaticon-search\"></span></button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"cl_carrer_lever mb30\">\r\n                        <hr>\r\n                    </div> -->\r\n                    <div class=\"faq_search_widget mb30\" *ngIf=\"searchComp.length>0\">\r\n                        <p class=\"titles\">{{'ApprovalCompanySearchFor' | translate }} ({{searchComp.length}})</p>\r\n                        <input type=\"text\"  (keyup)=\"industrySearchC($event)\" *ngIf=\"searchComp.length>20\" class=\"form-control smartSearch\" autocomplete=\"off\"  placeholder=\"{{'ApprovalCompanySearch' | translate}}\" id=\"search-text\" aria-describedby=\"search-text\">\r\n                        <div id=\"myUL\" *ngIf=\"(searchComp | filterL: searchTextC).length > 0; else noResults\">\r\n                            <mat-checkbox class=\"example-margin\" *ngFor=\"let item of searchComp |filterL:searchTextC| slice:0:SCLTH;let i = index\" value=\"{{item.Name}}\" title=\"{{item.Name}} ({{item.Count}})  \" name=\"modelExperience\"  (change)=\"FilterCompny($event,item.Name)\" multiple>\r\n                                {{item.Name}}    ({{item.Count}})                             \r\n                            </mat-checkbox>\r\n                            <a href=\"javascript:void(0)\" *ngIf=\"isReadMore\" (click)=\"showList()\" > {{'ShowMore' | translate }}</a>\r\n                            <a href=\"javascript:void(0)\" *ngIf=\"isReadMore==false\" (click)=\"showList()\" > {{ 'ShowLess' | translate }}</a>\r\n                        </div>\r\n                        <ng-template #noResults>\r\n                            <p>{{'Noresultsfoundfor'| translate}} \"{{searchText}}\".</p>\r\n                        </ng-template>\r\n                    </div>\r\n                    <div class=\"faq_search_widget mb30\"  *ngIf=\"LkupJobField\">\r\n                        <!-- <mat-select class=\"browser-default custom-select\" data-actions-box=\"true\" multiple (selectionChange)=\"FilterData()\"\r\n                            [(ngModel)]=\"modelSearch.JobFieldId\"  #modelJobFieldVar=\"ngModel\" placeholder=\"{{'EmployerSearchJobField' | translate }}\"\r\n                            name=\"modelJobField\">\r\n                            <mat-option *ngFor=\"let item of LkupJobField\" value=\"{{item._id}}\">{{item.Name}}\r\n                            </mat-option>\r\n                        </mat-select> -->\r\n                        <p class=\"titles\"> {{'EmployerSearchJobField' | translate }} ({{LkupJobField?.length}}) </p>\r\n                        <!-- [(ngModel)]=\"modelSearch.JobFieldId\"  #modelJobFieldVar=\"ngModel\" name=\"modelJobFields\" -->\r\n                        <div>\r\n                            <mat-checkbox class=\"example-margin xyz\" *ngFor=\"let item of LkupJobField| slice:less1:limts1;let i = index\" value=\"{{item.Name}}\"  multiple (change)=\"FieldSearchData($event,item.Name)\" >\r\n                                {{item.Name}}  ({{item.Count}})  \r\n                            </mat-checkbox>\r\n                            <a href=\"javascript:void(0)\" (click)=\"more1($event)\" *ngIf=\"hideCheck1 === false\">{{'ShowMore' | translate}}</a>\r\n                            <a href=\"javascript:void(0)\" (click)=\"lessFun1()\" *ngIf=\"hideCheck1\">{{'ShowLess' | translate}}</a>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"faq_search_widget mb30\" *ngIf=\"LkupIndustry\">\r\n                        <!-- <mat-select class=\"browser-default custom-select\" data-actions-box=\"true\" multiple (selectionChange)=\"FilterData()\"\r\n                            [(ngModel)]=\"modelSearch.IndustryId\"  #modelIndustryVar=\"ngModel\" placeholder=\"{{'EmployerSearchIndustry' | translate }}\"\r\n                            name=\"modelIndustry\">\r\n                            <mat-option *ngFor=\"let item of LkupIndustry\" value=\"{{item._id}}\">{{item.Name}}\r\n                            </mat-option>\r\n                        </mat-select> -->\r\n                        <p class=\"titles\"> {{'EmployerSearchIndustry' | translate }} ({{LkupIndustry?.length}}) </p>\r\n                        <!-- [(ngModel)]=\"modelSearch.IndustryId\"  #modelIndustryVar=\"ngModel\"  -->\r\n                        <div> \r\n                            <input type=\"text\"  (keyup)=\"industrySearch($event)\" class=\"form-control smartSearch\" autocomplete=\"off\"  placeholder=\"{{'EmployerSearchIndustry' | translate }}\" id=\"search-text\" aria-describedby=\"search-text\" >\r\n                            <div id=\"myUL\" *ngIf=\"(LkupIndustry | filterL: searchText).length > 0; else noResults\">\r\n                                <mat-checkbox class=\"example-margin\" *ngFor=\"let item of LkupIndustry | filterL:searchText | slice:less2:limts2;let i = index\" value=\"{{item.Name}}\"  multiple (change)=\"FilterIndustryData($event,item.Name)\">\r\n                                    {{item.Name}}  ({{item.Count}})  \r\n                                </mat-checkbox>\r\n                                <a href=\"javascript:void(0)\" (click)=\"more2($event)\" *ngIf=\"hideCheck2 === false\">{{'ShowMore' | translate}}</a>\r\n                                <a href=\"javascript:void(0)\" (click)=\"lessFun2()\" *ngIf=\"hideCheck2\">{{'ShowLess' | translate}}</a>\r\n                            </div>\r\n                            <ng-template #noResults>\r\n                                <p>{{'Noresultsfoundfor'| translate}} \"{{searchText}}\".</p>\r\n                            </ng-template>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"faq_search_widget mb30\" *ngIf=\"LkupExperience\">\r\n                        <!-- <mat-select class=\"browser-default custom-select\" data-actions-box=\"true\" multiple (selectionChange)=\"FilterData()\"\r\n                            [(ngModel)]=\"modelSearch.ExperienceId\"  #modelExperienceVar=\"ngModel\" placeholder=\"{{'EmployerSearchExperience' | translate }}\"\r\n                            name=\"modelExperience\">\r\n                            <mat-option *ngFor=\"let item of LkupExperience\" value=\"{{item._id}}\">{{item.Name}}\r\n                            </mat-option>\r\n                        </mat-select> -->\r\n                        <p class=\"titles\"> {{'EmployerSearchExperience' | translate }} ({{ LkupExperience?.length }}) </p>\r\n                        <!-- [(ngModel)]=\"modelSearch.ExperienceId\"  #modelExperienceVar=\"ngModel\" -->\r\n                        <div>\r\n                            <mat-checkbox class=\"example-margin\" *ngFor=\"let item of LkupExperience | slice:less3:limts3;let i = index\"  name=\"modelExperience\" value=\"{{item.Name}}\" (change)=\"FilterExphData($event,item.Name)\" multiple>\r\n                                {{item.Name}}        ({{item.Count}})                             \r\n                            </mat-checkbox>\r\n                            <a href=\"javascript:void(0)\" (click)=\"more3($event)\" *ngIf=\"hideCheck3 === false\">{{'ShowMore' | translate}}</a>\r\n                            <a href=\"javascript:void(0)\" (click)=\"lessFun3()\" *ngIf=\"hideCheck3\">{{'ShowLess' | translate}}</a>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"faq_search_widget mb30\" *ngIf=\"LkupQualification\">\r\n                        <!-- <mat-select class=\"browser-default custom-select\" data-actions-box=\"true\" multiple (selectionChange)=\"FilterData()\"\r\n                            [(ngModel)]=\"modelSearch.Qualificationid\"  #modelQualificationVar=\"ngModel\" placeholder=\"{{'EmployerSearchQualification' | translate }}\"\r\n                            name=\"modelQualification\">\r\n                            <mat-option *ngFor=\"let item of LkupQualification\" value=\"{{item._id}}\">{{item.Name}}\r\n                            </mat-option>\r\n                        </mat-select> -->\r\n                        <p class=\"titles\"> {{'EmployerSearchQualification' | translate }} ({{ LkupQualification?.length }}) </p>\r\n                        <!-- [(ngModel)]=\"modelSearch.Qualificationid\"  #modelQualificationVar=\"ngModel\" -->\r\n                        <div >\r\n                            <mat-checkbox class=\"example-margin\" *ngFor=\"let item of LkupQualification\"  name=\"modelQualification\" value=\"{{item.Name}}\" multiple (change)=\"FilterSearchData($event,item.Name)\">\r\n                                {{item.Name}}  ({{item.Count}})  \r\n                            </mat-checkbox>\r\n                        </div>\r\n                    </div>\r\n                    <!-- <div class=\"faq_search_widget mb30\">\r\n                        <mat-select class=\"browser-default custom-select\" data-actions-box=\"true\" multiple (selectionChange)=\"FilterData()\"\r\n                            [(ngModel)]=\"modelSearch.GenderId\"  #modelExperienceVar=\"ngModel\" placeholder=\"{{'EmployerSearchGender' | translate }}\"\r\n                            name=\"modelExperience\">\r\n                            <mat-option value=\"1\">{{'EmployerPostJobGenderMale' | translate }}</mat-option>\r\n                            <mat-option value=\"2\">{{'EmployerPostJobGenderFemale' | translate }}</mat-option>\r\n                        </mat-select>\r\n                    </div> -->\r\n                    <!-- <div class=\"cl_carrer_lever mb30\">\r\n                        <mat-select class=\"browser-default SearchDropdown\" data-actions-box=\"true\" \r\n                            (selectionChange)=\"onCountrySelect()\" [(ngModel)]=\"modelSearch.CountryId\"\r\n                            #modelQualificationVar=\"ngModel\" \r\n                            placeholder=\"{{'EmployerPostJobCountry' | translate }}\" name=\"modelCountry\">\r\n                            <mat-option value=\"\">{{'EmployerPostJobCountrySelect' | translate }}</mat-option>\r\n                            <mat-option *ngFor=\"let item of LkupCountry\" value=\"{{item._id}}\">{{item.Name}}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                        <p>{{'EmployerPostJobCountrySelect' | translate }}</p>\r\n                        [(ngModel)]=\"modelSearch.CountryId\" #modelQualificationVar=\"ngModel\"\r\n                        <div>\r\n                            <mat-checkbox  class=\"example-margin\" *ngFor=\"let item of LkupCountry\"  name=\"modelCountry\" (onClick)=\"onCountrySelect()\" value=\"{{item._id}}\">\r\n                                {{item.Name}}\r\n                            </mat-checkbox>\r\n                        </div>\r\n                    </div> -->\r\n                    <!-- <div class=\"cl_carrer_lever mb30\">\r\n                        <mat-select class=\"browser-default SearchDropdown\" data-actions-box=\"true\" \r\n                            (selectionChange)=\"FilterData()\" [(ngModel)]=\"modelSearch.CityId\"\r\n                            #modelQualificationVar=\"ngModel\"\r\n                            placeholder=\"{{'EmployerPostJobCity' | translate }}\" name=\"modelCity\">\r\n                            <mat-option value=\"\">{{'EmployerPostJobCitySelect' | translate }}</mat-option>\r\n                            <mat-option *ngFor=\"let item of LkupCity\" value=\"{{item._id}}\">{{item.Name}}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                        <p>{{'EmployerPostJobCity' | translate }}</p>\r\n                        [(ngModel)]=\"modelSearch.CityId\" #modelQualificationVar=\"ngModel\"\r\n                        <div >\r\n                            <mat-checkbox (onClick)=\"FilterData()\"  class=\"example-margin\" *ngFor=\"let item of LkupCity\"  name=\"modelCity\">\r\n                                {{item.Name}}\r\n                            </mat-checkbox>\r\n                        </div>\r\n                    </div> -->\r\n                </form>\r\n            </div>\r\n            <div class=\"col-md-12 col-lg-9 col-xl-9\" *ngIf=\"pagedItems\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-12 col-lg-6\">\r\n                        <div class=\"candidate_job_alart_btn\">\r\n                            <!-- <p>{{ currentData?.totalCount }}</p> -->\r\n                            <h4 class=\"fz20 mb15\" *ngIf=\"currentData?.lstResult.length > 0\"> {{ currentData?.lstResult.length }}  {{'EmployerSearchJobsFound' | translate }}</h4>\r\n                            <h4 class=\"fz20 mb15\" *ngIf=\"currentData?.lstResult.length === 0\"> No Jobs Found </h4>\r\n                            <button class=\"btn btn-thm btns dn db-991 float-right\">{{'EmployerSearchShowFilter' | translate }}</button>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-12 col-lg-6\">\r\n                        <div class=\"content_details\">\r\n                            <div class=\"details\">\r\n                                <a href=\"javascript:void(0)\" class=\"closebtn\" onclick=\"closeNav()\"><span>{{'EmployerSearchHideFilter' | translate }}</span><i>×</i></a>\r\n                                <div class=\"faq_search_widget mb30\">\r\n                                    <h4 class=\"fz20 mb15\">Search Keywords</h4>\r\n                                    <div class=\"input-group mb-3\">\r\n                                        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"modelSearch.filterText\" placeholder=\"{{'EmployerSearchJobTitle' | translate }} \" name=\"filterText\"\r\n                                            aria-label=\"Recipient's username\" aria-describedby=\"button-addon2\">\r\n                                        <div class=\"input-group-append\">\r\n                                            <button class=\"btn btn-thm\" type=\"button\"\r\n                                                id=\"button-addon4\"><span class=\"flaticon-search\"></span></button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"faq_search_widget mb30\">\r\n                                    <mat-select class=\"browser-default custom-select\" data-actions-box=\"true\" multiple (selectionChange)=\"FilterData()\"\r\n                                        [(ngModel)]=\"modelSearch.JobFieldId\"  #modelJobFieldVar=\"ngModel\" placeholder=\"{{'EmployerSearchByJobField' | translate }}\"\r\n                                        name=\"modelJobField\">\r\n                                        <mat-option *ngFor=\"let item of LkupJobField\" value=\"{{item._id}}\">{{item.Name}}\r\n                                        </mat-option>\r\n                                    </mat-select>\r\n                                </div>\r\n                                <div class=\"faq_search_widget mb30\">\r\n                                    <mat-select class=\"browser-default custom-select\" data-actions-box=\"true\" multiple (selectionChange)=\"FilterData()\"\r\n                                        [(ngModel)]=\"modelSearch.IndustryId\"  #modelIndustryVar=\"ngModel\" placeholder=\"{{'EmployerSearchByIndustry' | translate }}\"\r\n                                        name=\"modelIndustry\">\r\n                                        <mat-option *ngFor=\"let item of LkupIndustry\" value=\"{{item._id}}\">{{item.Name}}\r\n                                        </mat-option>\r\n                                    </mat-select>\r\n                                </div>\r\n                                <div class=\"faq_search_widget mb30\">\r\n                                    <mat-select class=\"browser-default custom-select\" data-actions-box=\"true\" multiple (selectionChange)=\"FilterData()\"\r\n                                    [(ngModel)]=\"modelSearch.ExperienceId\"  #modelExperienceVar=\"ngModel\" placeholder=\"{{'EmployerSearchByExperience' | translate }}\"\r\n                                    name=\"modelExperience\">\r\n                                    <mat-option *ngFor=\"let item of LkupExperience\" value=\"{{item._id}}\">{{item.Name}}\r\n                                    </mat-option>\r\n                                </mat-select>\r\n                                </div>\r\n                                <div class=\"faq_search_widget mb30\">\r\n                                    <mat-select class=\"browser-default custom-select\" data-actions-box=\"true\" multiple (selectionChange)=\"FilterData()\"\r\n                                        [(ngModel)]=\"modelSearch.Qualificationid\"  #modelQualificationVar=\"ngModel\" placeholder=\"{{'EmployerSearchByQualification' | translate }}\"\r\n                                        name=\"modelQualification\">\r\n                                        <mat-option *ngFor=\"let item of LkupQualification\" value=\"{{item._id}}\">{{item.Name}}\r\n                                        </mat-option>\r\n                                    </mat-select>\r\n                                </div>\r\n                                <!-- <div class=\"faq_search_widget mb30\">\r\n                                    <mat-select class=\"browser-default custom-select\" data-actions-box=\"true\" multiple (selectionChange)=\"FilterData()\"\r\n                                        [(ngModel)]=\"modelSearch.GenderId\"  #modelExperienceVar=\"ngModel\" placeholder=\"{{'EmployerSearchByGender' | translate }}\"\r\n                                        name=\"modelExperience\">\r\n                                        <mat-option value=\"1\">{{'EmployerPostJobGenderMale' | translate }}</mat-option>\r\n                                        <mat-option value=\"2\">{{'EmployerPostJobGenderFemale' | translate }}</mat-option>\r\n                                    </mat-select>\r\n                                </div> -->\r\n                                \r\n                                \r\n                               \r\n                                \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-12\" *ngIf=\"currentData?.lstResult.length > 0\">\r\n                        <hr>\r\n                    </div>\r\n                    \r\n                    <div class=\"col-lg-12\" *ngFor=\"let item of pagedItems\">\r\n                        <div class=\"candidate_list_view mb30\" >\r\n                            <div class=\"thumb\">\r\n                                <img class=\"img-fluid rounded-circle ProfilePicture-100\" src=\"{{item.Company.URL}}\" >\r\n                                <!-- <div class=\"cpi_av_rating\"><span>{{FormateGender(item.Gender)}}</span></div> -->\r\n                            </div>\r\n                            <div class=\"content\">\r\n                                <h4 class=\"title\">{{item.Name}}</h4>\r\n                                <p>{{item.Company.Name}}</p>\r\n                                <p><span class=\"flaticon-location-pin\"></span>\r\n                                    <!-- {{item?.Country?.Name == ''? \"'EmployerCompanyViewCountryNA' | translate\" : item.Name}}, -->\r\n                                    <!-- {{ item?.City?.Name == '' ? \"'EmployerCompanyViewCityNA' | translate\" : item.Name}} -->\r\n                                    {{ item?.City == '' ? \"'EmployerCompanyViewCityNA' | translate\" : item.City}}\r\n                                    \r\n                                </p>\r\n                                <p><span class=\"flaticon-mortarboard\"></span>\r\n                                    {{item?.Qualification}}\r\n                                </p>\r\n                                <p><span class=\"flaticon-controls\"></span>\r\n                                    {{item?.Experience}}\r\n                                </p>\r\n                                <!-- <p> {{ item?.City?.Name == '' ? \"'EmployerCompanyViewCityNA' | translate\" : item.Name }}</p> -->\r\n                            </div>\r\n                            <a class=\"btn btn-transparent float-right fn-lg\" routerLink=\"/Employer/Job/{{item._id}}\" routerLinkActive=\"router-link-active\"  href=\"#\">{{'EmployerSearchViewJob' | translate }}<span class=\"flaticon-right-arrow\"></span></a>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-12\" *ngIf=\"0 ==pagedItems.length\">\r\n                    <!-- *ngIf=\"lstResult?.lstResult.length == 0\" -->\r\n                        <div class=\"text-center bg-red noresult\">\r\n                            <span class=\"font-italic\">{{'EmployerSearchNoJobsFound' | translate }} </span><span>&#9785;</span>\r\n                           </div>\r\n                    </div>\r\n                    <div class=\"col-lg-12\" *ngIf=\"currentData?.lstResult.length > 5\">\r\n                        <!-- <app-custom-pagination [page]=\"page\" (nextPageEvent)=\"getNextPage()\"\r\n                            (previousPageEvent)=\"getPreviousPage()\" (loadPageCurrentEvent)=\"getloadPageCurrent()\">\r\n                        </app-custom-pagination> -->\r\n                        <!-- <div class=\"card-footer pb-0 pt-3\">\r\n                            <jw-pagination [items]=\"currentData?.lstResul\" (changePage)=\"onChangePage($event)\"></jw-pagination>\r\n                        </div> -->\r\n                        <div class=\"mbp_pagination\" >\r\n                            <ul *ngIf=\"pager.pages && pager.pages.length\" class=\"page_navigation\">\r\n                                <!-- <li class=\"page-item\" [ngClass]=\"{disabled:pager.currentPage === 1}\">\r\n                                    <a class=\"page-link\" (click)=\"setPage(1)\">First</a>\r\n                                </li> -->\r\n                                <li class=\"page-item\" [ngClass]=\"{disabled:pager.currentPage === 1}\">\r\n                                    <a class=\"page-link\" (click)=\"setPage(pager.currentPage - 1)\"><span\r\n                                        class=\"flaticon-left-arrow\"></span> {{'PagePrevious' | translate }}</a>\r\n                                </li>\r\n                                <li class=\"page-item\" *ngFor=\"let page of pager.pages\" [ngClass]=\"{active:pager.currentPage === page}\">\r\n                                    <a  class=\"page-link\" (click)=\"setPage(page)\">{{page}}</a>\r\n                                </li>\r\n                                <li class=\"page-item\" [ngClass]=\"{disabled:pager.currentPage === pager.totalPages}\">\r\n                                    <a class=\"page-link\" (click)=\"setPage(pager.currentPage + 1)\"> {{'PageNext' | translate }} <span\r\n                                        class=\"flaticon-right-arrow\"></span> </a>\r\n                                </li>\r\n                                <!-- <li class=\"page-item\" [ngClass]=\"{disabled:pager.currentPage === pager.totalPages}\">\r\n                                    <a class=\"page-link\" (click)=\"setPage(pager.totalPages)\">Last</a>\r\n                                </li> -->\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>","import { Component, OnInit, ViewChildren } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { cGenericSubItem, cGenericIdNameItem } from 'src/app/interface/Response/GenericIdName.class';\r\nimport { cJobList, cJobItem } from 'src/app/interface/Response/Job.class';\r\nimport { Page } from 'src/app/common/pagination/page';\r\nimport { ServiceJob } from 'src/app/services/job.service';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { ServiceQualification } from 'src/app/services/qualification.service';\r\nimport { ServiceYearsOfExperience } from 'src/app/services/years-of-experience.service';\r\nimport { ServiceFavourite } from 'src/app/services/favourite.service';\r\nimport { CustomPaginationService } from 'src/app/common/pagination/services/custom-pagination.service';\r\nimport { ServiceLanguages } from 'src/app/services/languages.service';\r\nimport { ModelJobSearch } from 'src/app/interface/Model/ModelJobSearch.class';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { ServiceIndustry } from 'src/app/services/industry.service';\r\nimport { ServiceJobFields } from 'src/app/services/job-fields.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ServiceCountry } from 'src/app/services/country.service';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { stringify } from '@angular/compiler/src/util';\r\nimport { PagerService } from '../pager.service';\r\nimport { Constants } from 'src/app/constants';\r\n// import { FilterPipe } from '../search/filter.pipe';\r\ndeclare function  applyFilter(f:any,g:any):any\r\n// const applyFilter = (data, filter) => data.filter(obj =>\r\n//   Object.entries(filter).every(([prop, find]) => find.includes(obj[prop]))\r\n// );\r\n\r\n// // demo\r\n// var users = [{name: 'John',email: 'johnson@mail.com',age: 25,address: 'USA'},{name: 'Tom',email: 'tom@mail.com',age: 35,address: 'England'},{name: 'Mark',email: 'mark@mail.com',age: 28,address: 'England'}];var filter = {address: ['England'], name: ['Mark'] };\r\n// var filter = {address: ['England'], name: ['Mark'] };\r\n\r\n// console.log(applyFilter(users, filter));\r\n\r\ndeclare var $: any;\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.css']\r\n})\r\nexport class SearchComponent extends baseComponent implements OnInit {\r\n  @ViewChildren('myCheckbox') private myCheckboxes :any;\r\n\r\n  currentData;\r\n  searchText: string;\r\n  searchTextC:string\r\n  stepTwo: boolean;\r\n  currentDataOG;\r\n  LkupJobFieldExtra;\r\n  hideCheck:boolean = false;\r\n  less1: number = 0;\r\n  limts1: number = 5;\r\n  less2: number = 0;\r\n  limts2: number = 5;\r\n  less3: number = 0;\r\n  limts3: number = 5;\r\n\r\n  LkupQualification: cGenericSubItem[];\r\n  LkupExperience: cGenericSubItem[];\r\n  LkupLanguage: cGenericSubItem[];\r\n  LkupJobField: cGenericIdNameItem[];\r\n  LkupIndustry: cGenericSubItem[];\r\n  LkupCountry: cGenericIdNameItem[];\r\n  LkupCity: cGenericSubItem[];\r\n  contactForm:FormGroup;\r\n  jobsearchCity:string;\r\n\r\n  modelSearch: ModelJobSearch = new ModelJobSearch();\r\n  lstResult: cJobList;\r\n  page: Page<cJobItem> = new Page();\r\n  lstJobs: any;\r\n  hideCheck1: boolean = false;\r\n  hideCheck2: boolean = false;\r\n  hideCheck3: boolean= false;\r\n  arrayCheck: any=[];\r\n  arrayCheck1: any=[];\r\n  arrayCheck2: any=[];\r\n  arrayCheck3: any=[];\r\n  arrayCheck4: any=[];\r\n  req:any = {\r\n    CompanyId:[],\r\n    ExperienceId:[],\r\n    IndustryId:[],\r\n    JobFieldId:[],\r\n    Qualificationid:[],\r\n    filterText:'',\r\n    cityId:''\r\n  };\r\n  request: any = {};\r\n  recentSkillSearch: any = [];\r\n  recentLocSearch: any = [];\r\n  // recentLoc1: string;\r\n  // recentSkill1:string;\r\n  // lastSearchArraySkill : any = [];\r\n  // lastSearchArrayLoc : any = [];\r\n  onlySkill :any = [];\r\n  onlySkillHTM :any = [];\r\n  OnlylocationHTM :any = [];\r\n  Onlylocation : any = [];\r\n  currentDatas: any;\r\n  totalfilterCheck: any;\r\n  OnlylocationRecent: any;\r\n  onlySkillRecent: any;\r\n  lessText: any = \"less text\";\r\n  LkupExperienceExtra: cGenericSubItem[];\r\n  LkupIndustryExtra: cGenericSubItem[];\r\n  sampleInput: string;\r\n  searchComp:any=[]\r\n  isReadMore:boolean=true\r\n  SCLTH:number=5;\r\n  coun:any = []\r\n  Refbutton:boolean=false\r\n  JobCumpanyC=[]\r\n  JobFieldC:any=[]\r\n  IndustryC:any=[]\r\n  ExperienceC:any=[]\r\n  Qualification:any=[]\r\n  allData:any=[]\r\n  allDataBackup:any=[]\r\n\r\n\r\n  allItems: any[];\r\n\r\n  // pager object\r\n  pager: any = {};\r\n\r\n  // paged items\r\n  pagedItems: any=[];\r\n\r\n  constructor(\r\n    private BLCountry: ServiceCountry,\r\n    private fb :FormBuilder,\r\n    private BLJob: ServiceJob,\r\n    BLServiceShowMessage: ServiceShowMessage,\r\n    BLJobLoginUser: ServiceLoginUser,BLTranslate: TranslateService,\r\n    private BLQualification: ServiceQualification,\r\n    private BLExperience: ServiceYearsOfExperience,\r\n    private BLIndustry: ServiceIndustry,\r\n    private BLJobFields: ServiceJobFields,\r\n    private BLFavourite: ServiceFavourite,\r\n    private paginationService: CustomPaginationService,\r\n    private BLLanguages: ServiceLanguages,\r\n    private http: HttpClient,\r\n    private PagerService:PagerService,\r\n    private cookies :CookieService) {\r\n    super(BLServiceShowMessage, BLJobLoginUser,BLTranslate)\r\n    $('.preloaderSecond').css('display','block')\r\n  }\r\n  async ngOnInit() {\r\n    this.company();\r\n    this.loadData();\r\n    console.log(this.LkupIndustry);\r\n    this.hideCheck = false;\r\n    this.createForm();\r\n    this.companyViewInit()\r\n    $('.preloaderSecond').css('display','block')\r\n    let priv =  this.cookies.get('priv') ? JSON.parse(this.cookies.get('priv')) : {cityId:[],filterText:''}\r\n    let privT =  this.cookies.get('privT')\r\n    console.log(priv);\r\n    if((priv.cityId!='' || priv!=undefined|| priv.cityId!=null || priv.filterText!='') && privT==\"true\"){\r\n      this.losding()\r\n      this.cookies.set('privT',JSON.stringify(false))\r\n      \r\n    }else{\r\n      this.cookies.set('privT',JSON.stringify(false))\r\n      priv={cityId:[],filterText:''}\r\n    }\r\n   \r\n    let url = Constants.apiRoot+ \"/Job/Search\";\r\n    $('#Lod').show()\r\n      this.http.post( url,priv).subscribe((res)=>{\r\n        this.currentData = res;\r\n        this.Refbutton=true\r\n        this.allData=res\r\n        this.allDataBackup=res\r\n        $('#Lod').hide()\r\n        // this.companyViewInit()\r\n        console.log(this.currentData);\r\n        this.cookies.set('priv',JSON.stringify({}))\r\n       \r\n        $('.preloaderSecond').css('display','block')\r\n        if(this.currentData.totalCount==0){\r\n          $('.preloaderSecond').css('display','block')\r\n          this.http.post( Constants.apiRoot+ '/Job/SearchCompany',Object({CompanyId:''})).subscribe({\r\n            next: (lst) => {\r\n              this.allData=lst\r\n              this.allDataBackup=lst\r\n              this.Refbutton=false\r\n              this.currentData = lst;\r\n              this.lstResult = Object.assign(lst);\r\n              this.page.pageable.pageSize = Object.assign(lst).pageSize;\r\n              this.page.totalElements = Object.assign(lst).totalCount;\r\n              this.page.content = Object.assign(lst).lstResult;\r\n              this.cookies.set('priv',JSON.stringify({}))\r\n              this.setPage(1);\r\n              $('.preloaderSecond').hide()\r\n             },\r\n            error: err => {\r\n              this.message.Error(err);\r\n              this.BLServiceShowMessage.sendMessage(this.message);\r\n              $('.preloaderSecond').hide()\r\n            }\r\n            \r\n          })\r\n        }else{\r\n          this.onsubCountfilter(res)\r\n          $('.preloaderSecond').css('display','block')\r\n          this.onsubCountremoveFilter()\r\n          this.setPage(1);\r\n        }\r\n        // console.log(res);\r\n\r\n      \r\n    })\r\n\r\n\r\n\r\n    // this.BLTranslate.get(\"jobsearchCity\").subscribe(res => { this.jobsearchCity = res; });\r\n    // console.log(this.LkupJobField);\r\n\r\n    // this.physicians = merge(this.physicianInfoForm.controls['firstname'].valueChanges,\r\n    //     this.physicianInfoForm.controls['lastname'].valueChanges).pipe(debounceTime(300),map(v => {\r\n    // return {\r\n    //     \"firstname\": this.physicianInfoForm.controls['firstname'].value,\r\n    //     \"lastname\": this.physicianInfoForm.controls['lastname'].value\r\n    // }\r\n    //   })\r\n    //     );\r\n  }\r\n  losding(){\r\n    setTimeout(() => {\r\n      $('.preloaderSecond').css('display','block')\r\n    }, 3000);\r\n  }\r\n\r\n  filterMenu(){\r\n    var set=!1,set1=!1,set2=!1,set3=!1,set4=!1,set5=!1;\r\n    setTimeout(() => {\r\n      $('.preloaderSecond').css('display','block')\r\n    }, 1800);\r\n    this.BLCountry.getListActive().subscribe({\r\n      next: lst => {\r\n        this.LkupCountry = lst;\r\n        this.onCountrySelect();\r\n        set=true\r\n      },\r\n      error: err => {\r\n        this.message.Error(err);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        set=true\r\n      }\r\n    });\r\n    this.BLIndustry.getListActive().subscribe({\r\n      next: lst => {\r\n        this.LkupIndustry = lst;  \r\n          setTimeout(() => {\r\n          this.allcount(this.LkupIndustry,this.IndustryC)   \r\n          },1000);\r\n          set1=true\r\n      },\r\n      error: err => {\r\n        this.message.Error(err);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        set1=true\r\n      }\r\n    });\r\n    this.BLJobFields.getListActive().subscribe({\r\n      next: lst => {\r\n        this.LkupJobField = lst;\r\n        setTimeout(() => {\r\n          this.allcount( this.LkupJobField,this.JobFieldC)   \r\n          }, 700);\r\n          set2=true\r\n      },\r\n      error: err => {\r\n        this.message.Error(err);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        set2=true\r\n      }\r\n    });\r\n    this.BLQualification.getListActive().subscribe({\r\n      next: lst => {\r\n        this.LkupQualification = lst;\r\n        setTimeout(() => {\r\n          this.allcount(this.LkupQualification,this.Qualification)   \r\n          }, 800);\r\n          set3=true\r\n      },\r\n      error: err => {\r\n        this.message.Error(err);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        set3=true\r\n      }\r\n    });\r\n    this.BLExperience.getListActive().subscribe({\r\n      next: lst => {\r\n        this.LkupExperience = lst;\r\n        console.log(this.LkupExperience)\r\n        setTimeout(() => {\r\n          this.allcount(this.LkupExperience,this.ExperienceC)   \r\n          }, 900);\r\n          set4=true\r\n      },\r\n      error: err => {\r\n        this.message.Error(err);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        set4=true\r\n      }\r\n    });\r\n    this.BLLanguages.getListActive().subscribe({\r\n      next: lst => {\r\n        this.LkupLanguage = lst;\r\n        set5=true\r\n      },\r\n      error: err => {\r\n        this.message.Error(err);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        set5=true\r\n      }\r\n    });\r\n   \r\n    setTimeout(() => {\r\n      $('.preloaderSecond').hide()\r\n    }, 2500);\r\n  }\r\n  // hidload(set,set1,set2,set3,set4,set5){\r\n  //   if(set && set1 && set2 && set3 && set4 && set5){\r\n  //     $('.preloaderSecond').hide()\r\n  //   }\r\n  // }\r\n  companyViewInit(){\r\n    $('.preloaderSecond').css('display','block')\r\n    var domD=[]\r\n    let priv =  {CompanyId:''}\r\n    let currentData =Object();\r\n    let url = Constants.apiRoot+ \"/Job/SearchCompany\";\r\n    this.http.post( url,priv).subscribe((res)=>{\r\n      currentData =Object(res);\r\n      $('.preloaderSecond').hide()\r\n      this.allData=res\r\n      this.allDataBackup=res\r\n      for(let i=0; i<currentData.lstResult.length; i++){\r\n        if( currentData.lstResult[i].Company!=''){\r\n          if(!domD.includes(currentData.lstResult[i].Company)){\r\n            this.searchComp.push({Name:currentData.lstResult[i].Company})\r\n            // this.totoljob(currentData.lstResult[i].Company)\r\n          }\r\n          domD.push(currentData.lstResult[i].Company)\r\n        }\r\n        \r\n      // \r\n    \r\n        \r\n      }\r\n      for (let i = 0; i < currentData.lstResult.length; i++) {\r\n        this.JobFieldC.push(currentData.lstResult[i].JobField)\r\n        this.JobCumpanyC.push(currentData.lstResult[i].Company)\r\n        this.IndustryC.push(currentData.lstResult[i].Industry)\r\n        this.ExperienceC.push(currentData.lstResult[i].Experience)\r\n        this.Qualification.push(currentData.lstResult[i].Qualification)\r\n        \r\n      }\r\n      this.coun=[]\r\n      setTimeout(() => {\r\n        this.searchComp.forEach(element => {\r\n          element.IsActive=true\r\n        });\r\n        this.allcount(this.searchComp,this.JobCumpanyC)\r\n         \r\n        }, 300);\r\n      // console.log(this.searchComp);\r\n\r\n      // this.currentData = currentData;\r\n      // this.setPage(1);\r\n      this.filterMenu()\r\n  })\r\n\r\n  // setTimeout(() => {\r\n  //   console.log(this.JobFieldC);\r\n  // }, 800);\r\n  \r\n\r\n  }\r\n\r\n  // totoljob(even:any){\r\n  //   // console.log(this.JobCumpanyC);\r\n    \r\n  //   this.JobCumpanyC.forEach(data => {\r\n  //     if(data==even){\r\n  //       this.coun.push(data);  \r\n  //     }\r\n  //   });\r\n\r\n  //   this.searchComp.forEach(data => {\r\n  //    var t= Object(data)\r\n  //     t.Count=this.allc(t.Name,)\r\n  //   });\r\n\r\n  // }\r\n  allc(d){\r\n    var counts = 0;\r\n    for (let i = 0; i < this.coun.length; i++) {\r\n     if(this.coun[i]==d){\r\n        counts ++\r\n     } \r\n    }\r\n    \r\n    return counts\r\n  }\r\n\r\n  allcount(LkupJobField,JobFieldC){\r\n    // setTimeout(() => {\r\n    // console.log(this.JobFieldC);\r\n      for (let i = 0; i < LkupJobField.length; i++) {\r\n        LkupJobField[i].Count=Number(this.LkupJobFieldcount(LkupJobField[i].Name,JobFieldC))\r\n      }\r\n    // }, 800);\r\n  \r\n  }\r\n\r\n  LkupJobFieldcount(e,JobFieldC){\r\n    var counts = 0;\r\n    for (let i = 0; i < JobFieldC.length; i++) {\r\n     if(JobFieldC[i]==e){\r\n        counts ++\r\n     } \r\n    }\r\n    return counts\r\n    \r\n  }\r\n  public getNextPage(): void {\r\n    this.page.pageable = this.paginationService.getNextPage(this.page);\r\n    this.loadData();\r\n  }\r\n\r\n  public getPreviousPage(): void {\r\n    this.page.pageable = this.paginationService.getPreviousPage(this.page);\r\n    this.loadData();\r\n  }\r\n  public getloadPageCurrent(): void {\r\n    this.loadData();\r\n  }\r\n  FilterData(){\r\n    this.page.pageable.pageCurrent = 1;\r\n    this.loadData();\r\n  }\r\n  loadData() {\r\n    this.modelSearch.CurrentPage = this.page.pageable.pageCurrent;\r\n    this.BLJob.Search(this.modelSearch).subscribe({\r\n      next: lst => {\r\n        this.lstResult = lst;\r\n        this.page.pageable.pageSize = lst.pageSize;\r\n        this.page.totalElements = lst.totalCount;\r\n        this.page.content = lst.lstResult;\r\n       },\r\n      error: err => {\r\n        this.message.Error(err);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n      }\r\n    });\r\n  }\r\n  FormateGender(value) {\r\n    \r\n    if (value == null)\r\n      return \"N/A\";\r\n\r\n    switch (value) {\r\n      case 0:\r\n        return \"N/A\";\r\n        break;\r\n      case 1:\r\n        return \"M\";\r\n        break;\r\n      case 2:\r\n        return \"F\";\r\n        break;\r\n    }\r\n\r\n    return \"N/A\";\r\n  }\r\n  FormatGenericSubItem(obj: cGenericSubItem) {\r\n    if (!obj || obj == null)\r\n      return 'N/A';\r\n\r\n    if (obj?.Name == null || obj?.Name == \"\")\r\n      return 'N/A';\r\n\r\n    return obj?.Name;\r\n  }\r\nsubmit(){  \r\n}\r\nonCountrySelect() {\r\n  this.LkupCity = [];\r\n\r\n  var sub = this.LkupCountry?.find(x => x._id == this.modelSearch.CountryId)?.subItems;\r\n  if (!sub || sub.length == 0)\r\n    return;\r\n\r\n  this.LkupCity = sub.filter(y => y.IsActive == true).sort((a, b) => a.Name.localeCompare(b.Name));\r\n  this.FilterData();\r\n}\r\n\r\n// loc first alpha capital\r\n// trigger(event) {\r\n//   const inputValue = event.target.value;\r\n//   const result = inputValue.charAt(0).toUpperCase() + inputValue.slice(1);\r\n//   this.sampleInput = result;\r\n//   console.log(this.sampleInput);\r\n// }\r\n\r\n// code start\r\ncreateForm() {\r\n  // console.log(this.cookies.get('Onlyloc'));\r\n  this.Onlylocation =  this.cookies.get('Onlyloc') ? JSON.parse(this.cookies.get('Onlyloc')) : []\r\n  this.OnlylocationHTM =  this.cookies.get('Onlyloc') ? JSON.parse(this.cookies.get('Onlyloc')) : []\r\n  // this.onlySkillRecent \r\n  this.onlySkill = this.cookies.get('skillC')  ? JSON.parse(this.cookies.get('skillC')) : []\r\n  this.onlySkillHTM = this.cookies.get('skillC')  ? JSON.parse(this.cookies.get('skillC')) : []\r\n  this.cookies.set('Onlyloc',JSON.stringify(this.OnlylocationHTM))\r\n  this.cookies.set('skillC',JSON.stringify(this.onlySkillHTM))\r\n  this.contactForm = this.fb.group({\r\n    skills: '',\r\n    location : ''\r\n  });\r\n}\r\nget k() { return this.contactForm.controls; }\r\n// submit on search\r\nonSubmit(data) {\r\n  console.log(data.value);\r\n  var req=Object()\r\n  let url = Constants.apiRoot+ \"/Job/Search\";\r\n  if(this.contactForm.get('skills').value != '' ||  this.contactForm.get('location').value != ''){\r\n   let getONlyloc= this.cookies.get('Onlyloc');\r\n   let getskills = this.cookies.get('skillC');\r\n    const l= Object(JSON.parse( getONlyloc))\r\n    const k= Object(JSON.parse( getskills))\r\n    if(l.length>0 || k.length>0){\r\n      if(this.contactForm.get('skills').value != ''){\r\n        if(!k.includes(this.contactForm.get('skills').value)){\r\n          this.onlySkill.push(this.contactForm.get('skills').value)\r\n          this.cookies.set('skillC',JSON.stringify(this.onlySkill))\r\n        }\r\n      }\r\n      if(this.contactForm.get('location').value != ''){\r\n        if(!l.includes(this.contactForm.get('location').value)){\r\n          this.Onlylocation.push(this.contactForm.get('location').value)\r\n          this.cookies.set('Onlyloc',JSON.stringify(this.Onlylocation))\r\n        }\r\n      }\r\n    }else{\r\n      if(this.contactForm.get('skills').value != ''){\r\n        this.onlySkill.push(this.contactForm.get('skills').value.toString())\r\n        this.cookies.set('skillC',JSON.stringify(this.onlySkill))\r\n      }\r\n      if(this.contactForm.get('location').value != ''){\r\n        this.Onlylocation.push(this.contactForm.get('location').value.toString())\r\n        this.cookies.set('Onlyloc',JSON.stringify(this.Onlylocation))\r\n      }\r\n    }\r\n\r\n    //  console.log(this.Onlylocation,this.onlySkill);\r\n    var laction= ''\r\n    var lactionskil=''\r\n    if( this.contactForm.get('location').value.toString()!=''&&this.contactForm.get('location').value.toString()!=null){\r\n      laction= this.contactForm.get('location').value.split(',').map( a => a.charAt(0).toUpperCase() + a.substr(1))\r\n    }\r\n    if( this.contactForm.get('skills').value.toString()!=''&&this.contactForm.get('skills').value.toString()!=null){\r\n      lactionskil= this.contactForm.get('skills').value.toLowerCase()\r\n    }\r\n   req.filterText = lactionskil\r\n   req.cityId = laction\r\n    $('.preloaderSecond').css('display','block')\r\n   this.cookies.set('priv',JSON.stringify(req))\r\n   this.http.post( url,req).subscribe((res)=>{\r\n      this.currentData=this.currentDataOG = res;\r\n      this.allData=res\r\n      this.allDataBackup=res\r\n      if(this.k.skills.value!=''){\r\n        this.Refbutton=true\r\n      }\r\n      if(this.k.location.value!=''){\r\n        this.Refbutton=true\r\n      }\r\n      console.log(this.currentDataOG);\r\n      this.onsubCountfilter(this.currentData)\r\n\r\n      // this.setPage(1);\r\n      // this.filte(this.req)\r\n      console.log(this.req);\r\n      \r\n      this.onsubCountremoveFilter()\r\n      $('.preloaderSecond').hide()\r\n   })\r\n  }else{\r\n  //   this.req.cityId = ''\r\n  //   this.req.filterText = ''\r\n  //   this.http.post( url,this.req).subscribe((res)=>{\r\n  //     this.currentData=this.currentDataOG = s;\r\n  //     console.log(this.currentDataOG);\r\n  //     this.setPage(1);\r\n  //  })\r\n  }\r\n\r\n\r\n\r\n\r\n  // if(this.contactForm.get('skills').value != '' &&  this.contactForm.get('location').value != '') {\r\n  //   // this.stepTwo = true;\r\n  //   let url = Constants.apiRoot+ \"/Job/Search\";\r\n  //   this.request.cityId = this.contactForm.get('location').value\r\n  //   this.request.filterText = this.contactForm.get('skills').value\r\n  //   console.log(this.request);\r\n  //   if(this.onlySkill.length < 3) {\r\n  //     this.onlySkill.push(this.contactForm.get('skills').value.toString())\r\n  //     this.cookies.set('skillC',JSON.stringify(this.onlySkill))\r\n  //     console.log(this.onlySkill);\r\n  //   }\r\n  //    else {\r\n  //     this.onlySkill.splice(0,1);\r\n  //     this.onlySkill.push(this.contactForm.get('skills').value.toString())\r\n  //     this.cookies.set('skillC',JSON.stringify(this.onlySkill))\r\n  //   }\r\n  //   if(this.Onlylocation.length < 3) {\r\n  //     this.Onlylocation.push(this.contactForm.get('location').value.toString())\r\n  //     this.cookies.set('Onlyloc',JSON.stringify(this.Onlylocation))\r\n  //     console.log(this.Onlylocation);\r\n  //   } \r\n  //   else {\r\n  //     this.Onlylocation.splice(0,1);\r\n  //     this.Onlylocation.push(this.contactForm.get('location').value.toString())\r\n  //     this.cookies.set('Onlyloc',JSON.stringify(this.Onlylocation))\r\n  //   }\r\n  //   this.http.post( url,this.request).subscribe((res)=>{\r\n  //     this.currentData=this.currentDataOG = res;\r\n  //     console.log(this.currentDataOG);\r\n  //   })\r\n  // }\r\n  // else if(this.contactForm.get('skills').value != ''){\r\n  //   // this.stepTwo = true;\r\n  //   if(this.onlySkill.length < 3) {\r\n  //     this.onlySkill.push(this.contactForm.get('skills').value.toString())\r\n  //     this.cookies.set('skillC',JSON.stringify(this.onlySkill))\r\n  //     console.log(this.onlySkill);\r\n  //   }\r\n  //    else {\r\n  //     this.onlySkill.splice(0,1);\r\n  //     this.onlySkill.push(this.contactForm.get('skills').value.toString())\r\n  //     this.cookies.set('skillC',JSON.stringify(this.onlySkill))\r\n  //   }\r\n  //   let url = Constants.apiRoot+ \"/Job/Search\";\r\n  //   this.request.filterText = this.contactForm.get('skills').value\r\n  //   // this.cookies.set('skill',this.contactForm.get('skills').value)\r\n  //   console.log(this.request);\r\n  //   this.http.post( url,this.request).subscribe((res)=>{\r\n  //     this.currentData = this.currentDataOG = res;\r\n  //     console.log(this.currentDataOG);\r\n  //   })\r\n  // }\r\n  // else if(this.contactForm.get('location').value != '') {\r\n  //   // this.stepTwo = true;\r\n  //   if(this.Onlylocation.length < 3) {\r\n  //     this.Onlylocation.push(this.contactForm.get('location').value.toString())\r\n  //     this.cookies.set('Onlyloc',JSON.stringify(this.Onlylocation))\r\n  //     console.log(this.Onlylocation);\r\n  //   } \r\n  //   else {\r\n  //     console.log(\"2nd if\",this.Onlylocation);\r\n  //     this.Onlylocation.splice(0,1);\r\n  //     this.Onlylocation.push(this.contactForm.get('location').value.toString())\r\n  //     this.cookies.set('Onlyloc',JSON.stringify(this.Onlylocation))\r\n  //   }\r\n  //   let url = Constants.apiRoot+ \"/Job/Search\";\r\n  //   this.request.cityId = this.contactForm.get('location').value\r\n  //   console.log(this.request);\r\n  //   this.http.post( url,this.request).subscribe((res)=>{\r\n  //     this.currentData = this.currentDataOG = res;\r\n  //     console.log(this.currentData);\r\n  //     // console.log(res);\r\n  //   })\r\n  // }\r\n  // else {\r\n  //   this.ngOnInit();\r\n  // }\r\n}\r\n\r\nonsubCountfilter(D:any){\r\n  this.allData=D\r\n  this.allDataBackup=D\r\n  this.JobFieldC=[]\r\n  this.JobCumpanyC=[]\r\n  this.IndustryC=[]\r\n  this.ExperienceC=[]\r\n  this.Qualification=[]\r\n  \r\n  for (let i = 0; i < D.lstResult.length; i++) {\r\n    this.JobFieldC.push(D.lstResult[i].JobField)\r\n    this.JobCumpanyC.push(D.lstResult[i].Company)\r\n    this.IndustryC.push(D.lstResult[i].Industry)\r\n    this.ExperienceC.push(D.lstResult[i].Experience)\r\n    this.Qualification.push(D.lstResult[i].Qualification)\r\n    \r\n  }\r\n  setTimeout(() => {\r\n    this.searchComp.forEach(element => {\r\n      element.IsActive=true\r\n    });\r\n    this.allcount(this.searchComp,this.JobCumpanyC)    \r\n    }, 300);\r\n    setTimeout(() => {\r\n      this.allcount(this.LkupIndustry,this.IndustryC)   \r\n      },1000);\r\n    setTimeout(() => {\r\n      this.allcount( this.LkupJobField,this.JobFieldC)   \r\n      }, 700);\r\n    setTimeout(() => {\r\n      this.allcount(this.LkupQualification,this.Qualification)   \r\n      }, 800);\r\n    setTimeout(() => {\r\n      this.allcount(this.LkupExperience,this.ExperienceC)   \r\n      }, 900);\r\n     \r\n}\r\n\r\nonsubCountremoveFilter() {\r\n  setTimeout(() => {\r\n    $('.preloaderSecond').css('display','block')\r\n  }, 500);\r\n  // this.ngOnInit();\r\n  // $('input').parents('mat-checkbox').removeClass('mat-checkbox-checked')\r\n  // $('input').parents('mat-checkbox').addClass('cdk-focused cdk-program-focused')\r\n  // $('input').parents('mat-checkbox').attr('aria-checked=\"false\"')\r\n  // $(\"input:checkbox:not(:checked)\").prop('ariaChecked', false)\r\n  // $(\"input:checkbox:not(:checked)\").prop('checked', false)\r\n  // $(\"input:checkbox:not(:checked)\").click()\r\n\r\n\r\n  \r\n  this.myCheckboxes.checked = false;\r\n  // this.req = {};    \r\n  // console.log(this.req)\r\n  // let tryCheck = document.querySelector('.xyz')\r\n  // tryCheck.forEach(i => {\r\n  //   console.log(i)\r\n  //   // console.log(i.target.checked)\r\n  // })\r\n  // this.contactForm.controls.skills.setValue('');\r\n  // this.contactForm.controls.location.setValue('');\r\n  // this.req = {\r\n  //   CompanyId:[],\r\n  //   ExperienceId:[],\r\n  //   IndustryId:[],\r\n  //   JobFieldId:[],\r\n  //   Qualificationid:[],\r\n  //   filterText:'',\r\n  //   cityId:''\r\n  // };\r\n  // this.arrayCheck = [];\r\n  // this.arrayCheck1 = [];\r\n  // this.arrayCheck2 = [];\r\n  // this.arrayCheck3 = [];\r\n  // this.arrayCheck4 = [];\r\n  // this.Refbutton=false\r\n  // this.searchComp=[]\r\n  this.fildsubmintfilte(this.req)\r\n}\r\n\r\n\r\n//   searchData() {\r\n//     if(this.modelSearch.filterText != '') {\r\n//     let url = Constants.apiRoot+ \"/Job/Search\";\r\n//       this.http.post( url,{\r\n//         filterText : this.modelSearch.filterText\r\n//       }).subscribe((res)=>{\r\n//         let count = res;\r\n//         console.log(count);\r\n//         console.log(this.lstResult.lstResult[0].Name)\r\n//       })\r\n//     }\r\n//     console.log(this.modelSearch.filterText);\r\n//   }\r\n\r\n\r\n  // 1\r\n  FieldSearchData(event,id) {\r\n    console.log(event,id);\r\n    \r\n    // this.LkupJobFieldExtra = this.LkupJobField;\r\n    if(event.checked === true) {\r\n     this.arrayCheck.push(id) \r\n     console.log(\"TRUEEE\",this.arrayCheck)\r\n     this.req.JobFieldId =  this.arrayCheck \r\n    } else {\r\n      const index = this.arrayCheck.indexOf(id);\r\n      if (index > -1) {\r\n        this.arrayCheck.splice(index, 1);\r\n      }\r\n      // this.arrayCheck.splice(id)\r\n    }\r\n    // console.log(this.arrayCheck.map(v => v.toLowerCase()));\r\n    if(this.contactForm.get('location').value != '') {\r\n    // this.req.cityId = this.sampleInput\r\n    this.req.cityId = this.contactForm.get('location').value.split(',')\r\n    }\r\n    if(this.contactForm.get('skills').value != '') {\r\n    this.req.filterText = this.contactForm.get('skills').value.toLowerCase()\r\n    }\r\n    console.log(this.req);\r\n    this.filte(this.req)\r\n    // $('.preloaderSecond').css('display','block')\r\n    // let url = Constants.apiRoot+ \"/Job/Search\";\r\n    // this.http.post( url,this.req).subscribe((res)=>{\r\n    //   this.currentData = res;\r\n    //   console.log(this.currentData);\r\n    //   this.objectnull(this.req)\r\n    //   this.setPage(1);\r\n    //   $('.preloaderSecond').hide()\r\n      // this.currentData.lstResult =  this.currentData.lstResult.map(item => {\r\n      //   item.checked = false\r\n      // })\r\n      // console.log(this.currentData)\r\n    // })\r\n\r\n    // this.totalfilterCheck = this.arrayCheck.length; \r\n  }\r\n  \r\n  // 2\r\n  FilterIndustryData(event,id) {\r\n    if(event.checked === true) {\r\n       this.arrayCheck1.push(id) \r\n       console.log(this.arrayCheck1.map(v => v.toLowerCase()))\r\n      // this.arrayCheck1 = id\r\n      this.req.IndustryId =  this.arrayCheck1\r\n      } else {\r\n        const index = this.arrayCheck1.indexOf(id);\r\n      if (index > -1) {\r\n        this.arrayCheck1.splice(index, 1);\r\n      }\r\n        // this.arrayCheck1.splice(id) \r\n      }\r\n    // var req = {'filterText' : this.contactForm.get('location').value,'IndustryId' :[ this.arrayCheck1 ]}\r\n    if(this.contactForm.get('location').value != '') {\r\n    this.req.cityId = this.contactForm.get('location').value.split(',')\r\n    // this.req.cityId = this.sampleInput\r\n    }\r\n    if(this.contactForm.get('skills').value != '') {\r\n    this.req.filterText = this.contactForm.get('skills').value.toLowerCase()\r\n    }\r\n    this.filte(this.req)\r\n    // $('.preloaderSecond').css('display','block')\r\n    // console.log(this.req);\r\n    // let url = Constants.apiRoot+ \"/Job/Search\";\r\n    //   this.http.post( url,this.req).subscribe((res)=>{\r\n    //     this.currentData = res;\r\n    //     this.objectnull(this.req)\r\n    //     console.log(this.currentData);\r\n    //     this.setPage(1);\r\n    //     $('.preloaderSecond').hide()\r\n    //     // console.log(res);\r\n    //   })\r\n\r\n      // this.totalfilterCheck = this.arrayCheck.length + this.arrayCheck1.length;\r\n  }\r\n\r\n  // 3\r\n  FilterExphData(event,id) {\r\n    if(event.checked === true) {\r\n       this.arrayCheck2.push(id)      \r\n      // this.arrayCheck2 = id;\r\n      console.log(this.arrayCheck2)\r\n      this.req.ExperienceId = this.arrayCheck2\r\n      }\r\n      else {\r\n        // this.arrayCheck2.splice(id) \r\n        const index = this.arrayCheck2.indexOf(id);\r\n        if (index > -1) {\r\n          this.arrayCheck2.splice(index, 1);\r\n        }\r\n      }\r\n    // var req = {'filterText' : this.contactForm.get('location').value,'ExperienceId' :[ this.arrayCheck ]}\r\n    \r\n    if(this.contactForm.get('location').value != '') {\r\n    // this.req.cityId = this.contactForm.get('location').value\r\n    this.req.cityId = this.contactForm.get('location').value.split(',')\r\n    // this.req.cityId = this.sampleInput\r\n    }\r\n    if(this.contactForm.get('skills').value != '') {\r\n    this.req.filterText = this.contactForm.get('skills').value.toLowerCase()\r\n    }\r\n    this.filte(this.req)\r\n    // $('.preloaderSecond').css('display','block')\r\n    // console.log(this.req);\r\n    // let url = Constants.apiRoot+ \"/Job/Search\";\r\n    //   this.http.post( url,this.req).subscribe((res)=>{\r\n    //     this.currentData = res;\r\n    //     this.objectnull(this.req)\r\n    //     console.log(this.currentData);\r\n    //     this.setPage(1);\r\n    //     $('.preloaderSecond').hide()\r\n    //     // console.log(res);\r\n    //   })\r\n      // this.totalfilterCheck = this.arrayCheck.length + this.arrayCheck1.length + this.arrayCheck2.length;\r\n  }\r\n\r\n  // 4\r\n  FilterSearchData(event,id) {\r\n    if(event.checked === true) {\r\n       this.arrayCheck3.push(id) \r\n       console.log(this.arrayCheck3)\r\n      // this.arrayCheck3 = id\r\n      this.req.Qualificationid = this.arrayCheck3\r\n      this.modelSearch.Qualificationid=this.req.Qualificationid\r\n    }\r\n    else {\r\n      // this.arrayCheck3.splice(id) \r\n      const index = this.arrayCheck3.indexOf(id);\r\n      if (index > -1) {\r\n        this.arrayCheck3.splice(index, 1);\r\n      }\r\n    }\r\n    // this.req= {'' : this.contactForm.get('location').value,'Qualificationid' :[ id ]}\r\n    // this.req.filterText= this.contactForm.get('location').value;\r\n    if(this.contactForm.get('location').value != '') {\r\n      this.req.CityiId = this.contactForm.get('location').value.split(',')\r\n      // this.req.cityId = this.sampleInput\r\n      }\r\n      if(this.contactForm.get('skills').value != '') {\r\n      this.req.filterText = this.contactForm.get('skills').value.toLowerCase()\r\n      this.modelSearch.filterText=this.req.filterText\r\n      }\r\n    \r\n    console.log(this.req);\r\n    this.filte(this.req)\r\n    // $('.preloaderSecond').css('display','block')\r\n    // let url = Constants.apiRoot+ \"/Job/Search\";\r\n    //   this.http.post( url,this.req).subscribe({\r\n    //     next: (lst) => {\r\n    //       this.currentData = lst;\r\n    //       this.lstResult = Object.assign(lst);\r\n    //       this.page.pageable.pageSize = Object.assign(lst).pageSize;\r\n    //       this.page.totalElements = Object.assign(lst).totalCount;\r\n    //       this.page.content = Object.assign(lst).lstResult;\r\n    //       this.objectnull(this.req)\r\n    //       this.setPage(1);\r\n    //       $('.preloaderSecond').hide()\r\n    //      },\r\n    //     error: err => {\r\n    //       this.message.Error(err);\r\n    //       this.BLServiceShowMessage.sendMessage(this.message);\r\n    //       $('.preloaderSecond').hide()\r\n    //     }\r\n    //   })\r\n      // this.totalfilterCheck = this.arrayCheck.length + this.arrayCheck1.length + this.arrayCheck2.length + this.arrayCheck3.length;\r\n  }\r\n\r\n  //5\r\n  FilterCompny(event,id) {\r\n    console.log(event);\r\n    \r\n    if(event.checked === true) {\r\n      this.arrayCheck4.push(id)   \r\n      this.req.CompanyId =this.arrayCheck4 \r\n    }else {\r\n        // this.arrayCheck2.splice(id) \r\n        const index = this.arrayCheck4.indexOf(id);\r\n        if (index > -1) {\r\n          this.arrayCheck4.splice(index, 1);\r\n        }\r\n        this.req.CompanyId =this.arrayCheck4\r\n    }\r\n    if(this.contactForm.get('location').value != '') {\r\n      this.req.cityId = this.contactForm.get('location').value.split(',')\r\n      }\r\n    if(this.contactForm.get('skills').value != '') {\r\n      this.req.filterText = this.contactForm.get('skills').value.toLowerCase()\r\n    }\r\n    // $('.preloaderSecond').css('display','block')\r\n    console.log(this.req);\r\n    // event.checked=!event.checked\r\n    this.filte(this.req)\r\n    // let url = Constants.apiRoot+ \"/Job/Search\";\r\n    //   this.http.post( url,this.req).subscribe((res)=>{\r\n    //     this.currentData = res;\r\n    //     console.log(this.currentData);\r\n    //     this.objectnull(this.req)\r\n    //     // console.log(res);\r\n    //     this.setPage(1);\r\n    //     $('.preloaderSecond').hide()\r\n    //   })\r\n\r\n      // this.totalfilterCheck = this.arrayCheck.length + this.arrayCheck1.length + this.arrayCheck2.length;\r\n  }\r\n\r\n  search(event) {\r\n    console.log(event.target.value);\r\n    event.target.value\r\n    // let url = Constants.apiRoot+ \"/Job/ForSearchValidation\"\r\n    let url = Constants.apiRoot+ \"/Job/ForSearchValidation\"\r\n    this.http.post(url ,{\r\n      filterTextValidation : this.contactForm.get('skills').value\r\n    }).subscribe(res => {\r\n      var alllist=Object(res)\r\n      var c,j,n;\r\n      this.currentDatas = [];\r\n      for(let i = 0; i < alllist.lstResult.length; i++) {\r\n        if(alllist.lstResult[i].Company!= null ){\r\n          if(!this.currentDatas.includes(alllist.lstResult[i].Company)){\r\n              this.currentDatas.push(alllist.lstResult[i].Company)\r\n          }\r\n        }else if(alllist.lstResult[i].JobField != null) {\r\n          if(!this.currentDatas.includes(alllist.lstResult[i].JobField)){\r\n           this.currentDatas.push(alllist.lstResult[i].JobField)\r\n          }\r\n        }\r\n        else if(alllist.lstResult[i].Name != null) {\r\n          if(!this.currentDatas.includes(alllist.lstResult[i].Name)){\r\n          this.currentDatas.push(alllist.lstResult[i].Name)\r\n          }\r\n        }\r\n      }\r\n      // if(!alllist.includes(this.contactForm.get('skills').value)){\r\n\r\n      // }\r\n      console.log(this.currentDatas);\r\n      // this.currentDatas = res;\r\n      // console.log(this.currentDatas.lstResult);\r\n\r\n      // CORS ISSUE CODE\r\n      let headers = new HttpHeaders()\r\n      headers=headers.set('content-type','application/json');\r\n      headers=headers.set('Access-Control-Allow-Origin', '*');\r\n      console.log(event.target.value);\r\n  \r\n      return this.http.post('http://api.ms-employment.digisummits.com/Job/ForSearchValidation', event.target.value,{'headers':headers})\r\n    })\r\n  }\r\n  industrySearch(event) {\r\n    this.searchText=event.target.value\r\n  }\r\n  industrySearchC(event) {\r\n    this.searchTextC=event.target.value\r\n  }\r\n\r\n  getLocation() {\r\n    console.log(\"getLocation Called\");\r\n    var bdcApi = \"https://api.bigdatacloud.net/data/reverse-geocode-client\"\r\n  \r\n    navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n            bdcApi = bdcApi\r\n                + \"?latitude=\" + position.coords.latitude\r\n                + \"&longitude=\" + position.coords.longitude\r\n                + \"&localityLanguage=en\";\r\n            this.getApi(bdcApi);\r\n  \r\n        },\r\n        (err) => { this.getApi(bdcApi); },\r\n        {\r\n            enableHighAccuracy: true,\r\n            timeout: 5000,\r\n            maximumAge: 0\r\n        });\r\n  }\r\n  \r\n  getApi(bdcApi) {\r\n    $('.preloaderSecond').css('display','block')\r\n    this.http.get( bdcApi).subscribe((res)=>{\r\n      var d  = Object(res) ;\r\n      console.log(res);\r\n      console.log(d.city);\r\n      this.contactForm.controls.location.setValue(d.city);\r\n      $('.preloaderSecond').hide()\r\n\r\n      // console.log(res);\r\n    })\r\n    // Http.open(\"GET\", bdcApi);\r\n    // Http.send();\r\n    // Http.onreadystatechange = function () {\r\n    //     if (this.readyState == 4 && this.status == 200) {\r\n    //         result.innerHTML = this.responseText;\r\n    //     }\r\n    // };\r\n  }\r\n\r\n  // industrySearch(event) {\r\n  //   this.LkupJobFieldExtra = this.LkupIndustry\r\n  //   console.log(event.target.value);\r\n  //   // console.log(this.LkupJobFieldExtra)\r\n  //   this.LkupJobFieldExtra.filter(item => {\r\n  //     if(item.Name === event.target.value) {\r\n  //       return item\r\n  //     }\r\n  //   })\r\n  // }\r\n\r\n  removeFilter() {\r\n  // this.ngOnInit();\r\n  $('input').parents('mat-checkbox').removeClass('mat-checkbox-checked')\r\n  $('input').parents('mat-checkbox').addClass('cdk-focused cdk-program-focused')\r\n  $('input').parents('mat-checkbox').attr('aria-checked=\"false\"')\r\n  $(\"input:checkbox:not(:checked)\").prop('ariaChecked', false)\r\n  $(\"input:checkbox:not(:checked)\").prop('checked', false)\r\n  // $(\"input:checkbox:not(:checked)\").click()\r\n\r\n\r\n  \r\n  this.myCheckboxes.checked = false;\r\n  this.req = {};    \r\n  console.log(this.req)\r\n  if(this.contactForm.get('location').value != '') {\r\n    this.req.cityId = this.contactForm.get('location').value.split(',')\r\n    // this.req.cityId = this.sampleInput\r\n  }\r\n  if(this.contactForm.get('skills').value != '') {\r\n    this.req.filterText = this.contactForm.get('skills').value.toLowerCase()\r\n  }\r\n  console.log(this.arrayCheck)\r\n  // let tryCheck = document.querySelector('.xyz')\r\n  // tryCheck.forEach(i => {\r\n  //   console.log(i)\r\n  //   // console.log(i.target.checked)\r\n  // })\r\n  // this.contactForm.controls.skills.setValue('');\r\n  // this.contactForm.controls.location.setValue('');\r\n  this.req = {\r\n    CompanyId:[],\r\n    ExperienceId:[],\r\n    IndustryId:[],\r\n    JobFieldId:[],\r\n    Qualificationid:[],\r\n    filterText:'',\r\n    cityId:''\r\n  };\r\n  this.arrayCheck = [];\r\n  this.arrayCheck1 = [];\r\n  this.arrayCheck2 = [];\r\n  this.arrayCheck3 = [];\r\n  this.arrayCheck4 = [];\r\n  // this.Refbutton=false\r\n  // this.searchComp=[]\r\n\r\n\r\n\r\n  // this.searchComp= this.searchComp\r\n  // this.LkupJobField= this.LkupJobField\r\n  // this.LkupIndustry=this.LkupIndustry\r\n  // this.LkupExperience=this.LkupExperience\r\n  // this.LkupQualification=this.LkupQualification\r\n  // $('.preloaderSecond').css('display','block')\r\n  //   console.log(this.req);\r\n  //   let req =  {CompanyId:''}\r\n  //   let currentData =Object();\r\n  //   let url = Constants.apiRoot+ \"/Job/SearchCompany\";\r\n  //   this.http.post( url,this.req).subscribe((res)=>{\r\n      this.currentData = this.currentDataOG = this.allDataBackup;\r\n      console.log(this.currentData);\r\n      this.allData=this.allDataBackup\r\n      this.allDataBackup=this.allDataBackup\r\n      this.onsubCountfilter(this.allDataBackup)\r\n      this.setPage(1);\r\n      \r\n    //   $('.preloaderSecond').hide()\r\n    //   // console.log(res);\r\n    // })\r\n  }\r\n\r\n  skillset(i,event) {\r\n    // console.log(i)\r\n    console.log(event.target.innerHTML)\r\n    this.contactForm.controls.skills.setValue(this.htmlDecode(event.target.innerHTML))\r\n    this.contactForm.controls.location.setValue('')\r\n    let data =  event.target.innerHTML\r\n    this.request = {}\r\n    console.log(data);\r\n    this.onSubmit(data)\r\n  }\r\n\r\n  locationset(i,event) {\r\n    // console.log(i)\r\n    console.log(event.target.innerHTML)\r\n    this.contactForm.controls.location.setValue(this.htmlDecode(event.target.innerHTML))\r\n    this.contactForm.controls.skills.setValue('')\r\n    let data =  event.target.innerHTML\r\n    this.request = {}\r\n    console.log(data);\r\n    this.onSubmit(data)\r\n  }\r\n\r\n  company() {\r\n\r\n  }\r\n\r\n\r\n  // FOR LOOPS FOR API FILTER\r\n  more3(event) {\r\n    this.hideCheck3=!this.hideCheck3\r\n    console.log(this.LkupExperience)\r\n    this.LkupExperienceExtra = this.LkupExperience;\r\n    this.less3=0;\r\n    this.limts3+=this.LkupExperience.length\r\n    \r\n  }\r\n  lessFun3() {\r\n    this.hideCheck3=!this.hideCheck3\r\n    console.log(this.LkupExperience)\r\n    this.LkupExperienceExtra = this.LkupExperience;\r\n    this.less3 = 0;\r\n    this.limts3-=this.LkupExperience.length;\r\n  }\r\n\r\n  more2(event) {\r\n    this.hideCheck2=!this.hideCheck2\r\n    console.log(this.LkupIndustry)\r\n    this.LkupIndustryExtra = this.LkupIndustry;\r\n    this.less2=0;\r\n    this.limts2+=this.LkupIndustry.length\r\n    \r\n  }\r\n  lessFun2() {\r\n    this.hideCheck2=!this.hideCheck2\r\n    console.log(this.LkupIndustry)\r\n    this.LkupIndustryExtra = this.LkupIndustry;\r\n    this.less2 = 0;\r\n    this.limts2-=this.LkupIndustry.length;\r\n  }\r\n\r\n  more1(event) {\r\n    this.hideCheck1=!this.hideCheck1\r\n    console.log(this.LkupJobField)\r\n    this.LkupJobFieldExtra = this.LkupJobField;\r\n    this.less1=0;\r\n    this.limts1+=this.LkupJobField.length\r\n    \r\n  }\r\n  lessFun1() {\r\n    this.hideCheck1=!this.hideCheck1\r\n    console.log(this.LkupJobField)\r\n    this.LkupJobFieldExtra = this.LkupJobField;\r\n    this.less1 = 0;\r\n    this.limts1-=this.LkupJobField.length;\r\n  }\r\n\r\n\r\n  filterCheck(i,item) {\r\n    // console.log(i)\r\n    // console.log(item)\r\n    // console.log(this.arrayCheck)\r\n    if(this.arrayCheck.includes(item)){\r\n      $('[value=\"'+item.toString()+'\"]').parents('mat-checkbox').removeClass('mat-checkbox-checked')\r\n      $('[value=\"'+item.toString()+'\"]').prop('ariaChecked', false)\r\n      $('[value=\"'+item.toString()+'\"]').prop('checked', false)\r\n    }\r\n    this.arrayCheck.splice(i,1)\r\n    // console.log(this.arrayCheck)\r\n    this.req.JobFieldId =  this.arrayCheck\r\n    if(this.contactForm.get('location').value != '') {\r\n      this.req.cityId = this.contactForm.get('location').value.split(',')\r\n    // this.req.cityId = this.sampleInput\r\n      }\r\n    if(this.contactForm.get('skills').value != '') {\r\n      this.req.filterText = this.contactForm.get('skills').value.toLowerCase()\r\n    }\r\n    $('[value=\"'+item.toString()+'\"]').click()\r\n    // console.log(this.req);\r\n    // $('.preloaderSecond').css('display','block')\r\n    // let url = Constants.apiRoot+ \"/Job/Search\";\r\n    // this.http.post( url,this.req).subscribe((res)=>{\r\n    //   this.currentData = res;\r\n    //   console.log(this.currentData);\r\n    //   this.objectnull(this.req)\r\n    //   this.setPage(1);\r\n    //   $('.preloaderSecond').hide()\r\n    // })\r\n  }\r\n  filterCheck1(i,item) {\r\n    if(this.arrayCheck1.includes(item)){\r\n      $('[value=\"'+item.toString()+'\"]').parents('mat-checkbox').removeClass('mat-checkbox-checked')\r\n      $('[value=\"'+item.toString()+'\"]').prop('ariaChecked', false)\r\n      $('[value=\"'+item.toString()+'\"]').prop('checked', false)\r\n     \r\n    }\r\n    this.arrayCheck1.splice(i,1)\r\n    this.req.IndustryId =  this.arrayCheck1\r\n    if(this.contactForm.get('location').value != '') {\r\n      this.req.cityId = this.contactForm.get('location').value.split(',')\r\n    // this.req.cityId = this.sampleInput\r\n    }\r\n    if(this.contactForm.get('skills').value != '') {\r\n      this.req.filterText = this.contactForm.get('skills').value.toLowerCase()\r\n    }\r\n    $('[value=\"'+item.toString()+'\"]').click()\r\n  //   $('.preloaderSecond').css('display','block')\r\n  // console.log(this.req);\r\n  // let url = Constants.apiRoot+ \"/Job/Search\";\r\n  //   this.http.post( url,this.req).subscribe((res)=>{\r\n  //     this.currentData = res;\r\n  //     this.objectnull(this.req)\r\n  //     this.setPage(1);\r\n  //     $('.preloaderSecond').hide()\r\n  //     console.log(this.currentData);\r\n  //     // console.log(res);\r\n  //   })\r\n  }\r\n  filterCheck2(i,item) {\r\n    if(this.arrayCheck2.includes(item)){\r\n      $('[value=\"'+item.toString()+'\"]').parents('mat-checkbox').removeClass('mat-checkbox-checked')\r\n      $('[value=\"'+item.toString()+'\"]').prop('ariaChecked', false)\r\n      $('[value=\"'+item.toString()+'\"]').prop('checked', false)\r\n      \r\n    }\r\n    this.arrayCheck2.splice(i,1)\r\n    this.req.ExperienceId = this.arrayCheck2\r\n    if(this.contactForm.get('location').value != '') {\r\n      this.req.cityId = this.contactForm.get('location').value.split(',')\r\n    // this.req.cityId = this.sampleInput\r\n      }\r\n      if(this.contactForm.get('skills').value != '') {\r\n      this.req.filterText = this.contactForm.get('skills').value.toLowerCase()\r\n      }\r\n      $('[value=\"'+item.toString()+'\"]').click()\r\n      // console.log(this.req);\r\n      // $('.preloaderSecond').css('display','block')\r\n      // let url = Constants.apiRoot+ \"/Job/Search\";\r\n      //   this.http.post( url,this.req).subscribe((res)=>{\r\n      //     this.currentData = res;\r\n      //     console.log(this.currentData);\r\n      //     this.objectnull(this.req)\r\n      //     this.setPage(1);\r\n      //     $('.preloaderSecond').hide()\r\n      //     // console.log(res);\r\n      //   })\r\n  }\r\n  filterCheck3(i,item) {\r\n    if(this.arrayCheck3.includes(item)){\r\n      $('[value=\"'+item.toString()+'\"]').parents('mat-checkbox').removeClass('mat-checkbox-checked')\r\n      $('[value=\"'+item.toString()+'\"]').prop('ariaChecked', false)\r\n      $('[value=\"'+item.toString()+'\"]').prop('checked', false)\r\n     \r\n    }\r\n    this.arrayCheck3.splice(i,1)\r\n    this.req.Qualificationid = this.arrayCheck3\r\n    if(this.contactForm.get('location').value != '') {\r\n      this.req.cityId = this.contactForm.get('location').value.split(',')\r\n    // this.req.cityId = this.sampleInput\r\n      }\r\n      if(this.contactForm.get('skills').value != '') {\r\n      this.req.filterText = this.contactForm.get('skills').value.toLowerCase()\r\n      }\r\n      $('[value=\"'+item.toString()+'\"]').click()\r\n    //   $('.preloaderSecond').css('display','block')\r\n    // console.log(this.req);\r\n    // let url = Constants.apiRoot+ \"/Job/Search\";\r\n    //   this.http.post( url,this.req).subscribe((res)=>{\r\n    //     this.currentData = res;\r\n    //     console.log(this.currentData);\r\n    //     this.objectnull(this.req)\r\n    //     this.setPage(1);\r\n    //     $('.preloaderSecond').hide()\r\n    //     // console.log(res);\r\n    //   })\r\n  }\r\n  filterCheck4(i,item){\r\n    console.log(item);\r\n    \r\n    if(this.arrayCheck4.includes(item)){\r\n      $('[value=\"'+item.toString()+'\"]').parents('mat-checkbox').removeClass('mat-checkbox-checked')\r\n      $('[value=\"'+item.toString()+'\"]').prop('ariaChecked', false)\r\n      $('[value=\"'+item.toString()+'\"]').prop('checked', false)\r\n     \r\n      // $('[value=\"'+item.toString()+'\"]').change()\r\n    }\r\n    this.arrayCheck4.splice(i,1)\r\n    this.req.filterText = ''\r\n    if(this.contactForm.get('location').value != '') {\r\n      this.req.cityId = this.contactForm.get('location').value.split(',')\r\n      }\r\n    if(this.contactForm.get('skills').value != '') {\r\n    this.req.filterText = this.contactForm.get('skills').value.toLowerCase()\r\n    }\r\n    $('[value=\"'+item.toString()+'\"]').click()\r\n   \r\n    // $('.preloaderSecond').css('display','block')\r\n    // console.log(this.req);\r\n    // let url = Constants.apiRoot+ \"/Job/Search\";\r\n    //   this.http.post( url,this.req).subscribe((res)=>{\r\n    //     this.currentData = res;\r\n    //     console.log(this.currentData);\r\n    //     this.objectnull(this.req)\r\n    //     this.setPage(1);\r\n    //     $('.preloaderSecond').hide()\r\n    //     // console.log(res);\r\n    //   })\r\n  }\r\n\r\n\r\n  showList(){\r\n    if(this.isReadMore){\r\n      this.SCLTH=this.searchComp.length\r\n    }else{\r\n      this.SCLTH=5;\r\n    }\r\n    this.isReadMore = !this.isReadMore\r\n  }\r\n  \r\n  // filtersearch(search:any) { \r\n  // }\r\n  \r\n  htmlDecode(input) {\r\n    var doc = new DOMParser().parseFromString(input, \"text/html\");\r\n    return doc.documentElement.textContent;\r\n  }\r\n\r\n  setPage(page: number) {\r\n    if(this.currentData.totalCount==0){\r\n      this.pagedItems=[]\r\n    }else{\r\n      if (page < 1 || page >this.currentData.totalCount) {\r\n        return;\r\n    }\r\n\r\n    // get pager object from service\r\n    this.pager = this.PagerService.getPager(this.currentData.lstResult.length, page);\r\n\r\n    // get current page of items\r\n    this.pagedItems = this.currentData.lstResult.slice(this.pager.startIndex, this.pager.endIndex + 1);\r\n    }\r\n\r\n}\r\n\r\nobjectnull(Obj){\r\n  let  status=true\r\n  if(Obj.CompanyId.length>0){\r\n    status=false\r\n  }\r\n  if(Obj.ExperienceId.length>0){\r\n    status=false\r\n  }\r\n  if(Obj.IndustryId.length>0){\r\n    status=false\r\n  }\r\n  if(Obj.Qualificationid.length>0){\r\n    status=false\r\n  }\r\n  if(Obj.JobFieldId.length>0){\r\n    status=false\r\n  }\r\n  // if(Obj.filterText.length>0){\r\n  //   status=false\r\n  // }\r\n  // if(Obj.cityId.length>0){\r\n  //   status=false\r\n  // }\r\n  console.log(status);\r\n  \r\n  if(status){\r\n    // $('.preloaderSecond').css('display','block')\r\n    // let url = Constants.apiRoot+ \"/Job/SearchCompany\";\r\n    // this.http.post( url,Object({CompanyId:''})).subscribe((res)=>{\r\n      this.currentData = this.allDataBackup;\r\n      // this.allData = this.allDataBackup;\r\n      // console.log(this.currentData);\r\n      // console.log(this.allDataBackup);\r\n      // this.setPage(1);\r\n      $('.preloaderSecond').hide()\r\n      // console.log(res);\r\n    // })\r\n  }\r\n \r\n}\r\ngetref(){\r\n  $('input').parents('mat-checkbox').removeClass('mat-checkbox-checked')\r\n  $('input').parents('mat-checkbox').addClass('cdk-focused cdk-program-focused')\r\n  $('input').parents('mat-checkbox').attr('aria-checked=\"false\"')\r\n  this.arrayCheck = [];\r\n  this.arrayCheck1 = [];\r\n  this.arrayCheck2 = [];\r\n  this.arrayCheck3 = [];\r\n  this.arrayCheck4 = [];\r\n  this.contactForm.controls.skills.setValue('');\r\n  this.contactForm.controls.location.setValue('');\r\n  this.req= {\r\n    CompanyId:[],\r\n    ExperienceId:[],\r\n    IndustryId:[],\r\n    JobFieldId:[],\r\n    Qualificationid:[],\r\n    filterText:'',\r\n    cityId:''\r\n  };\r\n  this.Refbutton=false\r\n  // this.searchComp=[]\r\n    console.log(this.req);\r\n    let req =  {CompanyId:''}\r\n    let currentData =Object();\r\n    $('.preloaderSecond').css('display','block')\r\n    let url = Constants.apiRoot+ \"/Job/SearchCompany\";\r\n    this.http.post( url,this.req).subscribe((res)=>{\r\n      this.currentData = this.currentDataOG = res;\r\n      this.allData=res\r\n      this.allDataBackup=res\r\n      console.log(this.currentData);\r\n      this.onsubCountfilter(res)\r\n      this.setPage(1);\r\n      $('.preloaderSecond').hide()\r\n      // console.log(res);\r\n    })\r\n}\r\n\r\nfilte(hf:any){\r\n  var di =Object()\r\n  if(hf.CompanyId.length>0){\r\nconsole.log(this.arrayCheck4);\r\n\r\n    // console.log( applyFilter(this.allData,{Company:hf.CompanyId}));\r\n    for (let i = 0; i < this.arrayCheck4.length; i++) {\r\n    \r\n      this.arrayCheck4.push()\r\n      \r\n    }\r\n\r\n    di.Company=hf.CompanyId\r\n     \r\n   }\r\n   if(hf.ExperienceId.length>0){\r\n    di.Experience=hf.ExperienceId\r\n   \r\n   }\r\n   if(hf.IndustryId.length>0){\r\n    di.Industry=hf.IndustryId\r\n   }\r\n   if(hf.JobFieldId.length>0){\r\n    di.JobField=hf.JobFieldId\r\n   }\r\n   if(hf.Qualificationid.length>0){\r\n    di.Qualification=hf.Qualificationid\r\n   }\r\n   console.log(di); \r\n\r\n  this.currentData={lstResult:applyFilter(this.allData,di)}\r\n  this.currentData.totalCount=applyFilter(this.allData,di).length\r\n  console.log( this.currentData);\r\n  \r\n  this.objectnull(hf)\r\n  this.setPage(1)\r\n\r\n}\r\nfildsubmintfilte(hf:any){\r\n\r\n \r\n  var di =Object()\r\n  if(hf.CompanyId.length>0){\r\n    di.Company=hf.CompanyId   \r\n   }\r\n   if(hf.ExperienceId.length>0){\r\n    di.Experience=hf.ExperienceId\r\n   \r\n   }\r\n   if(hf.IndustryId.length>0){\r\n    di.Industry=hf.IndustryId\r\n   }\r\n   if(hf.JobFieldId.length>0){\r\n    di.JobField=hf.JobFieldId\r\n   }\r\n   if(hf.Qualificationid.length>0){\r\n    di.Qualification=hf.Qualificationid\r\n   }\r\n   console.log(di); \r\n\r\n  this.currentData={lstResult:applyFilter(this.allData,di)}\r\n  this.currentData.totalCount=applyFilter(this.allData,di).length\r\n  console.log( this.currentData);\r\n  setTimeout(() => {\r\n    $('.preloaderSecond').hide()\r\n  }, 1000);\r\n  this.objectnull(hf)\r\n  this.setPage(1)\r\n \r\n\r\n}\r\nfiltea(hf:any){\r\n  // console.log(hf);\r\n  // console.log(this.currentData);\r\n  \r\n const dd:any=[];\r\n  if(hf.CompanyId.length>0){\r\n\r\n   console.log( applyFilter(this.allData,{Company:hf.CompanyId}));\r\n   \r\n      hf.CompanyId.forEach(dat => {\r\n        dd.splice(0,0,...Object.assign(this.findata(dat,this.allData)))\r\n    });\r\n  }\r\n  if(hf.ExperienceId.length>0){\r\n    \r\n    hf.ExperienceId.forEach(dat => {\r\n      dd.splice(0,0,...Object.assign(this.findata(dat,this.allData)))\r\n    });\r\n  }\r\n  if(hf.IndustryId.length>0){\r\n    hf.IndustryId.forEach(dat => {\r\n      dd.splice(0,0,...Object.assign(this.findata(dat,this.allData)))\r\n    });\r\n  }\r\n  if(hf.JobFieldId.length>0){\r\n    hf.JobFieldId.forEach(dat => {\r\n      dd.splice(0,0,...Object.assign(this.findata(dat,this.allData)))\r\n    });\r\n  }\r\n  if(hf.Qualificationid.length>0){\r\n    hf.Qualificationid.forEach(dat => {\r\n      dd.splice(0,0,...Object.assign(this.findata(dat,this.allData)))\r\n    });\r\n  }\r\n  console.log(dd); \r\n  var data=dd\r\n  this.currentData={lstResult:data}\r\n  this.currentData.totalCount=dd.length\r\n  console.log( this.currentData);\r\n  \r\n  this.objectnull(hf)\r\n  this.setPage(1)\r\n  \r\n  // this.currentData\r\n  \r\n\r\n}\r\n\r\nfindata(d:any,Datafit:any){\r\n  var Datafits=this.allDataBackup;\r\n  return Datafits.lstResult.filter(x => {\r\n    return Object.keys(x).some(key => {\r\n      var Industry=x.Industry==null?'':x.Industry\r\n      if(x.Company.toLowerCase()==d.toLowerCase()){\r\n        return String(x[key]).toLowerCase().includes(d.toLowerCase());\r\n      }\r\n      if(x.Experience.toLowerCase()==d.toLowerCase()){\r\n        return String(x[key]).toLowerCase().includes(d.toLowerCase());\r\n      }\r\n      if(Industry.toLowerCase()==d.toLowerCase()){\r\n        return String(x[key]).toLowerCase().includes(d.toLowerCase());\r\n      }\r\n      if(x.JobField.toLowerCase()==d.toLowerCase()){\r\n        return String(x[key]).toLowerCase().includes(d.toLowerCase());\r\n      }\r\n      if(x.Qualification.toLowerCase()==d.toLowerCase()){\r\n        return String(x[key]).toLowerCase().includes(d.toLowerCase());\r\n      }\r\n  });\r\n});\r\n}\r\n\r\n\r\n\r\nfilterUsers(users:any, filter:any) {\r\n  var result = [];\r\n  \r\n  for (var i=0;i<users.lstResult.length;i++){\r\n      for (var prop in filter) {\r\n        var f=0;\r\n          if (users.lstResult[i][prop] == filter[prop][f]) {\r\n              result.push(users.lstResult[i]);\r\n              f++\r\n          }\r\n      }\r\n  }\r\n  return result;\r\n}\r\n\r\n}\r\n\r\n","export enum ConfigForm {\r\n    JobFairCreate = 1,\r\n    JobFairRegister = 2,\r\n    Company = 3\r\n}","export enum JobStatus\r\n{\r\n    Draft = 1,\r\n    Approved = 2,\r\n    Pending_Approval  = 3,\r\n    Rejected = 4,\r\n    Closed = 5\r\n}","export enum JobType{\r\n    FullTime = 1,\r\n    PartTime = 2,\r\n    Freelance = 3\r\n}","export enum TranslateType {\r\n    Country = 1,\r\n        City = 2,\r\n        Industry = 3,\r\n        JobField = 4,\r\n        JobSubFields = 5,\r\n        Languages = 6,\r\n        Qualification = 7,\r\n        YearsOfExperience = 8\r\n}","export enum UserGender{\r\n    Male = 1,\r\n    Female = 2,\r\n    Both = 3\r\n}","export enum UserType {\r\n    Admin = 1,\r\n    Employer = 2,\r\n    JobSeeker = 3\r\n}","import { Component, OnInit, AfterViewInit, ViewChild, AfterViewChecked } from '@angular/core';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { ModelJobFair } from 'src/app/interface/Model/ModelJobFair.class';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ServiceJobFair } from 'src/app/services/job-fair.service';\r\nimport { NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\nimport { DynamicFormComponent } from 'src/app/common/ConfigForms/components/dynamic-form/dynamic-form.component';\r\nimport { FieldConfig, Validator } from 'src/app/common/ConfigForms/field.interface';\r\nimport { ServiceConfigForm } from 'src/app/services/config-form.service';\r\nimport { ConfigForm } from 'src/app/Enum/ConfigForm.enum';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.css']\r\n})\r\nexport class CreateComponent extends baseComponent implements OnInit {\r\n\r\n  modelIsCreate: boolean = true;\r\n  modelNameEdited: string = '';\r\n  modelObj: ModelJobFair = new ModelJobFair();\r\n  modelEventDate: NgbDateStruct;\r\n  modelId: string;\r\n\r\n  @ViewChild(DynamicFormComponent) form: DynamicFormComponent;\r\n  regConfig: FieldConfig[] = []; \r\n\r\n  constructor(\r\n    private BLJobFair: ServiceJobFair,\r\n    BLServiceShowMessage: ServiceShowMessage,\r\n    BLServiceLoginUser: ServiceLoginUser,BLTranslate: TranslateService,\r\n    private BLServiceConfigForm: ServiceConfigForm,\r\n    private router: Router,\r\n    private route: ActivatedRoute) {\r\n    super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\r\n  }\r\n\r\n  InitDynamicForm() {\r\n    this.BLServiceConfigForm.GetByType(ConfigForm.JobFairCreate).subscribe({\r\n      next: lst => {\r\n        this.regConfig = <FieldConfig[]>[];\r\n        lst.forEach(item => {\r\n\r\n          var obj = new FieldConfig();\r\n\r\n          obj.inputType = item.inputType;\r\n          obj.label = item.label;\r\n          obj.name = item.name;\r\n          obj.options = item.options;\r\n          obj.order = item.order;\r\n          obj.type = item.type;\r\n          obj.validations.push(new Validator(item.label));\r\n          if (this.modelObj.data)\r\n            obj.value = this.modelObj.data[item.name];\r\n\r\n          this.regConfig.push(obj);\r\n        });\r\n        this.form.fields = this.regConfig;\r\n        this.form.createControl();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const param = this.route.snapshot.paramMap.get('Id');\r\n   \r\n    if (param) {\r\n      this.modelIsCreate = false;\r\n      this.modelId = param;\r\n      this.modelObj._id = param;\r\n\r\n      this.BLJobFair.getGetByid(param).subscribe({\r\n        next: obj => {\r\n          this.modelObj = obj;\r\n          this.modelNameEdited = obj.Name;\r\n          \r\n          var d = new Date(this.modelObj.EventDate);\r\n          this.modelEventDate = {\r\n            year: d.getUTCFullYear(), month: d.getUTCMonth() + 1\r\n            , day: d.getUTCDate() +1\r\n          };\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n    this.InitDynamicForm();\r\n  }\r\n  onDateSelect(param) {\r\n    this.modelObj.EventDate = new Date(param.year, param.month - 1, param.day );\r\n  }\r\n  Save(modelForm) {\r\n\r\n    if (!modelForm.valid)\r\n      return;\r\n\r\n    this.modelObj.data = this.form.value;\r\n\r\n    if (this.modelIsCreate) {\r\n      this.BLJobFair.create(this.modelObj).subscribe({\r\n        next: response => {\r\n          this.message.Success(\"Saved successfully.\");\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.router.navigate(['JobFair/List']);\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n    else {\r\n      this.BLJobFair.update(this.modelObj).subscribe({\r\n        next: response => {\r\n          this.message.Success(\"Saved successfully.\");\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.router.navigate(['JobFair/List']);\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n  }\r\n  onLocationChange(e, fileType: string) {\r\n    if (fileType == \"1\") {\r\n      this.modelObj.IsOnline = true;\r\n    }\r\n    else {\r\n      this.modelObj.IsOnline = false;\r\n    }\r\n  }\r\n}\r\n","<section class=\"accounts\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12 col-lg-12 col-xl-12\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12 col-lg-12 \">\r\n                        <h4 class=\"fz20\">\r\n                            {{(modelIsCreate ? 'GenericCreate' : 'GenericEditing') | translate}} :\r\n                            {{modelIsCreate? (\"GenericNew\" | translate) : modelNameEdited}}\r\n                        </h4>\r\n                    </div>\r\n                    <div class=\"col-sm-12 col-lg-12 col-xl-12\">\r\n                        <div class=\"my_profile_form_area\">\r\n                            <form novalidate #modelForm=\"ngForm\">\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-lg-6\">\r\n                                        <mat-form-field class=\"demo-full-width\">\r\n                                            <input matInput type=\"text\" id=\"formGroupExampleInput1\"\r\n                                                [(ngModel)]=\"modelObj.Name\" required #modelNameVar=\"ngModel\"\r\n                                                name=\"modelName\"\r\n                                                [ngClass]=\"{'is-invalid': (modelNameVar.touched || modelNameVar.dirty) && !modelNameVar.valid }\"\r\n                                                placeholder=\"{{'JobFairCreateName' | translate }}\">\r\n                                            <mat-error *ngIf=\"modelNameVar.touched && modelNameVar.errors?.required\">\r\n                                                {{'GenericEnterName' | translate }}</mat-error>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                    <div class=\"col-lg-6\">\r\n                                        <mat-form-field class=\"demo-full-width\">\r\n                                            <input matInput type=\"text\" id=\"formGroupExampleInput1\"\r\n                                                [(ngModel)]=\"modelObj.Location\" required #modelLocationVar=\"ngModel\"\r\n                                                name=\"modelLocation\"\r\n                                                [ngClass]=\"{'is-invalid': (modelLocationVar.touched || modelLocationVar.dirty) && !modelLocationVar.valid }\"\r\n                                                placeholder=\"{{'JobFairCreateLocation' | translate }}\">\r\n                                            <mat-error\r\n                                                *ngIf=\"modelLocationVar.touched && modelLocationVar.errors?.required\">\r\n                                                {{'JobFairCreateLocationError' | translate }}</mat-error>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                    <div class=\"col-lg-6\">\r\n                                        <mat-form-field class=\"demo-full-width\">\r\n                                            <input matInput type=\"text\" id=\"formGroupExampleInput1\"\r\n                                                [(ngModel)]=\"modelObj.Field\" required #modelFieldVar=\"ngModel\"\r\n                                                name=\"modelField\"\r\n                                                [ngClass]=\"{'is-invalid': (modelFieldVar.touched || modelFieldVar.dirty) && !modelFieldVar.valid }\"\r\n                                                placeholder=\"{{'JobFairCreateField' | translate }}\">\r\n                                            <mat-error *ngIf=\"modelFieldVar.touched && modelFieldVar.errors?.required\">\r\n                                                {{'JobFairCreateFieldError' | translate }}</mat-error>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                    <div class=\"col-lg-6 \">\r\n                                        <div class=\"my_profile_input form-group\">\r\n                                            <!-- <label class=\"\"\r\n                                                    for=\"formGroupExampleInput1\">{{'JobFairListEventDate' | translate }}*</label> -->\r\n                                            <div class=\"input-group ZeroBoxShadow w-85\">\r\n                                                <input placeholder=\"{{'JobFairListEventDate' | translate }}\" readonly\r\n                                                    class=\"form-control w-85  ZeroBoxShadow\" name=\"dp\"\r\n                                                    [minDate]=\"dateToday\" (dateSelect)=\"onDateSelect($event)\"\r\n                                                    [(ngModel)]=\"modelEventDate\" ngbDatepicker #d=\"ngbDatepicker\"\r\n                                                    required #modelDateVar=\"ngModel\"\r\n                                                    [ngClass]=\"{'is-invalid': (modelDateVar.touched || modelDateVar.dirty) && !modelDateVar.valid }\">\r\n                                                <div class=\"d-inline-flex calenderHeight\">\r\n                                                    <button class=\"btn calcender\" (click)=\"d.toggle()\" type=\"button\"><i\r\n                                                            class=\"fa fa-calendar\" aria-hidden=\"true\"></i></button>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"valError\"\r\n                                                *ngIf=\"modelDateVar.touched && modelDateVar.errors?.required\">\r\n                                                {{'JobFairCreateEvnentDateError' | translate }}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-lg-6\">\r\n                                        <div class=\"my_profile_input form-group\">\r\n                                            <span class=\"pr-3\">{{'TrainingIsOnline' | translate }}:</span>\r\n                                            <input type=\"radio\" [checked]=\"modelObj.IsOnline\" name=\"TrainingIsOnline\"\r\n                                                (change)=\"onLocationChange($event,'1')\"\r\n                                                class=\"mr-2\" />{{'TrainingOnline' |\r\n                                            translate }}\r\n                                            <input type=\"radio\" [checked]=\"!modelObj.IsOnline\" name=\"TrainingIsOnline\"\r\n                                                (change)=\"onLocationChange($event,'0')\"\r\n                                                class=\"mr-2 ml-4\" />{{'TrainingOffline' | translate }}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-lg-12\">\r\n                                        <div class=\"my_resume_textarea\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"exampleFormControlTextarea1\">{{'JobFairCreateDesc' |\r\n                                                    translate }}*</label>\r\n                                                <textarea class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"9\"\r\n                                                    [(ngModel)]=\"modelObj.ShortDescription\" required\r\n                                                    #modelDescription=\"ngModel\" name=\"modelDescription\"\r\n                                                    [ngClass]=\"{'is-invalid': (modelDescription.touched || modelDescription.dirty) && !modelDescription.valid }\"></textarea>\r\n                                                <div class=\"valErrorTextArea\"\r\n                                                    *ngIf=\"modelDescription.touched && modelDescription.errors?.required\">\r\n                                                    {{'JobFairCreateLocationError' | translate }}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-xl-12 col-lg-12 col-sm-12 d-inline-flex\">\r\n                                        <dynamic-form [fields]=\"regConfig\"></dynamic-form>\r\n                                    </div>\r\n                                    <div class=\"col-xl-12 col-lg-12 col-sm-12 d-inline-flex\">\r\n                                        <div class=\"col-md-6 col-lg-6\">\r\n                                            <div class=\"my_profile_input\">\r\n                                                <button class=\"btn btn-lg w-75 btn-thm\" (click)=\"Save(modelForm)\"\r\n                                                    [title]=\"(modelForm.valid  && form?.valid ) ? 'Save your entered data' : 'Disabled until the form data is valid'\"\r\n                                                    [disabled]=\"!(modelForm.valid && form?.valid)\">{{'GenericSave' |\r\n                                                    translate }}\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-md-6 col-lg-6\">\r\n                                            <div class=\"my_profile_input\">\r\n                                                <button class=\"btn btn-lg w-75 btn-transparent\"\r\n                                                    routerLink=\"/JobFair/List\">{{'GenericCancel' | translate }}</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-xl-12 col-lg-12 col-sm-12 d-inline-flex mt-3 \">\r\n                                        <h4 class=\"mat-hint text-center m-auto\">{{'JobFiarNote' | translate }}</h4>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>","import { NgModule } from '@angular/core';\r\nimport { SharedModule } from '../common/sharedmodule.module';\r\nimport { ListComponent } from './list/list.component';\r\nimport { CreateComponent } from './create/create.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { RegisterComponent } from './register/register.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ListComponent,\r\n    CreateComponent,\r\n    RegisterComponent],\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      { path: 'JobFair/List', component: ListComponent },\r\n      { path: 'JobFair/Create', component: CreateComponent },\r\n      { path: 'JobFair/Edit/:Id', component: CreateComponent },\r\n      { path: 'JobFair/Register/:Id', component: RegisterComponent }\r\n    ])\r\n  ]\r\n})\r\nexport class JobFairModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { UserType } from 'src/app/Enum/UserType.enum';\r\nimport { cJobFairList, cJobFairItem } from 'src/app/interface/Response/JobFair.class';\r\nimport { Page } from 'src/app/common/pagination/page';\r\nimport { ServiceJobFair } from 'src/app/services/job-fair.service';\r\nimport { CustomPaginationService } from 'src/app/common/pagination/services/custom-pagination.service';\r\nimport { ConfirmationDialogService } from 'src/app/common/confirmation-dialog/confirmation-dialog.service';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { ModelJobFairAttendance } from 'src/app/interface/Model/ModelJobFairAttendance.class';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.css']\r\n})\r\nexport class ListComponent extends baseComponent implements OnInit {\r\n\r\n  get EnumUserTypes() { return UserType };\r\n  pageTitle: string = 'Job Fair ';\r\n  lstJobFair: cJobFairList;\r\n  filtertxt: string = '';\r\n  modelNameEdited: string = '';\r\n  modelObj: cJobFairItem;\r\n  modelIsCreate: boolean = true;\r\n  page: Page<cJobFairItem> = new Page();\r\n  isClicked = false;\r\n  modelAttendance: ModelJobFairAttendance = new ModelJobFairAttendance();\r\n  fileurl:string;\r\n\r\n  constructor(private BLServiceJobFair: ServiceJobFair,\r\n    private paginationService: CustomPaginationService,\r\n    private confirmationDialogService: ConfirmationDialogService,\r\n    private modalService: NgbModal,\r\n    BLServiceShowMessage: ServiceShowMessage,\r\n    BLServiceLoginUser: ServiceLoginUser,BLTranslate: TranslateService,) {\r\n    super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\r\n  }\r\n\r\n  openBackDropCustomClass(content, idx: string, Name:string) {\r\n    this.modelAttendance = new ModelJobFairAttendance();\r\n    this.modelAttendance.JobFairId = idx;\r\n    this.modelNameEdited = Name;\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  modelSaveBtn(obj){\r\n    this.BLServiceJobFair.SetAttendance(this.modelAttendance).subscribe({\r\n      next: flag => {\r\n        if(flag)\r\n        {\r\n          this.message.Success(\"Save successfully.\");\r\n        }\r\n        else\r\n          {\r\n          this.message.Error(\"Invalid Attendance Code.\");\r\n        }\r\n        \r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n  private loadData(): void {\r\n    if (this.IsAdmin) {\r\n      this.BLServiceJobFair.getAll(this.page.pageable.pageCurrent, this.filtertxt).subscribe({\r\n        next: lst => {\r\n\r\n          this.lstJobFair = lst;\r\n          this.page.pageable.pageSize = lst.pageSize;\r\n          this.page.totalElements = lst.totalCount;\r\n          this.page.content = lst.lstResult;\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n    else if (this.isJobSeeker) {\r\n      this.BLServiceJobFair.Search(this.page.pageable.pageCurrent, this.filtertxt).subscribe({\r\n        next: lst => {\r\n\r\n          this.lstJobFair = lst;\r\n          this.page.pageable.pageSize = lst.pageSize;\r\n          this.page.totalElements = lst.totalCount;\r\n          this.page.content = lst.lstResult;\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n  }\r\n  public getNextPage(): void {\r\n    this.page.pageable = this.paginationService.getNextPage(this.page);\r\n    this.loadData();\r\n  }\r\n\r\n  public getPreviousPage(): void {\r\n    this.page.pageable = this.paginationService.getPreviousPage(this.page);\r\n    this.loadData();\r\n  }\r\n  public getloadPageCurrent(): void {\r\n    this.loadData();\r\n  }\r\n  setActivate(Id: string): void {\r\n    this.confirmationDialogService.confirmActivation()\r\n      .then((confirmed) => {\r\n        if (!confirmed)\r\n          return;\r\n        this.BLServiceJobFair.setActivate(Id).subscribe({\r\n          next: response => {\r\n            this.message.Success(\"Activated successfully.\");\r\n            this.BLServiceShowMessage.sendMessage(this.message);\r\n            this.loadData();\r\n          },\r\n          error: err => this.message.Error(err)\r\n        });\r\n      });\r\n  }\r\n  setDeActivate(Id: string): void {\r\n    this.confirmationDialogService.confirmDeactivation()\r\n      .then((confirmed) => {\r\n        if (!confirmed)\r\n          return;\r\n        this.BLServiceJobFair.setDeActivate(Id).subscribe({\r\n          next: response => {\r\n            this.message.Success(\"Deactivated successfully.\");\r\n            this.BLServiceShowMessage.sendMessage(this.message);\r\n            this.loadData();\r\n          },\r\n          error: err => this.message.Error(err)\r\n        });\r\n      });\r\n  }\r\n  filterbtn(): void {\r\n    this.page.pageable.pageCurrent = 1;\r\n    this.loadData();\r\n  }\r\n  Export(idx:string){\r\n    this.BLServiceJobFair.Export(idx).subscribe({\r\n      next: response => {\r\n        window.open(response, \"_blank\");\r\n        this.message.Success(\"Export Successfully.\");\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n}\r\n","<section class=\"accounts\">\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-12 col-lg-12 col-xl-12\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12 col-lg-12 \">\r\n              <h4 class=\"fz20\">{{'JobFairListPageTitle' | translate }}</h4>\r\n            </div>\r\n            <div class=\"col-sm-6 md-form\">\r\n              <mat-form-field class=\"example-full-width w-75\">\r\n                <mat-label>{{'JobFairListSearchFor' | translate }}</mat-label>\r\n                <input type=\"text\" placeholder=\"{{'JobFairListSearchBy' | translate }}\" matInput [(ngModel)]=\"filtertxt\">\r\n              </mat-form-field>\r\n              <input type=\"submit\" value=\"{{'GenericSubmit' | translate }}\" class=\"btn btn-thm\" (click)=\"filterbtn()\">\r\n            </div>\r\n            <div class=\"col-sm-6 md-form pull-right\">\r\n              <input type=\"button\" *ngIf=\"IsAdmin\" class=\"pull-right btn btn-orange\" value=\"{{'GenericCreateNew' | translate }}\" routerLink=\"/JobFair/Create\">\r\n            </div>\r\n            <div class=\"col-md-12 col-lg-12\">\r\n              <div class=\"ui_kit_table\">\r\n                <table class=\"table\">\r\n                  <thead class=\"thead-light\">\r\n                    <tr>\r\n                      <th scope=\"col\">{{'GenericName' | translate }}</th>\r\n                      <th scope=\"col\">{{'JobFairListLocation' | translate }}</th>\r\n                      <th scope=\"col\">{{'JobFairListEventDate' | translate }}</th>\r\n                      <th scope=\"col\">{{'GenericAction' | translate }}</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody *ngIf='page.content && page.content.length'>\r\n                    <tr *ngFor='let obj of page.content'>\r\n                      <td>{{ obj.Name}}</td>\r\n                      <td>{{ obj.Location}}</td>\r\n                      <td>{{ obj.EventDate | date:'dd/MM/yyyy'}}</td>\r\n                      <td>\r\n                        <input *ngIf=\"obj.IsActive && !CheckDateBiggerThanToday(obj.EventDate)\" type=\"button\" class=\"btn btn-Purple\" value=\"{{'JobFairListApply' | translate }}\" routerLink=\"/JobFair/Register/{{obj._id}}\">\r\n                        <input *ngIf=\"obj.IsActive && IsAdmin\" type=\"button\" class=\"btn btn-orange\" value=\"{{'JobFairListAttendance' | translate }}\" (click)=\"openBackDropCustomClass(content,obj._id,obj.Name)\">\r\n                        <input *ngIf=\"obj.IsActive && IsAdmin\" type=\"button\" class=\"btn btn-primary\" value=\"{{'GenericEdit' | translate }}\" routerLink=\"/JobFair/Edit/{{obj._id}}\">\r\n                        <input *ngIf=\"!obj.IsActive && IsAdmin\" type=\"button\" class=\"btn btn-success\" value=\"{{'GenericActivate' | translate }}\"\r\n                          (click)=\"setActivate(obj._id)\">\r\n                        <input *ngIf=\"obj.IsActive && IsAdmin\" type=\"button\" class=\"btn btn-danger\" value=\"{{'GenericDeactivate' | translate }}\"\r\n                          (click)=\"setDeActivate(obj._id)\">\r\n                          <input *ngIf=\"obj.IsActive && IsAdmin\" type=\"button\" class=\"btn btn-success\" value=\"{{'JobFairListExport' | translate }}\"\r\n                          (click)=\"Export(obj._id)\">\r\n                          {{fileurl}}\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-12 col-lg-12\">\r\n              <app-custom-pagination [page]=\"page\" (nextPageEvent)=\"getNextPage()\" (previousPageEvent)=\"getPreviousPage()\"\r\n                (loadPageCurrentEvent)=\"getloadPageCurrent()\">\r\n              </app-custom-pagination>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n  \r\n<div>\r\n  <ng-template role=\"dialog\" #content let-modal class=\"modal fade\">\r\n      <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n          <div class=\"modal-content\">\r\n              <div class=\"modal-header white-text text-center\">\r\n\r\n                  <h6 class=\"modal-title\">\r\n                    {{'JobFairAddTitle' | translate }} {{modelNameEdited}}\r\n                  </h6>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n\r\n                  <form novalidate (ngSubmit)=\"modelSaveBtn(modelForm)\" #modelForm=\"ngForm\">\r\n                      <div class=\"form-group \">\r\n                          <mat-form-field class=\"example-full-width\">\r\n                              <mat-label>{{'JobFairCode' | translate }}</mat-label>\r\n                              <input matInput id=\"modelCodeId\" type=\"number\" placeholder=\"{{'JobFairCodeEnter' | translate }}\" required\r\n                                  [(ngModel)]=\"modelAttendance.Code\" #modelCodeVar=\"ngModel\" name=\"modelCode\" minlength=\"12\" maxlength=\"12\"\r\n                                  [ngClass]=\"{'is-invalid': (modelCodeVar.touched || modelCodeVar.dirty) && !modelCodeVar.valid }\" />\r\n                              <mat-error *ngIf=\"modelCodeVar.errors?.required\">{{'JobFairCodeError' | translate }}\r\n                              </mat-error>\r\n                              <mat-error *ngIf=\"modelCodeVar.errors?.minlength ||modelCodeVar.errors?.maxlength \">{{'JobFairCodeErrorLength' | translate }}\r\n                              </mat-error>\r\n                          </mat-form-field>\r\n                      </div>\r\n                      <div class=\"form-group pull-right md-form\">\r\n                          <button class=\"btn  btn-thm\" type=\"submit\" style=\"width:100px\"\r\n                              [title]=\"modelForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\"\r\n                              [disabled]=\"!modelForm.valid\">{{'GenericSave' | translate }}</button></div>\r\n                  </form>\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                  <button type=\"button\" class=\"btn border-green btn-transparent\"\r\n                      (click)=\"modal.close()\">{{'GenericClose' | translate }}</button>\r\n              </div>\r\n          </div>\r\n      </div>\r\n  </ng-template>\r\n</div>\r\n  \r\n ","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { ModelJobFairRegisteration } from 'src/app/interface/Model/ModelJobFairRegisteration.class';\r\nimport { NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ServiceJobFair } from 'src/app/services/job-fair.service';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ServiceJobSeeker } from 'src/app/services/job-seeker.service';\r\nimport { cJobSeekerItem } from 'src/app/interface/Response/JobSeeker.class';\r\nimport { cJobFairItem } from 'src/app/interface/Response/JobFair.class';\r\nimport { ConfigForm } from 'src/app/Enum/ConfigForm.enum';\r\nimport { FieldConfig, Validator } from 'src/app/common/ConfigForms/field.interface';\r\nimport { DynamicFormComponent } from 'src/app/common/ConfigForms/components/dynamic-form/dynamic-form.component';\r\nimport { ServiceConfigForm } from 'src/app/services/config-form.service';\r\nimport { takeWhile, take } from 'rxjs/operators';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent extends baseComponent implements OnInit {\r\n\r\n  modelIsCreate: boolean = true;\r\n  modelNameEdited: string = '';\r\n  modelObj: ModelJobFairRegisteration = new ModelJobFairRegisteration();\r\n  modelDOBDate: NgbDateStruct;\r\n  modelId: string;\r\n  isRegstered: boolean = false;\r\n  isChecked: boolean = false;\r\n  modelUser: cJobSeekerItem;\r\n  jobfair: cJobFairItem;\r\n  @ViewChild(DynamicFormComponent) form: DynamicFormComponent;\r\n  regConfig: FieldConfig[] = [];\r\n\r\n  constructor(\r\n    private BLJobFair: ServiceJobFair,\r\n    private BLJobSeeker: ServiceJobSeeker,\r\n    private BLServiceConfigForm: ServiceConfigForm,\r\n    BLServiceShowMessage: ServiceShowMessage,\r\n    BLServiceLoginUser: ServiceLoginUser,BLTranslate: TranslateService,\r\n    private router: Router,\r\n    private route: ActivatedRoute) {\r\n    super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate)\r\n  }\r\n  ngOnInit(): void {\r\n    this.InitDynamicForm();\r\n    const param = this.route.snapshot.paramMap.get('Id');\r\n    if (param) {\r\n      //this.modelIsCreate = false;\r\n      this.modelId = param;\r\n\r\n    }\r\n    this.modelObj.JobFairId = param;\r\n    \r\n    if (this.IsAdmin) {\r\n\r\n    }\r\n    else if (this.isJobSeeker) {\r\n      this.checkUser();\r\n      this.LoadUser(this.userId);\r\n    }\r\n    else {\r\n      this.BLServiceLoginUser.UserIsJobSeekerChanged\r\n        .pipe(take(1))\r\n        .subscribe({\r\n          next: flag => {\r\n            if (flag) {\r\n              this.checkUser();\r\n              this.LoadUser(this.userId);\r\n            }\r\n          },\r\n          error: err => this.message.Error(err)\r\n        });\r\n    }\r\n    this.BLJobFair.getGetByid(this.modelObj.JobFairId).subscribe({\r\n      next: obj => {\r\n        this.jobfair = obj;\r\n        this.modelNameEdited = obj.Name;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  InitDynamicForm() {\r\n    this.BLServiceConfigForm.GetByType(ConfigForm.JobFairRegister).subscribe({\r\n      next: lst => {\r\n        this.regConfig = <FieldConfig[]>[];\r\n        lst.forEach(item => {\r\n\r\n          var obj = new FieldConfig();\r\n\r\n          obj.inputType = item.inputType;\r\n          obj.label = item.label;\r\n          obj.name = item.name;\r\n          obj.options = item.options;\r\n          obj.order = item.order;\r\n          obj.type = item.type;\r\n          obj.validations.push(new Validator(item.label));\r\n\r\n          this.regConfig.push(obj);\r\n        });\r\n        this.form.fields = this.regConfig;\r\n        this.form.createControl();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n\r\n  }\r\n  checkUser() {\r\n    this.BLJobFair.CheckRegister(this.modelObj.JobFairId).subscribe({\r\n      next: obj => {\r\n        this.isRegstered = obj;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n\r\n  LoadUser(Id: string) {\r\n    this.modelObj.UserId = Id;\r\n\r\n    this.BLJobSeeker.getGetByid(Id).subscribe({\r\n      next: obj => {\r\n        this.modelUser = obj;\r\n        this.modelObj.Name = obj.Name;\r\n        this.modelObj.JobTitle = obj.JobTitle;\r\n        this.modelObj.Email = obj.Email.toLowerCase();\r\n        this.modelObj.DOB = obj.DOB;\r\n\r\n        var d = new Date(this.modelObj.DOB);\r\n        this.modelDOBDate = {\r\n          year: d.getUTCFullYear(), month: d.getUTCMonth() + 1\r\n          , day: d.getUTCDate()\r\n        };\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  onDateSelect(param) {\r\n    this.modelObj.DOB = new Date(param.year, param.month - 1, param.day + 1);\r\n  }\r\n  Save(modelForm) {\r\n    if (!modelForm.valid)\r\n      return;\r\n\r\n    this.modelObj.data = this.form.value;\r\n\r\n    this.BLJobFair.Register(this.modelObj).subscribe({\r\n      next: response => {\r\n        this.message.Success(\"Registered successfully.\");\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        if (this.isJobSeeker)\r\n          this.router.navigate(['JobFair/List']);\r\n        else {\r\n          modelForm.reset();\r\n          this.InitDynamicForm();\r\n        }\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  OnSelectJobSeeker(idx: string) {\r\n    this.LoadUser(idx);\r\n  }\r\n}\r\n","<section class=\"accounts\" *ngIf=\"isJobSeeker && isRegstered\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12 col-lg-12 col-xl-12\">\r\n                <p>{{'JobFairRegisterDone' | translate }}</p>\r\n                <p>{{'JobFairRegisterDetails' | translate }} <b>{{modelNameEdited}}</b> {{'JobFairRegisterAt' | translate }} <b>{{jobfair?.Location}}</b> {{'JobFairRegisterOn' | translate }} <b>{{jobfair?.EventDate | date:\"dd/MM/yyyy\"}}</b></p>\r\n            </div>\r\n            <div class=\"col-sm-12 col-lg-12 col-xl-12\">\r\n                <button class='btn btn-outline-secondary' [routerLink]=\"['/JobFair/List']\" routerLinkActive=\"router-link-active\"  style='width:80px'>\r\n                    <i class='fa fa-chevron-left'></i> {{'GenericBack' | translate }}\r\n                  </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n<section class=\"accounts\" *ngIf=\"(isJobSeeker && !isRegstered) || IsAdmin\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12 col-lg-12 col-xl-12\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12 col-lg-12 \">\r\n                        <h4 class=\"fz20\">\r\n                            {{'JobFairRegisterReigster' | translate }} <b>{{modelNameEdited}}</b> {{'JobFairRegisterAt' | translate }} <b>{{jobfair?.Location}}</b> {{'JobFairRegisterOn' | translate }} <b>{{jobfair?.EventDate | date:\"dd/MM/yyyy\"}}</b>\r\n                        </h4>\r\n                    </div>\r\n                    <div class=\"col-md-12 col-lg-12\" *ngIf=\"IsAdmin\">\r\n                        <div class=\"col-lg-12 m-auto RegisterJobSeerkerSearch rounded\">\r\n                            <span>{{'JobFairRegisterSearch' | translate }}</span>\r\n                            <app-search-job-seeker (OnSelect)=\"OnSelectJobSeeker($event)\"></app-search-job-seeker>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-12 col-lg-12 col-xl-12\">\r\n                        <div class=\"my_profile_form_area\">\r\n                            <form novalidate #modelForm=\"ngForm\">\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-lg-6\">\r\n                                        <mat-form-field class=\"demo-full-width\">\r\n                                            <input matInput type=\"text\" id=\"formGroupExampleInput1\"\r\n                                                [(ngModel)]=\"modelObj.Name\" required #modelNameVar=\"ngModel\"\r\n                                                name=\"modelName\" [disabled]=\"isJobSeeker\"\r\n                                                [ngClass]=\"{'is-invalid': (modelNameVar.touched || modelNameVar.dirty) && !modelNameVar.valid }\"\r\n                                                placeholder=\"{{'JobFairRegisterSeekerName' | translate }}\">\r\n                                            <mat-error *ngIf=\"modelNameVar.touched && modelNameVar.errors?.required\">\r\n                                                {{'GenericEnterName' | translate }}</mat-error>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                    <div class=\"col-lg-6\">\r\n                                        <mat-form-field class=\"demo-full-width\">\r\n                                            <input matInput type=\"text\" id=\"formGroupExampleInput1\"\r\n                                                [(ngModel)]=\"modelObj.JobTitle\" required #modelJobTitleVar=\"ngModel\"\r\n                                                name=\"modelJobTitle\" [disabled]=\"isJobSeeker\"\r\n                                                [ngClass]=\"{'is-invalid': (modelJobTitleVar.touched || modelJobTitleVar.dirty) && !modelJobTitleVar.valid }\"\r\n                                                placeholder=\"{{'JobFairRegisterJobTitle' | translate }}\">\r\n                                            <mat-error\r\n                                                *ngIf=\"modelJobTitleVar.touched && modelJobTitleVar.errors?.required\">\r\n                                                {{'JobFairRegisterJobTitleError' | translate }}</mat-error>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-lg-6\">\r\n                                        <mat-form-field class=\"demo-full-width\">\r\n                                            <input matInput type=\"text\" id=\"formGroupExampleInput1\"\r\n                                                [pattern]=\"emailPattern\" [(ngModel)]=\"modelObj.Email\" required\r\n                                                #modelEmailVar=\"ngModel\" name=\"modelEmail\" [disabled]=\"isJobSeeker\"\r\n                                                [ngClass]=\"{'is-invalid': (modelEmailVar.touched || modelEmailVar.dirty) && !modelEmailVar.valid }\"\r\n                                                placeholder=\"{{'JobFairRegisterEmail' | translate }}\">\r\n                                                <mat-error\r\n                                                *ngIf=\"modelEmailVar.touched && modelEmailVar.errors?.required\">\r\n                                                {{'GenericEnterEmail' | translate }}</mat-error>\r\n                                                <mat-error\r\n                                                *ngIf=\"modelEmailVar.touched && modelEmailVar.errors?.pattern\">Please\r\n                                                {{'GenericEnterEmailValid' | translate }}</mat-error>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-md-6 col-lg-6\">\r\n\r\n                                        <mat-form-field class=\"demo-full-width\">\r\n                                            <input matInput placeholder=\"dd-mm-yyyy\" readonly name=\"dp\"\r\n                                                (dateSelect)=\"onDateSelect($event)\" [(ngModel)]=\"modelDOBDate\"\r\n                                                ngbDatepicker #d=\"ngbDatepicker\">\r\n                                        </mat-form-field>\r\n                                        <div class=\"d-inline-flex\" *ngIf=\"!isJobSeeker\">\r\n                                            <button class=\"btn calcender\" (click)=\"d.toggle()\" type=\"button\"><i\r\n                                                    class=\"fa fa-calendar\" aria-hidden=\"true\"></i></button>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div class=\"col-xl-12 col-lg-12 col-sm-12 d-inline-flex p-0\">\r\n                                        <dynamic-form [fields]=\"regConfig\"></dynamic-form>\r\n                                    </div>\r\n                                    <div class=\"col-xl-12 col-lg-12 col-sm-12 d-inline-flex\">\r\n                                        <div class=\"col-md-6 col-lg-6\">\r\n                                            <div class=\"my_profile_input\">\r\n                                                <button class=\"btn btn-lg w-75 btn-thm\" (click)=\"Save(modelForm);\"\r\n                                                    [title]=\"(modelForm.valid  && form?.valid)  ? 'Save your entered data' : 'Disabled until the form data is valid'\"\r\n                                                    [disabled]=\"!(modelForm.valid && form?.valid)\">{{'HomeRegister' | translate }} </button>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-md-6 col-lg-6\">\r\n                                            <div class=\"my_profile_input\">\r\n                                                <button class=\"btn btn-lg w-75 btn-transparent\"\r\n                                                    routerLink=\"/JobFair/List\">{{'GenericCancel' | translate }}</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>","import { Component, OnInit } from '@angular/core';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { cApplyItem, cApplyList } from 'src/app/interface/Response/Apply.class';\r\nimport { ServiceApply } from 'src/app/services/apply.service';\r\nimport { Router } from '@angular/router';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { CustomPaginationService } from 'src/app/common/pagination/services/custom-pagination.service';\r\nimport { Page } from 'src/app/common/pagination/page';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-applied-jobs',\r\n  templateUrl: './applied-jobs.component.html',\r\n  styleUrls: ['./applied-jobs.component.css']\r\n})\r\nexport class AppliedJobsComponent extends baseComponent implements OnInit {\r\n\r\n  lstResult : cApplyList;\r\n  show = false;\r\n  filtertxt: string = '';\r\n  page: Page<cApplyItem> = new Page();\r\n  \r\n  constructor(private BLService: ServiceApply,\r\n    private router: Router,\r\n    private paginationService: CustomPaginationService,\r\n    BLServiceShowMessage: ServiceShowMessage,\r\n    BLServiceLoginUser: ServiceLoginUser,BLTranslate: TranslateService,) {\r\n    super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadData();\r\n  }\r\n  onView(Id:string){\r\n    this.router.navigate(['Employer/Job/' + Id]);\r\n  }\r\n\r\n  private loadData(): void {\r\n    this.BLService.ListAll(this.page.pageable.pageCurrent, this.filtertxt).subscribe({\r\n      next: lst => {\r\n        this.lstResult = lst;\r\n        this.page.pageable.pageSize = lst.pageSize;\r\n        this.page.totalElements = lst.totalCount;\r\n        this.page.content = lst.lstResult;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  filterbtn(): void {\r\n    this.page.pageable.pageCurrent = 1;\r\n    this.loadData();\r\n  }\r\n  public getNextPage(): void {\r\n    this.page.pageable = this.paginationService.getNextPage(this.page);\r\n    this.loadData();\r\n  }\r\n\r\n  public getPreviousPage(): void {\r\n    this.page.pageable = this.paginationService.getPreviousPage(this.page);\r\n    this.loadData();\r\n  }\r\n  public getloadPageCurrent(): void {\r\n    this.loadData();\r\n  }\r\n}\r\n\r\n","<section class=\"our-dashbord dashbord\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12 col-lg-4 col-xl-3 dn-smd\">\r\n                <app-job-seeker-menu [pageName]=\"'applied'\"></app-job-seeker-menu>\r\n            </div>\r\n            <div class=\"col-sm-12 col-lg-8 col-xl-9\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-lg-12\">\r\n                        <h4 class=\"fz20\">{{'SeekerAppliedPageTitle' | translate }}</h4>\r\n                    </div>\r\n                    <div class=\"col-md-6 col-lg-6 \">\r\n                        <mat-form-field class=\"w-75\">\r\n                            <mat-label>{{'SeekerAppliedSearchJob' | translate }}</mat-label>\r\n                            <input type=\"text\" placeholder=\"{{'SeekerAppliedSearchBy' | translate }}\" matInput\r\n                                [(ngModel)]=\"filtertxt\">\r\n                        </mat-form-field>\r\n                        <input type=\"submit\" value=\"{{'GenericSubmit' | translate }}\" class=\"btn btn-thm\" (click)=\"filterbtn()\">\r\n                    </div>\r\n                    <div class=\"col-lg-12\" *ngFor=\"let item of lstResult?.lstResult\">\r\n                        <div class=\"candidate_list_view style2\">\r\n                            <div class=\"thumb\">\r\n                                <img class=\"img-fluid rounded-circle ProfilePicture-100\" src=\"{{item?.Job.URL}}\">\r\n                                <!-- <div class=\"cpi_av_rating\"><span></span></div> -->\r\n                            </div>\r\n                            <div class=\"content mt25 fn-xl float-right\">\r\n                                <button (click)=\"onView(item.Job._id)\" class=\"btn btn-block btn-thm   \">{{'EmployerSearchViewJob' | translate }} <span\r\n                                        class=\"flaticon-right-arrow pl10\"></span></button>\r\n                            </div>\r\n                            <div class=\"content mt25 fn-xl\">\r\n                                <h4 class=\"title\">{{item.Job.Name}} <small class=\"verified text-thm2 pl10\"><i\r\n                                            class=\"fa fa-check-circle\"></i></small></h4>\r\n                                <p class=\"text-thm2\">{{item.Job.SubName}} </p>\r\n                            </div>\r\n                            <div class=\"col-lg-12 content mt25 fn-xl\">\r\n                                <p class=\"text-body message\" [class.show]=\"show\">{{item.Message}} </p>\r\n                                <a *ngIf=\"item.Message.length > 30\" class=\"text-green\"\r\n                                    (click)=\"show = !show\">{{ show ? 'Show Less' : 'Show More' | translate }}</a>\r\n                            </div>\r\n\r\n                            <ul class=\"review_list\"></ul>\r\n                            <ul class=\"address_list\"></ul>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-12 col-lg-12 mt25\">\r\n                        <app-custom-pagination [page]=\"page\" (nextPageEvent)=\"getNextPage()\"\r\n                            (previousPageEvent)=\"getPreviousPage()\" (loadPageCurrentEvent)=\"getloadPageCurrent()\">\r\n                        </app-custom-pagination>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ConfirmationDialogService } from 'src/app/common/confirmation-dialog/confirmation-dialog.service';\nimport { Page } from 'src/app/common/pagination/page';\nimport { CustomPaginationService } from 'src/app/common/pagination/services/custom-pagination.service';\nimport { ModelId } from 'src/app/interface/Model/ModelId.interface';\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\nimport { cResponseContactInformationRequestList, ResponseContactInformationRequest } from 'src/app/interface/Response/JobSeeker.class';\nimport { ServiceJobSeeker } from 'src/app/services/job-seeker.service';\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\n\n@Component({\n  selector: 'app-approve-contact',\n  templateUrl: './approve-contact.component.html',\n  styleUrls: ['./approve-contact.component.css']\n})\nexport class ApproveContactComponent implements OnInit {\n\n  pageTitle: string = 'Job Approval';\n  lstResult: cResponseContactInformationRequestList;\n  message: ShowMessage = new ShowMessage();\n  filtertxt: string = '';\n\n  page: Page<ResponseContactInformationRequest> = new Page();\n\n  constructor(private BLService: ServiceJobSeeker,\n    private confirmationDialogService: ConfirmationDialogService,\n    private paginationService: CustomPaginationService,\n    private BLServiceShowMessage: ServiceShowMessage,\n    private modalService: NgbModal,\n    private router: Router) { }\n\n\n  ngOnInit() {\n    this.loadData();\n  }\n  private loadData(): void {\n    this.BLService.ContactPermissioGetApprovalList(this.page.pageable.pageCurrent, this.filtertxt).subscribe({\n      next: lst => {\n        this.lstResult = lst;\n        this.page.pageable.pageSize = lst.pageSize;\n        this.page.totalElements = lst.totalCount;\n        this.page.content = lst.lstResult;\n      },\n      error: err => this.message.Error(err)\n    });\n  }\n  public getNextPage(): void {\n    this.page.pageable = this.paginationService.getNextPage(this.page);\n    this.loadData();\n  }\n\n  public getPreviousPage(): void {\n    this.page.pageable = this.paginationService.getPreviousPage(this.page);\n    this.loadData();\n  }\n  public getloadPageCurrent(): void {\n    this.loadData();\n  }\n  Approve(Id: string): void {\n    this.confirmationDialogService.confirm(\"Are you sure you want to Approve?\")\n      .then((confirmed) => {\n        if (!confirmed)\n          return;\n\n        var model = new ModelId();\n        model.Id = Id;\n        \n        this.BLService.ContactPermissionApprove(model).subscribe({\n          next: response => {\n            this.message.Success(\"Approved successfully.\");\n            this.BLServiceShowMessage.sendMessage(this.message);\n            this.loadData();\n          },\n          error: err => this.message.Error(err)\n        });\n      });\n  }\n  Reject(Id: string): void {\n    this.confirmationDialogService.confirm(\"Are you sure you want to Reject?\")\n      .then((confirmed) => {\n        if (!confirmed)\n          return;\n        \n          var model = new ModelId();\n          model.Id = Id;\n          \n          this.BLService.ContactPermissionReject(model).subscribe({\n          next: response => {\n            this.message.Success(\"Reject successfully.\");\n            this.BLServiceShowMessage.sendMessage(this.message);\n            this.loadData();\n          },\n          error: err => this.message.Error(err)\n        });\n      });\n  }\n  filterbtn(): void {\n    this.page.pageable.pageCurrent = 1;\n    this.loadData();\n  }\n  View(Id: string) {\n    this.router.navigate(['/Employer/Company/' + Id])\n  }\n\n\n}\n","<section class=\"our-dashbord dashbord\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-sm-12 col-lg-4 col-xl-3 dn-smd\">\n                <app-job-seeker-menu [pageName]=\"'approve'\"></app-job-seeker-menu>\n            </div>\n            <div class=\"col-sm-12 col-lg-8 col-xl-9\">\n                <div class=\"row\">\n                    <div class=\"col-lg-12\">\n                        <h4 class=\"fz20\">{{'SeekerApprovalPageTitle' | translate }}</h4>\n                    </div>\n                    <div class=\"col-md-12 col-lg-12\">\n                        <div class=\"ui_kit_table\">\n                          <table class=\"table\">\n                            <thead class=\"thead-light\">\n                              <tr>\n                                <th scope=\"col\">{{'GenericCompanyName' | translate }}</th>\n                                <th scope=\"col\">{{'SeekerApprovalDate' | translate }}</th>\n                                <th scope=\"col\">{{'GenericAction' | translate }}</th>\n                              </tr>\n                            </thead>\n                            <tbody *ngIf='page.content && page.content.length'>\n                              <tr *ngFor='let obj of page.content'>\n                                <td>{{ obj.CompanyName}} </td>\n                                <td>{{ obj.CreatedAt | date:\"dd/MM/yyyy\"}}</td>\n                                <td>\n                                  <input type=\"button\" class=\"btn btn-primary\" value=\"{{'GenericApprove' | translate }}\"\n                                    (click)=\"Approve(obj.EmployerId)\" *ngIf=\"obj.IsApproved == -1\">\n                                  <input type=\"button\" class=\"btn btn-danger\" value=\"{{'GenericReject' | translate }}\"\n                                    (click)=\"Reject(obj.EmployerId)\" *ngIf=\"obj.IsApproved == -1\">\n                                    <input type=\"button\" class=\"btn btn-warning\" value=\"{{'GenericView' | translate }}\"\n                                    (click)=\"View(obj.CompanyId)\">\n                                </td>\n                              </tr>\n                            </tbody>\n                          </table>\n                        </div>\n                      </div>\n                </div>\n                <div class=\"col-md-12 col-lg-12\">\n                    <app-custom-pagination [page]=\"page\" (nextPageEvent)=\"getNextPage()\" (previousPageEvent)=\"getPreviousPage()\"\n                      (loadPageCurrentEvent)=\"getloadPageCurrent()\">\n                    </app-custom-pagination>\n                  </div>\n            </div>\n\n        </div>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-job-seeker-dashboard',\r\n  templateUrl: './job-seeker-dashboard.component.html',\r\n  styleUrls: ['./job-seeker-dashboard.component.css']\r\n})\r\nexport class JobSeekerDashboardComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<section class=\"our-dashbord dashbord\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12 col-lg-4 col-xl-3 dn-smd\">\r\n                <app-job-seeker-menu [pageName]=\"'dashboard'\"></app-job-seeker-menu>\r\n            </div>\r\n            <div class=\"col-lg-8 col-xl-9\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-lg-12\">\r\n                        <h4 class=\"mb30\">Dashboard</h4>\r\n                    </div>\r\n                    <div class=\"col-sm-6 col-md-6 col-lg-6 col-xl-6\">\r\n                        <div class=\"ff_one\">\r\n                            <div class=\"icon\"><span class=\"flaticon-paper-plane\"></span></div>\r\n                            <div class=\"detais\">\r\n                                <div class=\"timer\">20</div>\r\n                                <p>Applied Jobs</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-6 col-md-6 col-lg-6 col-xl-6\">\r\n                        <div class=\"ff_one style2\">\r\n                            <div class=\"icon\"><span class=\"flaticon-favorites\"></span></div>\r\n                            <div class=\"detais\">\r\n                                <div class=\"timer\">26</div>\r\n                                <p>Favorite Jobs</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-xl-8\">\r\n                        <div class=\"application_statics\">\r\n                            <h4>Applications Statistics</h4>\r\n                            <div class=\"c_container\"></div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-xl-4\">\r\n                        <div class=\"recent_job_trafic\">\r\n                            <h4>Traffic</h4>\r\n                            <div class=\"trafic_details\">\r\n                                <div class=\"circlechart\" data-percentage=\"60\">1.5 M</div>\r\n                                <h4>Traffic for the day</h4>\r\n                                <p>Traffic through the sources google and facebook for the day</p>\r\n                                <ul class=\"trafic_list float-left\">\r\n                                    <li>40%</li>\r\n                                    <li class=\"list-inline-item\"><span class=\"bgc-fb\"></span></li>\r\n                                    <li class=\"list-inline-item\">Facebook</li>\r\n                                </ul>\r\n                                <ul class=\"trafic_list\">\r\n                                    <li>60%</li>\r\n                                    <li class=\"list-inline-item\"><span class=\"bgc-gogle\"></span></li>\r\n                                    <li class=\"list-inline-item\">Facebook</li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-xl-8\">\r\n                        <div class=\"recent_job_apply\">\r\n                            <h4 class=\"title\">Recent Apply Jobs <a class=\"text-thm float-right\" href=\"#\">Browse All Jobs <span class=\"flaticon-right-arrow\"></span></a></h4>\r\n                            <div class=\"rj_grid\">\r\n                                <h4 class=\"sub_title\">UX/UI Designer</h4>\r\n                                <p class=\"text-thm float-left\">Wiggle CRC</p>\r\n                                <ul class=\"rj_post_address float-right\">\r\n                                    <li class=\"list-inline-item\"><a href=\"#\"><span class=\"flaticon-location-pin\"></span></a></li>\r\n                                    <li class=\"list-inline-item\"><a href=\"#\">Bothell, WA, USA</a></li>\r\n                                    <li class=\"list-inline-item\"><a href=\"#\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"{{'GenericEdit' | translate }}\"><span class=\"flaticon-edit\"></span></a></li>\r\n                                    <li class=\"list-inline-item\"><a href=\"#\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Delete\"><span class=\"flaticon-rubbish-bin\"></span></a></li>\r\n                                </ul>\r\n                            </div>\r\n                            <div class=\"rj_grid\">\r\n                                <h4 class=\"sub_title\">Regional Sales Manager South east Asia</h4>\r\n                                <p class=\"text-thm float-left\">Wiggle CRC</p>\r\n                                <ul class=\"rj_post_address float-right\">\r\n                                    <li class=\"list-inline-item\"><a href=\"#\"><span class=\"flaticon-location-pin\"></span></a></li>\r\n                                    <li class=\"list-inline-item\"><a href=\"#\">Bothell, WA, USA</a></li>\r\n                                    <li class=\"list-inline-item\"><a href=\"#\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"{{'GenericEdit' | translate }}\"><span class=\"flaticon-edit\"></span></a></li>\r\n                                    <li class=\"list-inline-item\"><a href=\"#\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Delete\"><span class=\"flaticon-rubbish-bin\"></span></a></li>\r\n                                </ul>\r\n                            </div>\r\n                            <div class=\"rj_grid\">\r\n                                <h4 class=\"sub_title\">C Developer (Senior) C .Net</h4>\r\n                                <p class=\"text-thm float-left\">Wiggle CRC</p>\r\n                                <ul class=\"rj_post_address float-right\">\r\n                                    <li class=\"list-inline-item\"><a href=\"#\"><span class=\"flaticon-location-pin\"></span></a></li>\r\n                                    <li class=\"list-inline-item\"><a href=\"#\">Bothell, WA, USA</a></li>\r\n                                    <li class=\"list-inline-item\"><a href=\"#\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"{{'GenericEdit' | translate }}\"><span class=\"flaticon-edit\"></span></a></li>\r\n                                    <li class=\"list-inline-item\"><a href=\"#\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Delete\"><span class=\"flaticon-rubbish-bin\"></span></a></li>\r\n                                </ul>\r\n                            </div>\r\n                            <div class=\"rj_grid mb0\">\r\n                                <h4 class=\"sub_title\">UX/UI Designer</h4>\r\n                                <p class=\"text-thm float-left\">Wiggle CRC</p>\r\n                                <ul class=\"rj_post_address float-right\">\r\n                                    <li class=\"list-inline-item\"><a href=\"#\"><span class=\"flaticon-location-pin\"></span></a></li>\r\n                                    <li class=\"list-inline-item\"><a href=\"#\">Bothell, WA, USA</a></li>\r\n                                    <li class=\"list-inline-item\"><a href=\"#\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"{{'GenericEdit' | translate }}\"><span class=\"flaticon-edit\"></span></a></li>\r\n                                    <li class=\"list-inline-item\"><a href=\"#\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Delete\"><span class=\"flaticon-rubbish-bin\"></span></a></li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-xl-4\">\r\n                        <div class=\"recent_job_activity\">\r\n                            <h4 class=\"title\">Activity</h4>\r\n                            <div class=\"grid\">\r\n                                <div class=\"color_bg float-left\"></div>\r\n                                <ul>\r\n                                    <li><span>Dobrick </span>published an article</li>\r\n                                    <li>2 hours ago</li>\r\n                                </ul>\r\n                            </div>\r\n                            <div class=\"grid\">\r\n                                <div class=\"color_bg two float-left\"></div>\r\n                                <ul>\r\n                                    <li><span>Stella </span>created an event</li>\r\n                                    <li>2 hours ago</li>\r\n                                </ul>\r\n                            </div>\r\n                            <div class=\"grid\">\r\n                                <div class=\"color_bg three float-left\"></div>\r\n                                <ul>\r\n                                    <li><span>Peter </span>submitted the reports</li>\r\n                                    <li>2 hours ago</li>\r\n                                </ul>\r\n                            </div>\r\n                            <div class=\"grid\">\r\n                                <div class=\"color_bg four float-left\"></div>\r\n                                <ul>\r\n                                    <li><span>Nateila </span>updated the docs</li>\r\n                                    <li>2 hours ago</li>\r\n                                </ul>\r\n                            </div>\r\n                            <div class=\"grid\">\r\n                                <div class=\"color_bg float-left\"></div>\r\n                                <ul>\r\n                                    <li><span>Dobrick </span>published an article</li>\r\n                                    <li>2 hours ago</li>\r\n                                </ul>\r\n                            </div>\r\n                            <div class=\"grid mb0\">\r\n                                <div class=\"color_bg two float-left\"></div>\r\n                                <ul>\r\n                                    <li><span>Stella </span>created an event</li>\r\n                                    <li>2 hours ago</li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-job-seeker-menu',\r\n  templateUrl: './job-seeker-menu.component.html',\r\n  styleUrls: ['./job-seeker-menu.component.css']\r\n})\r\nexport class JobSeekerMenuComponent extends baseComponent implements OnInit {\r\n  userName: string;\r\n  @Input() pageName: string = \"\";\r\n  constructor(protected BLServiceShowMessage: ServiceShowMessage,\r\n    protected BLServiceLoginUser: ServiceLoginUser,BLTranslate: TranslateService,) {\r\n    super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\r\n    this.userName = this.BLServiceLoginUser.userName;\r\n    this.BLServiceLoginUser.UserNameChanged.subscribe(obj => {\r\n      this.userName = obj;\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","\r\n    <div class=\"user_profile\">\r\n        <div class=\"media\">\r\n              <img src=\"/assets/images/team/e1.png\" class=\"align-self-start mr-3 rounded-circle\" alt=\"8.jpg\">\r\n              <div class=\"media-body\">\r\n                <h5 class=\"mt-0\">{{'HomeHi' | translate }} {{userName}}</h5>\r\n                <!-- <p>Bothell, WA, USA</p> -->\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"dashbord_nav_list\">\r\n        <ul>\r\n            <!-- <li class=\"{{pageName.toLocaleLowerCase() == 'dashboard' ? 'active' : ''}}\"><a routerLink=\"/JobSeeker/Dashboard\"><span class=\"flaticon-dashboard\"></span> Dashboard</a></li> -->\r\n            <li class=\"{{pageName.toLocaleLowerCase() == 'applied' ? 'active' : ''}}\"><a href=\"/JobSeeker/History\"><span class=\"flaticon-paper-plane\"></span> {{'HomeJobHistory' | translate }}</a></li>\r\n            <li class=\"{{pageName.toLocaleLowerCase() == 'resume' ? 'active' : ''}}\"><a routerLink=\"/JobSeeker/Resume/{{userId}}\"><span class=\"flaticon-resume\"></span> {{'HomeResume' | translate }}</a></li>\r\n            <li class=\"{{pageName.toLocaleLowerCase() == 'favourite' ? 'active' : ''}}\"><a routerLink=\"/JobSeeker/ShortList\"><span class=\"flaticon-favorites\"></span> {{'HomeFavouriteJobs' | translate }}</a></li>\r\n            <!-- <li class=\"{{pageName.toLocaleLowerCase() == 'approve' ? 'active' : ''}}\"><a routerLink=\"/JobSeeker/ApproveContact\"><span class=\"flaticon-favorites\"></span> {{'SeekerApprovalPageTitle' | translate }}</a></li> -->\r\n        </ul>\r\n    </div>\r\n","import { NgModule } from '@angular/core';\r\nimport { SharedModule } from 'src/app/common/sharedmodule.module';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ResumeComponent } from './resume/resume.component';\r\nimport { JobSeekerDashboardComponent } from './job-seeker-dashboard/job-seeker-dashboard.component';\r\nimport { ShortListJobsComponent } from './short-list-jobs/short-list-jobs.component';\r\nimport { AppliedJobsComponent } from './applied-jobs/applied-jobs.component';\r\nimport { JobSeekerMenuComponent } from './job-seeker-menu/job-seeker-menu.component';\r\nimport { SearchComponent } from './search/search.component';\r\n// import { SearchComponent } from '../Employer/search/search.component';\r\nimport { ApproveContactComponent } from './approve-contact/approve-contact.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    JobSeekerDashboardComponent,\r\n    ResumeComponent,\r\n    ShortListJobsComponent,\r\n    AppliedJobsComponent,\r\n    JobSeekerMenuComponent,\r\n    SearchComponent,\r\n    ApproveContactComponent\r\n  ],\r\n  imports: [\r\n    SharedModule,\r\n    // SearchComponent,\r\n    RouterModule.forRoot([\r\n      { path: 'JobSeeker/Dashboard', component: JobSeekerDashboardComponent },\r\n      { path: 'JobSeeker/Resume/:Id', component: ResumeComponent },\r\n      { path: 'JobSeeker/ShortList', component: ShortListJobsComponent },\r\n      { path: 'JobSeeker/Search', component: SearchComponent, data:{PageName:\"home\"} },\r\n      { path: 'JobSeeker/History', component: AppliedJobsComponent },\r\n      { path: 'JobSeeker/ApproveContact', component: ApproveContactComponent }\r\n    ]),\r\n  ]\r\n})\r\nexport class JobseekerModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { cJobSeekerItem, ResponseResumeItem, ResponseResumeCertification } from 'src/app/interface/Response/JobSeeker.class';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ServiceJobSeeker } from 'src/app/services/job-seeker.service';\r\nimport { cGenericSubItem, cGenericIdNameItem } from 'src/app/interface/Response/GenericIdName.class';\r\nimport { retry, takeWhile } from 'rxjs/operators';\r\nimport { ModelJobSeeker, ModelResumeCertification } from 'src/app/interface/Model/ModelJobSeeker.class';\r\nimport { trigger, state, style, transition, animate } from '@angular/animations';\r\nimport { ServiceQualification } from 'src/app/services/qualification.service';\r\nimport { ServiceYearsOfExperience } from 'src/app/services/years-of-experience.service';\r\nimport { ServiceLanguages } from 'src/app/services/languages.service';\r\nimport { NgbDateStruct, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ServiceCountry } from 'src/app/services/country.service';\r\nimport { ServiceFavourite } from 'src/app/services/favourite.service';\r\nimport { ConfirmationDialogService } from 'src/app/common/confirmation-dialog/confirmation-dialog.service';\r\nimport { ServiceFiles } from 'src/app/services/files.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ModelId } from 'src/app/interface/Model/ModelId.interface';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n\r\n@Component({\r\n  selector: 'app-resume',\r\n  templateUrl: './resume.component.html',\r\n  styleUrls: ['./resume.component.css'],\r\n})\r\nexport class ResumeComponent extends baseComponent implements OnInit {\r\n\r\n  JobSeekerId: string = \"\";\r\n  objJobSeeker: cJobSeekerItem = new cJobSeekerItem();\r\n  modelJobSeeker: ModelJobSeeker = new ModelJobSeeker();\r\n  IsEditDescription: boolean = false;\r\n  IsEditProfile: boolean = false;\r\n  IsDatesCorrect: boolean = true;\r\n\r\n  LkupQualification: cGenericSubItem[];\r\n  LkupExperience: cGenericSubItem[];\r\n  LkupLanguage: cGenericSubItem[];\r\n  LkupCountry: cGenericIdNameItem[];\r\n  LkupCity: cGenericSubItem[];\r\n\r\n  modelDOB: NgbDateStruct;\r\n  modelEduStart: NgbDateStruct;\r\n  modelEduEnd: NgbDateStruct;\r\n  dateOld: NgbDateStruct;\r\n\r\n  modelIsCreate: boolean;\r\n  modelTitle: string;\r\n  modelNameEdited: string;\r\n  modelEducation: ResponseResumeItem;\r\n  modelIsEducation: boolean;\r\n  modelIsWork: boolean;\r\n  modelIsExtra: boolean;\r\n  modelCertificate: ModelResumeCertification;\r\n  IsFavourite: boolean;\r\n  FileToUpload: File;\r\n  SeekerCertifiateFileError: string;\r\n  isClicked:boolean = false;\r\n\r\n  constructor(\r\n    private BLServiceFile: ServiceFiles,\r\n    private BLJobSeeker: ServiceJobSeeker,\r\n    private confirmationDialogService: ConfirmationDialogService,\r\n    BLServiceShowMessage: ServiceShowMessage,\r\n    BLJobSeekerLoginUser: ServiceLoginUser, BLTranslate: TranslateService,\r\n    private BLQualification: ServiceQualification,\r\n    private BLExperience: ServiceYearsOfExperience,\r\n    private BLFavourite: ServiceFavourite,\r\n    private BLCountry: ServiceCountry,\r\n    private BLLanguages: ServiceLanguages,\r\n    private modalService: NgbModal,\r\n    private cookies :CookieService,\r\n    private route: ActivatedRoute) {\r\n    super(BLServiceShowMessage, BLJobSeekerLoginUser, BLTranslate)\r\n    this.BLTranslate.get(\"SeekerCertifiateFileError\").subscribe(res => { this.SeekerCertifiateFileError = res; });\r\n  }\r\n  getData() {\r\n    this.loadData();\r\n    this.LoadFav();\r\n    this.BLCountry.getListActive().subscribe({\r\n      next: lst => {\r\n        this.LkupCountry = lst;\r\n        this.onCountrySelect();\r\n      },\r\n      error: err => {\r\n        this.message.Error(err);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n      }\r\n    });\r\n    this.BLQualification.getListActive().subscribe({\r\n      next: lst => {\r\n        this.LkupQualification = lst;\r\n      },\r\n      error: err => {\r\n        this.message.Error(err);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n      }\r\n    });\r\n    this.BLExperience.getListActive().subscribe({\r\n      next: lst => {\r\n        this.LkupExperience = lst;\r\n      },\r\n      error: err => {\r\n        this.message.Error(err);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n      }\r\n    });\r\n    this.BLLanguages.getListActive().subscribe({\r\n      next: lst => {\r\n        this.LkupLanguage = lst;\r\n      },\r\n      error: err => {\r\n        this.message.Error(err);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n      }\r\n    });\r\n\r\n    var d = new Date();\r\n    this.dateOld = {\r\n      year: d.getUTCFullYear() - 100, month: d.getUTCMonth() + 1\r\n      , day: d.getUTCDate()\r\n    };\r\n  }\r\n  ngOnInit(): void {\r\n\r\n    this.cookies.set('priST',JSON.stringify(true))\r\n    const param = this.route.snapshot.paramMap.get('Id');\r\n    if (param)\r\n      this.JobSeekerId = param;\r\n    if (this.IsLoggedIn) {\r\n      this.getData();\r\n    }\r\n    else {\r\n      this.BLServiceLoginUser.UserIsLoggedInChanged.pipe(takeWhile(val => true)).subscribe(obj => {\r\n        if (obj) {\r\n          this.getData();\r\n\r\n        }\r\n      });\r\n    }\r\n\r\n  }\r\n  onCountrySelect() {\r\n    this.LkupCity = [];\r\n\r\n    var sub = this.LkupCountry?.find(x => x._id == this.modelJobSeeker.CountryId)?.subItems;\r\n    if (sub?.length == 0)\r\n      return;\r\n\r\n    this.LkupCity = sub?.filter(y => y.IsActive == true);;\r\n  }\r\n  LoadFav() {\r\n    this.BLFavourite.CheckMyFavourite(this.JobSeekerId).subscribe({\r\n      next: obj => {\r\n        this.IsFavourite = obj;\r\n      },\r\n      error: err => {\r\n        this.message.Error(err);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n      }\r\n    });\r\n  }\r\n  loadData() {\r\n    this.BLJobSeeker.getGetByid(this.JobSeekerId).subscribe({\r\n      next: obj => {\r\n        this.objJobSeeker = obj;\r\n        this.objJobSeeker.ProfilePicture != \"\" ? this.objJobSeeker.ProfilePicture = this.objJobSeeker.ProfilePicture + \"?\" + (new Date()).getTime() : \"\"\r\n        this.ConvertToModel();\r\n      },\r\n      error: err => {\r\n        this.message.Error(err);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n      }\r\n    });\r\n  }\r\n  ConvertToModel() {\r\n    this.modelJobSeeker = new ModelJobSeeker();\r\n\r\n    this.modelJobSeeker.About = this.objJobSeeker?.About;\r\n    this.modelJobSeeker.DOB = this.objJobSeeker?.DOB;\r\n    this.modelJobSeeker.Email = this.objJobSeeker?.Email;\r\n    this.modelJobSeeker.ExperienceId = this.objJobSeeker?.Experience._id;\r\n    this.modelJobSeeker.Gender = this.objJobSeeker?.Gender;\r\n    this.modelJobSeeker.JobTitle = this.objJobSeeker?.JobTitle;\r\n    this.modelJobSeeker.Name = this.objJobSeeker?.Name;\r\n    this.modelJobSeeker.Phone = this.objJobSeeker?.Phone;\r\n    this.modelJobSeeker.QualificationId = this.objJobSeeker?.Qualification._id;\r\n    this.modelJobSeeker.SocialFacebook = this.objJobSeeker?.SocialFacebook;\r\n    this.modelJobSeeker.SocialGooglePlus = this.objJobSeeker?.SocialGooglePlus;\r\n    this.modelJobSeeker.SocialLinkedin = this.objJobSeeker?.SocialLinkedin;\r\n    this.modelJobSeeker.SocialTwitter = this.objJobSeeker?.SocialTwitter;\r\n    this.modelJobSeeker.Website = this.objJobSeeker?.Website;\r\n    this.modelJobSeeker._id = this.objJobSeeker?._id;\r\n    this.modelJobSeeker.CountryId = this.objJobSeeker?.Country._id;\r\n    this.modelJobSeeker.CityId = this.objJobSeeker?.City._id;\r\n    this.modelJobSeeker.Languages = this.objJobSeeker.Languages.map(({ _id }) => _id);\r\n\r\n    if (this.modelJobSeeker.DOB) {\r\n      var d = new Date(this.objJobSeeker.DOB);\r\n      this.modelDOB = {\r\n        year: d.getUTCFullYear(), month: d.getUTCMonth() + 1\r\n        , day: d.getUTCDate()\r\n      };\r\n    }\r\n    this.onCountrySelect();\r\n  }\r\n  FormatString(value: string, label: string) {\r\n    if (!value)\r\n      return label + \" N/A\";\r\n\r\n    if (value == \"\")\r\n      return label + \" N/A\";\r\n\r\n    return value\r\n  }\r\n  FormateGender() {\r\n    var value = this.objJobSeeker?.Gender;\r\n    if (value == null)\r\n      return \"N/A\";\r\n\r\n    switch (value) {\r\n      case 0:\r\n        return \"N/A\";\r\n        break;\r\n      case 1:\r\n        return \"M\";\r\n        break;\r\n      case 2:\r\n        return \"F\";\r\n        break;\r\n    }\r\n\r\n    return \"N/A\";\r\n  }\r\n  FormatLocation() {\r\n    if (this.objJobSeeker?.Country?.Name == null || this.objJobSeeker?.City.Name == null)\r\n      return \"Country N/A, City N/A\";\r\n\r\n    if (this.objJobSeeker?.Country?.Name == '' || this.objJobSeeker?.City.Name == '')\r\n      return \"Country N/A, City N/A\";\r\n\r\n    return this.objJobSeeker?.Country?.Name + \", \" + this.objJobSeeker?.City.Name;\r\n  }\r\n  FormatGenericSubItem(obj: cGenericSubItem) {\r\n    if (!obj || obj == null)\r\n      return 'N/A';\r\n\r\n    if (obj?.Name == null || obj?.Name == \"\")\r\n      return 'N/A';\r\n\r\n    return obj?.Name;\r\n  }\r\n  FormatLanguage() {\r\n    if (!this.objJobSeeker?.Languages)\r\n      return 'N/A';\r\n\r\n    if (this.objJobSeeker?.Languages.length == 0)\r\n      return 'N/A';\r\n\r\n    const lst = this.objJobSeeker?.Languages.map(({ Name }) => Name);\r\n    return lst.join();\r\n  }\r\n  FormatAge() {\r\n    if (!this.objJobSeeker?.DOB)\r\n      return \"N/A\";\r\n\r\n    var dob = this.objJobSeeker?.DOB;\r\n    var today = new Date();\r\n    var birthDate = new Date(dob);\r\n\r\n    if (birthDate.getFullYear() == 1)\r\n      return \"N/A\";\r\n\r\n    var age = today.getFullYear() - birthDate.getFullYear();\r\n    var m = today.getMonth() - birthDate.getMonth();\r\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n      age--;\r\n    }\r\n    return age + \" Years\";\r\n  }\r\n  FormateSocial(value: string) {\r\n    if (value == null || value == \"\")\r\n      return \"N/A\";\r\n\r\n    return value;\r\n  }\r\n  onEditDescription() {\r\n    this.IsEditDescription = true;\r\n  }\r\n  onCancelDescription() {\r\n    this.IsEditDescription = false;\r\n    //this.modelJobSeeker.About = this.objJobSeeker.About;\r\n    this.ConvertToModel();\r\n  }\r\n  onSaveDescription() {\r\n    this.BLJobSeeker.UpdateDescription(this.modelJobSeeker).subscribe({\r\n      next: obj => {\r\n        this.loadData();\r\n        this.message.Success(\"Saved successfully.\");\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n      },\r\n      error: err => {\r\n        this.message.Error(err);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n      }\r\n    });\r\n    this.IsEditDescription = false;\r\n  }\r\n  onEditProfile() {\r\n    this.IsEditProfile = true;\r\n    if (this.modelDOB.year == 1) {\r\n      this.modelDOB = null;\r\n    }\r\n  }\r\n  onCancelProfile() {\r\n    this.IsEditProfile = false;\r\n    this.ConvertToModel();\r\n    // this.modelJobSeeker.DOB = this.objJobSeeker.DOB;\r\n    // this.modelJobSeeker.ExperienceId = this.objJobSeeker.Experience._id;\r\n    // this.modelJobSeeker.QualificationId = this.objJobSeeker.Qualification._id;\r\n    // this.modelJobSeeker.Languages = this.objJobSeeker.Languages.map(({ _id }) => _id);\r\n  }\r\n  onSaveProfile() {\r\n    this.BLJobSeeker.UpdateProfile(this.modelJobSeeker).subscribe({\r\n      next: obj => {\r\n        this.loadData();\r\n        this.message.Success(\"Saved successfully.\");\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n      },\r\n      error: err => {\r\n        this.message.Error(err);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n      }\r\n    });\r\n    this.IsEditProfile = false;\r\n  }\r\n  onDOBSelect(param) {\r\n    this.modelJobSeeker.DOB = new Date(param.year, param.month - 1, param.day);\r\n  }\r\n  UpdateInfo(content) {\r\n    this.modalService.open(content, { size: 'lg', backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  modelSaveBtn(obj) {\r\n    this.BLJobSeeker.UpdateInfo(this.modelJobSeeker).subscribe({\r\n      next: obj => {\r\n        this.loadData();\r\n        this.modalService.dismissAll();\r\n        this.message.Success(\"Saved successfully.\");\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n      },\r\n      error: err => {\r\n        this.message.Error(err);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n      }\r\n    });\r\n  }\r\n  onCancelInfo() {\r\n    this.ConvertToModel();\r\n    this.modalService.dismissAll();\r\n  }\r\n  OpenCertificate(content, IsCreate: boolean, obj: ResponseResumeCertification = new ResponseResumeCertification()) {\r\n\r\n    this.modelIsCreate = IsCreate;\r\n    this.modelNameEdited = \"\";\r\n    this.modelCertificate = obj;\r\n    this.modelEduStart = null;\r\n    this.FileToUpload = null;\r\n\r\n    if (obj.StartDate) {\r\n      var s = new Date(obj.StartDate);\r\n      if (obj.StartDate) {\r\n        this.modelEduStart = {\r\n          year: s.getUTCFullYear(), month: s.getUTCMonth() + 1\r\n          , day: s.getUTCDate()\r\n        };\r\n      }\r\n    }\r\n    this.modalService.open(content, { size: 'lg', backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  OpenEducation(content, IsCreate: boolean, name: string, title: string, type: number, obj: ResponseResumeItem = new ResponseResumeItem()) {\r\n\r\n    this.modelIsCreate = IsCreate;\r\n    this.modelNameEdited = name;\r\n    this.modelTitle = title;\r\n    this.modelEducation = obj;\r\n    this.modelIsEducation = type == 1;\r\n    this.modelIsWork = type == 2;\r\n    this.modelIsExtra = type == 3;\r\n    this.modelEduStart = null;\r\n    this.modelEduEnd = null;\r\n\r\n    if (obj.StartDate) {\r\n      var s = new Date(obj.StartDate);\r\n      if (obj.StartDate) {\r\n        this.modelEduStart = {\r\n          year: s.getUTCFullYear(), month: s.getUTCMonth() + 1\r\n          , day: s.getUTCDate()\r\n        };\r\n      }\r\n    }\r\n    if (obj.EndDate) {\r\n      if (obj.EndDate.toString() != \"0001-01-01T00:00:00Z\") {\r\n        var e = new Date(obj.EndDate);\r\n        if (obj.EndDate) {\r\n          this.modelEduEnd = {\r\n            year: e.getUTCFullYear(), month: e.getUTCMonth() + 1\r\n            , day: e.getUTCDate()\r\n          };\r\n        }\r\n      }\r\n    }\r\n    this.modalService.open(content, { size: 'lg', backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  onCerttartSelect(param) {\r\n    this.modelCertificate.StartDate = new Date(param.year, param.month - 1, param.day + 1);\r\n  }\r\n  onEduStartSelect(param) {\r\n    this.modelEducation.StartDate = new Date(param.year, param.month - 1, param.day + 1);\r\n    if (this.modelEducation.EndDate.toString() != \"0001-01-01T00:00:00Z\") {\r\n      this.IsDatesCorrect = this.CompareDates(this.modelEducation.StartDate, this.modelEducation.EndDate);\r\n    }\r\n  }\r\n  onEduEndSelect(param) {\r\n    this.modelEducation.EndDate = new Date(param.year, param.month - 1, param.day + 1);\r\n    if (this.modelEducation.EndDate.toString() != \"0001-01-01T00:00:00Z\") {\r\n      this.IsDatesCorrect = this.CompareDates(this.modelEducation.StartDate, this.modelEducation.EndDate);\r\n    }\r\n  }\r\n  modelSaveCertBtn(obj) {\r\n   \r\n    if (this.FileToUpload != null) {\r\n      if (this.FileToUpload.type != \"application/pdf\"\r\n        && this.FileToUpload.type != \"application/doc\"\r\n        && this.FileToUpload.type != \"application/docx\"\r\n        && this.FileToUpload.type != \"image/png\"\r\n        && this.FileToUpload.type != \"image/jpeg\"\r\n        && this.FileToUpload.type != \"image/jpg\") {\r\n        this.message.Error(this.SeekerCertifiateFileError);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        return;\r\n      }\r\n      this.isClicked = true;\r\n      const formData = new FormData();\r\n\r\n      formData.append('file', this.FileToUpload, this.FileToUpload.name);\r\n      this.BLServiceFile.UploadFile(formData).subscribe({\r\n        next: obj => {\r\n          this.modelCertificate.CertificatePath = obj;\r\n          this.UpdateCertificateDB();\r\n        }\r\n      });\r\n    }\r\n    else{\r\n      this.UpdateCertificateDB();\r\n    }\r\n  }\r\n  UpdateCertificateDB() {\r\n    if (this.modelIsCreate) {\r\n      this.BLJobSeeker.AddCertification(this.modelCertificate).subscribe({\r\n        next: obj => {\r\n          this.loadData();\r\n          this.modalService.dismissAll();\r\n          this.message.Success(\"Saved successfully.\");\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.isClicked = false;\r\n        },\r\n        error: err => {\r\n          this.message.Error(err);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.isClicked = false;\r\n        }\r\n      });\r\n    }\r\n    else {\r\n      this.BLJobSeeker.UpdateCertification(this.modelCertificate).subscribe({\r\n        next: obj => {\r\n          this.loadData();\r\n          this.modalService.dismissAll();\r\n          this.message.Success(\"Saved successfully.\");\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n        },\r\n        error: err => {\r\n          this.message.Error(err);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  modelSaveEduBtn(obj) {\r\n\r\n    if (this.modelIsEducation) //education\r\n    {\r\n      if (this.modelIsCreate) {\r\n        this.BLJobSeeker.AddEducation(this.modelEducation).subscribe({\r\n          next: obj => {\r\n            this.loadData();\r\n            this.modalService.dismissAll();\r\n            this.message.Success(\"Saved successfully.\");\r\n            this.BLServiceShowMessage.sendMessage(this.message);\r\n          },\r\n          error: err => {\r\n            this.message.Error(err);\r\n            this.BLServiceShowMessage.sendMessage(this.message);\r\n          }\r\n        });\r\n      }\r\n      else {\r\n        this.BLJobSeeker.UpdateEducation(this.modelEducation).subscribe({\r\n          next: obj => {\r\n            this.loadData();\r\n            this.modalService.dismissAll();\r\n            this.message.Success(\"Saved successfully.\");\r\n            this.BLServiceShowMessage.sendMessage(this.message);\r\n          },\r\n          error: err => {\r\n            this.message.Error(err);\r\n            this.BLServiceShowMessage.sendMessage(this.message);\r\n          }\r\n        });\r\n      }\r\n    }\r\n    else if (this.modelIsWork) //WorkExperience\r\n    {\r\n      if (this.modelIsCreate) {\r\n        this.BLJobSeeker.AddWorkExperience(this.modelEducation).subscribe({\r\n          next: obj => {\r\n            this.loadData();\r\n            this.modalService.dismissAll();\r\n            this.message.Success(\"Saved successfully.\");\r\n            this.BLServiceShowMessage.sendMessage(this.message);\r\n          },\r\n          error: err => {\r\n            this.message.Error(err);\r\n            this.BLServiceShowMessage.sendMessage(this.message);\r\n          }\r\n        });\r\n      }\r\n      else {\r\n        this.BLJobSeeker.UpdateWorkExperience(this.modelEducation).subscribe({\r\n          next: obj => {\r\n            this.loadData();\r\n            this.modalService.dismissAll();\r\n            this.message.Success(\"Saved successfully.\");\r\n            this.BLServiceShowMessage.sendMessage(this.message);\r\n          },\r\n          error: err => {\r\n            this.message.Error(err);\r\n            this.BLServiceShowMessage.sendMessage(this.message);\r\n          }\r\n        });\r\n      }\r\n    }\r\n    else if (this.modelIsExtra) //ExtraCurricular\r\n    {\r\n      if (this.modelIsCreate) {\r\n        this.BLJobSeeker.AddExtraCurricular(this.modelEducation).subscribe({\r\n          next: obj => {\r\n            this.loadData();\r\n            this.modalService.dismissAll();\r\n            this.message.Success(\"Saved successfully.\");\r\n            this.BLServiceShowMessage.sendMessage(this.message);\r\n          },\r\n          error: err => {\r\n            this.message.Error(err);\r\n            this.BLServiceShowMessage.sendMessage(this.message);\r\n          }\r\n        });\r\n      }\r\n      else {\r\n        this.BLJobSeeker.UpdateExtraCurricular(this.modelEducation).subscribe({\r\n          next: obj => {\r\n            this.loadData();\r\n            this.modalService.dismissAll();\r\n            this.message.Success(\"Saved successfully.\");\r\n            this.BLServiceShowMessage.sendMessage(this.message);\r\n          },\r\n          error: err => {\r\n            this.message.Error(err);\r\n            this.BLServiceShowMessage.sendMessage(this.message);\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n  onCertRemove(Id: string) {\r\n    this.confirmationDialogService.confirm(\"Are you sure you want to remove this?\")\r\n      .then((confirmed) => {\r\n        if (!confirmed)\r\n          return;\r\n        this.BLJobSeeker.RemoveCertification(Id).subscribe({\r\n          next: obj => {\r\n            this.loadData();\r\n            this.modalService.dismissAll();\r\n            this.message.Success(\"Removed successfully.\");\r\n            this.BLServiceShowMessage.sendMessage(this.message);\r\n          },\r\n          error: err => {\r\n            this.message.Error(err);\r\n            this.BLServiceShowMessage.sendMessage(this.message);\r\n          }\r\n        });\r\n      });\r\n  }\r\n  onEduRemove(Id: string, type: number) {\r\n    this.confirmationDialogService.confirm(\"Are you sure you want to remove this?\")\r\n      .then((confirmed) => {\r\n        if (!confirmed)\r\n          return;\r\n        if (type == 1) //education\r\n        {\r\n          this.BLJobSeeker.RemoveEducation(Id).subscribe({\r\n            next: obj => {\r\n              this.loadData();\r\n              this.modalService.dismissAll();\r\n              this.message.Success(\"Removed successfully.\");\r\n              this.BLServiceShowMessage.sendMessage(this.message);\r\n            },\r\n            error: err => {\r\n              this.message.Error(err);\r\n              this.BLServiceShowMessage.sendMessage(this.message);\r\n            }\r\n          });\r\n        } else if (type == 2)//workexperience\r\n        {\r\n          this.BLJobSeeker.RemoveWorkExperience(Id).subscribe({\r\n            next: obj => {\r\n              this.loadData();\r\n              this.modalService.dismissAll();\r\n              this.message.Success(\"Removed successfully.\");\r\n              this.BLServiceShowMessage.sendMessage(this.message);\r\n            },\r\n            error: err => {\r\n              this.message.Error(err);\r\n              this.BLServiceShowMessage.sendMessage(this.message);\r\n            }\r\n          });\r\n        }\r\n        else if (type == 3)//Extra-Curricular\r\n        {\r\n          this.BLJobSeeker.RemoveExtraCurricular(Id).subscribe({\r\n            next: obj => {\r\n              this.loadData();\r\n              this.modalService.dismissAll();\r\n              this.message.Success(\"Removed successfully.\");\r\n              this.BLServiceShowMessage.sendMessage(this.message);\r\n            },\r\n            error: err => {\r\n              this.message.Error(err);\r\n              this.BLServiceShowMessage.sendMessage(this.message);\r\n            }\r\n          });\r\n        }\r\n      });\r\n  }\r\n  onAddFavourite(Id: string) {\r\n\r\n    this.BLFavourite.Create(Id).subscribe({\r\n      next: obj => {\r\n        this.message.Success(\"Saved successfully.\");\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.LoadFav();\r\n      },\r\n      error: err => {\r\n        this.message.Error(err);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n      }\r\n    });\r\n  }\r\n  onRemoveFavourite(Id: string) {\r\n    this.confirmationDialogService.confirm(\"Are you sure you want to remove from the shortlist?\")\r\n      .then((confirmed) => {\r\n        if (!confirmed)\r\n          return;\r\n        this.BLFavourite.DeActivateByJobId(Id).subscribe({\r\n          next: response => {\r\n            this.message.Success(\"Removed Successfully.\");\r\n            this.BLServiceShowMessage.sendMessage(this.message);\r\n            this.LoadFav();\r\n          },\r\n          error: err => this.message.Error(err)\r\n        });\r\n      });\r\n  }\r\n  UploadStatus(status) {\r\n    /// this.IsUploading = status;\r\n  }\r\n  OnFileUpload(filename) {\r\n    //this.FileName = filename;\r\n    //this.modelObj.CompanyLogo = filename;\r\n  }\r\n  handleFileInput(files: FileList, type) {\r\n\r\n    const formData = new FormData();\r\n    formData.append('logo', files.item(0), files.item(0).name);\r\n    this.BLServiceFile.UploadFile(formData).subscribe({\r\n      next: obj => {\r\n        if (type == 1)//cover letter\r\n        {\r\n          //this.modelJobSeeker.CoverLetterFile == obj;\r\n          this.saveFile(obj, 1);\r\n        }\r\n        else if (type == 2)//Resume\r\n        {\r\n          //this.modelJobSeeker.ResumeFile == obj\r\n          this.saveFile(obj, 2);\r\n        }\r\n        else if (type == 3)//Profile Picture\r\n        {\r\n          // this.modelJobSeeker.ProfilePicture == obj\r\n          this.saveFile(obj, 3);\r\n        }\r\n      }\r\n      ,\r\n      error: err => {\r\n        this.message.Error(err);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n      }\r\n    });\r\n  }\r\n\r\n  saveFile(fileName, type) {\r\n    this.BLJobSeeker.UploadFile(fileName, type).subscribe({\r\n      next: obj => {\r\n        this.loadData();\r\n        this.message.Success(\"Uploaded successfully.\")\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n      }\r\n      ,\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  scrollToElement($element): void {\r\n    \r\n    $element.scrollIntoView({ behavior: \"smooth\", block: \"start\", inline: \"nearest\" });\r\n  }\r\n  IsValidModel() {\r\n    return (this.modelJobSeeker.CountryId != '' && this.modelJobSeeker.CountryId != '-1') &&\r\n      (this.modelJobSeeker.CityId != '' && this.modelJobSeeker.CityId != '-1') &&\r\n      (this.modelJobSeeker.Gender != 0 && this.modelJobSeeker.Gender != -1)\r\n  }\r\n  public OnFileChanged(files) {\r\n    this.FileToUpload = <File>files[0];\r\n  }\r\n  onRequestContactPermission(Id: string) {\r\n    var model = new ModelId();\r\n    model.Id = Id;\r\n    this.BLJobSeeker.ContactPermissionRequest(model).subscribe({\r\n      next: obj => {\r\n        this.message.Success(\"Request sent successfully.\");\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => {\r\n        this.message.Error(err);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n      }\r\n    });\r\n  }\r\n  Import()\r\n  {\r\n    this.BLJobSeeker.ImportCertification().subscribe({\r\n      next: obj => {\r\n        this.message.Success(\"Request sent successfully.\");\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => {\r\n        this.message.Error(err);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n      }\r\n    });\r\n  }\r\n}\r\n","<!-- Candidate Personal Info-->\r\n<section class=\"bgc-fa mt65\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-8 col-xl-8\">\r\n                <div class=\"candidate_personal_info\">\r\n                    <div class=\"thumb\">\r\n                        <div *ngIf=\"objJobSeeker?.IsMyResume\" class=\"uploaddiv\">\r\n                            <input type=\"file\" id=\"imgupload\" style=\"display:none\" class=\"uploadbtnImage\"\r\n                                accept=\".png,.jpg,.jpeg\" (change)=\"handleFileInput($event.target.files,3)\" />\r\n                            <label for='imgupload' class=\"lbluploadbtnImage\"><img\r\n                                    src=\"/assets/images/resource/upload.png\"></label>\r\n\r\n                        </div>\r\n                        <img class=\"img-fluid rounded-circle ProfilePicture\" src=\"{{objJobSeeker.ProfilePicture}}\"\r\n                            alt=\"cs2.jpg\">\r\n                        <div class=\"cpi_av_rating\"><span>\r\n                                {{FormateGender()}}\r\n                            </span></div>\r\n                    </div>\r\n                    <div class=\"details\">\r\n                        <h3>{{FormatString(objJobSeeker?.Name, 'Name')}} <small class=\"verified\"><i\r\n                                    class=\"fa fa-check-circle\"></i></small>\r\n                            <span *ngIf=\"objJobSeeker?.IsMyResume\" class=\"list-inline-item ml-2 bg-blue\"><a\r\n                                    (click)=\"UpdateInfo(content)\" data-toggle=\"tooltip\" data-placement=\"bottom\"\r\n                                    title=\"{{'GenericEdit' | translate }}\"><span\r\n                                        class=\"flaticon-edit\"></span></a></span>\r\n                        </h3>\r\n                        <p>{{FormatString(objJobSeeker?.JobTitle, 'Job Title')}}</p>\r\n                        <ul class=\"address_list\">\r\n                            <li class=\"list-inline-item\"><a href=\"#\"><span\r\n                                        class=\"flaticon-location-pin text-thm pr-2\"></span></a></li>\r\n                            <li class=\"list-inline-item\"><a href=\"#\">{{FormatLocation()}}</a></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-lg-4 col-xl-4\">\r\n                <div class=\"candidate_personal_overview\">\r\n                    <div class=\"col col-sm-12 col-lg-12\"\r\n                        *ngIf=\" (isEmployer && IsFavourite) || IsAdmin || objJobSeeker.IsMyResume\">\r\n                        <!-- *ngIf=\"objJobSeeker.ContactPermissionHasPermission ==1 || IsAdmin || objJobSeeker.IsMyResume\"> -->\r\n                        <div class=\"grid\">\r\n                            <p><a><span class=\"flaticon-link text-thm pr-4\"></span>{{FormatString(objJobSeeker?.Website,\r\n                                    'SeekerResumeWebsite' | translate)}}</a>\r\n                            </p>\r\n                            <p><a><span\r\n                                        class=\"flaticon-phone-call text-thm pr-4\"></span>{{FormatString(objJobSeeker?.Phone,'SeekerResumePhone'\r\n                                    | translate)}}</a>\r\n                            </p>\r\n                            <p><a><span\r\n                                        class=\"flaticon-mail text-thm pr-4\"></span>{{FormatString(objJobSeeker?.Email,'SeekerResumeEmail'\r\n                                    | translate)}}</a>\r\n                            </p>\r\n                            <p><a><i\r\n                                        class=\"fa fa-linkedin text-thm pr-4\"></i>{{FormateSocial(objJobSeeker?.SocialLinkedin)}}</a>\r\n                            </p>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <button *ngIf=\"isEmployer && !IsFavourite\" class=\"btn btn-block btn-thm mb15\"\r\n                        (click)=\"onAddFavourite(objJobSeeker._id)\"><span class=\"flaticon-favorites fz24 pr10\"></span>\r\n                        {{'SeekerResumeShortlist' | translate }}</button>\r\n                    <span *ngIf=\"isEmployer && !IsFavourite\">{{\"ResumeShortListInfo\" | translate}}</span>\r\n                    <button *ngIf=\"isEmployer && IsFavourite\" class=\"btn btn-block btn-danger  mb15 \"\r\n                        (click)=\"onRemoveFavourite(objJobSeeker._id)\"><span class=\"flaticon-favorites fz24 pr10\"></span>\r\n                        {{'GenericRemove' | translate}} {{'SeekerResumeShortlist' | translate }}</button>\r\n                    <!-- <button *ngIf=\"isEmployer && (objJobSeeker.ContactPermissionHasPermission == 0 )\"\r\n                        class=\"btn btn-block btn-primary mb15\"\r\n                        (click)=\"onRequestContactPermission(objJobSeeker._id)\"><span\r\n                            class=\"flaticon-alarm fz24 pr10\"></span>\r\n                        {{'RequestContactInformation'  | translate }}</button>\r\n                    <button *ngIf=\"isEmployer && objJobSeeker.ContactPermissionHasPermission == -1\"\r\n                        class=\"btn btn-block btn-primary mb15\" disabled=\"disabled\"\r\n                        ><span\r\n                            class=\"flaticon-alarm fz24 pr10\"></span>\r\n                        {{ 'RequestPending' | translate }}</button> -->\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n\r\n<!-- Sticky Header -->\r\n<section class=\"sticky_heading bgc-f3 h80 p0 bg-green\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-xl-12\">\r\n                <div class=\"sticky-nav-tabs \">\r\n                    <div class=\"sticky-nav-tabs-container \">\r\n                        <li class=\"list-inline-item\"><a class=\"sticky-nav-tab\"\r\n                                (click)=\"scrollToElement(tab1)\">{{'SeekerResumeAbout' | translate }}</a></li>\r\n                        <li class=\"list-inline-item\"><a class=\"sticky-nav-tab\"\r\n                                (click)=\"scrollToElement(tab2)\">{{'SeekerResumeEducation' | translate }}</a></li>\r\n                        <li class=\"list-inline-item\"><a class=\"sticky-nav-tab\"\r\n                                (click)=\"scrollToElement(tab3)\">{{'SeekerResumeWork' | translate }}</a></li>\r\n                        <li class=\"list-inline-item\"><a class=\"sticky-nav-tab\"\r\n                                (click)=\"scrollToElement(tab4)\">{{'SeekerResumeCertificates' | translate }}</a></li>\r\n                        <li class=\"list-inline-item\"><a class=\"sticky-nav-tab\"\r\n                                (click)=\"scrollToElement(tab5)\">{{'SeekerResumeExtra' | translate }}</a></li>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n\r\n<!-- Candidate Personal Info Details-->\r\n<section class=\"bgc-white\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-xl-8\">\r\n                <div class=\"row\">\r\n                    <div #tab1 class=\"col-lg-12\">\r\n                        <div class=\"candidate_about_info\">\r\n                            <h4 class=\"fz20 mb30\">{{'SeekerResumeAboutMe' | translate }}\r\n                                <span *ngIf=\"!IsEditDescription && objJobSeeker?.IsMyResume\"\r\n                                    class=\"list-inline-item padding5 bg-blue\"><a (click)=\"onEditDescription()\"\r\n                                        data-toggle=\"tooltip\" data-placement=\"bottom\"\r\n                                        title=\"{{'GenericEdit' | translate }}\"><span\r\n                                            class=\"flaticon-edit\"></span></a></span>\r\n                                <span *ngIf=\"IsEditDescription && objJobSeeker?.IsMyResume\"\r\n                                    class=\"list-inline-item padding5 bg-red\"><a (click)=\"onCancelDescription()\"\r\n                                        data-toggle=\"tooltip\" data-placement=\"bottom\"\r\n                                        title=\"{{'GenericCancel' | translate }}\"><span\r\n                                            class=\"flaticon-close\"></span></a></span>\r\n                                <span *ngIf=\"IsEditDescription && objJobSeeker?.IsMyResume\"\r\n                                    class=\"list-inline-item padding5 bg-green\"><a (click)=\"onSaveDescription()\"\r\n                                        data-toggle=\"tooltip\" data-placement=\"bottom\"\r\n                                        title=\"{{'GenericSave' | translate }}\"><span\r\n                                            class=\"flaticon-open-envelope-with-letter\"></span></a></span>\r\n                            </h4>\r\n                            <div *ngIf=\"!IsEditDescription\" class=\"editor\" [innerHTML]=\"modelJobSeeker.About\"></div>\r\n                            <div>\r\n                                <angular-editor *ngIf=\"IsEditDescription && objJobSeeker?.IsMyResume\" class=\"editor\"\r\n                                    [config]=\"textEditorConfig\" minlength=\"100\" [(ngModel)]=\"modelJobSeeker.About\"\r\n                                    required #modelAboutVar=\"ngModel\" name=\"modelAbout\"\r\n                                    placeholder=\"{{'SeekerResumeAboutDesc' | translate }}\"></angular-editor>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div #tab2 class=\"col-lg-12\">\r\n                        <div class=\"my_resume_eduarea style2\">\r\n                            <h4 class=\"title\">{{'SeekerResumeEducation' | translate }} <span\r\n                                    *ngIf=\"objJobSeeker?.IsMyResume\" class=\"list-inline-item ml-2 bg-blue\"><a\r\n                                        (click)=\"OpenEducation(Education,true,'','Education',1)\" data-toggle=\"tooltip\"\r\n                                        data-placement=\"bottom\"\r\n                                        title=\"{{'SeekerResumeAddEducation' | translate }}\"><span\r\n                                            class=\"ResumeEditbtn\"><b>+</b></span></a></span>\r\n\r\n                            </h4>\r\n                            <div class=\"content\" *ngFor=\"let item of objJobSeeker.Education\">\r\n                                <div class=\"circle bgc-thm\"></div>\r\n                                <p class=\"edu_center\">{{item.Name}}<small>{{item.StartDate | date:'MMM, y'}} -\r\n                                        {{item.EndDate | date:'MMM, y'}}</small>\r\n                                    <span *ngIf=\"objJobSeeker?.IsMyResume\"\r\n                                        class=\"list-inline-item padding5 bg-blue ml-2\"><a\r\n                                            (click)=\"OpenEducation(Education,false,item.Name,'Education',1,item)\"\r\n                                            data-toggle=\"tooltip\" data-placement=\"bottom\"\r\n                                            title=\"{{'GenericEdit' | translate }}\"><span\r\n                                                class=\"flaticon-edit \"></span></a></span>\r\n                                    <span *ngIf=\"objJobSeeker?.IsMyResume\" class=\"list-inline-item padding5 bg-red\"><a\r\n                                            (click)=\"onEduRemove(item._id,1)\" data-toggle=\"tooltip\"\r\n                                            data-placement=\"bottom\" title=\"{{'GenericDeactivate' | translate }}\"><span\r\n                                                class=\"flaticon-rubbish-bin\"></span></a></span>\r\n                                </p>\r\n                                <h4 class=\"edu_stats\">{{item.SubTitle}}</h4>\r\n                                <p class=\"mb0\">{{item.Description}}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-12\">\r\n                        <div #tab3 class=\"my_resume_eduarea style2\">\r\n                            <h4 class=\"title\">{{'SeekerResumeWork' | translate }}\r\n                                <span class=\"list-inline-item ml-2 bg-blue\" *ngIf=\"objJobSeeker?.IsMyResume\"><a\r\n                                        (click)=\"OpenEducation(Education,true,'','Work History',2)\"\r\n                                        data-toggle=\"tooltip\" data-placement=\"bottom\"\r\n                                        title=\"{{'SeekerResumeAddWork' | translate }}\"><span\r\n                                            class=\"ResumeEditbtn\"><b>+</b></span></a></span>\r\n                            </h4>\r\n                            <div class=\"content\" *ngFor=\"let item of objJobSeeker.WorkHistory\">\r\n                                <div class=\"circle bgc-thm\"></div>\r\n                                <p class=\"edu_center\">{{item.Name}}<small>{{item.StartDate | date:'MMM, y'}} -\r\n                                        {{item.EndDate | date:'MMM, y'}}</small>\r\n                                    <span *ngIf=\"objJobSeeker?.IsMyResume\"\r\n                                        class=\"list-inline-item padding5 bg-blue ml-2\"><a\r\n                                            (click)=\"OpenEducation(Education,false,item.Name,'Work History',2,item)\"\r\n                                            data-toggle=\"tooltip\" data-placement=\"bottom\"\r\n                                            title=\"{{'GenericEdit' | translate }}\"><span\r\n                                                class=\"flaticon-edit \"></span></a></span>\r\n                                    <span *ngIf=\"objJobSeeker?.IsMyResume\" class=\"list-inline-item padding5 bg-red\"><a\r\n                                            (click)=\"onEduRemove(item._id,2)\" data-toggle=\"tooltip\"\r\n                                            data-placement=\"bottom\" title=\"{{'GenericDeactivate' | translate }}\"><span\r\n                                                class=\"flaticon-rubbish-bin\"></span></a></span>\r\n                                </p>\r\n                                <h4 class=\"edu_stats\">{{item.SubTitle}}</h4>\r\n                                <p class=\"mb0\">{{item.Description}}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-12\">\r\n                        <div #tab4 class=\"my_resume_eduarea style2\">\r\n                            <h4 class=\"title\">{{'SeekerResumeCertificates' | translate }}\r\n                                <span *ngIf=\"objJobSeeker?.IsMyResume\" class=\"list-inline-item ml-2 bg-blue\"><a\r\n                                        (click)=\"OpenCertificate(Certificate,true)\" data-toggle=\"tooltip\"\r\n                                        data-placement=\"bottom\"\r\n                                        title=\"{{'SeekerResumeAddCertificate' | translate }}\"><span\r\n                                            class=\"ResumeEditbtn\"><b>+</b></span></a></span>\r\n                                            <span>\r\n                                                <a (click)=\"Import()\">{{\"Import\" | translate }}</a>\r\n                                            </span>\r\n\r\n                            </h4>\r\n                            <div class=\"content\" *ngFor=\"let item of objJobSeeker.Certification\">\r\n                                <div class=\"circle bgc-thm\"></div>\r\n                                <p class=\"edu_center\">{{item.Name}}<small>{{item.StartDate | date:'MMM, y'}} </small>\r\n                                    <span *ngIf=\"objJobSeeker?.IsMyResume\"\r\n                                        class=\"list-inline-item padding5 bg-blue ml-2\"><a\r\n                                            (click)=\"OpenCertificate(Certificate,false,item)\" data-toggle=\"tooltip\"\r\n                                            data-placement=\"bottom\" title=\"{{'GenericEdit' | translate }}\"><span\r\n                                                class=\"flaticon-edit \"></span></a></span>\r\n                                    <span *ngIf=\"objJobSeeker?.IsMyResume\" class=\"list-inline-item padding5 bg-red\"><a\r\n                                            (click)=\"onCertRemove(item._id)\" data-toggle=\"tooltip\"\r\n                                            data-placement=\"bottom\" title=\"{{'GenericDeactivate' | translate }}\"><span\r\n                                                class=\"flaticon-rubbish-bin\"></span></a></span>\r\n                                    <span *ngIf=\"item.CertificatePath && item.CertificatePath != ''\"><a target=\"_blank\"\r\n                                            href=\"{{item.CertificatePath}}\">{{\"ResumeCertificateDownload\" | translate}}</a></span>\r\n                                </p>\r\n                                <p class=\"mb0\">{{item.Description}}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-12\">\r\n                        <div #tab5 class=\"my_resume_eduarea style2\">\r\n                            <h4 class=\"title\">{{'SeekerResumeExtra' | translate }}\r\n                                <span class=\"list-inline-item ml-2 bg-blue\" *ngIf=\"objJobSeeker?.IsMyResume\"><a\r\n                                        (click)=\"OpenEducation(Education,true,'','Extra-Curricular',3)\"\r\n                                        data-toggle=\"tooltip\" data-placement=\"bottom\"\r\n                                        title=\"{{'SeekerResumeAddExtra' | translate }}\"><span\r\n                                            class=\"ResumeEditbtn\"><b>+</b></span></a></span>\r\n                            </h4>\r\n                            <div class=\"content\" *ngFor=\"let item of objJobSeeker.ExtraCurricular\">\r\n                                <div class=\"circle bgc-thm\"></div>\r\n                                <p class=\"edu_center\">{{item.Name}}<small>{{item.StartDate | date:'MMM, y'}} -\r\n                                        {{item.EndDate | date:'MMM, y'}}</small>\r\n                                    <span *ngIf=\"objJobSeeker?.IsMyResume\"\r\n                                        class=\"list-inline-item padding5 bg-blue ml-2\"><a\r\n                                            (click)=\"OpenEducation(Education,false,item.Name,'Extra-Curricular',3,item)\"\r\n                                            data-toggle=\"tooltip\" data-placement=\"bottom\"\r\n                                            title=\"{{'GenericEdit' | translate }}\"><span\r\n                                                class=\"flaticon-edit \"></span></a></span>\r\n                                    <span *ngIf=\"objJobSeeker?.IsMyResume\" class=\"list-inline-item padding5 bg-red\"><a\r\n                                            (click)=\"onEduRemove(item._id,3)\" data-toggle=\"tooltip\"\r\n                                            data-placement=\"bottom\" title=\"{{'GenericDeactivate' | translate }}\"><span\r\n                                                class=\"flaticon-rubbish-bin\"></span></a></span>\r\n                                </p>\r\n                                <h4 class=\"edu_stats\">{{item.SubTitle}}</h4>\r\n                                <p class=\"mb0\">{{item.Description}}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-xl-4\">\r\n                <h4 class=\"pull-right\">\r\n                    <span *ngIf=\"!IsEditProfile && objJobSeeker?.IsMyResume\"\r\n                        class=\"list-inline-item padding5 bg-blue\"><a (click)=\"onEditProfile()\" data-toggle=\"tooltip\"\r\n                            data-placement=\"bottom\" title=\"{{'GenericEdit' | translate }}\"><span\r\n                                class=\"flaticon-edit\"></span></a></span>\r\n                    <span *ngIf=\"IsEditProfile && objJobSeeker?.IsMyResume\" class=\"list-inline-item padding5 bg-red\"><a\r\n                            (click)=\"onCancelProfile()\" data-toggle=\"tooltip\" data-placement=\"bottom\"\r\n                            title=\"{{'GenericCancel' | translate }}\"><span class=\"flaticon-close\"></span></a></span>\r\n                    <span *ngIf=\"IsEditProfile && objJobSeeker?.IsMyResume\"\r\n                        class=\"list-inline-item padding5 bg-green\"><a (click)=\"onSaveProfile()\" data-toggle=\"tooltip\"\r\n                            data-placement=\"bottom\" title=\"{{'GenericSave' | translate }}\"><span\r\n                                class=\"flaticon-open-envelope-with-letter\"></span></a></span>\r\n                </h4>\r\n                <div class=\"candidate_working_widget bgc-fa bg-green\">\r\n                    <div class=\"icon text-thm\"><span class=\"flaticon-controls\"></span></div>\r\n                    <div class=\"details\">\r\n                        <h4>{{'SeekerResumeExperience' | translate }}</h4>\r\n                        <p *ngIf=\"!IsEditProfile \"><b>{{FormatGenericSubItem(objJobSeeker?.Experience)}}</b></p>\r\n                        <p *ngIf=\"IsEditProfile && objJobSeeker?.IsMyResume\"><select\r\n                                class=\"browser-default custom-select\" data-actions-box=\"true\"\r\n                                [(ngModel)]=\"modelJobSeeker.ExperienceId\" required #modelExperienceVar=\"ngModel\"\r\n                                name=\"modelExperience\">\r\n                                <option value=\"-1\">{{'EmployerPostJobExperienceEnter' | translate }}</option>\r\n                                <option *ngFor=\"let item of LkupExperience\" value=\"{{item._id}}\">{{item.Name}}\r\n                                </option>\r\n                            </select></p>\r\n                    </div>\r\n                    <div class=\"icon text-thm\"><span class=\"flaticon-old-age-man\"></span></div>\r\n                    <div class=\"details\">\r\n                        <h4>{{'SeekerResumeAge' | translate }}</h4>\r\n                        <p *ngIf=\"!IsEditProfile \"><b>{{FormatAge()}}</b></p>\r\n                        <div class=\"input-group\" *ngIf=\"IsEditProfile && objJobSeeker?.IsMyResume\">\r\n                            <input class=\"form-control\" placeholder=\"dd-mm-yyyy\" readonly name=\"dpob\"\r\n                                [maxDate]=\"dateToday\" [minDate]=\"dateOld\" (dateSelect)=\"onDOBSelect($event)\"\r\n                                [(ngModel)]=\"modelDOB\" ngbDatepicker #dob=\"ngbDatepicker\">\r\n                            <div class=\"input-group-append\">\r\n                                <button class=\"btn calcender\" (click)=\"dob.toggle()\" type=\"button\"><i\r\n                                        class=\"fa fa-calendar\" aria-hidden=\"true\"></i></button>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class=\"icon text-thm\"><span class=\"flaticon-paper\"></span></div>\r\n                    <div class=\"details\">\r\n                        <h4>{{'SeekerResumeLanguages' | translate }}</h4>\r\n                        <p *ngIf=\"!IsEditProfile \"><b>{{FormatLanguage()}}</b></p>\r\n                        <p *ngIf=\"IsEditProfile && objJobSeeker?.IsMyResume\">\r\n                            <mat-select multiple class=\"browser-default custom-select\" data-actions-box=\"true\"\r\n                                [(ngModel)]=\"modelJobSeeker.Languages\" required #modelLanguageVar=\"ngModel\"\r\n                                name=\"modelLanguage\" placeholder=\"{{'SeekerResumeSelectLanguage' | translate }}\">\r\n                                <mat-option *ngFor=\"let item of LkupLanguage\" value=\"{{item._id}}\">{{item.Name}}\r\n                                </mat-option>\r\n                            </mat-select>\r\n                        </p>\r\n                    </div>\r\n                    <div class=\"icon text-thm\"><span class=\"flaticon-mortarboard\"></span></div>\r\n                    <div class=\"details\">\r\n                        <h4>{{'DataQualification' | translate }}</h4>\r\n                        <p *ngIf=\"!IsEditProfile \"><b>{{FormatGenericSubItem(objJobSeeker?.Qualification)}}</b></p>\r\n                        <p *ngIf=\"IsEditProfile && objJobSeeker?.IsMyResume\">\r\n                            <select class=\"browser-default custom-select\" data-actions-box=\"true\"\r\n                                [(ngModel)]=\"modelJobSeeker.QualificationId\" required #modelQualificationVar=\"ngModel\"\r\n                                name=\"modelQualification\">\r\n                                <option value=\"-1\">{{'SeekerResumeSelectQualification' | translate }}</option>\r\n                                <option *ngFor=\"let item of LkupQualification\" value=\"{{item._id}}\">{{item.Name}}\r\n                                </option>\r\n                            </select>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <h4 class=\"fz20 mb30\">{{'SeekerResumeAttachments' | translate }}</h4>\r\n                <div *ngIf=\"objJobSeeker?.IsMyResume\">\r\n                    <input type=\"file\" id=\"imgupload1\" style=\"display:none\" class=\"uploadbtnImage\"\r\n                        accept=\".pdf,.doc.docx\" (change)=\"handleFileInput($event.target.files,1)\" />\r\n                    <label for='imgupload1' class=\"lbluploadbtnImage\"><img\r\n                            src=\"/assets/images/resource/upload.png\">{{'SeekerResumeUploadConverLetter' | translate\r\n                        }}</label>\r\n\r\n                </div>\r\n                <div *ngIf=\"(objJobSeeker.CoverLetterFile != '' && !objJobSeeker.IsMyResume) || (objJobSeeker.CoverLetterFile != '' && objJobSeeker.IsMyResume)\"\r\n                    class=\"candidate_document_widget\">\r\n                    <a href=\"{{objJobSeeker.CoverLetterFile}}\" target=\"_blank\">\r\n                        <div class=\"details\">\r\n                            <div class=\"icon\"><span class=\"flaticon-pdf\"></span></div>\r\n                            <h4 class=\"title\">{{'SeekerResumeCoverLetter' | translate }}</h4>\r\n                            <p>PDF</p>\r\n                        </div>\r\n                    </a>\r\n                </div>\r\n                <div *ngIf=\"objJobSeeker?.IsMyResume\">\r\n                    <input type=\"file\" id=\"imgupload2\" style=\"display:none\" class=\"uploadbtnImage\"\r\n                        accept=\".pdf,.doc.docx\" (change)=\"handleFileInput($event.target.files,2)\" />\r\n                    <label for='imgupload2' class=\"lbluploadbtnImage\"><img\r\n                            src=\"/assets/images/resource/upload.png\">{{'SeekerResumeUploadResume' | translate }}</label>\r\n\r\n                </div>\r\n                <div *ngIf=\"(objJobSeeker.ResumeFile != '' && !objJobSeeker.IsMyResume) || (objJobSeeker.ResumeFile != '' && objJobSeeker.IsMyResume)\"\r\n                    class=\"candidate_document_widget\">\r\n                    <a href=\"{{objJobSeeker.ResumeFile}}\" target=\"_blank\">\r\n                        <div class=\"icon\"><span class=\"flaticon-pdf\"></span></div>\r\n                        <div class=\"details\">\r\n                            <h4 class=\"title\">{{'HomeResume' | translate }}</h4>\r\n                            <p>PDF</p>\r\n                        </div>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n\r\n<div>\r\n    <ng-template role=\"dialog\" #content let-modal class=\"modal fade\">\r\n        <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header white-text text-center\">\r\n\r\n                    <h6 class=\"modal-title\">\r\n                        {{'SeekerResumeUpdateProfile' | translate }}\r\n                    </h6>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n\r\n                    <form novalidate (ngSubmit)=\"modelSaveBtn(modelForm)\" #modelForm=\"ngForm\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12 col-lg-6\">\r\n                                <mat-form-field class=\"example-full-width\">\r\n                                    <mat-label>{{'GenericName' | translate }}</mat-label>\r\n                                    <input matInput id=\"modelNameId\" type=\"text\"\r\n                                        placeholder=\"{{'GenericRequiredName' | translate }}\" required\r\n                                        [(ngModel)]=\"modelJobSeeker.Name\" #modelNameVar=\"ngModel\" name=\"modelName\"\r\n                                        [ngClass]=\"{'is-invalid': (modelNameVar.touched || modelNameVar.dirty) && !modelNameVar.valid }\" />\r\n                                    <mat-error *ngIf=\"modelNameVar.errors?.required\">{{'SeekerResumeNameError' |\r\n                                        translate }}\r\n                                    </mat-error>\r\n                                </mat-form-field>\r\n                            </div>\r\n                            <div class=\"col-md-12 col-lg-6\">\r\n                                <mat-form-field class=\"example-full-width\">\r\n                                    <mat-label>{{'GenericJobTitle' | translate }}</mat-label>\r\n                                    <input matInput id=\"modelJobTitleId\" type=\"text\"\r\n                                        placeholder=\"{{'SeekerResumeEnter' | translate }}\" required\r\n                                        [(ngModel)]=\"modelJobSeeker.JobTitle\" #modelJobTitleVar=\"ngModel\"\r\n                                        name=\"modelJobTitle\"\r\n                                        [ngClass]=\"{'is-invalid': (modelJobTitleVar.touched || modelJobTitleVar.dirty) && !modelJobTitleVar.valid }\" />\r\n                                    <mat-error *ngIf=\"modelJobTitleVar.errors?.required\">{{'SeekerResumeError' |\r\n                                        translate }}\r\n                                    </mat-error>\r\n                                </mat-form-field>\r\n                            </div>\r\n                            <div class=\"col-md-12 col-lg-6\">\r\n                                <mat-form-field class=\"example-full-width\">\r\n                                    {{'GenericEmail' | translate }}\r\n                                    <input matInput id=\"modelEmailId\" type=\"text\"\r\n                                        placeholder=\"{{'GenericRequiredEmail' | translate }}\" required\r\n                                        [(ngModel)]=\"modelJobSeeker.Email\" #modelEmailVar=\"ngModel\" name=\"modelEmail\"\r\n                                        [ngClass]=\"{'is-invalid': (modelEmailVar.touched || modelEmailVar.dirty) && !modelEmailVar.valid }\" />\r\n                                    <mat-error *ngIf=\"modelEmailVar.errors?.required\">{{'GenericEnterEmail' | translate\r\n                                        }}\r\n                                    </mat-error>\r\n                                </mat-form-field>\r\n                            </div>\r\n                            <div class=\"col-md-12 col-lg-6\">\r\n                                <mat-form-field class=\"example-full-width\">\r\n                                    <mat-label>{{'SeekerResumeWebsite' | translate }}</mat-label>\r\n                                    <input matInput id=\"modelWebsiteId\" type=\"text\" placeholder=\"Website\"\r\n                                        [(ngModel)]=\"modelJobSeeker.Website\" #modelWebsiteVar=\"ngModel\"\r\n                                        name=\"modelWebsite\" />\r\n                                </mat-form-field>\r\n                            </div>\r\n                            <div class=\"col-md-12 col-lg-6\">\r\n                                <mat-form-field class=\"example-full-width\">\r\n                                    <mat-label>{{'SeekerResumePhone' | translate }}</mat-label>\r\n                                    <input matInput id=\"modelPhoneId\" type=\"text\" placeholder=\"Phone\"\r\n                                        [(ngModel)]=\"modelJobSeeker.Phone\" #modelPhoneVar=\"ngModel\" name=\"modelPhone\" />\r\n\r\n                                </mat-form-field>\r\n                            </div>\r\n                            <div class=\"col-md-12 col-lg-6\">\r\n                                <mat-form-field class=\"example-full-width\">\r\n                                    <mat-label>{{'SeekerResumeLinkedin' | translate }}</mat-label>\r\n                                    <input matInput id=\"modelLinkedinId\" type=\"text\" placeholder=\"Linkedin\"\r\n                                        [(ngModel)]=\"modelJobSeeker.SocialLinkedin\" #modelLinkedinVar=\"ngModel\"\r\n                                        name=\"modelLinkedin\">\r\n                                </mat-form-field>\r\n                            </div>\r\n                            <div class=\"col-md-12 col-lg-6\">\r\n                                <div class=\"my_profile_select_box form-group\">\r\n                                    <label for=\"exampleFormControlInput9\">{{'EmployerPostJobCountry' | translate }}\r\n                                        *</label><br>\r\n                                    <select class=\"browser-default custom-select\" [(ngModel)]=\"modelJobSeeker.CountryId\"\r\n                                        required id=\"modelCountry\" #modelCountryVar=\"ngModel\" name=\"modelCountry\"\r\n                                        [ngClass]=\"{'is-invalid': (modelCountryVar.touched || modelCountryVar.dirty) && (!modelCountryVar.valid || modelJobSeeker.CountryId == '' || modelJobSeeker.CountryId == '-1') }\"\r\n                                        (change)=\"onCountrySelect()\">\r\n                                        <option value=\"-1\">{{'EmployerPostJobCountrySelect' | translate }}</option>\r\n                                        <option *ngFor=\"let item of LkupCountry\" value=\"{{item._id}}\">{{item.Name}}\r\n                                        </option>\r\n                                    </select>\r\n                                    <div class=\"valErrorSelect\"\r\n                                        *ngIf=\"modelCountryVar.touched && (modelCountryVar.errors?.required || modelJobSeeker.CountryId == '' || modelJobSeeker.CountryId == '-1')\">\r\n                                        {{'EmployerProfileCountryError' | translate }}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-12 col-lg-6\">\r\n                                <div class=\"my_profile_select_box form-group\">\r\n                                    <label for=\"exampleFormControlInput9\">{{'EmployerPostJobCity' | translate }}\r\n                                        *</label><br>\r\n                                    <select class=\"browser-default custom-select\" [(ngModel)]=\"modelJobSeeker.CityId\"\r\n                                        required id=\"modelCity\" #modelCityVar=\"ngModel\" name=\"modelCity\"\r\n                                        [ngClass]=\"{'is-invalid': (modelCityVar.touched || modelCityVar.dirty) && (!modelCityVar.valid || modelJobSeeker.CityId == '' || modelJobSeeker.CityId == '-1') }\">\r\n                                        <option value=\"-1\">{{'EmployerPostJobCitySelect' | translate }}</option>\r\n                                        <option *ngFor=\"let item of LkupCity\" value=\"{{item._id}}\">{{item.Name}}\r\n                                        </option>\r\n                                    </select>\r\n                                    <div class=\"valErrorSelect\"\r\n                                        *ngIf=\"modelCityVar.touched && (modelCityVar.errors?.required || modelJobSeeker.CityId == '' || modelJobSeeker.CityId == '-1')\">\r\n                                        {{'EmployerProfileCityError' | translate }}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-12 col-lg-6\">\r\n                                <div class=\"my_profile_select_box form-group\">\r\n                                    <label for=\"exampleFormControlInput9\">{{'EmployerPostJobGender' | translate }}\r\n                                        *</label><br>\r\n                                    <select class=\"browser-default custom-select\" [(ngModel)]=\"modelJobSeeker.Gender\"\r\n                                        required\r\n                                        [ngClass]=\"{'is-invalid': (modelGenderVar.touched || modelGenderVar.dirty) && (!modelGenderVar.valid || modelJobSeeker.Gender == 0 || modelJobSeeker.Gender == -1) }\"\r\n                                        id=\"modelGender\" #modelGenderVar=\"ngModel\" name=\"modelGender\">\r\n                                        <option value=\"-1\">{{'SeekerResumeSelectYourGender' | translate }}</option>\r\n                                        <option value=\"1\">{{'EmployerPostJobGenderMale' | translate }}</option>\r\n                                        <option value=\"2\">{{'EmployerPostJobGenderFemale' | translate }}</option>\r\n                                    </select>\r\n                                    <div class=\"valErrorSelect\"\r\n                                        *ngIf=\"modelGenderVar.touched && (modelGenderVar.errors?.required || modelJobSeeker.Gender == 0 || modelJobSeeker.Gender == -1)\">\r\n                                        {{'EmployerPostJobGenderError' | translate }}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-sm-12 \">\r\n                                <button class=\"btn pull-right  btn-thm\" type=\"submit\" style=\"width:100px\"\r\n                                    [title]=\"modelForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\"\r\n                                    [disabled]=\"!modelForm.valid || !IsValidModel()\">{{'GenericSave' | translate\r\n                                    }}</button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                    <button type=\"button\" class=\"btn border-green btn-transparent\"\r\n                        (click)=\"onCancelInfo();\">{{'GenericClose' | translate }}</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </ng-template>\r\n</div>\r\n<div>\r\n    <ng-template role=\"dialog\" #Education let-modal class=\"modal fade\">\r\n        <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header white-text text-center\">\r\n\r\n                    <h6 class=\"modal-title\">\r\n                        {{(modelIsCreate ? 'GenericCreate' : 'GenericEditing') | translate}} : {{modelIsCreate?\r\n                        (\"GenericNew\" | translate) : modelNameEdited}}\r\n                    </h6>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n\r\n                    <form novalidate (ngSubmit)=\"modelSaveEduBtn(modelForm)\" #modelForm=\"ngForm\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12 col-lg-6\">\r\n                                <mat-form-field class=\"example-full-width\">\r\n                                    <mat-label *ngIf=\"modelIsEducation\">{{'SeekerResumeUnviersityName' | translate }}\r\n                                    </mat-label>\r\n                                    <mat-label *ngIf=\"modelIsWork\">{{'GenericCompanyName' | translate }}</mat-label>\r\n                                    <mat-label *ngIf=\"modelIsExtra\">{{'SeekerExtraOrgName' | translate }}</mat-label>\r\n                                    <input matInput id=\"modelNameId\" type=\"text\" required\r\n                                        [(ngModel)]=\"modelEducation.Name\" #modelNameVar=\"ngModel\" name=\"modelName\"\r\n                                        [ngClass]=\"{'is-invalid': (modelNameVar.touched || modelNameVar.dirty) && !modelNameVar.valid }\" />\r\n                                    <mat-error *ngIf=\"modelIsEducation && modelNameVar.errors?.required\">\r\n                                        {{'SeekerResumeUniversityError' | translate }}\r\n                                    </mat-error>\r\n                                    <mat-error *ngIf=\"modelIsWork && modelNameVar.errors?.required\">\r\n                                        {{'SeekerResumeCompanyError' | translate }}\r\n                                    </mat-error>\r\n                                    <mat-error *ngIf=\"modelIsExtra && modelNameVar.errors?.required\">\r\n                                        {{'SeekerResumeOrgError' | translate }}\r\n                                    </mat-error>\r\n                                </mat-form-field>\r\n                            </div>\r\n                            <div class=\"col-md-12 col-lg-6\">\r\n                                <mat-form-field class=\"example-full-width\">\r\n                                    <mat-label *ngIf=\"modelIsEducation\">{{'SeekerResumeFacultyName' | translate }}\r\n                                    </mat-label>\r\n                                    <mat-label *ngIf=\"modelIsWork || modelIsExtra\">{{'GenericJobTitle' | translate }}\r\n                                    </mat-label>\r\n                                    <input matInput id=\"modelJobTitleId\" type=\"text\" required\r\n                                        [(ngModel)]=\"modelEducation.SubTitle\" #modelJobTitleVar=\"ngModel\"\r\n                                        name=\"modelJobTitle\"\r\n                                        [ngClass]=\"{'is-invalid': (modelJobTitleVar.touched || modelJobTitleVar.dirty) && !modelJobTitleVar.valid }\" />\r\n                                    <mat-error *ngIf=\"modelIsEducation && modelJobTitleVar.errors?.required\">\r\n                                        {{'SeekerResumeFacultyError' | translate }}\r\n                                    </mat-error>\r\n                                    <mat-error *ngIf=\"(modelIsWork || modelIsExtra) && modelNameVar.errors?.required\">\r\n                                        {{'EmployerPostJobTitleError' | translate }}\r\n                                    </mat-error>\r\n                                </mat-form-field>\r\n                            </div>\r\n                            <div class=\"col-md-12 col-lg-6  mt-3 mb-3\">\r\n                                <!-- <mat-form-field class=\"example-full-width\">\r\n                                    <mat-label>{{'SeekerResumeStartDate' | translate }}</mat-label> -->\r\n                                <div class=\"input-group\">\r\n                                    <input matInput class=\"form-control\" placeholder=\"dd-mm-yyyy\" readonly name=\"dps\"\r\n                                        requried (dateSelect)=\"onEduStartSelect($event)\" [(ngModel)]=\"modelEduStart\"\r\n                                        ngbDatepicker #ds=\"ngbDatepicker\" [maxDate]=\"dateToday\">\r\n                                    <div class=\"input-group-append\">\r\n                                        <button class=\"btn calcender\" (click)=\"ds.toggle()\" type=\"button\"><i\r\n                                                class=\"fa fa-calendar\" aria-hidden=\"true\"></i></button>\r\n                                    </div>\r\n                                </div>\r\n                                <!-- </mat-form-field> -->\r\n                            </div>\r\n                            <div class=\"col-md-12 col-lg-6 mt-3 mb-3\">\r\n                                <!-- <mat-form-field class=\"example-full-width\">\r\n                                    <mat-label>{{'SeekerResumeEndDate' | translate }}</mat-label> -->\r\n                                <div class=\"input-group\">\r\n                                    <input matInput class=\"form-control\" placeholder=\"dd-mm-yyyy\" readonly name=\"dpe\"\r\n                                        requried (dateSelect)=\"onEduEndSelect($event)\" [(ngModel)]=\"modelEduEnd\"\r\n                                        ngbDatepicker #de=\"ngbDatepicker\">\r\n                                    <div class=\"input-group-append\">\r\n                                        <button class=\"btn calcender\" (click)=\"de.toggle()\" type=\"button\"><i\r\n                                                class=\"fa fa-calendar\" aria-hidden=\"true\"></i></button>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <!-- </mat-form-field> -->\r\n                                <mat-error class=\"matError\" *ngIf=\"!IsDatesCorrect\">{{'SeekerResumeDateError' |\r\n                                    translate }}\r\n                                </mat-error>\r\n                            </div>\r\n                            <div class=\"col-sm-12 \">\r\n                                <textarea class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"9\" minlength=\"100\"\r\n                                    required [(ngModel)]=\"modelEducation.Description\" required\r\n                                    #modelEduDescriptionVar=\"ngModel\"\r\n                                    [ngClass]=\"{'is-invalid': (modelEduDescriptionVar.touched || modelEduDescriptionVar.dirty) && !modelEduDescriptionVar.valid }\"\r\n                                    name=\"modelDescription\" placeholder=\"Description (min: 100 char)\"></textarea>\r\n                                <mat-error class=\"matError\" *ngIf=\"modelEduDescriptionVar.errors?.required\">\r\n                                    {{'JobFairCreateDescError' | translate }}\r\n                                </mat-error>\r\n                                <div class=\"valErrorTextArea\"\r\n                                    *ngIf=\"modelEduDescriptionVar.touched && modelEduDescriptionVar.errors?.minlength?.requiredLength >  +modelEduDescriptionVar.errors?.minlength?.actualLength\">\r\n                                    {{'TextMin100' | translate }}</div>\r\n\r\n                            </div>\r\n                            <div class=\"col-sm-12 mt-3\">\r\n                                <button class=\"btn pull-right  btn-thm\" type=\"submit\" style=\"width:100px\"\r\n                                    [title]=\"modelForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\"\r\n                                    [disabled]=\"!modelForm.valid\">{{'GenericSave' | translate }}</button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                    <button type=\"button\" class=\"btn border-green btn-transparent\"\r\n                        (click)=\"onCancelInfo();\">{{'GenericClose' | translate }}</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </ng-template>\r\n</div>\r\n<div>\r\n    <ng-template role=\"dialog\" #Certificate let-modal class=\"modal fade\">\r\n        <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header white-text text-center\">\r\n\r\n                    <h6 class=\"modal-title\">\r\n                        <!-- {{modelIsCreate ? 'Create: New Certificate' : 'Editing : ' + modelNameEdited}} -->\r\n                        {{(modelIsCreate ? 'GenericCreate' : 'GenericEditing') | translate}} : {{modelIsCreate?\r\n                        (\"GenericNew\" | translate) : modelNameEdited}}\r\n                    </h6>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n\r\n                    <form novalidate (ngSubmit)=\"modelSaveCertBtn(modelForm)\" #modelForm=\"ngForm\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12 col-lg-6\">\r\n                                <mat-form-field class=\"example-full-width\">\r\n                                    <mat-label>{{'SeekerResumeCertificateName' | translate }}</mat-label>\r\n                                    <input matInput id=\"modelNameId\" type=\"text\"\r\n                                        placeholder=\"{{'GenericRequiredName' | translate }}\" required\r\n                                        [(ngModel)]=\"modelCertificate.Name\" #modelNameVar=\"ngModel\" name=\"modelName\"\r\n                                        [ngClass]=\"{'is-invalid': (modelNameVar.touched || modelNameVar.dirty) && !modelNameVar.valid }\" />\r\n                                    <mat-error *ngIf=\"modelNameVar.errors?.required\">{{'SeekerResumeCertificateError' |\r\n                                        translate }}\r\n                                    </mat-error>\r\n                                </mat-form-field>\r\n                            </div>\r\n                            <div class=\"col-md-12 col-lg-6\">\r\n                                <!-- <mat-form-field class=\"example-full-width\">\r\n                                    <mat-label>{{'SeekerResumeStartDate' | translate }}</mat-label> -->\r\n\r\n                                <div class=\"input-group\">\r\n                                    <input matInput class=\"form-control\" placeholder=\"dd-mm-yyyy*\" readonly name=\"dpc\"\r\n                                        [maxDate]=\"dateToday\" requried (dateSelect)=\"onCerttartSelect($event)\"\r\n                                        [(ngModel)]=\"modelEduStart\" required ngbDatepicker #dpc=\"ngbDatepicker\">\r\n                                    <div class=\"input-group-append\">\r\n                                        <button class=\"btn calcender\" (click)=\"dpc.toggle()\" type=\"button\"><i\r\n                                                class=\"fa fa-calendar\" aria-hidden=\"true\"></i></button>\r\n                                    </div>\r\n                                </div>\r\n                                <!-- </mat-form-field> -->\r\n                            </div>\r\n                            <div class=\"col-sm-12 \">\r\n                                <textarea class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"9\" minlength=\"100\"\r\n                                    required [(ngModel)]=\"modelCertificate.Description\" required\r\n                                    #modelEduDescriptionVar=\"ngModel\"\r\n                                    [ngClass]=\"{'is-invalid': (modelEduDescriptionVar.touched || modelEduDescriptionVar.dirty) && !modelEduDescriptionVar.valid }\"\r\n                                    name=\"modelDescription\" placeholder=\" Description (min: 100 char)\"></textarea>\r\n                                <mat-error *ngIf=\"modelEduDescriptionVar.errors?.required\">{{'JobFairCreateDescError' |\r\n                                    translate }}\r\n                                </mat-error>\r\n                                <div class=\"valErrorTextArea\"\r\n                                    *ngIf=\"modelEduDescriptionVar.touched && modelEduDescriptionVar.errors?.minlength?.requiredLength >  +modelEduDescriptionVar.errors?.minlength?.actualLength\">\r\n                                    {{'TextMin100' | translate }}</div>\r\n                            </div>\r\n                            <div class=\"col-sm-12 mt-3 \">\r\n                                <span class=\"pr-3\">{{'SeekerUploadCertificate' | translate }}</span>\r\n                                <input id=\"uploadFile\" name=\"uploadFile\" type=\"file\" #uploadFile\r\n                                    placeholder=\"{{'SeekerUploadCertificate' | translate }}\" accept=\".pdf,.doc,.docx,.png,.jpg,.jpeg\"\r\n                                    (change)=\"OnFileChanged(uploadFile.files)\" style=\"display:none;\">\r\n                                <button id=\"btuploadLogo\" name=\"btuploadLogo\" type=\"button\" class=\"btn btn-success\"\r\n                                    (click)=\"uploadFile.click()\">{{'GenericSelectFile' | translate }}</button>\r\n                                <span class=\"ml-2\"\r\n                                    *ngIf=\"modelCertificate.CertificatePath && modelCertificate.CertificatePath != ''\"><a\r\n                                        target=\"_blank\" href=\"{{modelCertificate.CertificatePath}}\">{{\"ResumeCertificateDownload\" | translate}}</a></span>\r\n                            </div>\r\n                            <div class=\"col-sm-12 mt-3\">\r\n                                <button class=\"btn pull-right  btn-thm\" type=\"submit\" style=\"width:120px\"\r\n                                    [title]=\"modelForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\"\r\n                                    [disabled]=\"!modelForm.valid || isClicked\">{{'GenericSave' | translate }} <i\r\n                                        class=\"fa fa-spinner fa-spin\" *ngIf=\"isClicked\"></i></button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                    <button type=\"button\" class=\"btn border-green btn-transparent\"\r\n                        (click)=\"onCancelInfo();\">{{'GenericClose' | translate }}</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </ng-template>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { cGenericIdNameItem, cGenericSubItem } from 'src/app/interface/Response/GenericIdName.class';\r\nimport { ServiceJobSeeker } from 'src/app/services/job-seeker.service';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { ServiceQualification } from 'src/app/services/qualification.service';\r\nimport { ServiceYearsOfExperience } from 'src/app/services/years-of-experience.service';\r\nimport { ServiceFavourite } from 'src/app/services/favourite.service';\r\nimport { ServiceLanguages } from 'src/app/services/languages.service';\r\nimport { ModelJobSeekerSearch } from 'src/app/interface/Model/ModelJobSeekerSearch.class';\r\nimport { Page } from 'src/app/common/pagination/page';\r\nimport { cJobSeekerList, cJobSeekerItem } from 'src/app/interface/Response/JobSeeker.class';\r\nimport { CustomPaginationService } from 'src/app/common/pagination/services/custom-pagination.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Constants } from 'src/app/constants';\r\nimport { ServiceJob } from 'src/app/services/job.service';\r\nimport { ServiceCountry } from 'src/app/services/country.service';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { PagerService } from 'src/app/Employer/pager.service';\r\ndeclare var $: any;\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.css']\r\n})\r\nexport class SearchComponent extends baseComponent implements OnInit {\r\n\r\n  LkupQualification: cGenericSubItem[];\r\n  LkupExperience: cGenericSubItem[];\r\n  LkupLanguage: cGenericSubItem[];\r\n  LkupCountry: cGenericIdNameItem[];\r\n  LkupCity: cGenericSubItem[];\r\n  currentDatas: any;\r\n  modelSearch: ModelJobSeekerSearch = new ModelJobSeekerSearch();\r\n  lstResult: cJobSeekerList;\r\n  page: Page<cJobSeekerItem> = new Page();\r\n  searchData:any=[]\r\n\r\n\r\n  filtertxt: string = '';\r\n  arrayCheck: any=[];\r\n  arrayCheck1: any=[];\r\n  arrayCheck2: any=[];\r\n  arrayCheck3: any=[];\r\n  arrayCheck4: any=[];\r\n  arrayCheck5: any=[];\r\n  modelSearchR:any={}\r\n  onlySkillHTM:any=this.cookies.get('setrecent') ? JSON.parse(this.cookies.get('setrecent')) : []\r\n  onlySkill:any=this.cookies.get('setrecent') ? JSON.parse(this.cookies.get('setrecent')) : []\r\n\r\n\r\n\r\n  SearchbyGender:any=[\r\n    { Name: \"Male\",  _id: \"1\", IsActive: true },\r\n    { Name: \"Female\", _id: \"2\", IsActive: true }\r\n  ];\r\n  allItems: any[];\r\n\r\n  // pager object\r\n  pager: any = {};\r\n\r\n  // paged items\r\n  pagedItems: any=[];\r\n  constructor(\r\n    private BLCountry: ServiceCountry,\r\n    private BLJobSeeker: ServiceJobSeeker,\r\n    private BLService: ServiceJob,\r\n    BLServiceShowMessage: ServiceShowMessage,\r\n    BLJobSeekerLoginUser: ServiceLoginUser,BLTranslate: TranslateService,\r\n    private BLQualification: ServiceQualification,\r\n    private BLExperience: ServiceYearsOfExperience,\r\n    private BLFavourite: ServiceFavourite,\r\n    private cookies :CookieService,\r\n    private paginationService: CustomPaginationService,\r\n    private http: HttpClient,\r\n    private PagerService :PagerService,\r\n    private BLLanguages: ServiceLanguages) {\r\n    super(BLServiceShowMessage, BLJobSeekerLoginUser, BLTranslate)\r\n  }\r\n  ngOnInit(): void {\r\n  \r\n    console.log(this.onlySkillHTM);\r\n    let privT =  this.cookies.get('priST')\r\n    console.log(this.onlySkill);\r\n    if(this.onlySkill && privT=='true'){\r\n      this.cookies.set('priST',JSON.stringify(false))\r\n      if(this.onlySkill.length==0){\r\n        var a=0\r\n      }else{\r\n        var a=this.onlySkill.length-1\r\n      }\r\n      this.modelSearch.filterText=this.onlySkill[a]\r\n      this.aipfiltercall()\r\n    }else{\r\n      this.loadData();\r\n    }\r\n    // let req=Object({filterText:this.filtertxt})\r\n    // this.BLService.Search(req).subscribe({\r\n    //   next: response => {\r\n    //     this.searchData= response.lstResult\r\n    //   }  \r\n    // })\r\n    console.log(this.SearchbyGender);\r\n    \r\n    this.BLCountry.getListActive().subscribe({\r\n      next: lst => {\r\n        this.LkupCountry = lst;\r\n        // this.onCountrySelect('','');\r\n      },\r\n      error: err => {\r\n        this.message.Error(err);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n      }\r\n    });\r\n    this.BLQualification.getListActive().subscribe({\r\n      next: lst => {\r\n        this.LkupQualification = lst;\r\n      },\r\n      error: err => {\r\n        this.message.Error(err);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n      }\r\n    });\r\n    this.BLExperience.getListActive().subscribe({\r\n      next: lst => {\r\n        this.LkupExperience = lst;\r\n      },\r\n      error: err => {\r\n        this.message.Error(err);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n      }\r\n    });\r\n    this.BLLanguages.getListActive().subscribe({\r\n      next: lst => {\r\n        this.LkupLanguage = lst;\r\n      },\r\n      error: err => {\r\n        this.message.Error(err);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n      }\r\n    });\r\n    // this.lstResult=Object({totalCount:1 })\r\n  }\r\n  public getNextPage(): void {\r\n    this.page.pageable = this.paginationService.getNextPage(this.page);\r\n    this.loadData();\r\n  }\r\n\r\n  public getPreviousPage(): void {\r\n    this.page.pageable = this.paginationService.getPreviousPage(this.page);\r\n    this.loadData();\r\n  }\r\n  public getloadPageCurrent(): void {\r\n    this.loadData();\r\n  }\r\n  FilterData(){\r\n    this.page.pageable.pageCurrent = 1;\r\n    this.loadData();\r\n  }\r\n  loadData() {\r\n    this.modelSearch.CurrentPage = this.page.pageable.pageCurrent;\r\n    this.BLJobSeeker.Search(this.modelSearch).subscribe({\r\n      next: lst => { \r\n        this.lstResult = lst;\r\n        this.page.pageable.pageSize = lst.pageSize;\r\n        this.page.totalElements = lst.totalCount;\r\n        this.page.content = lst.lstResult;\r\n        this.setPage(1)\r\n      },\r\n      error: err => {\r\n        this.message.Error(err);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n      }\r\n    });\r\n  }\r\n  FormateGender(value) {\r\n    \r\n    if (value == null)\r\n      return \"N/A\";\r\n\r\n    switch (value) {\r\n      case 0:\r\n        return \"N/A\";\r\n        break;\r\n      case 1:\r\n        return \"M\";\r\n        break;\r\n      case 2:\r\n        return \"F\";\r\n        break;\r\n    }\r\n\r\n    return \"N/A\";\r\n  }\r\n  FormatGenericSubItem(obj: cGenericSubItem) {\r\n    if (!obj || obj == null)\r\n      return 'N/A';\r\n\r\n    if (obj?.Name == null || obj?.Name == \"\")\r\n      return 'N/A';\r\n\r\n    return obj?.Name;\r\n  }\r\n  // onCountrySelect() {\r\n  //   this.LkupCity = [];\r\n\r\n  //   var sub = this.LkupCountry?.find(x => x._id == this.modelSearch.CountryId)?.subItems;\r\n  //   if (!sub || sub.length == 0)\r\n  //     return;\r\n\r\n  //   this.LkupCity = sub.filter(y => y.IsActive == true).sort((a, b) => a.Name.localeCompare(b.Name));\r\n  //   this.FilterData();\r\n  // }\r\n  submit() { }\r\n  onCountrySelect(i,item) {\r\n    console.log(item);\r\n    \r\n    item.IsActive=!item.IsActive\r\n    this.LkupCity = [];\r\n    if(!item.IsActive){\r\n      var che= this.arrayCheck4.some(function(el) {\r\n        return el.Name === item.Name;\r\n      }); \r\n      \r\n      if(!che){\r\n        // this.arrayCheck4.push(item)\r\n        this.arrayCheck4=[item]\r\n        this.modelSearchR.CountryId=item._id\r\n\r\n      }  \r\n      $('html, body').animate({scrollTop:800}, 'slow');\r\n      console.log(this.arrayCheck4);\r\n        var sub = this.LkupCountry?.find(x => x._id == item._id)?.subItems;\r\n        if (!sub || sub.length == 0)\r\n          return;\r\n\r\n        this.LkupCity = sub.filter(y => y.IsActive == true).sort((a, b) => a.Name.localeCompare(b.Name));\r\n        \r\n     \r\n    }else{\r\n      const index = this.arrayCheck4.indexOf(item);\r\n      if (index > -1) {\r\n        this.arrayCheck4.splice(index, 1);\r\n      }\r\n      this.arrayCheck5=[]\r\n      this.modelSearchR.CountryId=''\r\n      this.modelSearchR.CityId='';\r\n    }\r\n    console.log(this.arrayCheck4);\r\n    \r\n    this.aipfiltercall()\r\n    \r\n  }\r\n\r\n  FilterData1(e,n:cGenericSubItem){\r\n    n.IsActive=!n.IsActive\r\n    Object.assign(this.LkupExperience);\r\n    if(!n.IsActive){\r\n     var che= this.arrayCheck.some(function(el) {\r\n        return el.Name === n.Name;\r\n      }); \r\n      if(!che){\r\n        this.arrayCheck.push(n)\r\n      }\r\n    }else{\r\n      const index = this.arrayCheck.indexOf(n);\r\n      if (index > -1) {\r\n        this.arrayCheck.splice(index, 1);\r\n      }\r\n    }\r\n    // this.modelSearch.ExperienceId=this.filterreq(this.arrayCheck)\r\n    // console.log(this.modelSearch);\r\n    this.aipfiltercall()\r\n\r\n  }\r\n  FilterData2(e,n:cGenericSubItem){\r\n    n.IsActive=!n.IsActive\r\n    Object.assign(this.LkupExperience);\r\n    if(!n.IsActive){\r\n     var che= this.arrayCheck1.some(function(el) {\r\n        return el.Name === n.Name;\r\n      }); \r\n      if(!che){\r\n        this.arrayCheck1.push(n)\r\n      }\r\n    }else{\r\n      const index = this.arrayCheck1.indexOf(n);\r\n      if (index > -1) {\r\n        this.arrayCheck1.splice(index, 1);\r\n      }\r\n    }\r\n    // this.modelSearch.ExperienceId=this.filterreq(this.arrayCheck)\r\n    // console.log(this.modelSearch);\r\n    this.aipfiltercall()\r\n\r\n  }\r\n  FilterData3(e,n:cGenericSubItem){\r\n    n.IsActive=!n.IsActive\r\n    Object.assign(this.LkupExperience);\r\n    if(!n.IsActive){\r\n     var che= this.arrayCheck2.some(function(el) {\r\n        return el.Name === n.Name;\r\n      }); \r\n      if(!che){\r\n        this.arrayCheck2.push(n)\r\n      }\r\n    }else{\r\n      const index = this.arrayCheck2.indexOf(n);\r\n      if (index > -1) {\r\n        this.arrayCheck2.splice(index, 1);\r\n      }\r\n    }\r\n    // this.modelSearch.ExperienceId=this.filterreq(this.arrayCheck)\r\n    // console.log(this.modelSearch);\r\n    this.aipfiltercall()\r\n\r\n  }\r\n  FilterData4(e,n:cGenericSubItem){\r\n    n.IsActive=!n.IsActive\r\n    Object.assign(this.LkupExperience);\r\n    if(!n.IsActive){\r\n     var che= this.arrayCheck3.some(function(el) {\r\n        return el.Name === n.Name;\r\n      }); \r\n      if(!che){\r\n        this.arrayCheck3.push(n)\r\n      }\r\n    }else{\r\n      const index = this.arrayCheck3.indexOf(n);\r\n      if (index > -1) {\r\n        this.arrayCheck3.splice(index, 1);\r\n      }\r\n    }\r\n    // this.modelSearch.ExperienceId=this.filterreq(this.arrayCheck)\r\n    // console.log(this.modelSearch);\r\n    this.aipfiltercall()\r\n\r\n  }\r\n  FilterData5(e,n:cGenericSubItem){\r\n\r\n    \r\n    if(n.IsActive){\r\n      this.LkupCity.forEach(element => {\r\n        element.IsActive = true;\r\n      });\r\n    }\r\n    n.IsActive=!n.IsActive\r\n\r\n    Object.assign(this.LkupCity);\r\n    if(!n.IsActive){\r\n     var che= this.arrayCheck5.some(function(el) {\r\n        return el.Name === n.Name;\r\n      }); \r\n      if(!che){\r\n        // this.arrayCheck5.push(n)\r\n        this.arrayCheck5=[n]\r\n        this.modelSearchR.CityId=n._id\r\n      }\r\n      \r\n    }else{\r\n      const index = this.arrayCheck5.indexOf(n);\r\n      if (index > -1) {\r\n        this.arrayCheck5.splice(index, 1);\r\n      }\r\n      this.modelSearchR.CityId=''\r\n      this.arrayCheck5=[]\r\n\r\n    }\r\n    // this.modelSearch.ExperienceId=this.filterreq(this.arrayCheck)\r\n    // console.log(this.modelSearch);\r\n    this.aipfiltercall()\r\n\r\n  }\r\n\r\n  filterCheck(i,item:cGenericSubItem) {\r\n    item.IsActive=!item.IsActive\r\n    this.arrayCheck.splice(i,1)\r\n    this.aipfiltercall()\r\n  }\r\n  filterCheck2(i,item:cGenericSubItem) {\r\n    item.IsActive=!item.IsActive\r\n    this.arrayCheck1.splice(i,1)\r\n    this.aipfiltercall()\r\n  }\r\n  filterCheck3(i,item:cGenericSubItem) {\r\n    item.IsActive=!item.IsActive\r\n    this.arrayCheck2.splice(i,1)\r\n    this.aipfiltercall()\r\n  }\r\n  filterCheck4(i,item:cGenericSubItem) {\r\n    item.IsActive=!item.IsActive\r\n    this.arrayCheck3.splice(i,1)\r\n    this.aipfiltercall()\r\n  }\r\n  filterCheck5(i,item) {\r\n    item.IsActive=!item.IsActive\r\n    this.arrayCheck4.splice(i,1)\r\n    this.modelSearchR.CountryId=''\r\n    this.aipfiltercall()\r\n  }\r\n  filterCheck6(i,item) {\r\n    item.IsActive=!item.IsActive\r\n    this.arrayCheck5.splice(i,1)\r\n    this.modelSearchR.CityId=''\r\n    this.aipfiltercall()\r\n  }\r\n\r\n  aipfiltercall(){\r\n    this.modelSearchR.ExperienceId=this.filterreq(this.arrayCheck)\r\n    this.modelSearchR.GenderId=this.filterreq(this.arrayCheck1)\r\n    this.modelSearchR.LanguageId=this.filterreq(this.arrayCheck2)\r\n    this.modelSearchR.Qualificationid=this.filterreq(this.arrayCheck3)\r\n    // this.modelSearchR.CountryId=this.filterreq(this.arrayCheck4)\r\n    // this.modelSearchR.CityId=this.filterreq(this.arrayCheck5)\r\n    this.modelSearchR.filterText = this.modelSearch.filterText!=''?this.modelSearch.filterText:'';\r\n    this.modelSearchR.CurrentPage = this.page.pageable.pageCurrent;\r\n    if(this.modelSearch.filterText!=''){\r\n      if(!this.onlySkill.includes(this.modelSearch.filterText)){\r\n        this.onlySkill.push(this.modelSearch.filterText)\r\n      }\r\n    }\r\n  \r\n    this.cookies.set('setrecent',JSON.stringify(this.onlySkill))\r\n    console.log(this.modelSearchR);\r\n    $('.preloaderSecond').show()\r\n    setTimeout(() => {\r\n      this.BLJobSeeker.Search(this.modelSearchR).subscribe({\r\n        next: lst => { \r\n          this.lstResult = lst;\r\n          this.page.pageable.pageSize = lst.pageSize;\r\n          this.page.totalElements = lst.totalCount;\r\n          this.page.content = lst.lstResult;\r\n          this.setPage(1)\r\n          $('.preloaderSecond').hide()\r\n        },\r\n        error: err => {\r\n          $('.preloaderSecond').hide()\r\n          this.message.Error(err);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n\r\n        }\r\n      });\r\n    }, 50);\r\n   \r\n\r\n  }\r\n  filterreq(datareq){\r\n    var dta=[]\r\n    datareq.forEach(data => {\r\n      dta.push(data._id)\r\n    });\r\n    return dta.length==0?[]:dta.map(v => v.toLowerCase())\r\n  }\r\n  skillset(e,it){\r\n    this.modelSearch.filterText=it;\r\n    this.aipfiltercall()\r\n\r\n  }\r\n  htmlDecode(input) {\r\n    var doc = new DOMParser().parseFromString(input, \"text/html\");\r\n    return doc.documentElement.textContent;\r\n  }\r\n  removeFilter(){\r\n    this.arrayCheck=[];\r\n    this.arrayCheck1=[];\r\n    this.arrayCheck2=[];\r\n    this.arrayCheck3=[];\r\n    this.arrayCheck4=[];\r\n    this.arrayCheck5=[];\r\n    this.SearchbyGender={}\r\n    this.LkupCity=[]\r\n    this.modelSearch.filterText=''\r\n    this.modelSearchR.CityId='';\r\n    this.modelSearchR.CountryId='';\r\n    this.modelSearchR.filterText='';\r\n    this.allclearFilter()\r\n    this.aipfiltercall()\r\n  }\r\n\r\n  allclearFilter(){\r\n    this.SearchbyGender=[\r\n      { Name: \"Male\",  _id: \"1\", IsActive: true },\r\n      { Name: \"Female\", _id: \"2\", IsActive: true }\r\n    ];\r\n    this.BLCountry.getListActive().subscribe({\r\n      next: lst => {\r\n        this.LkupCountry = lst;\r\n        // this.onCountrySelect('','');\r\n      },\r\n      error: err => {\r\n        this.message.Error(err);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n      }\r\n    });\r\n    this.BLQualification.getListActive().subscribe({\r\n      next: lst => {\r\n        this.LkupQualification = lst;\r\n      },\r\n      error: err => {\r\n        this.message.Error(err);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n      }\r\n    });\r\n    this.BLExperience.getListActive().subscribe({\r\n      next: lst => {\r\n        this.LkupExperience = lst;\r\n      },\r\n      error: err => {\r\n        this.message.Error(err);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n      }\r\n    });\r\n    this.BLLanguages.getListActive().subscribe({\r\n      next: lst => {\r\n        this.LkupLanguage = lst;\r\n      },\r\n      error: err => {\r\n        this.message.Error(err);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n      }\r\n    });\r\n  }\r\n\r\n  search(event) {\r\n    console.log(event.target.value);\r\n    event.target.value\r\n    // let url = \"https://employmentapi.idealake.com/Job/ForSearchValidation\"\r\n    let url = Constants.apiRoot+ \"Job/ForSearchValidation\"\r\n    this.http.post(url ,{\r\n      filterTextValidation : event.target.value\r\n    }).subscribe(res => {\r\n      var alllist=Object(res)\r\n      var c,j,n;\r\n      this.currentDatas = [];\r\n      for(let i = 0; i < alllist.lstResult.length; i++) {\r\n        if(alllist.lstResult[i].Company!= null ){\r\n          if(!this.currentDatas.includes(alllist.lstResult[i].Company)){\r\n              this.currentDatas.push(alllist.lstResult[i].Company)\r\n          }\r\n        }else if(alllist.lstResult[i].JobField != null) {\r\n          if(!this.currentDatas.includes(alllist.lstResult[i].JobField)){\r\n           this.currentDatas.push(alllist.lstResult[i].JobField)\r\n          }\r\n        }\r\n        else if(alllist.lstResult[i].Name != null) {\r\n          if(!this.currentDatas.includes(alllist.lstResult[i].Name)){\r\n          this.currentDatas.push(alllist.lstResult[i].Name)\r\n          }\r\n        }\r\n      }\r\n      // if(!alllist.includes(this.contactForm.get('skills').value)){\r\n\r\n      // }\r\n      // console.log(this.currentDatas);\r\n      // this.currentDatas = res;\r\n      // console.log(this.currentDatas.lstResult);\r\n\r\n   })\r\n  }\r\n\r\n  setPage(page: number) {\r\n    if(this.lstResult.totalCount==0){\r\n      this.pagedItems=[]\r\n    }\r\n    if (page < 1 || page >this.lstResult.totalCount) {\r\n        return;\r\n    }\r\n\r\n    // get pager object from service\r\n    this.pager = this.PagerService.getPager(this.lstResult.lstResult.length, page);\r\n\r\n    // get current page of items\r\n    this.pagedItems = this.lstResult.lstResult.slice(this.pager.startIndex, this.pager.endIndex + 1);\r\n  }\r\n}\r\n","<!-- <app-search></app-search> -->\r\n\r\n<section class=\"our-faq bgc-fa mt50\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n\r\n            <div class=\"col-lg-3 col-xl-3 dn-smd leftSide\">\r\n                <form novalidate (ngSubmit)=\"submit()\">\r\n                    <div class=\"faq_search_widget mb30\">\r\n                        <h4 class=\"fz20 mb15\">{{'SeekerSearchKeywords' | translate }}</h4>\r\n                        <div class=\"input-group mb-3\">\r\n                            <input type=\"text\" class=\"form-control\" (keydown.enter)=\"FilterData()\"\r\n                                [(ngModel)]=\"modelSearch.filterText\"\r\n                                placeholder=\"{{'SeekerSearchSearchBy' | translate }}\" name=\"filterText\"\r\n                                aria-label=\"Recipient's username\" (keydown)=\"search($event)\" [matAutocomplete]=\"auto\" aria-describedby=\"button-addon2\">\r\n                                <mat-autocomplete #auto=\"matAutocomplete\">\r\n                                    <mat-option *ngFor=\"let item of currentDatas\" [value]=\"item\" >\r\n                                    <!-- <div *ngIf=\"item != ''\">  -->\r\n                                        <!-- {{item.Name}}  -->\r\n                                        {{ item }}\r\n                                         <!-- {{ item.JobField }} -->\r\n                                    <!-- </div> -->\r\n                                    </mat-option>\r\n                                </mat-autocomplete>\r\n                           \r\n                                <div class=\"input-group-append\">\r\n                                <button class=\"btn font-weight-lighter\" type=\"button\" id=\"button-addon2\"\r\n                                    (click)=\"aipfiltercall()\"><span class=\"flaticon-search\"></span></button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"cl_carrer_lever mb30\">\r\n                        <div class=\"searchLast\" style=\"font-size: 12px;\" *ngIf=\"onlySkillHTM.length >= 1\"> \r\n                            <p  style=\"font-size: 12px;\">{{'RecentSearch'|translate}} : </p>\r\n                            <span class=\"history\" *ngFor=\"let item of (onlySkillHTM | slice: -3);let i= index\" (click)=\"skillset(i,item)\">{{htmlDecode(item)}}</span>\r\n                        </div>\r\n                        <hr>\r\n                    </div>\r\n                    <div class=\"cl_carrer_lever mb30\" *ngIf=\"LkupExperience\">\r\n                        <p class=\"titles\">{{'EmployerSearchExperience' | translate }} ({{LkupExperience.length}})</p>\r\n                        <mat-checkbox class=\"example-margin\" *ngFor=\"let item of LkupExperience\" value=\"{{item._id}}\" [checked]=\"!item.IsActive\" (change)=\"FilterData1($event,item)\" multiple>{{item.Name}}\r\n                        </mat-checkbox>\r\n                        <!-- <mat-select class=\"browser-default custom-select\" data-actions-box=\"true\" multiple\r\n                            (selectionChange)=\"FilterData()\" [(ngModel)]=\"modelSearch.ExperienceId\"\r\n                            #modelExperienceVar=\"ngModel\" placeholder=\"{{'EmployerSearchExperience' | translate }}\"\r\n                            name=\"modelExperience\">\r\n                            <mat-option *ngFor=\"let item of LkupExperience\" value=\"{{item._id}}\">{{item.Name}}\r\n                            </mat-option>\r\n                        </mat-select> -->\r\n\r\n                    </div> \r\n                    <div class=\"cl_carrer_lever mb30\" *ngIf=\"SearchbyGender\">\r\n                        <p class=\"titles\">{{'EmployerSearchByGender' | translate }}  ({{SearchbyGender.length}})</p>\r\n                        <mat-checkbox class=\"example-margin\" *ngFor=\"let item of SearchbyGender\" value=\"{{item._id}}\" [checked]=\"!item.IsActive\" (change)=\"FilterData2($event,item)\" multiple>{{item.Name |translate}}\r\n                        </mat-checkbox>\r\n                        <!-- <mat-select class=\"browser-default custom-select\" data-actions-box=\"true\" multiple\r\n                            (selectionChange)=\"FilterData()\" [(ngModel)]=\"modelSearch.GenderId\"\r\n                            #modelExperienceVar=\"ngModel\" placeholder=\"{{'EmployerSearchByGender' | translate }}\"\r\n                            name=\"modelExperience\">\r\n                            <mat-option value=\"1\">{{'EmployerPostJobGenderMale' | translate }}</mat-option>\r\n                            <mat-option value=\"2\">{{'EmployerPostJobGenderFemale' | translate }}</mat-option>\r\n                        </mat-select> -->\r\n                    </div>\r\n                    <div class=\"cl_carrer_lever mb30\" *ngIf=\"LkupLanguage\">\r\n                        <p class=\"titles\">{{'SeekerSearchLanguage' | translate }}   ({{LkupLanguage.length}})</p>\r\n                        <mat-checkbox class=\"example-margin\" *ngFor=\"let item of LkupLanguage\" value=\"{{item._id}}\" [checked]=\"!item.IsActive\" (change)=\"FilterData3($event,item)\" multiple>{{item.Name}}\r\n                        </mat-checkbox>\r\n                        <!-- <mat-select class=\"browser-default custom-select\" data-actions-box=\"true\" multiple\r\n                            (selectionChange)=\"FilterData()\" [(ngModel)]=\"modelSearch.LanguageId\"\r\n                            #modelLanguageVar=\"ngModel\" placeholder=\"{{'SeekerSearchLanguage' | translate }}\"\r\n                            name=\"modelLanguage\">\r\n                            <mat-option *ngFor=\"let item of LkupLanguage\" value=\"{{item._id}}\">{{item.Name}}\r\n                            </mat-option>\r\n                        </mat-select> -->\r\n                    </div>\r\n\r\n                    <div class=\"cl_carrer_lever mb30\" *ngIf=\"LkupQualification\">\r\n                        <p class=\"titles\">{{'EmployerSearchQualification' | translate }}  ({{LkupQualification.length}})</p>\r\n                        <mat-checkbox class=\"example-margin\" *ngFor=\"let item of LkupQualification\" value=\"{{item._id}}\" [checked]=\"!item.IsActive\" (change)=\"FilterData4($event,item)\" multiple>{{item.Name}}\r\n                        </mat-checkbox>\r\n                        <!-- <mat-select class=\"browser-default custom-select\" data-actions-box=\"true\" multiple\r\n                            (selectionChange)=\"FilterData()\" [(ngModel)]=\"modelSearch.Qualificationid\"\r\n                            #modelQualificationVar=\"ngModel\"\r\n                            placeholder=\"{{'EmployerSearchQualification' | translate }}\" name=\"modelQualification\">\r\n                            <mat-option *ngFor=\"let item of LkupQualification\" value=\"{{item._id}}\">{{item.Name}}\r\n                            </mat-option>\r\n                        </mat-select> -->\r\n                    </div>\r\n                    <div class=\"cl_carrer_lever mb30\" *ngIf=\"LkupCountry\">\r\n                        <p class=\"titles\">{{'EmployerPostJobCountrySelect' | translate }}  ({{LkupCountry.length}})</p>\r\n                        <mat-checkbox class=\"example-margin\" *ngFor=\"let item of LkupCountry\" value=\"{{item._id}}\" [checked]=\"!item.IsActive\" (change)=\"onCountrySelect($event,item)\" multiple>{{item.Name}}\r\n                        </mat-checkbox>\r\n                        <!-- <mat-select class=\"browser-default SearchDropdown\" data-actions-box=\"true\" \r\n                            (selectionChange)=\"onCountrySelect()\" [(ngModel)]=\"modelSearch.CountryId\"\r\n                            #modelQualificationVar=\"ngModel\" \r\n                            placeholder=\"{{'EmployerPostJobCountry' | translate }}\" name=\"modelCountry\">\r\n                            <mat-option value=\"\">{{'EmployerPostJobCountrySelect' | translate }}</mat-option>\r\n                            <mat-option *ngFor=\"let item of LkupCountry\" value=\"{{item._id}}\">{{item.Name}}\r\n                            </mat-option>\r\n                        </mat-select> -->\r\n                    </div>\r\n                    <div class=\"cl_carrer_lever mb30\" *ngIf=\"LkupCity\">\r\n                        <p class=\"titles\">{{'EmployerPostJobCitySelect' | translate }}  ({{LkupCity?.length}})</p>\r\n                        <mat-checkbox class=\"example-margin\" *ngFor=\"let item of LkupCity\" value=\"{{item._id}}\" [checked]=\"!item.IsActive\" (change)=\"FilterData5($event,item)\" multiple>{{item.Name}}\r\n                        </mat-checkbox>\r\n                        <!-- <mat-select class=\"browser-default SearchDropdown\" data-actions-box=\"true\" \r\n                            (selectionChange)=\"FilterData()\" [(ngModel)]=\"modelSearch.CityId\"\r\n                            #modelQualificationVar=\"ngModel\"\r\n                            placeholder=\"{{'EmployerPostJobCity' | translate }}\" name=\"modelCity\">\r\n                            <mat-option value=\"\">{{'EmployerPostJobCitySelect' | translate }}</mat-option>\r\n                            <mat-option *ngFor=\"let item of LkupCity\" value=\"{{item._id}}\">{{item.Name}}\r\n                            </mat-option>\r\n                        </mat-select> -->\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <div class=\"col-md-12 col-lg-9 col-xl-9\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-10 col-lg-10 col-xl-10\">\r\n                        <div class=\"mb30\" *ngIf=\"arrayCheck4.length>0 || arrayCheck.length > 0 || arrayCheck1.length > 0 || arrayCheck5.length > 0 || arrayCheck2.length > 0 || arrayCheck3.length > 0\">  \r\n                            {{'Filterby'|translate}}:\r\n                            <!-- <ng-template  > -->\r\n                                <span class=\"filterData\" *ngFor=\"let item of arrayCheck ;let i = index\"   (click)=\"filterCheck(i,item)\"> {{ item.Name}} <span class=\"closeIcon\">&#10006;</span> </span>\r\n                                <span class=\"filterData\" *ngFor=\"let item of arrayCheck1 ;let i = index\"   (click)=\"filterCheck2(i,item)\"> {{ item.Name}} <span class=\"closeIcon\">&#10006;</span> </span>\r\n                                <span class=\"filterData\" *ngFor=\"let item of arrayCheck2 ;let i = index\"   (click)=\"filterCheck3(i,item)\"> {{ item.Name}} <span class=\"closeIcon\">&#10006;</span> </span>\r\n                                <span class=\"filterData\" *ngFor=\"let item of arrayCheck3 ;let i = index\"   (click)=\"filterCheck4(i,item)\"> {{ item.Name}} <span class=\"closeIcon\">&#10006;</span> </span>\r\n                                <span class=\"filterData\" *ngFor=\"let item of arrayCheck4 ;let i = index\"   (click)=\"filterCheck5(i,item)\"> {{ item.Name}} <span class=\"closeIcon\">&#10006;</span> </span>\r\n                                <span class=\"filterData\" *ngFor=\"let item of arrayCheck5 ;let i = index\"   (click)=\"filterCheck6(i,item)\"> {{ item.Name}} <span class=\"closeIcon\">&#10006;</span> </span>\r\n\r\n                                \r\n                            <!-- </ng-template> -->\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-2 col-lg-2 col-xl-2\">\r\n                        <div class=\"removeFilter\" *ngIf=\"arrayCheck4.length>0 || arrayCheck.length > 0 || arrayCheck1.length > 0 || arrayCheck5.length > 0 || arrayCheck2.length > 0 || arrayCheck3.length > 0\">\r\n                            <a href=\"javascript:void(0)\" class=\"clearFilter\" (click)=\"removeFilter()\">{{'ClearAll'|translate}}</a>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-12 col-lg-6\">\r\n                        <div class=\"candidate_job_alart_btn\">\r\n                            <h4 class=\"fz20 mb15\">{{lstResult?.totalCount}}\r\n                                <!-- <span > {{ 'SeekerSearchCandidatesFoundCli' | translate }}</span> -->\r\n                              <span *ngIf=\"lstResult?.totalCount>1 && lstResult?.totalCount>10 || lstResult?.totalCount==1\"> {{ 'SeekerSearchCandidatesFound' | translate }}</span> \r\n                              <span *ngIf=\"lstResult?.totalCount>=2 && lstResult?.totalCount<11 || lstResult?.totalCount==0 \"> {{ 'SeekerSearchCandidatesFoundNs' | translate }}</span>\r\n                            </h4>\r\n                            <button\r\n                                class=\"btn btn-thm btns dn db-991 float-right\">{{'EmployerSearchShowFilter' | translate }}</button>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-12 col-lg-6\">\r\n                        <div class=\"content_details\">\r\n                            <div class=\"details\">\r\n                                <a href=\"javascript:void(0)\" class=\"closebtn\"\r\n                                    onclick=\"closeNav()\"><span>{{'EmployerSearchHideFilter' | translate }}</span><i>×</i></a>\r\n                                <div class=\"faq_search_widget mb30\">\r\n                                    <h4 class=\"fz20 mb15\">{{'SeekerSearchKeywords' | translate }}</h4>\r\n                                    <div class=\"input-group mb-3\">\r\n                                        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"modelSearch.filterText\"\r\n                                            placeholder=\"{{'SeekerSearchSearchBy1' | translate }}\" name=\"filterText\"\r\n                                            aria-label=\"Recipient's username\" aria-describedby=\"button-addon2\">\r\n                                        <div class=\"input-group-append\">\r\n                                            <button class=\"btn btn-thm\" type=\"button\" id=\"button-addon4\"><span\r\n                                                    class=\"flaticon-search\"></span></button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"faq_search_widget mb30\">\r\n                                    <mat-select class=\"browser-default custom-select\" data-actions-box=\"true\" multiple\r\n                                        (selectionChange)=\"FilterData()\" [(ngModel)]=\"modelSearch.ExperienceId\"\r\n                                        #modelExperienceVar=\"ngModel\"\r\n                                        placeholder=\"{{'EmployerSearchExperience' | translate }}\"\r\n                                        name=\"modelExperience\">\r\n                                        <mat-option *ngFor=\"let item of LkupExperience\" value=\"{{item._id}}\">\r\n                                            {{item.Name}}\r\n                                        </mat-option>\r\n                                    </mat-select>\r\n                                </div> \r\n\r\n                                <div class=\"faq_search_widget mb30\">\r\n                                    <mat-select class=\"browser-default custom-select\" data-actions-box=\"true\" multiple\r\n                                        (selectionChange)=\"FilterData()\" [(ngModel)]=\"modelSearch.GenderId\"\r\n                                        #modelExperienceVar=\"ngModel\"\r\n                                        placeholder=\"{{'EmployerSearchGender' | translate }}\" name=\"modelExperience\">\r\n                                        <mat-option value=\"1\">{{'EmployerPostJobGenderMale' | translate }}</mat-option>\r\n                                        <mat-option value=\"2\">{{'EmployerPostJobGenderFemale' | translate }}\r\n                                        </mat-option>\r\n                                    </mat-select>\r\n                                </div> \r\n                                 <div class=\"faq_search_widget mb30\">\r\n                                    <mat-select class=\"browser-default custom-select\" data-actions-box=\"true\" multiple\r\n                                        (selectionChange)=\"FilterData()\" [(ngModel)]=\"modelSearch.LanguageId\"\r\n                                        #modelLanguageVar=\"ngModel\"\r\n                                        placeholder=\"{{'SeekerSearchLanguage' | translate }}\" name=\"modelLanguage\">\r\n                                        <mat-option *ngFor=\"let item of LkupLanguage\" value=\"{{item._id}}\">{{item.Name}}\r\n                                        </mat-option>\r\n                                    </mat-select>\r\n                                </div>\r\n\r\n                                <div class=\"faq_search_widget mb30\">\r\n                                    <mat-select class=\"browser-default custom-select\" data-actions-box=\"true\" multiple\r\n                                        (selectionChange)=\"FilterData()\" [(ngModel)]=\"modelSearch.Qualificationid\"\r\n                                        #modelQualificationVar=\"ngModel\"\r\n                                        placeholder=\"{{'EmployerSearchQualification' | translate }}\"\r\n                                        name=\"modelQualification\">\r\n                                        <mat-option *ngFor=\"let item of LkupQualification\" value=\"{{item._id}}\">\r\n                                            {{item.Name}}\r\n                                        </mat-option>\r\n                                    </mat-select>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-12\" *ngFor=\"let item of pagedItems\">\r\n                        <div class=\"candidate_list_view\">\r\n                            <div class=\"thumb\">\r\n                                <img class=\"img-fluid rounded-circle ProfilePicture ProfilePictureSmaller\" src=\"{{item.ProfilePicture}}\"> \r\n                                <!-- <div class=\"cpi_av_rating\"><span>{{FormateGender(item.Gender)}}</span></div> -->\r\n                            </div>\r\n                            <div class=\"content\">\r\n                                <h4 class=\"title\">{{item.Name}}</h4>\r\n                                <p>{{item.JobTitle}}</p>\r\n                                <p><span class=\"flaticon-location-pin\"></span>\r\n                                    {{item?.Country?.Name == '' ? \"'EmployerCompanyViewCountryNA' | translate\" : item.Country.Name}},\r\n                                    {{ item?.City?.Name == '' ? \"'EmployerCompanyViewCityNA' | translate\" : item.City.Name}}\r\n                                </p>\r\n                                <p><span class=\"flaticon-mortarboard\"></span>\r\n                                    {{FormatGenericSubItem(item?.Qualification)}}\r\n                                </p>\r\n                                <p><span class=\"flaticon-controls\"></span>\r\n                                    {{FormatGenericSubItem(item?.Experience)}}\r\n                                </p>\r\n                            </div>\r\n                            <a class=\"btn btn-transparent float-right fn-lg\" routerLink=\"/JobSeeker/Resume/{{item._id}}\"\r\n                                routerLinkActive=\"router-link-active\"\r\n                                href=\"#\">{{'ViewProfile' | translate }}<span\r\n                                    class=\"flaticon-right-arrow\"></span></a>\r\n                        </div>\r\n                    </div> \r\n                   <div class=\"col-lg-12\" *ngIf=\"0 ==pagedItems.length\">\r\n                        <div class=\"text-center bg-red noresult\">\r\n                            <span class=\"font-italic\">{{'SeekerSearchNoCandidatesFound' | translate }}\r\n                            </span><span>&#9785;</span>\r\n                        </div>\r\n                    </div> \r\n                     <div class=\"col-lg-12\" *ngIf=\"pagedItems.length > 5\">\r\n                        <!-- <app-custom-pagination [page]=\"page\" (nextPageEvent)=\"getNextPage()\"\r\n                            (previousPageEvent)=\"getPreviousPage()\" (loadPageCurrentEvent)=\"getloadPageCurrent()\">\r\n                        </app-custom-pagination> -->\r\n                        <div class=\"mbp_pagination\" >\r\n                            <ul *ngIf=\"pager.pages && pager.pages.length\" class=\"page_navigation\">\r\n                                <!-- <li class=\"page-item\" [ngClass]=\"{disabled:pager.currentPage === 1}\">\r\n                                    <a class=\"page-link\" (click)=\"setPage(1)\">First</a>\r\n                                </li> -->\r\n                                <li class=\"page-item\" [ngClass]=\"{disabled:pager.currentPage === 1}\">\r\n                                    <a class=\"page-link\" (click)=\"setPage(pager.currentPage - 1)\"><span\r\n                                        class=\"flaticon-left-arrow\"></span> {{'PagePrevious' | translate }}</a>\r\n                                </li>\r\n                                <li class=\"page-item\" *ngFor=\"let page of pager.pages\" [ngClass]=\"{active:pager.currentPage === page}\">\r\n                                    <a  class=\"page-link\" (click)=\"setPage(page)\">{{page}}</a>\r\n                                </li>\r\n                                <li class=\"page-item\" [ngClass]=\"{disabled:pager.currentPage === pager.totalPages}\">\r\n                                    <a class=\"page-link\" (click)=\"setPage(pager.currentPage + 1)\"> {{'PageNext' | translate }} <span\r\n                                        class=\"flaticon-right-arrow\"></span> </a>\r\n                                </li>\r\n                                <!-- <li class=\"page-item\" [ngClass]=\"{disabled:pager.currentPage === pager.totalPages}\">\r\n                                    <a class=\"page-link\" (click)=\"setPage(pager.totalPages)\">Last</a>\r\n                                </li> -->\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>","import { Component, OnInit } from '@angular/core';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { cFavouriteItem } from 'src/app/interface/Response/Favourite.class';\r\nimport { ServiceFavourite } from 'src/app/services/favourite.service';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { Router } from '@angular/router';\r\nimport { ConfirmationDialogService } from 'src/app/common/confirmation-dialog/confirmation-dialog.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-short-list-jobs',\r\n  templateUrl: './short-list-jobs.component.html',\r\n  styleUrls: ['./short-list-jobs.component.css']\r\n})\r\nexport class ShortListJobsComponent extends baseComponent implements OnInit {\r\n\r\n  lstResult: cFavouriteItem[];\r\n\r\n  constructor(private BLService: ServiceFavourite,\r\n    private confirmationDialogService: ConfirmationDialogService,\r\n    private router: Router,\r\n    BLServiceShowMessage: ServiceShowMessage,\r\n    BLServiceLoginUser: ServiceLoginUser,BLTranslate: TranslateService,) {\r\n    super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadData();\r\n  }\r\n  onView(Id: string) {\r\n    this.router.navigate(['Employer/Job/' + Id]);\r\n  }\r\n\r\n  private loadData(): void {\r\n    this.BLService.ListAll().subscribe({\r\n      next: lst => {\r\n        this.lstResult = lst;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  setDeActivate(Id: string): void {\r\n    this.confirmationDialogService.confirm(\"Are you sure you want to Remove from the favourite list?\")\r\n      .then((confirmed) => {\r\n        if (!confirmed)\r\n          return;\r\n        this.BLService.setDeActivate(Id).subscribe({\r\n          next: response => {\r\n            this.message.Success(\"Removed successfully.\");\r\n            this.BLServiceShowMessage.sendMessage(this.message);\r\n            this.loadData();\r\n          },\r\n          error: err => this.message.Error(err)\r\n        });\r\n      });\r\n  }\r\n}\r\n","<section class=\"our-dashbord dashbord\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12 col-lg-4 col-xl-3 dn-smd\">\r\n                <app-job-seeker-menu [pageName]=\"'shortlist'\"></app-job-seeker-menu>\r\n            </div>\r\n            <div class=\"col-sm-12 col-lg-8 col-xl-9\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-lg-12\">\r\n                        <h4 class=\"fz20\">{{'SeekerShortListPageTitle' | translate }}</h4>\r\n                    </div>\r\n                    <div class=\"col-lg-12\" *ngFor=\"let item of lstResult\">\r\n                        <div class=\"candidate_list_view style2\">\r\n                            <div class=\"thumb\">\r\n                                <img class=\"img-fluid rounded-circle ProfilePicture-100\" src=\"{{item.ImageURL}}\">\r\n                                <div class=\"cpi_av_rating\"><span></span></div>\r\n                            </div>\r\n                            <div class=\"content mt25 fn-xl\">\r\n                                <h4 class=\"title\">{{item.Name}} <small class=\"verified text-thm2 pl10\"><i\r\n                                            class=\"fa fa-check-circle\"></i></small></h4>\r\n                                <p class=\"text-thm2\">{{item.Title}} </p>\r\n                            </div>\r\n                            <ul class=\"view_edit_delete_list mt25 float-right fn-xl\">\r\n                                <li class=\"list-inline-item  bg-orange\" (click)=\"onView(item.EntityId)\"><a (click)=\"onView(item.EntityId)\"\r\n                                        data-toggle=\"tooltip\" data-placement=\"bottom\"\r\n                                        title=\"{{'GenericView' | translate }}\"><span class=\"flaticon-eye\"></span></a>\r\n                                </li>\r\n                                <li class=\"list-inline-item\" (click)=\"setDeActivate(item._id)\"><a\r\n                                        (click)=\"setDeActivate(item._id)\" data-toggle=\"tooltip\" data-placement=\"top\"\r\n                                        title=\"{{'GenericDelete' | translate }}\"><span\r\n                                            class=\"flaticon-rubbish-bin\"></span></a></li>\r\n                            </ul>\r\n                            <ul class=\"review_list\"></ul>\r\n                            <ul class=\"address_list\"></ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-lg-12\" *ngIf=\"lstResult?.length == 0\">\r\n                    <div class=\"text-center bg-red noresult\">\r\n                        <span class=\"font-italic\">{{'EmployerSearchNoJobsFound' | translate }}\r\n                        </span><span>&#9785;</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</section>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from '../common/sharedmodule.module';\nimport { RouterModule } from '@angular/router';\nimport { StatsComponent } from './stats/stats.component';\nimport { StatsJobSeekerPerJobComponent } from './stats-job-seeker-per-job/stats-job-seeker-per-job.component';\nimport { StatsJobComponent } from './stats-job/stats-job.component';\n\n\n\n@NgModule({\n  declarations: [StatsJobSeekerPerJobComponent, StatsJobComponent],\n  imports:  [\n    SharedModule,\n    RouterModule.forChild([\n      { path: 'Admin/ReportStats', component: StatsComponent},\n      { path: 'Admin/ReportStatsJobs', component: StatsJobComponent},\n      { path: 'Admin/ReportStatsJobSeekerPerJob', component: StatsJobSeekerPerJobComponent},\n    ])\n  ]\n})\nexport class ReportModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { TranslateService } from '@ngx-translate/core';\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\nimport { ModelReportDates } from 'src/app/interface/Model/ModelReportDates.class';\nimport { ReportApply } from 'src/app/interface/Response/Apply.class';\nimport { ServiceApply } from 'src/app/services/apply.service';\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\n\n@Component({\n  selector: 'app-stats-job-seeker-per-job',\n  templateUrl: './stats-job-seeker-per-job.component.html',\n  styleUrls: ['./stats-job-seeker-per-job.component.css']\n})\nexport class StatsJobSeekerPerJobComponent extends baseComponent implements OnInit {\n\n  modelStartDate: NgbDateStruct;\n  modelEndDate: NgbDateStruct;\n  modelObj: ModelReportDates = new ModelReportDates();\n  IsDatesCorrect: boolean = true;\n  lstResult : ReportApply[] = [];\n\n  constructor(BLServiceShowMessage: ServiceShowMessage,\n    BLJobSeekerLoginUser: ServiceLoginUser, BLTranslate: TranslateService,\n    private BLServiceApply: ServiceApply) {\n    super(BLServiceShowMessage, BLJobSeekerLoginUser, BLTranslate);\n  }\n\n  ngOnInit(): void {\n    this.loadData();\n  }\n  private loadData(): void {\n\n    this.BLServiceApply.ReportJobSeekerAppliedPerJobCount(this.modelObj).subscribe({\n      next: obj => {\n        this.lstResult = obj;\n      },\n      error: err => this.message.Error(err)\n    });\n  }\n  onStartDateSelect(param) {\n    this.modelObj.StartDate = new Date(param.year, param.month - 1, param.day + 1);\n    if (this.modelObj.EndDate.toString() != \"0001-01-01T00:00:00Z\") {\n      this.IsDatesCorrect = this.CompareDatesEqual(this.modelObj.StartDate, this.modelObj.EndDate);\n    }\n  }\n  onEndDateSelect(param) {\n    this.modelObj.EndDate = new Date(param.year, param.month - 1, param.day + 1);\n    if (this.modelObj.EndDate.toString() != \"0001-01-01T00:00:00Z\") {\n      this.IsDatesCorrect = this.CompareDatesEqual(this.modelObj.StartDate, this.modelObj.EndDate);\n    }\n  }\n  Search() {\n    this.loadData();\n  }\n}\n","<section class=\"accounts\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-sm-12 col-lg-12 col-xl-12\">\n                <div class=\"row\">\n                    <div class=\"col-md-12 col-lg-12 \">\n                        <h4 class=\"fz20\">{{'StatisticsPageTitleJobSeekerPerJob' | translate }}</h4>\n                    </div>\n                    <div class=\"col-md-5 col-lg-5 \">\n                        <div class=\"input-group\">\n                            <input matInput class=\"form-control\" placeholder=\"{{'SeekerResumeStartDate' | translate }}\"\n                                readonly name=\"dps\" requried (dateSelect)=\"onStartDateSelect($event)\"\n                                [(ngModel)]=\"modelStartDate\" ngbDatepicker #ds=\"ngbDatepicker\" [maxDate]=\"dateToday\">\n                            <div class=\"input-group-append\">\n                                <button class=\"btn calcender\" (click)=\"ds.toggle()\" type=\"button\"><i\n                                        class=\"fa fa-calendar\" aria-hidden=\"true\"></i></button>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-5 col-lg-5 \">\n                        <div class=\"input-group\">\n                            <input matInput class=\"form-control\" placeholder=\"{{'SeekerResumeEndDate' | translate }}\"\n                                readonly name=\"dpe\" requried (dateSelect)=\"onEndDateSelect($event)\"\n                                [(ngModel)]=\"modelEndDate\" ngbDatepicker #de=\"ngbDatepicker\">\n                            <div class=\"input-group-append\">\n                                <button class=\"btn calcender\" (click)=\"de.toggle()\" type=\"button\"><i\n                                        class=\"fa fa-calendar\" aria-hidden=\"true\"></i></button>\n                            </div>\n                        </div>\n                        <mat-error class=\"matError\" *ngIf=\"!IsDatesCorrect\">{{'SeekerResumeDateError' |\n                            translate }}\n                        </mat-error>\n                    </div>\n                    <div class=\"col-md-2 col-lg-2 \">\n                        <input type=\"submit\" value=\"{{'GenericSubmit' | translate }}\" class=\"btn btn-thm\" (click)=\"Search()\">\n                    </div>\n                    <div class=\"col-md-12 col-lg-12 mt-4\">\n                        <div class=\"ui_kit_table\">\n                            <table class=\"table\">\n                                <thead class=\"thead-light\">\n                                    <tr>\n                                        <th scope=\"col\">{{'GenericJobTitle' | translate }}</th>\n                                        <th scope=\"col\">{{'StatsCount' | translate }}</th>\n                                        <th scope=\"col\">{{'GenericAction' | translate }}</th>\n                                    </tr>\n                                </thead>\n                                <tbody *ngIf='lstResult && lstResult.length > 0'>\n                                    <tr *ngFor='let obj of lstResult'>\n                                        <td>{{ obj.JobName}} </td>\n                                        <td>{{ obj.Count}}</td>\n                                        <td><a\n                                            [routerLink]=\"['/Employer/AppliedResume/' + obj.JobId]\" routerLinkActive=\"router-link-active\"  data-toggle=\"tooltip\"\n                                            data-placement=\"bottom\" title=\"Resume\"><span\n                                                class=\"flaticon-manager\"></span></a></td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                    <div class=\"col-md-12 col-lg-12 mt-4\" *ngIf=\"lstResult?.length  == 0\">\n                        <div class=\"text-center bg-red noresult\">\n                            <span class=\"font-italic\">{{'PageNoResult' | translate }} </span><span>&#9785;</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { TranslateService } from '@ngx-translate/core';\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\nimport {  ModelReportJob } from 'src/app/interface/Model/ModelReportDates.class';\nimport { CompanyEmployers } from 'src/app/interface/Response/CompanyEmployer.class';\nimport { cGenericIdNameItem } from 'src/app/interface/Response/GenericIdName.class';\nimport { ReportJobCount } from 'src/app/interface/Response/Job.class';\nimport { ServiceJobFields } from 'src/app/services/job-fields.service';\nimport { ServiceJob } from 'src/app/services/job.service';\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\nimport { ServiceCompany } from 'src/app/services/service-company.service';\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\n\n@Component({\n  selector: 'app-stats-job',\n  templateUrl: './stats-job.component.html',\n  styleUrls: ['./stats-job.component.css']\n})\nexport class StatsJobComponent extends baseComponent implements OnInit {\n\n  modelStartDate: NgbDateStruct;\n  modelEndDate: NgbDateStruct;\n  modelObj: ModelReportJob = new ModelReportJob();\n  IsDatesCorrect: boolean = true;\n  lstJobCount : ReportJobCount[] = [];\n  lstCompanies: CompanyEmployers;\n  LkupJobField: cGenericIdNameItem[];\n  \n  constructor(BLServiceShowMessage: ServiceShowMessage,\n    BLJobSeekerLoginUser: ServiceLoginUser, BLTranslate: TranslateService,\n    private BLServiceCompany: ServiceCompany,\n    private BLJobFields: ServiceJobFields,\n    private BLJob: ServiceJob,) {\n    super(BLServiceShowMessage, BLJobSeekerLoginUser, BLTranslate)\n  }\n\n  ngOnInit(): void {\n    this.loadData();\n    this.BLServiceCompany.ListAnyCompany().subscribe({\n      next: lst => {\n        this.lstCompanies = lst;\n      },\n      error: err => this.message.Error(err)\n    });\n    this.BLJobFields.ListAnyJobFields().subscribe({\n      next: lst => {\n        this.LkupJobField = lst;\n        \n      },\n      error: err => {\n        this.message.Error(err);\n        this.BLServiceShowMessage.sendMessage(this.message);\n      }\n    });\n  }\n  private loadData(): void {\n    this.BLJob.ReportJobCount(this.modelObj).subscribe({\n      next: obj => {\n        this.lstJobCount = obj;\n      },\n      error: err => this.message.Error(err)\n    });\n  }\n  onStartDateSelect(param) {\n    this.modelObj.StartDate = new Date(param.year, param.month - 1, param.day + 1);\n    if (this.modelObj.StartDate.toString() != \"0001-01-01T00:00:00Z\" &&\n      this.modelObj.EndDate.toString() != \"0001-01-01T00:00:00Z\" ) {\n      this.IsDatesCorrect = this.CompareDatesEqual(this.modelObj.StartDate, this.modelObj.EndDate);\n    }\n  }\n  onEndDateSelect(param) {\n    this.modelObj.EndDate = new Date(param.year, param.month - 1, param.day + 1);\n    if (this.modelObj.StartDate.toString() != \"0001-01-01T00:00:00Z\" &&\n      this.modelObj.EndDate.toString() != \"0001-01-01T00:00:00Z\" ) {\n      this.IsDatesCorrect = this.CompareDatesEqual(this.modelObj.StartDate, this.modelObj.EndDate);\n    }\n  }\n  Search() {\n    this.loadData();\n  }\n}\n","<section class=\"accounts\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-sm-12 col-lg-12 col-xl-12\">\n                <div class=\"row\">\n                    <div class=\"col-md-12 col-lg-12 \">\n                        <h4 class=\"fz20\">{{'StatisticsPageTitleJob' | translate }}</h4>\n                    </div>\n                    <div class=\"col-sm-5 col-lg-5 mt-3\">\n                        <div class=\"candidate_revew_select\">\n                            <mat-form-field>\n                                <mat-label>{{'EmployerPostJobCompany' | translate }}</mat-label>\n                                <mat-select [(ngModel)]=\"modelObj.CompanyId\" #modelCompanyVar=\"ngModel\"\n                                    name=\"modelCompany\"\n                                    [ngClass]=\"{'is-invalid': (modelCompanyVar.touched || modelCompanyVar.dirty) && !modelCompanyVar.valid }\">\n                                    <mat-option value=\"-1\">{{'EmployerPostJobCompanySelect' | translate }}</mat-option>\n                                    <mat-option *ngFor=\"let item of lstCompanies\" value=\"{{item._id}}\">\n                                        {{item.Name}}\n                                    </mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"col-md-5 col-lg-5 mt-4\">\n                        <div class=\"input-group\">\n                            <input matInput class=\"form-control\" placeholder=\"{{'SeekerResumeStartDate' | translate }}\"\n                                readonly name=\"dps\" requried (dateSelect)=\"onStartDateSelect($event)\"\n                                [(ngModel)]=\"modelStartDate\" ngbDatepicker #ds=\"ngbDatepicker\" [maxDate]=\"dateToday\">\n                            <div class=\"input-group-append\">\n                                <button class=\"btn calcender\" (click)=\"ds.toggle()\" type=\"button\"><i\n                                        class=\"fa fa-calendar\" aria-hidden=\"true\"></i></button>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-sm-5 col-lg-5 mt-3\">\n                        <div class=\"candidate_revew_select\">\n                            <mat-form-field>\n                                <mat-label>{{'EmployerPostJobField' | translate }}</mat-label>\n                                <mat-select [(ngModel)]=\"modelObj.JobFieldId\" #modelJobFieldVar=\"ngModel\"\n                                    name=\"modelJobField\"\n                                    [ngClass]=\"{'is-invalid': (modelJobFieldVar.touched || modelJobFieldVar.dirty) && !modelJobFieldVar.valid }\">\n                                    <mat-option value=\"-1\">{{'EmployerPostJobFieldSelect' | translate }}</mat-option>\n                                    <mat-option *ngFor=\"let item of LkupJobField\" value=\"{{item._id}}\">\n                                        {{item.Name}}\n                                    </mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                        </div>\n                    </div>\n\n                    <div class=\"col-md-5 col-lg-5 mt-4\">\n                        <div class=\"input-group\">\n                            <input matInput class=\"form-control\" placeholder=\"{{'SeekerResumeEndDate' | translate }}\"\n                                readonly name=\"dpe\" requried (dateSelect)=\"onEndDateSelect($event)\"\n                                [(ngModel)]=\"modelEndDate\" ngbDatepicker #de=\"ngbDatepicker\">\n                            <div class=\"input-group-append\">\n                                <button class=\"btn calcender\" (click)=\"de.toggle()\" type=\"button\"><i\n                                        class=\"fa fa-calendar\" aria-hidden=\"true\"></i></button>\n                            </div>\n                        </div>\n                        <mat-error class=\"matError\" *ngIf=\"!IsDatesCorrect\">{{'SeekerResumeDateError' |\n                            translate }}\n                        </mat-error>\n                    </div>\n                    <div class=\"col-md-2 col-lg-2 mt-4\">\n                        <input type=\"submit\" value=\"{{'GenericSubmit' | translate }}\" class=\"btn btn-thm\"\n                            (click)=\"Search()\">\n                    </div>\n                    <div class=\"col-md-12 col-lg-12 mt-4\">\n                        <div class=\"ui_kit_table\">\n                            <table class=\"table\">\n                                <thead class=\"thead-light\">\n                                    <tr>\n                                        <th scope=\"col\">{{'GenericCompanyName' | translate }}</th>\n                                        <th scope=\"col\">{{'StatsCount' | translate }}</th>\n                                    </tr>\n                                </thead>\n                                <tbody *ngIf='lstJobCount && lstJobCount.length > 0'>\n                                    <tr *ngFor='let obj of lstJobCount'>\n                                        <td>{{ obj.Company.Name}} </td>\n                                        <td>{{ obj.Count}}</td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                    <div class=\"col-md-12 col-lg-12 mt-4\" *ngIf=\"lstJobCount?.length  == 0\">\n                        <div class=\"text-center bg-red noresult\">\n                            <span class=\"font-italic\">{{'PageNoResult' | translate }} </span><span>&#9785;</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { NgbDateStruct, NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { TranslateService } from '@ngx-translate/core';\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\nimport { ModelReportDates } from 'src/app/interface/Model/ModelReportDates.class';\nimport { ReportJobSeekerGender } from 'src/app/interface/Response/ReportJobSeekerGender.class';\nimport { ServiceApply } from 'src/app/services/apply.service';\nimport { ServiceJobSeeker } from 'src/app/services/job-seeker.service';\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\nimport { ServiceCompany } from 'src/app/services/service-company.service';\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\n\n@Component({\n  selector: 'app-stats',\n  templateUrl: './stats.component.html',\n  styleUrls: ['./stats.component.css']\n})\nexport class StatsComponent extends baseComponent implements OnInit {\n\n  modelStartDate: NgbDateStruct;\n  modelEndDate: NgbDateStruct;\n  modelObj: ModelReportDates = new ModelReportDates();\n  IsDatesCorrect: boolean = true;\n\n  reportCountJobSeeker: number = 0;\n  reportCountCompany: number = 0;\n  reportCountGender: ReportJobSeekerGender = new ReportJobSeekerGender();\n  reportCountHired: number = 0;\n  \n  constructor( BLServiceShowMessage: ServiceShowMessage,\n    BLJobSeekerLoginUser: ServiceLoginUser, BLTranslate: TranslateService,\n    private BLJobSeeker: ServiceJobSeeker,\n    private BLServiceCompany: ServiceCompany,\n    private BLServiceApply: ServiceApply) {\n    super(BLServiceShowMessage, BLJobSeekerLoginUser, BLTranslate)\n   }\n\n  ngOnInit(): void {\n    this.loadData();\n  }\n  private loadData(): void {\n    this.BLJobSeeker.ReportJobSeekerCount(this.modelObj).subscribe({\n      next: obj => {\n        this.reportCountJobSeeker = obj;\n      },\n      error: err => this.message.Error(err)\n    });\n    this.BLJobSeeker.ReportJobSeekerGenderCount(this.modelObj).subscribe({\n      next: obj => {\n        this.reportCountGender = obj;\n      },\n      error: err => this.message.Error(err)\n    });\n    this.BLServiceCompany.ReportCompanyCount(this.modelObj).subscribe({\n      next: obj => {\n        this.reportCountCompany = obj;\n      },\n      error: err => this.message.Error(err)\n    });\n    this.BLServiceApply.ReportJobSeekerHiredCount(this.modelObj).subscribe({\n      next: obj => {\n        this.reportCountHired = obj;\n      },\n      error: err => this.message.Error(err)\n    });\n  }\n  onStartDateSelect(param) {\n    this.modelObj.StartDate = new Date(param.year, param.month - 1, param.day + 1);\n    if (this.modelObj.EndDate.toString() != \"0001-01-01T00:00:00Z\") {\n      this.IsDatesCorrect = this.CompareDatesEqual(this.modelObj.StartDate, this.modelObj.EndDate);\n    }\n  }\n  onEndDateSelect(param) {\n    this.modelObj.EndDate = new Date(param.year, param.month - 1, param.day + 1);\n    if (this.modelObj.EndDate.toString() != \"0001-01-01T00:00:00Z\") {\n      this.IsDatesCorrect = this.CompareDatesEqual(this.modelObj.StartDate, this.modelObj.EndDate);\n    }\n  }\n  Search(){\n    this.loadData();\n  }\n}\n","<section class=\"accounts\">\n    <div class=\"container\">\n        <div class=\"row\"> \n            <div class=\"col-sm-12 col-lg-12 col-xl-12\">\n                <div class=\"row\">\n                    <div class=\"col-md-12 col-lg-12 \">\n                        <h4 class=\"fz20\">{{'StatisticsPageTitle' | translate }}</h4>\n                    </div>\n                    <div class=\"col-md-5 col-lg-5 \">\n                        <div class=\"input-group\">\n                            <input matInput class=\"form-control\" placeholder=\"{{'SeekerResumeStartDate' | translate }}\"\n                                readonly name=\"dps\" requried (dateSelect)=\"onStartDateSelect($event)\"\n                                [(ngModel)]=\"modelStartDate\" ngbDatepicker #ds=\"ngbDatepicker\" [maxDate]=\"dateToday\">\n                            <div class=\"input-group-append\">\n                                <button class=\"btn calcender\" (click)=\"ds.toggle()\" type=\"button\"><i\n                                        class=\"fa fa-calendar\" aria-hidden=\"true\"></i></button>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-5 col-lg-5 \">\n                        <div class=\"input-group\">\n                            <input matInput class=\"form-control\" placeholder=\"{{'SeekerResumeEndDate' | translate }}\"\n                                readonly name=\"dpe\" requried (dateSelect)=\"onEndDateSelect($event)\"\n                                [(ngModel)]=\"modelEndDate\" ngbDatepicker #de=\"ngbDatepicker\">\n                            <div class=\"input-group-append\">\n                                <button class=\"btn calcender\" (click)=\"de.toggle()\" type=\"button\"><i\n                                        class=\"fa fa-calendar\" aria-hidden=\"true\"></i></button>\n                            </div>\n                        </div>\n                        <mat-error class=\"matError\" *ngIf=\"!IsDatesCorrect\">{{'SeekerResumeDateError' |\n                            translate }}\n                        </mat-error>\n                    </div>\n                    <div class=\"col-md-2 col-lg-2 \">\n                        <input type=\"submit\" value=\"{{'GenericSubmit' | translate }}\" class=\"btn btn-thm\" (click)=\"Search()\">\n                    </div>\n                    <div class=\"col-md-12 col-lg-12 mt-4\">\n                        <div class=\"ui_kit_table\">\n                            <table class=\"table\">\n                                <thead class=\"thead-light\">\n                                    <tr>\n                                        <th scope=\"col\"> </th>\n                                        <th scope=\"col\"> </th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr>\n                                        <td> {{'EmployerPostJobCompany' | translate }}</td>\n                                        <td>{{ reportCountCompany}}</td>\n                                    </tr>\n                                    <tr>\n                                        <td> {{'GenericJobSeeker' | translate }}</td>\n                                        <td>{{ reportCountJobSeeker}}</td>\n                                    </tr>\n                                    <tr>\n                                        <td> {{'EmployerPostJobGenderMale' | translate }}</td>\n                                        <td>{{ reportCountGender.Male}}</td>\n                                    </tr>\n                                    <tr>\n                                        <td> {{'EmployerPostJobGenderFemale' | translate }}</td>\n                                        <td>{{ reportCountGender.Female}}</td>\n                                    </tr>\n                                    <tr>\n                                        <td> {{'StatsCountUndefiend' | translate }}</td>\n                                        <td>{{ reportCountGender.Other}}</td>\n                                    </tr>\n                                    <tr>\n                                        <td> {{'StatsCountHired' | translate }}</td>\n                                        <td>{{ reportCountHired}}</td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\nimport { TranslateList } from 'src/app/interface/Response/TranslateList.class';\nimport { ModelTranslateList } from 'src/app/interface/Model/ModelTranslateList.class';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\nimport { TranslateType } from 'src/app/Enum/TranslateType.enum';\nimport { ServiceTranslateList } from 'src/app/services/translate-service.service';\n\n@Component({\n  selector: 'app-translatelist',\n  templateUrl: './translatelist.component.html',\n  styleUrls: ['./translatelist.component.css']\n})\nexport class TranslatelistComponent extends baseComponent implements OnInit {\n\n  lstData: TranslateList;\n  modelObj: ModelTranslateList = new ModelTranslateList();\n  title: string;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private BLServiceTranslate: ServiceTranslateList,\n    BLServiceShowMessage: ServiceShowMessage,\n    BLTranslate: TranslateService,\n    BLServiceLoginUser: ServiceLoginUser,) {\n    super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\n  }\n\n  ngOnInit(): void {\n\n    const paramType = this.route.snapshot.paramMap.get('Type');\n    const paramId = this.route.snapshot.paramMap.get('Id');\n    if (paramId) {\n      this.modelObj.Id = paramId\n    }\n    if (paramType) {\n      this.modelObj.Type = +paramType;\n      this.loadData();\n      this.loadTitle();\n    }\n  }\n  loadTitle() {\n    // switch (this.modelObj.Type) {\n    //   case TranslateType.Country:\n    //     this.BLTranslate.get(\"GenericCity\").subscribe(res => { this.title = res; });\n    //     break;\n    //   case TranslateType.City:\n    //     this.BLTranslate.get(\"TrainingArea\").subscribe(res => { this.title = res; });\n    //     break;\n    //   case TranslateType.TrainingCategory:\n    //     this.BLTranslate.get(\"GenericTrainingCategory\").subscribe(res => { this.title = res; });\n    //     break;\n    //   case TranslateType.TrainingType:\n    //     this.BLTranslate.get(\"GenericTrainingType\").subscribe(res => { this.title = res; });\n    //     break;\n    //   case TranslateType.Courses:\n    //     this.BLTranslate.get(\"CoursesTitle\").subscribe(res => { this.title = res; });\n    //     break;\n    // }\n  }\n  private loadData(): void {\n    this.BLServiceTranslate.ListTranslationByType(this.modelObj).subscribe({\n      next: lst => {\n        this.lstData = lst;\n      },\n      error: err => this.message.Error(err)\n    });\n  }\n  modelSaveBtn() {\n    this.BLServiceTranslate.SaveListTranslation(this.lstData).subscribe({\n      next: response => {\n        this.message.Success(this.msgSavedSuccessfully);\n        this.BLServiceShowMessage.sendMessage(this.message);\n        this.OnRedrirectBack();\n      },\n      error: err => this.message.Error(err)\n    });\n  }\n  OnRedrirectBack() {\n    switch (this.modelObj.Type) {\n      case TranslateType.Country:\n        this.router.navigate(['/DataManagement/Country']);\n        break;\n      case TranslateType.City:\n        this.router.navigate(['/DataManagement/City/' + this.modelObj.Id]);\n        break;\n      case TranslateType.JobField:\n        this.router.navigate(['/DataManagement/JobFields']);\n        break;\n      case TranslateType.JobSubFields:\n        this.router.navigate(['/DataManagement/JobSubFields/' + this.modelObj.Id]);\n        break;\n      case TranslateType.Qualification:\n        this.router.navigate(['/DataManagement/Qualification']);\n        break;\n      case TranslateType.YearsOfExperience:\n        this.router.navigate(['/DataManagement/YearsOfExperience']);\n        break;\n      case TranslateType.Languages:\n        this.router.navigate(['/DataManagement/Languages']);\n        break;\n      case TranslateType.Industry:\n        this.router.navigate(['/DataManagement/Industry']);\n        break;\n\n    }\n  }\n}\n","<section class=\"accounts\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-sm-12 col-lg-12 col-xl-12\">\n                <div class=\"row\">\n                    <div class=\"col-lg-12\">\n                        <h4 class=\"fz20\">Translate</h4>\n                    </div>\n                    <div class=\"col-lg-12\" *ngIf=\"lstData?.Data.length  == 0\">\n                      <div class=\"text-center bg-red noresult\">\n                        <span class=\"font-italic\">{{'PageNoResult' | translate }} </span><span>&#9785;</span>\n                      </div>\n                    </div>\n                    <div class=\"col-md-12\" >\n                        <div class='table-responsive' *ngIf='lstData?.Data.length > 0'>\n                          <table class='table'>\n                            <thead>\n                              <tr>\n                                <th>English</th>\n                                <th>عربى</th>\n                              </tr>\n                            </thead>\n                            <tbody>\n                              <tr *ngFor='let obj of lstData.Data; let i = index '>\n                                <td>{{ obj.Name}}</td>\n                                <td>\n                                  <input type=\"text\" id=\"Name2{{i}}\" [(ngModel)]=\"lstData.Data[i].Name2\" #modelName2Var=\"ngModel\"\n                                    name=\"modelName2\">\n                                </td>\n                              </tr>\n                            </tbody>\n                          </table>\n                        </div>\n                        <div class=\"form-group pull-right md-form\">\n                          <button  class=\"btn color-bg-grey btn-sm btn-default white-text\" type=\"submit\"\n                            (click)=\"OnRedrirectBack()\">{{'GenericCancel' | translate }}</button>\n                          <button *ngIf='lstData?.Data.length > 0' class=\"btn color-bg-01 btn-sm btn-default white-text btnSave\" type=\"submit\"\n                            (click)=\"modelSaveBtn()\">{{'GenericSave' | translate }}</button>\n                        </div>\n                      </div>\n                     \n                </div>\n            </div>\n        </div>\n    </div>\n</section>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { SigninRedirectCallbackComponent } from './home/signin-redirect-callback.component';\r\nimport { SignoutRedirectCallbackComponent } from './home/signout-redirect-callback.component';\r\nimport { UnauthorizedComponent } from './home/unauthorized.component';\r\nimport { RegisterSuccessComponent } from './home/register-success/register-success.component';\r\nimport { TermComponent } from './home/term/term.component';\r\nimport { PolicyComponent } from './home/policy/policy.component';\r\nimport { TranslatelistComponent } from './Translate/translatelist/translatelist.component';\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: HomeComponent, data:{PageName:\"home\"} },\r\n    { path: 'home/:msg/:isSuccess', component: HomeComponent, data:{PageName:\"home\"} },\r\n    { path: 'home/RegisterSuccess', component: RegisterSuccessComponent, data:{PageName:\"home\"} },\r\n    { path: 'Terms', component: TermComponent, data:{PageName:\"home\"} },\r\n    { path: 'Policy', component: PolicyComponent, data:{PageName:\"home\"} },\r\n    { path: 'Translate/:Type/:Id', component: TranslatelistComponent },\r\n    { path: 'signin-callback', component: SigninRedirectCallbackComponent },\r\n    { path: 'signout-callback', component: SignoutRedirectCallbackComponent },\r\n    { path: 'unauthorized', component: UnauthorizedComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","<link rel=\"stylesheet\" href=\"/assets/css/styleAR.css\" *ngIf=\"IsRTL\">\r\n<link rel=\"stylesheet\" href=\"/assets/css/style.css\" *ngIf=\"!IsRTL\">\r\n<!-- Main Header Nav -->\r\n\r\n<div class=\"fullscreen\" *ngIf=\"IsAppear\">\r\n\r\n</div>\r\n\r\n<header class=\"header-nav menu_style_home_three navbar-scrolltofixed main-menu headerTag\">\r\n    <div class=\"container-fluid\">\r\n        <!-- Ace Responsive Menu -->\r\n        <nav>\r\n            <!-- Menu Toggle btn-->\r\n            <div class=\"menu-toggle\">\r\n                <img class=\"nav_logo_img img-fluid\" src=\"/assets/images/header-logo3.png\" alt=\"header-logo3.png\">\r\n                <button type=\"button\" id=\"menu-btn\">\r\n                    <span class=\"icon-bar\"></span>\r\n                    <span class=\"icon-bar\"></span>\r\n                    <span class=\"icon-bar\"></span>\r\n                </button>\r\n            </div>\r\n            <a href=\"index.html\" class=\"navbar_brand float-left dn-smd\"\r\n                style=\"width: 112px; height: 60px; display: block;\">\r\n                <img class=\"img-fluid\" src=\"/assets/images/logo.png\">\r\n            </a>\r\n            <!-- Responsive Menu Structure-->\r\n            <!--Note: declare the Menu style in the data-menu-style=\"horizontal\" (options: horizontal, vertical, accordion) -->\r\n            <ul id=\"respMenu\" class=\"ace-responsive-menu\" data-menu-style=\"horizontal\">\r\n                <!-- <li class=\"\">\r\n                    <a href=\"\" routerLink=\"/\"><span class=\"title\">{{'HomeHome' | translate }}</span></a>\r\n                </li> -->\r\n                <li class=\"\" *ngIf=\"isLoggedIn && !isAdmin\">\r\n                    <a href=\"{{MCTURL}}\" target=\"_blank\"><span class=\"title\">{{'Elearning' | translate }}</span></a>\r\n                </li>\r\n                <li class=\"\" *ngIf=\"!isLoggedIn\">\r\n                    <a href=\"\" routerLink=\"/Job/Search\"><span class=\"title\">{{'HomeJobSearch' | translate }}</span></a>\r\n                </li>\r\n                <li class=\"\" *ngIf=\"isLoggedIn  && isEmployer\">\r\n                    <a href=\"\" routerLink=\"/Employer/ManageMyJobs\"><span class=\"title\">{{'GenericJobEmployer' |\r\n                            translate }}</span></a>\r\n                </li>\r\n                <li class=\"\" *ngIf=\"isLoggedIn  && isEmployer\">\r\n                    <a href=\"\" routerLink=\"/JobSeeker/Search\"><span class=\"title\">{{'HomeJobSeekerSearch' | translate\r\n                            }}</span></a>\r\n                </li>\r\n                <li class=\"\" *ngIf=\"isLoggedIn  && isJobSeeker\">\r\n                    <a href=\"\" routerLink=\"/JobSeeker/History\"><span class=\"title\">{{'GenericJobSeeker' | translate\r\n                            }}</span></a>\r\n                </li>\r\n                <li class=\"\" *ngIf=\"isLoggedIn  && isJobSeeker\">\r\n                    <a href=\"\" routerLink=\"/Employer/Search\"><span class=\"title\">{{'HomeJobSearch' | translate\r\n                            }}</span></a>\r\n                </li>\r\n                <li class=\"\" *ngIf=\"isLoggedIn  && isAdmin\">\r\n                    <a href=\"\" routerLink=\"/DataManagement/Languages\"><span class=\"title\">{{'HomeDataManagement' |\r\n                            translate }}</span></a>\r\n                </li>\r\n                <li class=\"\" *ngIf=\"isLoggedIn  && isAdmin\">\r\n                    <a href=\"\" routerLink=\"/account/account\"><span class=\"title\">{{'HomeAccountsManagement' | translate\r\n                            }}</span></a>\r\n                </li>\r\n                <li class=\"\" *ngIf=\"isLoggedIn  && isAdmin\">\r\n                    <a href=\"\" routerLink=\"/Admin/CompanyList\"><span class=\"title\">{{'GenericCompanies' | translate\r\n                            }}</span></a>\r\n                </li>\r\n                <li class=\"\" *ngIf=\"isLoggedIn  && isAdmin\">\r\n                    <a href=\"\" routerLink=\"/Admin/JobsList\"><span class=\"title\">{{'EmployerMyJobsJobs' | translate\r\n                            }}</span></a>\r\n                </li>\r\n                <li class=\"\" *ngIf=\"isLoggedIn  && (isAdmin || isJobSeeker)\">\r\n                    <a href=\"\" routerLink=\"/JobFair/List\"><span class=\"title\">{{'HomeJobFairs' | translate }}</span></a>\r\n                </li>\r\n                <li class=\"\" *ngIf=\"isLoggedIn  && isAdmin\">\r\n                    <a href=\"\" routerLink=\"/Config/JobFairCreate\"><span class=\"title\">{{'HomeFormConfiguration' |\r\n                            translate }}</span></a>\r\n                </li>\r\n                <li>\r\n                    <a href=\"#\" *ngIf=\"isLoggedIn  && isAdmin\"><span class=\"title menuArrow\">{{\"GenericReport\" |\r\n                            translate}} </span></a>\r\n\r\n                    <ul>\r\n                        <li class=\"\" *ngIf=\"isLoggedIn  && isAdmin\">\r\n                            <a href=\"\" routerLink=\"/Admin/ReportStats\"><span class=\"title\">{{'HomeStatistics' |\r\n                                    translate }}</span></a>\r\n                        </li>\r\n                        <li class=\"\" *ngIf=\"isLoggedIn  && isAdmin\">\r\n                            <a href=\"\" routerLink=\"/Admin/ReportStatsJobs\"><span class=\"title\">{{'HomeStatisticsJobs' |\r\n                                    translate }}</span></a>\r\n                        </li>\r\n                        <li class=\"\" *ngIf=\"isLoggedIn  && isAdmin\">\r\n                            <a href=\"\" routerLink=\"/Admin/ReportStatsJobSeekerPerJob\"><span\r\n                                    class=\"title\">{{'HomeStatisticsJobSeekerPerJob' | translate }}</span></a>\r\n                        </li>\r\n                    </ul>\r\n                </li>\r\n                <li>\r\n                    <a href=\"#\" *ngIf=\"isLoggedIn  && isAdmin\"><span class=\"title menuArrow\">{{\"GenericApprove\" |\r\n                            translate}} <span class=\"NotificationBadge\">{{CountApproval}}</span></span></a>\r\n\r\n                    <ul>\r\n                        <li class=\"\" *ngIf=\"isLoggedIn  && isAdmin\">\r\n                            <a href=\"\" routerLink=\"/Admin/JobApproval\"><span class=\"title\">{{'HomeJobApproval' |\r\n                                    translate }}</span></a>\r\n                        </li>\r\n                        <li class=\"\" *ngIf=\"isLoggedIn  && isAdmin\">\r\n                            <a href=\"\" routerLink=\"/Admin/CompanyApproval\"><span class=\"title\">{{'HomeCompanyApproval' |\r\n                                    translate }}</span></a>\r\n                        </li>\r\n                    </ul>\r\n                </li>\r\n            </ul>\r\n            <ul *ngIf=\"isLoggedIn && isJobSeeker\" class=\"header_user_notif pull-right dn-smd\">\r\n\r\n                <li class=\"user_setting\">\r\n                    <div class=\"dropdown\">\r\n                        <a class=\"btn dropdown-toggle\" href=\"#\" data-toggle=\"dropdown\">\r\n                            <img class=\"rounded-circle\" src=\"/assets/images/team/e1.png\" alt=\"e1.png\">\r\n                        </a>\r\n                        <div class=\"dropdown-menu\">\r\n                            <div class=\"user_set_header\">\r\n                                <p>Hi {{userName}}<br>\r\n                                    <!-- <span class=\"address welcomeaddress w-100\">Bothell, WA,\r\n                                        USA</span> -->\r\n                                </p>\r\n                            </div>\r\n                            <div class=\"user_setting_content\">\r\n                                <!-- <a class=\"dropdown-item active\" routerLink=\"/JobSeeker/History\"><span\r\n                                        class=\"flaticon-dashboard\"></span> Dashboard</a> -->\r\n                                <a class=\"dropdown-item\" routerLink=\"/JobSeeker/Resume/{{userId}}\"><span\r\n                                        class=\"flaticon-resume\"></span> {{'HomeResume' | translate }}</a>\r\n                                <a class=\"dropdown-item\" routerLink=\"/JobSeeker/History\"><span\r\n                                        class=\"flaticon-paper-plane\"></span> {{'HomeJobHistory' | translate }}</a>\r\n                                <a class=\"dropdown-item\" routerLink=\"/JobSeeker/ShortList\"><span\r\n                                        class=\"flaticon-favorites\"></span>{{'HomeFavouriteJobs' | translate }}</a>\r\n                                <a class=\"dropdown-item\" routerLink=\"/account/ChangePassword\"><span\r\n                                        class=\"flaticon-locked\"></span>{{'HomeChangePassword' | translate }}</a>\r\n                                <a class=\"dropdown-item signout\" (click)=\"logout()\"><span\r\n                                        class=\"flaticon-logout\"></span>\r\n                                    {{'HomeLogout' | translate }}</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n            <ul *ngIf=\"isLoggedIn && isEmployer\" class=\"header_user_notif pull-right dn-smd\">\r\n\r\n                <li class=\"user_setting\">\r\n                    <div class=\"dropdown\">\r\n                        <a class=\"btn dropdown-toggle\" href=\"#\" data-toggle=\"dropdown\">\r\n                            <img class=\"rounded-circle\" src=\"/assets/images/team/e1.png\" alt=\"e1.png\">\r\n                        </a>\r\n                        <div class=\"dropdown-menu\">\r\n                            <div class=\"user_set_header\">\r\n                                <p>{{'HomeHi' | translate }} {{userName}}<br>\r\n                                    <!-- <span class=\"address welcomeaddress w-100\">Bothell, WA,\r\n                                        USA</span> -->\r\n                                </p>\r\n                            </div>\r\n                            <div class=\"user_setting_content\">\r\n                                <!-- <a class=\"dropdown-item active\" routerLink=\"/Employer/ManageMyJobs\"><span\r\n                                        class=\"flaticon-dashboard\"></span> Dashboard</a> -->\r\n                                <a class=\"dropdown-item\" routerLink=\"/Employer/Profile\"><span\r\n                                        class=\"flaticon-profile\"></span> {{'HomeAddCompany' | translate }}</a>\r\n                                <a class=\"dropdown-item\" routerLink=\"/Employer/ManageMyCompanies\"><span\r\n                                        class=\"flaticon-profile\"></span> {{'HomeCompanyProfile' | translate }}</a>\r\n                                <a class=\"dropdown-item\" routerLink=\"/Employer/PostJob\"><span\r\n                                        class=\"flaticon-resume\"></span> {{'HomePostNewJob' | translate }}</a>\r\n                                <a class=\"dropdown-item\" routerLink=\"/Employer/ManageMyJobs\"><span\r\n                                        class=\"flaticon-paper-plane\"></span> {{'HomeManageJobs' | translate }}</a>\r\n                                <a class=\"dropdown-item\" routerLink=\"/Employer/ShortListResumes\"><span\r\n                                        class=\"flaticon-analysis\"></span> {{'HomeShortlistedResumes' | translate }}</a>\r\n                                <a class=\"dropdown-item\" routerLink=\"/account/ChangePassword\"><span\r\n                                        class=\"flaticon-locked\"></span> {{'HomeChangePassword' | translate }}</a>\r\n                                <a class=\"dropdown-item signout\" (click)=\"logout()\"><span\r\n                                        class=\"flaticon-logout\"></span>\r\n                                    {{'HomeLogout' | translate }}</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n\r\n            <ul *ngIf=\"isLoggedIn\" class=\"sign_up_btn pull-right dn-smd\">\r\n                <li *ngIf=\"isAdmin\">\r\n                    <a class=\"btn btn-md btn-transparent bg-Orange signout\" (click)=\"logout()\"><i\r\n                            class=\"fas fa-user-lock\"></i>{{'HomeLogout' | translate }}</a>\r\n                </li>\r\n                <li *ngIf=\"isEmployer\">\r\n                    <a class=\"btn btn-md btn-transparent bg-Orange\" routerLink=\"Employer/PostJob\"><i\r\n                            class=\"fas fa-user-lock\"></i>{{'HomePostJob' | translate }}</a>\r\n                </li>\r\n                <li *ngIf=\"isJobSeeker\">\r\n                    <a class=\"btn btn-md btn-transparent bg-Orange\" routerLink=\"JobSeeker/Resume/{{userId}}\"><i\r\n                            class=\"fas fa-user-lock\"></i>{{'HomeMyResume' | translate }}</a>\r\n                </li>\r\n            </ul>\r\n            <ul *ngIf=\"!isLoggedIn\" class=\"sign_up_btn pull-right dn-smd\">\r\n                <li><a class=\"btn btn-md btn-transparent bg-Orange\" (click)=\"login()\"><i\r\n                            class=\"fas fa-user-lock\"></i>{{'GenericLogin' | translate }}</a>\r\n                </li>\r\n            </ul><!-- Button trigger modal -->\r\n            <div class=\"langBox float-right \">\r\n                <ul>\r\n                    <li class=\"list-inline-item\" id=\"drpLang\">\r\n                        <select [(ngModel)]=\"selectLang\" class=\"selectpicker show-tick\" (change)=\"switchLang()\">\r\n                            <option selected value=\"en\">English</option>\r\n                            <option value=\"ar\">عربى </option>\r\n                        </select>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n        <!-- End of Responsive Menu -->\r\n    </div>\r\n</header>\r\n\r\n<!-- Main Header Nav For Mobile -->\r\n<div id=\"page\" class=\"stylehome1 h0 menu_style_home_three bgGradient\">\r\n    <div class=\"mobile-menu\">\r\n        <ul *ngIf=\"isLoggedIn\" class=\"header_user_notif pull-right\">\r\n            <li class=\"user_notif\">\r\n                <div class=\"dropdown\">\r\n\r\n                </div>\r\n            </li>\r\n            <li *ngIf=\"IsAzureLoginEnabled\">\r\n                <a href=\"{{MCTWebsiteURL}}\" target=\"_blank\"><img class=\"MCTLogo\" src=\"/assets/images/MCTLogo.png\"></a>\r\n            </li>\r\n            <li class=\"user_setting\" *ngIf=\"isLoggedIn && isEmployer\">\r\n                <div class=\"dropdown\">\r\n                    <a class=\"btn dropdown-toggle\" href=\"#\" data-toggle=\"dropdown\"><img class=\"rounded-circle\"\r\n                            src=\"/assets/images/team/e1.png\" alt=\"e1.png\" title=\"CreativeLayers\"></a>\r\n                    <div class=\"dropdown-menu\">\r\n                        <div class=\"user_set_header\">\r\n                            <p>{{'HomeHi' | translate }} {{userName}}<br>\r\n                                <!-- <span class=\"address  w-100\">Bothell, WA, USA</span> -->\r\n                            </p>\r\n                        </div>\r\n                        <div class=\"user_setting_content\">\r\n                            <a class=\"dropdown-item\" routerLink=\"/Employer/Profile\"><span\r\n                                    class=\"flaticon-profile\"></span> {{'HomeAddCompany' | translate }}</a>\r\n                            <a class=\"dropdown-item\" routerLink=\"/Employer/ManageMyCompanies\"><span\r\n                                    class=\"flaticon-profile\"></span> {{'HomeCompanyProfile' | translate }}</a>\r\n                            <a class=\"dropdown-item\" routerLink=\"/Employer/PostJob\"><span\r\n                                    class=\"flaticon-resume\"></span> {{'HomePostNewJob' | translate }}</a>\r\n                            <a class=\"dropdown-item\" routerLink=\"/Employer/ManageMyJobs\"><span\r\n                                    class=\"flaticon-paper-plane\"></span> {{'HomeManageJobs' | translate }}</a>\r\n                            <a class=\"dropdown-item\" routerLink=\"/Employer/ShortListResumes\"><span\r\n                                    class=\"flaticon-analysis\"></span> {{'HomeShortlistedResumes' | translate }}</a>\r\n                            <a class=\"dropdown-item\" routerLink=\"/account/ChangePassword\"><span\r\n                                    class=\"flaticon-locked\"></span> {{'HomeChangePassword' | translate }}</a>\r\n                            <a class=\"dropdown-item\" (click)=\"logout()\"><span class=\"flaticon-logout\"></span>\r\n                                {{'HomeLogout' | translate }}</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n            <li class=\"user_setting\" *ngIf=\"isLoggedIn && isJobSeeker\">\r\n                <div class=\"dropdown\">\r\n                    <a class=\"btn dropdown-toggle\" href=\"#\" data-toggle=\"dropdown\">\r\n                        <img class=\"rounded-circle\" src=\"/assets/images/team/e1.png\" alt=\"e1.png\">\r\n                    </a>\r\n                    <div class=\"dropdown-menu\">\r\n                        <div class=\"user_set_header\">\r\n                            <p>{{'HomeHi' | translate }} {{userName}}</p>\r\n                        </div>\r\n                        <div class=\"user_setting_content\">\r\n                            <a class=\"dropdown-item\" routerLink=\"/JobSeeker/Resume/{{userId}}\"><span\r\n                                    class=\"flaticon-resume\"></span> {{'HomeResume' | translate }}</a>\r\n                            <a class=\"dropdown-item\" routerLink=\"/JobSeeker/History\"><span\r\n                                    class=\"flaticon-paper-plane\"></span> {{'HomeJobHistory' | translate }}</a>\r\n                            <a class=\"dropdown-item\" routerLink=\"/JobSeeker/ShortList\"><span\r\n                                    class=\"flaticon-favorites\"></span>{{'HomeFavouriteJobs' | translate }}</a>\r\n                            <a class=\"dropdown-item\" routerLink=\"/account/ChangePassword\"><span\r\n                                    class=\"flaticon-locked\"></span>{{'HomeChangePassword' | translate }}</a>\r\n                            <a class=\"dropdown-item\" (click)=\"logout()\"><span class=\"flaticon-logout\"></span>\r\n                                {{'HomeLogout' | translate }}</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        </ul>\r\n        <div class=\"header stylehome1 home3\">\r\n            <img class=\"nav_logo_img img-fluid float-left mt25\" src=\"/assets/images/header-logo3.png\"\r\n                alt=\"header-logo3.png\">\r\n            <a class=\"bg-Orange\" href=\"#menu\"><span></span></a>\r\n        </div>\r\n    </div><!-- /.mobile-menu -->\r\n    <nav id=\"menu\" class=\"stylehome1\">\r\n        <ul>\r\n            <!-- <li class=\"\"></li>\r\n            <li>\r\n                <a href=\"\" routerLink=\"/\"><span class=\"title\">{{'HomeHome' | translate }}</span></a></li> -->\r\n            <li class=\"ResponseMenuItem\" *ngIf=\"!isLoggedIn\">\r\n                <a href=\"\" routerLink=\"/Job/Search\"><span class=\"title\">{{'HomeJobSearch' | translate }}</span></a>\r\n            </li>\r\n            <li class=\"ResponseMenuItem\" *ngIf=\"isLoggedIn  && isEmployer\">\r\n                <a href=\"\" routerLink=\"/Employer/ManageMyJobs\"><span class=\"title\">{{'GenericJobEmployer' |\r\n                        translate }}</span></a>\r\n            </li>\r\n            <li class=\"ResponseMenuItem\" *ngIf=\"isLoggedIn  && isEmployer\">\r\n                <a href=\"\" routerLink=\"/JobSeeker/Search\"><span class=\"title\">{{'HomeJobSeekerSearch' | translate\r\n                        }}</span></a>\r\n            </li>\r\n            <li class=\"ResponseMenuItem\" *ngIf=\"isLoggedIn  && isJobSeeker\">\r\n                <a href=\"\" routerLink=\"/JobSeeker/History\"><span class=\"title\">{{'GenericJobSeeker' | translate\r\n                        }}</span></a>\r\n            </li>\r\n            <li class=\"ResponseMenuItem\" *ngIf=\"isLoggedIn  && isJobSeeker\">\r\n                <a href=\"\" routerLink=\"/Employer/Search\"><span class=\"title\">{{'HomeJobSearch' | translate\r\n                        }}</span></a>\r\n            </li>\r\n            <li class=\"ResponseMenuItem\" *ngIf=\"isLoggedIn  && isAdmin\">\r\n                <a href=\"\" routerLink=\"/DataManagement/Languages\"><span class=\"title\">{{'HomeDataManagement' |\r\n                        translate }}</span></a>\r\n            </li>\r\n            <li class=\"ResponseMenuItem\" *ngIf=\"isLoggedIn  && isAdmin\">\r\n                <a href=\"\" routerLink=\"/account/account\"><span class=\"title\">{{'HomeAccountsManagement' | translate\r\n                        }}</span></a>\r\n            </li>\r\n            <li class=\"ResponseMenuItem\" *ngIf=\"isLoggedIn  && isAdmin\">\r\n                <a href=\"\" routerLink=\"/Admin/CompanyList\"><span class=\"title\">{{'GenericCompanies' | translate\r\n                        }}</span></a>\r\n            </li>\r\n            <li class=\"ResponseMenuItem\" *ngIf=\"isLoggedIn  && isAdmin\">\r\n                <a href=\"\" routerLink=\"/Admin/JobsList\"><span class=\"title\">{{'EmployerMyJobsJobs' | translate\r\n                        }}</span></a>\r\n            </li>\r\n            <li class=\"ResponseMenuItem\" *ngIf=\"isLoggedIn  && (isAdmin || isJobSeeker)\">\r\n                <a href=\"\" routerLink=\"/JobFair/List\"><span class=\"title\">{{'HomeJobFairs' | translate }}</span></a>\r\n            </li>\r\n            <li class=\"ResponseMenuItem\" *ngIf=\"isLoggedIn  && isAdmin\">\r\n                <a href=\"\" routerLink=\"/Config/JobFairCreate\"><span class=\"title\">{{'HomeFormConfiguration' |\r\n                        translate }}</span></a>\r\n            </li>\r\n\r\n            <li class=\"ResponseMenuItem\">\r\n                <a *ngIf=\"isLoggedIn  && isAdmin\"><span class=\"title menuArrow\">{{\"GenericReport\" |\r\n                        translate}} </span></a>\r\n            </li>\r\n            <!-- //....//// -->\r\n            <li class=\"ResponseMenuItem\" *ngIf=\"isLoggedIn  && isAdmin\">\r\n                <a href=\"\" routerLink=\"/Admin/ReportStats\"><span class=\"title\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {{'HomeStatistics' |\r\n                        translate }}</span></a>\r\n            </li>\r\n            <li class=\"ResponseMenuItem\" *ngIf=\"isLoggedIn  && isAdmin\">\r\n                <a href=\"\" routerLink=\"/Admin/ReportStatsJobs\"><span class=\"title\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {{'HomeStatisticsJobs' |\r\n                        translate }}</span></a>\r\n            </li>\r\n            <li class=\"ResponseMenuItem\" *ngIf=\"isLoggedIn  && isAdmin\">\r\n                <a href=\"\" routerLink=\"/Admin/ReportStatsJobSeekerPerJob\"><span\r\n                        class=\"title\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {{'HomeStatisticsJobSeekerPerJob' | translate }}</span></a>\r\n            </li>\r\n\r\n            <li class=\"ResponseMenuItem\">\r\n                <a href=\"#\" *ngIf=\"isLoggedIn  && isAdmin\"><span class=\"title menuArrow\">{{\"GenericApprove\" |\r\n                        translate}} <span class=\"NotificationBadge\">{{CountApproval}}</span></span></a>\r\n             </li>\r\n            <li class=\"ResponseMenuItem\" *ngIf=\"isLoggedIn  && isAdmin\">\r\n                <a href=\"\" routerLink=\"/Admin/JobApproval\"><span class=\"title\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {{'HomeJobApproval' |\r\n                        translate }}</span></a>\r\n            </li>\r\n            <li class=\"ResponseMenuItem\" *ngIf=\"isLoggedIn  && isAdmin\">\r\n                <a href=\"\" routerLink=\"/Admin/CompanyApproval\"><span class=\"title\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {{'HomeCompanyApproval' |\r\n                        translate }}</span></a>\r\n            </li>\r\n            <!-- <li class=\"ResponseMenuItem\">\r\n                    <a href=\"#\" *ngIf=\"isLoggedIn  && isAdmin\"><span class=\"title menuArrow\">{{\"GenericApprove\" |\r\n                            translate}} <span class=\"NotificationBadge\">{{CountApproval}}</span></span></a>\r\n\r\n                    <ul>\r\n                        <li class=\"ResponseMenuItem\" *ngIf=\"isLoggedIn  && isAdmin\">\r\n                            <a href=\"\" routerLink=\"/Admin/JobApproval\"><span class=\"title\">{{'HomeJobApproval' |\r\n                                    translate }}</span></a>\r\n                        </li>\r\n                        <li class=\"ResponseMenuItem\" *ngIf=\"isLoggedIn  && isAdmin\">\r\n                            <a href=\"\" routerLink=\"/Admin/CompanyApproval\"><span class=\"title\">{{'HomeCompanyApproval' |\r\n                                    translate }}</span></a>\r\n                        </li>\r\n                    </ul>\r\n                </li> -->\r\n\r\n\r\n            <!-- </li>\r\n            <li>\r\n                <a *ngIf=\"isEmployer\" href=\"\" routerLink=\"/JobSeeker/Search\"><span class=\"title\">{{'HomeJobSeekerSearch'\r\n                        | translate }}</span></a>\r\n            </li>\r\n            <li class=\"ResponseMenuItem\">\r\n\r\n                <a *ngIf=\"isJobSeeker\" href=\"\" routerLink=\"/JobSeeker/History\"><span class=\"title\">{{'HomeJobHistory' |\r\n                        translate }}</span></a>\r\n            </li>\r\n            <li class=\"ResponseMenuItem\">\r\n                <a *ngIf=\"isJobSeeker\" href=\"\" routerLink=\"/Employer/Search\"><span class=\"title\">{{'HomeJobSearch' |\r\n                        translate }}</span></a>\r\n            </li>\r\n            <li class=\"ResponseMenuItem\">\r\n\r\n                <a *ngIf=\"isAdmin\" href=\"\" routerLink=\"/DataManagement/Languages\"><span\r\n                        class=\"title\">{{'HomeDataManagement' | translate }}</span></a>\r\n            </li>\r\n            <li class=\"ResponseMenuItem\">\r\n\r\n                <a *ngIf=\"isAdmin\" href=\"\" routerLink=\"/account/account\"><span class=\"title\">{{'HomeAccountsManagement'\r\n                        | translate }}</span></a>\r\n            </li>\r\n            <li class=\"ResponseMenuItem\">\r\n                <a *ngIf=\"isAdmin\" href=\"\" routerLink=\"/admin/JobApproval\"><span class=\"title\">{{'HomeJobApproval' |\r\n                        translate }}</span></a>\r\n            </li>\r\n            <li class=\"ResponseMenuItem\">\r\n                <a *ngIf=\"isAdmin\" href=\"\" routerLink=\"/Admin/CompanyList\"><span\r\n                        class=\"title\">{{'EmployerPostJobCompany' | translate }}</span></a>\r\n            </li>\r\n            <li class=\"ResponseMenuItem\">\r\n                <a *ngIf=\"isAdmin\" href=\"\" routerLink=\"/Admin/CompanyApproval\"><span\r\n                        class=\"title\">{{'HomeCompanyApproval' | translate }}</span></a>\r\n            </li>\r\n            <li class=\"ResponseMenuItem\">\r\n                <a *ngIf=\"isAdmin || isJobSeeker\" href=\"\" routerLink=\"/JobFair/List\"><span\r\n                        class=\"title\">{{'HomeJobFairs' | translate }}</span></a>\r\n            </li>\r\n            <li>\r\n\r\n                <a *ngIf=\"isEmployer\" class=\"btn btn-md btn-transparent bg-Orange\" routerLink=\"Employer/PostJob\"><i\r\n                        class=\"fas fa-user-lock\"></i>{{'HomePostJob' | translate }}</a>\r\n            </li>\r\n            <li>\r\n                <a *ngIf=\"isJobSeeker\" class=\"btn btn-md btn-transparent bg-Orange\"\r\n                    routerLink=\"JobSeeker/Resume/{{userId}}\"><i class=\"fas fa-user-lock\"></i>{{'HomeMyResume' |\r\n                    translate }}</a>\r\n            </li><li class=\"ResponseMenuItem\"> -->\r\n            <!-- <a *ngIf=\"isEmployer\" href=\"\" routerLink=\"/Employer/ManageMyJobs\"><span\r\n                        class=\"title\">{{'GenericJobEmployer' | translate }}</span></a> -->\r\n\r\n\r\n\r\n            <li *ngIf=\"!isLoggedIn\"><a style=\"padding: 10px; \" class=\"btn btn-md btn-transparent bg-Orange\" (click)=\"login()\"><i\r\n                        class=\"fas fa-user-lock\"></i>{{'GenericLogin' | translate }}</a>\r\n            </li>\r\n            <div class=\"langBox float-right \">\r\n                <ul>\r\n                    <li class=\"list-inline-item\" id=\"drpLang\">\r\n                        <select [(ngModel)]=\"selectLang\" class=\"selectpicker show-tick\" (change)=\"switchLang()\">\r\n                            <option selected value=\"en\">English</option>\r\n                            <option value=\"ar\">عربى </option>\r\n                        </select>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </ul>\r\n    </nav>\r\n\r\n</div>\r\n\r\n<div  *ngIf=\"isLoggedInMYadd\">\r\n    <div *ngIf=\"!isLoggedIn && !isCurrentPageHome\" class=\"ScreenLock bubbleContainer\">\r\n        <div class=\"messageBubble ssfLocationPopup\">\r\n            <div class=\"messageContainer\">\r\n                <p>{{'SessionExpored' | translate }}</p>\r\n                <p>{{'LoginFirst' | translate }}</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<div>\r\n    <router-outlet>\r\n\r\n    </router-outlet>\r\n</div>\r\n\r\n<section class=\"footer_bottom_area home5 p0\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"pb10 pt10 w-100\">\r\n                <div class=\"float-left mt10\">\r\n                    <ul>\r\n                        <li class=\"list-inline-item\"><img class=\"MCTLogo\"\r\n                                src=\"/assets/images/PartnerLogos/Microsoft.png\"></li>\r\n                        <li class=\"list-inline-item\"><img class=\"MCTLogo\" src=\"/assets/images/PartnerLogos/cef.png\">\r\n                        </li>\r\n                        <li class=\"list-inline-item\"><img class=\"MCTLogo\" src=\"/assets/images/PartnerLogos/MoYouth.png\">\r\n                        </li>\r\n                        <li class=\"list-inline-item\" *ngIf=\"IsAzureLoginEnabled\">\r\n                            <a href=\"{{MCTWebsiteURL}}\" target=\"_blank\"><img class=\"MCTLogo\"\r\n                                    src=\"/assets/images/MCTLogo.png\"></a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div class=\"footer_menu float-right mt-2 mr-2\">\r\n                    <ul>\r\n                        <li class=\"list-inline-item\"><a href=\"#\" target=\"_blank\"><i class=\"fa fa-facebook\"></i></a></li>\r\n                        <!-- <li class=\"list-inline-item\"><a href=\"#\" target=\"_blank\"><i class=\"fa fa-twitter\"></i></a></li>\r\n                        <li class=\"list-inline-item\"><a href=\"#\" target=\"_blank\"><i class=\"fa fa-instagram\"></i></a></li>\r\n                        <li class=\"list-inline-item\"><a href=\"#\" target=\"_blank\"><i class=\"fa fa-linkedin\"></i></a></li>\r\n                        <li class=\"list-inline-item\"><a href=\"#\" target=\"_blank\"><i class=\"fa fa-youtube\"></i></a></li> -->\r\n                        <li class=\"list-inline-item\"></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-4 pb10 pt10\">\r\n                <div class=\"copyright-widget tac-smd mt20\">\r\n                    <p>©{{currentYear}} Portal. {{'HomeFooterRigths' | translate }}</p>\r\n                    <p>{{'HomeFooterDeveloped' | translate }}<a class=\"lnk-color-02\" href=\"http://www.nrg-it.com/\"\r\n                            target=\"_blank\">\r\n                            nrg-it.com</a></p>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-lg-2 pb10 pt10\">\r\n                <div class=\"footer_menu float-right mt10\">\r\n                    <ul>\r\n\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-lg-6 pb10 pt10\">\r\n                <div class=\"footer_menu float-right mt10\">\r\n                    <ul>\r\n                        <li class=\"list-inline-item\"><a target=\"_blank\" routerLink=\"/Terms\">{{'HomeTerm' | translate\r\n                                }}</a></li>\r\n                        <li class=\"list-inline-item\"><a target=\"_blank\" routerLink=\"/Policy\">{{'HomePolicy' | translate\r\n                                }}</a></li>\r\n                        <!-- <li class=\"list-inline-item\" id=\"drpLang\">\r\n                            <select [(ngModel)]=\"selectLang\" class=\"selectpicker show-tick\" (change)=\"switchLang()\">\r\n                                <option selected value=\"en\">English</option>\r\n                                <option value=\"ar\">عربى </option>\r\n                            </select>\r\n                        </li> -->\r\n                    </ul>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from './core/auth-service.component';\r\nimport { ServiceShowMessage } from './services/show-message.service';\r\nimport { EnumShowMessage } from './interface/Model/ModelShowMessage.class';\r\nimport { ServiceLoginUser } from './services/loginuser.service';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { ActivatedRoute, Router, NavigationEnd } from '@angular/router';\r\nimport { filter, map, mergeMap } from 'rxjs/operators';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Constants } from './constants';\r\nimport { ServiceJob } from './services/job.service';\r\nimport { ServiceCompany } from './services/service-company.service';\r\nimport { interval } from 'rxjs';\r\nimport { MiscService } from './services/misc.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: []\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n  msgClass: string = '';\r\n  msgText: string = '';\r\n\r\n  userName: string;\r\n  userId: string;\r\n  userRole: string;\r\n  isLoggedIn = false;\r\n  isAdmin: boolean = false;\r\n  isJobSeeker: boolean = false;\r\n  isEmployer: boolean = false;\r\n  isCurrentPageHome: boolean = true;\r\n  IsRoleUndefined: boolean = false;\r\n  currentYear = (new Date()).getFullYear();\r\n  selectLang: string;\r\n  IsRTL: boolean;\r\n  IsAzureLoginEnabled: boolean;\r\n  MCTWebsiteURL: string;\r\n  IsAppear:boolean = true;\r\n  CountApproval:number = 0;\r\n  MCTURL:string;\r\n  isLoggedInMYadd:boolean=false\r\n  constructor(private _authService: AuthService,\r\n    private BLServiceMisc:MiscService,\r\n    private BLServiceShowMessage: ServiceShowMessage,\r\n    private BLServiceLoginUser: ServiceLoginUser,\r\n    private BLServiceJob:ServiceJob,\r\n    private BLServiceCompany:ServiceCompany,\r\n    private _snackBar: MatSnackBar,\r\n    public translate: TranslateService,\r\n    private router: Router, private route: ActivatedRoute) {\r\n\r\n    this._authService.CheckLogin();\r\n\r\n    translate.addLangs(['en', 'ar']);\r\n    this.selectLang = localStorage.getItem('lang');\r\n    this.selectLang = this.selectLang ? this.selectLang : \"en\";\r\n    translate.setDefaultLang(this.selectLang );\r\n\r\n    this.IsRTL = this.selectLang == 'ar';\r\n\r\n    this.IsAzureLoginEnabled = Constants.IsAzureLoginEnabled;\r\n    this.MCTWebsiteURL = Constants.MCTWebsiteURL;\r\n\r\n    this.GetApprovalCounts();\r\n    interval(60000).subscribe(x => { //60 Seconds. 1 Min\r\n      this.CountApproval = 0;\r\n      this.GetApprovalCounts();\r\n    });\r\n\r\n    this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n      map(() => this.route),\r\n      map(route => {\r\n        while (route.firstChild) route = route.firstChild\r\n        return route\r\n      }),\r\n      filter(route => route.outlet === 'primary'),\r\n      mergeMap(route => route.data)\r\n    ).subscribe(data => {\r\n      this.isCurrentPageHome = data.PageName === 'home';\r\n    })\r\n\r\n    this.BLServiceShowMessage.msgChanged.subscribe(msg => {\r\n      this.msgText = msg.message;\r\n      this.msgClass = msg.type == EnumShowMessage.Success ? 'snackbar-success' : 'snackbar-error';\r\n      this._snackBar.open(this.msgText, null, {\r\n        duration: 5000,\r\n        panelClass: [this.msgClass]\r\n      });\r\n    });\r\n\r\n    this.BLServiceLoginUser.UserIsLoggedInChanged.subscribe(obj => {\r\n      this.isLoggedIn = obj;\r\n    });\r\n    this.BLServiceLoginUser.UserIdChanged.subscribe(obj => {\r\n      this.userId = obj;\r\n    });\r\n    this.BLServiceLoginUser.UserRoleChanged.subscribe(obj => {\r\n      this.userRole = obj;\r\n      this.IsRoleUndefined = this.userRole?.toLowerCase() == \"undefined\";\r\n      this.ForceUserSelectRole();\r\n    });\r\n    this.BLServiceLoginUser.UserNameChanged.subscribe(obj => {\r\n      this.userName = obj;\r\n    });\r\n    this.BLServiceLoginUser.UserIsAdminChanged.subscribe(obj => {\r\n      this.isAdmin = obj;\r\n      if(this.CountApproval == 0 && this.isAdmin)\r\n        this.GetApprovalCounts();\r\n    });\r\n    this.BLServiceLoginUser.UserIsEmployerChanged.subscribe(obj => {\r\n      this.isEmployer = obj;\r\n    });\r\n    this.BLServiceLoginUser.UserIsJobSeekerChanged.subscribe(obj => {\r\n      this.isJobSeeker = obj;\r\n    });\r\n    this.BLServiceMisc.MCTURL().subscribe({\r\n      next: lst => {\r\n        this.MCTURL = lst;\r\n      }\r\n    });\r\n  }\r\n\r\n  async ngOnInit() {\r\n    var GetIsLoggedInFunction = () => {\r\n      var self = this;\r\n        return new Promise((resolve, reject) => {\r\n            // self.BLServiceLoginUser.UserIsLoggedInChanged.subscribe(obj => {\r\n            //   resolve(obj);\r\n            // });  \r\n            setTimeout(() => \r\n            {\r\n                this.IsAppear = false;\r\n            },\r\n            2000);\r\n          //resolve(self.BLServiceLoginUser.isLoggedIn);  \r\n        });\r\n     \r\n    }\r\n    var Islogged = await GetIsLoggedInFunction();\r\n    //  this.isLoggedIn = <any>Islogged;\r\n    \r\n    this._authService.isLoggedIn().then(loggedIn => {\r\n      this.isLoggedIn = loggedIn;\r\n    });\r\n    this.IsRoleUndefined = this.userRole?.toLowerCase() == \"undefined\";\r\n    this.ForceUserSelectRole();\r\n\r\n   \r\n  }\r\n\r\n  ngAfterContentInit()\t\r\n  {\r\n    setTimeout(() => {\r\n      this.isLoggedInMYadd = true;\r\n    }, 7000);\r\n  }\r\n  login() {\r\n    this._authService.login();\r\n  }\r\n\r\n  logout() {\r\n    this._authService.logout();\r\n  }\r\n\r\n  ForceUserSelectRole() {\r\n    this.IsRoleUndefined = this.userRole?.toLowerCase() == \"undefined\";\r\n    if (this.IsRoleUndefined && !this.isCurrentPageHome)\r\n      this.router.navigate(['/']);\r\n  }\r\n  //  isAdmin() {\r\n  //    //return this.isLoggedIn && this._authService.authContext && this._authService.authContext.isAdmin;\r\n  //    this.isAdmin\r\n  //  }\r\n  switchLang() {\r\n\r\n    this.translate.use(this.selectLang);\r\n\r\n    localStorage.setItem('lang', this.selectLang);\r\n\r\n    window.location.reload();\r\n  }\r\n  GetApprovalCounts(){\r\n    if(!this.isAdmin)\r\n      return;\r\n\r\n    this.BLServiceJob.GetJobWaitingApprovalCount().subscribe({\r\n      next: count => {\r\n       this.CountApproval += count; \r\n      }\r\n    });\r\n    this.BLServiceCompany.GetCompanyWaitingApprovalCount().subscribe({\r\n      next: count => {\r\n       this.CountApproval += count; \r\n      }\r\n    });\r\n  }\r\n}\r\n","import { HttpClientModule } from '@angular/common/http';\r\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {MatSnackBarModule, MatMenuModule, MatToolbarModule, MatButtonModule, MatTableModule, MatInputModule, MatSelectModule, MatFormFieldModule, MatIconModule, MatRadioModule, MatCheckboxModule } from '@angular/material';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n// import { AgmCoreModule } from '@agm/core';\r\nimport { AppComponent } from './app.component';\r\nimport { CoreModule } from './core/core.module';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { SigninRedirectCallbackComponent } from './home/signin-redirect-callback.component';\r\nimport { SignoutRedirectCallbackComponent } from './home/signout-redirect-callback.component';\r\nimport { UnauthorizedComponent } from './home/unauthorized.component';\r\nimport { DataManagementModule } from './DataManagement/data-management.module';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AccountModule } from './Account/account.module';\r\nimport { EmployerModule } from './Employer/employer.module';\r\nimport { RegisterSuccessComponent } from './home/register-success/register-success.component';\r\nimport { JobseekerModule } from './JobSeeker/jobseeker.module';\r\nimport { TestModule } from './ztest/test/test.module';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AdminModule } from './Admin/admin.module';\r\nimport { JobFairModule } from './JobFair/job-fair.module';\r\nimport { ConfigModule } from './Config/config.module';\r\nimport { FilterPipe } from '../app/core/pipe/filter.pipe';\r\nimport { TermComponent } from './home/term/term.component';\r\nimport { PolicyComponent } from './home/policy/policy.component';\r\nimport { TranslatelistComponent } from './Translate/translatelist/translatelist.component';\r\nimport { SharedModule } from './common/sharedmodule.module';\r\nimport { StatsComponent } from './Reports/stats/stats.component';\r\nimport { ReportModule } from './Reports/report.module';\r\n// import { JwPaginationModule } from 'jw-angular-pagination';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    SigninRedirectCallbackComponent,\r\n    SignoutRedirectCallbackComponent,\r\n    UnauthorizedComponent,\r\n    RegisterSuccessComponent,\r\n    TermComponent,\r\n    PolicyComponent,\r\n    TranslatelistComponent,\r\n    StatsComponent,\r\n    // FilterPipe\r\n  ],\r\n  imports: [\r\n    SharedModule,\r\n    BrowserModule,\r\n    CommonModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    MatSnackBarModule,\r\n    MatMenuModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatTableModule,\r\n    MatInputModule,\r\n    MatAutocompleteModule,\r\n    MatSelectModule,\r\n    MatFormFieldModule,\r\n    MatIconModule,\r\n    MatRadioModule,\r\n    MatCheckboxModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    CoreModule,\r\n    AppRoutingModule,\r\n    NgbModule,\r\n    DataManagementModule,\r\n    AccountModule,\r\n    EmployerModule,\r\n    JobseekerModule,\r\n    TestModule,\r\n    AdminModule,\r\n    Ng2SearchPipeModule,\r\n    JobFairModule,\r\n    ConfigModule,\r\n    ReportModule,\r\n    // JwPaginationModule\r\n    // FilterPipe\r\n    // AgmCoreModule.forRoot({\r\n    //   apiKey: 'YOUR-API-KEY-HERE',\r\n    //   libraries: ['places']\r\n    // })\r\n  ],\r\n  // exports: [\r\n  //   FilterPipe\r\n  // ],\r\n  providers: [\r\n    CookieService\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  entryComponents:[\r\n    //AddEditMilestoneDialogComponent\r\n    HomeComponent\r\n  ],\r\n  schemas: [ CUSTOM_ELEMENTS_SCHEMA  ]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit, ViewChild, AfterViewChecked, Input } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormArray, MaxLengthValidator } from '@angular/forms';\r\nimport { DynamicFormComponent } from '../../components/dynamic-form/dynamic-form.component';\r\nimport { FieldConfig, Validator } from '../../field.interface';\r\nimport { ServiceConfigForm } from 'src/app/services/config-form.service';\r\nimport { ModelConfigForm, ModelFieldConfig } from 'src/app/interface/Model/ModelConfigForm.class';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { ConfigForm } from 'src/app/Enum/ConfigForm.enum';\r\nimport { ConfirmationDialogService } from 'src/app/common/confirmation-dialog/confirmation-dialog.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-create-form',\r\n  templateUrl: './create-form.component.html',\r\n  styleUrls: ['./create-form.component.css']\r\n})\r\nexport class CreateFormComponent extends baseComponent implements OnInit {\r\n\r\n  @ViewChild(DynamicFormComponent) form: DynamicFormComponent;\r\n  regConfig: FieldConfig[] = [\r\n    {\r\n      type: \"button\",\r\n      label: \"Save\",\r\n      order: 100\r\n    }\r\n  ];\r\n\r\n  @Input() pageTitle: string = 'Config Form Fields';\r\n  @Input() formType: ConfigForm = 0;\r\n\r\n  adminForm: FormGroup;\r\n  get FormInputs(): FormArray {\r\n    return <FormArray>this.adminForm.get('FormInputs');\r\n  }\r\n  get options(): FormArray {\r\n    return <FormArray>this.adminForm.get('options');\r\n  }\r\n\r\n  constructor(private fb: FormBuilder,\r\n    protected BLService: ServiceConfigForm,\r\n    private confirmationDialogService: ConfirmationDialogService,\r\n    BLServiceShowMessage: ServiceShowMessage,\r\n    BLServiceLoginUser: ServiceLoginUser,BLTranslate: TranslateService,) {\r\n    super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);;\r\n  }\r\n  InitDynamicForm() {\r\n    this.BLService.GetByType(this.formType).subscribe({\r\n      next: lst => {\r\n        this.regConfig = <FieldConfig[]>[];\r\n        if (lst.length > 0) {\r\n          this.FormInputs.removeAt(0);\r\n        }\r\n\r\n        lst.forEach(item => {\r\n\r\n          var obj = new FieldConfig();\r\n\r\n          obj.inputType = item.inputType;\r\n          obj.label = item.label;\r\n          obj.name = item.name;\r\n          obj.options = item.options;\r\n          obj.order = item.order;\r\n          obj.type = item.type;\r\n          obj.validations.push(new Validator(item.label));\r\n\r\n          this.regConfig.push(obj);\r\n\r\n          var ctl = this.fb.group({\r\n            Order: [item.order, [Validators.required, Validators.max(100), Validators.min(0)]],\r\n            Label: [item.label, [Validators.required, Validators.maxLength(50)]],\r\n            Name: [item.name, [Validators.required, Validators.maxLength(50)]],\r\n            Type: [item.type, [Validators.required]],\r\n            InputType: [item.inputType],\r\n            options: this.fb.array([]),\r\n            IsRequired: true,\r\n          });\r\n          var opt = <FormArray>ctl.controls[\"options\"];\r\n          item.options.forEach(obj => {\r\n            var yy = obj[\"option\"];\r\n            var xx = this.buildoptions(yy);\r\n            opt.push(xx)\r\n          });\r\n          this.FormInputs.push(ctl);\r\n        });\r\n        this.form.fields = this.regConfig;\r\n        this.form.createControl();\r\n\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n\r\n  }\r\n  ngOnInit() {\r\n    this.adminForm = this.fb.group({\r\n      FormInputs: this.fb.array([this.buildFormInputs()])\r\n    });\r\n    this.InitDynamicForm();\r\n  }\r\n\r\n  addFormInputs() {\r\n    this.ConvertToForm();\r\n    this.FormInputs.push(this.buildFormInputs());\r\n  }\r\n  removeFormInputs(idx) {\r\n    this.confirmationDialogService.confirm(\"Are you sure you want to remove this?\")\r\n      .then((confirmed) => {\r\n        if (!confirmed)\r\n          return;\r\n        if (this.FormInputs.controls.length > 1) {\r\n          this.FormInputs.removeAt(idx);\r\n        }\r\n        this.ConvertToForm();\r\n      });\r\n  }\r\n\r\n  buildFormInputs() {\r\n    return this.fb.group({\r\n      Order: ['', [Validators.required, Validators.max(100), Validators.min(0)]],\r\n      Label: ['', [Validators.required, Validators.maxLength(50)]],\r\n      Name: ['', [Validators.required, Validators.maxLength(50)]],\r\n      Type: ['', [Validators.required]],\r\n      InputType: ['text'],\r\n      options: this.fb.array([]),\r\n      IsRequired: true,\r\n    });\r\n  }\r\n  onTypeChange(obj) {\r\n    if (obj.get('Type').value == 'select' || obj.get('Type').value == 'selectmulti') {\r\n      if (obj.get('options').controls.length == 0) {\r\n        obj.get('options').push(this.buildoptions());\r\n      }\r\n    }\r\n  }\r\n  buildoptions(value: string = '') {\r\n    return this.fb.group({\r\n      option: [value, [Validators.required]]\r\n    });\r\n  }\r\n  addOption(idx: number) {\r\n    //this.options.push(this.buildoptions());\r\n    const control = <FormArray>this.adminForm.get(['FormInputs', idx, 'options']);\r\n    control.push(this.buildoptions());\r\n  }\r\n  getoptions(idx: number) {\r\n    const opt = <FormArray>this.adminForm.get(['FormInputs', idx, 'options']);\r\n    return opt?.controls;\r\n  }\r\n  ConvertToForm() {\r\n\r\n    this.regConfig = <FieldConfig[]>[];\r\n    // [{\r\n    //   type: \"button\",\r\n    //   label: \"Save\",\r\n    //   order: 100\r\n    // }];\r\n    var frm = <FormArray>this.adminForm.get(['FormInputs']);\r\n\r\n    frm.controls.forEach(element => {\r\n      var ctl = new FieldConfig();\r\n\r\n      ctl.order = element.get('Order').value;\r\n      ctl.name = element.get('Name').value;\r\n      ctl.label = element.get('Label').value;\r\n      ctl.type = element.get('Type').value;\r\n      ctl.inputType = element.get('InputType').value;\r\n\r\n      if (ctl.type == 'select' || ctl.type == 'selectmulti')\r\n        ctl.options = element.get('options').value;\r\n\r\n\r\n      ctl.validations.push(new Validator(ctl.label));\r\n\r\n      this.regConfig.push(ctl);\r\n    });\r\n\r\n    if (this.regConfig.length > 1) {\r\n      this.regConfig = this.regConfig.sort((obj1, obj2) => {\r\n        if (obj1.order > obj2.order) {\r\n          return 1;\r\n        }\r\n\r\n        if (obj1.order < obj2.order) {\r\n          return -1;\r\n        }\r\n\r\n        return 0;\r\n      });\r\n    }\r\n    this.form.fields = this.regConfig;\r\n    this.form.createControl();\r\n  }\r\n  Save(adminForm) {\r\n    this.ConvertToForm();\r\n    if (!adminForm.valid)\r\n      return;\r\n\r\n    var model = new ModelConfigForm();\r\n    model.FormType = this.formType;\r\n    model.Form = <ModelFieldConfig[]>[];\r\n    this.regConfig.forEach(item => {\r\n\r\n      var obj = new ModelFieldConfig();\r\n\r\n      obj.inputType = item.inputType;\r\n      obj.label = item.label;\r\n      obj.name = item.name;\r\n      obj.options = item.options;\r\n      obj.order = item.order;\r\n      obj.type = item.type;\r\n      obj.validations = true;\r\n\r\n      model.Form.push(obj);\r\n    });\r\n    this.BLService.Update(model).subscribe({\r\n      next: response => {\r\n        this.message.Success(\"Saved successfully.\");\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n}\r\n","<section class=\"mt-50 shadow-sm p-  bg-white rounded\">\r\n  <div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12 col-lg-12 mb25\">\r\n        <h4 class=\"fz20\">\r\n          {{'ConfigFormFields' | translate }}\r\n        </h4>\r\n      </div>\r\n      <br>\r\n      <div class=\"col-lg-6 col-xl-6\">\r\n        <form novalidate [formGroup]=\"adminForm\">\r\n          <div class=\"col-xl-12 mb5\">\r\n            <button (click)=\"addFormInputs()\" class=\"btn btn-primary \" [disabled]=\"!adminForm.valid\">{{'ConfigAddFormInput' | translate }}</button>\r\n            <button (click)=\"ConvertToForm()\" class=\"btn btn-success pull-right\"\r\n              [disabled]=\"!adminForm.valid\">{{'ConfigPreview' | translate }}</button>\r\n          </div>\r\n          <div formArrayName=\"FormInputs\" *ngFor=\"let obj of FormInputs?.controls; let k = index;\" class=\"col-xl-12\">\r\n            <div [formGroupName]=\"k\" class=\"formAdminGroup\">\r\n              <mat-accordion>\r\n                <mat-expansion-panel [expanded]=\"true\">\r\n                  <mat-expansion-panel-header>\r\n                    <mat-panel-title>\r\n                      {{'ConfigOrder' | translate }}: {{obj.get('Order')?.value}} - {{'ConfigLabel' | translate }}: {{obj.get('Label')?.value}}\r\n                    </mat-panel-title>\r\n                    <mat-panel-description>\r\n                      {{'GenericName' | translate }}: {{obj.get('Name')?.value}}\r\n                    </mat-panel-description>\r\n                  </mat-expansion-panel-header>\r\n\r\n                  <div>\r\n                    <mat-form-field class=\"example-full-width\">\r\n                      <mat-label>{{'ConfigOrder' | translate }}</mat-label>\r\n                      <input matInput type=\"number\" pattern=\"^[1-9][0-9]?$|^100$\" formControlName=\"Order\" placeholder=\"{{'ConfigEnterOrder' | translate }}\" value=\"\">\r\n                      <mat-error *ngIf=\"obj.get('Order')?.errors?.required\">{{'ConfigEnterOrder' | translate }}</mat-error>\r\n                      <mat-error *ngIf=\"obj.get('Order')?.errors?.max || obj.get('Order')?.errors?.min\">{{'ConfigOrderError' | translate }}</mat-error>\r\n                        <mat-error *ngIf=\"obj.get('Order')?.errors?.pattern\">{{'ConfigOrderError1' | translate }}</mat-error>\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <br>\r\n                  <div>\r\n                    <mat-form-field class=\"example-full-width\">\r\n                      <mat-label>{{'ConfigLabel' | translate }}</mat-label>\r\n                      <input matInput formControlName=\"Label\" placeholder=\"{{'ConfigEnterLabel' | translate }}\" value=\"\">\r\n                      <mat-error *ngIf=\"obj.get('Label')?.errors?.required\">{{'ConfigEnterLabel' | translate }}</mat-error>\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <br>\r\n                  <div>\r\n                    <mat-form-field class=\"example-full-width\">\r\n                      <mat-label>{{'GenericName' | translate }}</mat-label>\r\n                      <input matInput formControlName=\"Name\" placeholder=\"{{'ConfigEnterName' | translate }}\"\r\n                        oninput=\"this.value = this.value.replace(' ','')\">\r\n                      <mat-error *ngIf=\"obj.get('Name')?.errors?.required\">{{'GenericEnterName' | translate }}</mat-error>\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <br>\r\n                  <div>\r\n                    <mat-form-field>\r\n                      <mat-label>{{'ConfigType' | translate }}</mat-label>\r\n                      <mat-select formControlName=\"Type\" (selectionChange)=\"onTypeChange(obj)\">\r\n                        <mat-option [value]=\"'input'\">{{'ConfigTextBox' | translate }}</mat-option>\r\n                        <mat-option [value]=\"'select'\">{{'ConfigDropdown' | translate }}</mat-option>\r\n                         <!--<mat-option [value]=\"'selectmulti'\">Dropdown Multiple Select</mat-option>\r\n                        <mat-option [value]=\"'checkbox'\">Check Box</mat-option>\r\n                        <mat-option [value]=\"'radiobutton'\">Radio button</mat-option>\r\n                        <mat-option [value]=\"'date'\">Date Picker</mat-option> -->\r\n                      </mat-select>\r\n                      <mat-error *ngIf=\"obj.get('Type')?.errors?.required\">{{'ConfigTypeError' | translate }}</mat-error>\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <br>\r\n                  <div *ngIf=\"obj.get('Type').value == 'input'\">\r\n                    <mat-form-field>\r\n                      <mat-label>{{'ConfigInputType' | translate }}</mat-label>\r\n                      <mat-select formControlName=\"InputType\">\r\n                        <mat-option [value]=\"'text'\">{{'ConfigText' | translate }}</mat-option>\r\n                        <mat-option [value]=\"'number'\">{{'ConfigNumbers' | translate }}</mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <div *ngIf=\"obj.get('Type').value == 'select' || obj.get('Type').value == 'selectmulti'\">\r\n                    <div>\r\n                      <button class=\"btn color-bg-01 btn-sm white-text\" (click)=\"addOption(k)\">{{'ConfigAdd' | translate }}</button>\r\n                    </div>\r\n                    <div formArrayName=\"options\" *ngFor=\"let item of getoptions(k); let i = index;\">\r\n                      <div [formGroupName]=\"i\">\r\n                        <mat-form-field class=\"example-full-width\">\r\n                          <mat-label>{{'ConfigOption' | translate }}</mat-label>\r\n                          <input  matInput formControlName=\"option\" placeholder=\"{{'ConfigEnterOption' | translate }}\">\r\n                        \r\n                        </mat-form-field>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <br>\r\n                  <div>\r\n                    <!-- <mat-checkbox formControlName=\"IsRequired\">is Required</mat-checkbox> -->\r\n                    <button *ngIf=\" FormInputs?.controls.length > 1\" (click)=\"removeFormInputs(k)\"\r\n                      class=\"btn btn-danger pull-right\">{{'ConfigRemove' | translate }}</button>\r\n                  </div>\r\n                </mat-expansion-panel>\r\n              </mat-accordion>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-xl-12 mt5\">\r\n            <button (click)=\"addFormInputs()\" class=\"btn btn-primary \" [disabled]=\"!adminForm.valid\">{{'ConfigAddFormInput' | translate }}</button>\r\n            <button (click)=\"ConvertToForm()\" class=\"btn btn-success pull-right\"\r\n              [disabled]=\"!adminForm.valid\">{{'ConfigPreview' | translate }}</button>\r\n          </div>\r\n          <!-- <div>\r\n            {{adminForm.value | json}}\r\n          </div>-->\r\n        </form>\r\n      </div>\r\n      <div class=\"col-lg-6 col-xl-6\">\r\n        <div class=\"mb5\">\r\n          <h4>{{'ConfigPreviewform' | translate }}</h4>\r\n        </div>\r\n        <div class=\"formAdminView\">\r\n          <!-- <dynamic-form [fields]=\"regConfig\"> -->\r\n          <dynamic-form>\r\n          </dynamic-form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n<section class=\" shadow-sm p-3 mb-5 bg-white rounded\">\r\n  <div class=\"container\">\r\n    <div class=\"row align-items-center\">\r\n      <button class=\"btn color-bg-02 btn-sm white-text btnsave\" (click)=\"Save(adminForm)\"\r\n        [disabled]=\"!adminForm.valid\">{{'GenericSave' | translate }} </button>\r\n    </div>\r\n  </div>\r\n</section>","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { FieldConfig } from \"../../field.interface\";\r\n@Component({\r\n  selector: \"app-select\",\r\n  template: `\r\n<mat-form-field class=\"demo-full-width margin-top\" [formGroup]=\"group\">\r\n<mat-select placeholder=\"{{field.label}} *\" [formControlName]=\"field.name\" multiple>\r\n<mat-option *ngFor=\"let item of field.options\" [value]=\"item.option\">{{item.option}}</mat-option>\r\n</mat-select>\r\n<ng-container *ngFor=\"let validation of field.validations;\" ngProjectAs=\"mat-error\">\r\n<mat-error *ngIf=\"group.get(field.name).errors?.required\">Please select {{field.label}}.</mat-error>\r\n</ng-container>\r\n</mat-form-field>\r\n`,\r\n  styles: []\r\n})\r\nexport class SelectMultiComponent implements OnInit {\r\n  field: FieldConfig;\r\n  group: FormGroup;\r\n  constructor() {}\r\n  ngOnInit() {}\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { FieldConfig } from \"../../field.interface\";\r\n@Component({\r\n  selector: \"app-button\",\r\n  template: `\r\n<div class=\"demo-full-width margin-top\" [formGroup]=\"group\">\r\n<button type=\"submit\" [disabled]=\"!group.valid\" mat-raised-button color=\"primary\">{{field.label}}</button>\r\n</div>\r\n`,\r\n  styles: []\r\n})\r\nexport class ButtonComponent implements OnInit {\r\n  field: FieldConfig;\r\n  group: FormGroup;\r\n  constructor() {}\r\n  ngOnInit() {}\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { FieldConfig } from \"../../field.interface\";\r\n@Component({\r\n  selector: \"app-checkbox\",\r\n  template: `\r\n<div class=\"demo-full-width margin-top\" [formGroup]=\"group\" >\r\n<mat-checkbox [formControlName]=\"field.name\">{{field.label}}</mat-checkbox>\r\n</div>\r\n`,\r\n  styles: []\r\n})\r\nexport class CheckboxComponent implements OnInit {\r\n  field: FieldConfig;\r\n  group: FormGroup;\r\n  constructor() {}\r\n  ngOnInit() {}\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { FieldConfig } from \"../../field.interface\";\r\n@Component({\r\n  selector: \"app-date\",\r\n  template: `\r\n<mat-form-field class=\"demo-full-width margin-top\" [formGroup]=\"group\">\r\n<input matInput [matDatepicker]=\"picker\" [formControlName]=\"field.name\" [placeholder]=\"field.label\">\r\n<mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n<mat-datepicker #picker></mat-datepicker>\r\n<mat-hint></mat-hint>\r\n<ng-container *ngFor=\"let validation of field.validations;\" ngProjectAs=\"mat-error\">\r\n<mat-error *ngIf=\"group.get(field.name).errors?.required\">{{validation.message}}</mat-error>\r\n</ng-container>\r\n</mat-form-field>\r\n`,\r\n  styles: []\r\n})\r\nexport class DateComponent implements OnInit {\r\n  field: FieldConfig;\r\n  group: FormGroup;\r\n  constructor() {}\r\n  ngOnInit() {}\r\n}\r\n","import {\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  Directive,\r\n  Input,\r\n  OnInit,\r\n  ViewContainerRef\r\n} from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { FieldConfig } from \"../../field.interface\";\r\nimport { InputComponent } from \"../input/input.component\";\r\nimport { ButtonComponent } from \"../button/button.component\";\r\nimport { SelectComponent } from \"../select/select.component\";\r\nimport { DateComponent } from \"../date/date.component\";\r\nimport { RadiobuttonComponent } from \"../radiobutton/radiobutton.component\";\r\nimport { CheckboxComponent } from \"../checkbox/checkbox.component\";\r\nimport { SelectMultiComponent } from '../SelectMulti/selectmulti.component';\r\n\r\nconst componentMapper = {\r\n  input: InputComponent,\r\n  button: ButtonComponent,\r\n  select: SelectComponent,\r\n  selectmulti: SelectMultiComponent,\r\n  date: DateComponent,\r\n  radiobutton: RadiobuttonComponent,\r\n  checkbox: CheckboxComponent\r\n};\r\n@Directive({\r\n  selector: \"[dynamicField]\"\r\n})\r\nexport class DynamicFieldDirective implements OnInit {\r\n  @Input() field: FieldConfig;\r\n  @Input() group: FormGroup;\r\n  componentRef: any;\r\n  constructor(\r\n    private resolver: ComponentFactoryResolver,\r\n    private container: ViewContainerRef\r\n  ) {}\r\n  ngOnInit() {\r\n    const factory = this.resolver.resolveComponentFactory(\r\n      componentMapper[this.field.type]\r\n    );\r\n    this.componentRef = this.container.createComponent(factory);\r\n    this.componentRef.instance.field = this.field;\r\n    this.componentRef.instance.group = this.group;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  Output,\r\n  ChangeDetectorRef\r\n} from \"@angular/core\";\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  FormControl\r\n} from \"@angular/forms\";\r\nimport { FieldConfig, Validator } from \"../../field.interface\";\r\n\r\n@Component({\r\n  exportAs: \"dynamicForm\",\r\n  selector: \"dynamic-form\",\r\n  template: `\r\n <form class=\"dynamic-form\" [formGroup]=\"form\" (submit)=\"onSubmit($event)\"> \r\n    <ng-container *ngFor=\"let field of fields;\" dynamicField [field]=\"field\" [group]=\"form\" >\r\n    </ng-container>\r\n  </form> \r\n  `,\r\n  styles: []\r\n})\r\nexport class DynamicFormComponent implements OnInit {\r\n  @Input() fields: FieldConfig[] = [];\r\n\r\n  @Output() submit: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  form: FormGroup;\r\n\r\n  get valid() {\r\n    return this.form.valid;\r\n  }\r\n\r\n  get value() {\r\n    return this.form.value;\r\n  }\r\n \r\n  constructor(private fb: FormBuilder,\r\n    private ref: ChangeDetectorRef) { }\r\n\r\n  ngOnInit() {\r\n    this.createControl();\r\n  }\r\n\r\n  onSubmit(event: Event) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    if (this.form.valid) {\r\n      this.submit.emit(this.form.value);\r\n    } else {\r\n      this.validateAllFormFields(this.form);\r\n    }\r\n  }\r\n\r\n  createControl() {\r\n    const group = this.fb.group({});\r\n    this.fields.forEach(field => {\r\n      if (field.type === \"button\") return;\r\n      const control = this.fb.control(\r\n        field.value,\r\n        this.bindValidations(field.validations || [])\r\n      );\r\n      group.addControl(field.name, control);\r\n    });\r\n    this.form = group;\r\n  }\r\n\r\n  bindValidations(validations: any) {\r\n    if (validations.length > 0) {\r\n      const validList = [];\r\n      validations.forEach(valid => {\r\n        validList.push(valid.validator);\r\n      });\r\n      return Validators.compose(validList);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  validateAllFormFields(formGroup: FormGroup) {\r\n    Object.keys(formGroup.controls).forEach(field => {\r\n      const control = formGroup.get(field);\r\n      control.markAsTouched({ onlySelf: true });\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { FieldConfig } from \"../../field.interface\";\r\n\r\n@Component({\r\n  selector: \"app-input\",\r\n  template: `\r\n<mat-form-field class=\"demo-full-width\" [formGroup]=\"group\">\r\n<input matInput [formControlName]=\"field.name\" [id]=\"field.name\" [name]=\"field.name\" placeholder=\"{{field.label}} *\" [type]=\"field.inputType\">\r\n<ng-container *ngFor=\"let validation of field.validations;\" ngProjectAs=\"mat-error\">\r\n<mat-error *ngIf=\"group.get(field.name)?.errors?.required\">{{'ConfigPleaseenter' | translate }}  {{field.label}}.</mat-error>\r\n</ng-container>\r\n</mat-form-field>\r\n`,\r\n  styles: []\r\n})\r\nexport class InputComponent implements OnInit {\r\n  field: FieldConfig;\r\n  group: FormGroup;\r\n  constructor() {}\r\n  ngOnInit() {}\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { FieldConfig } from \"../../field.interface\";\r\n@Component({\r\n  selector: \"app-radiobutton\",\r\n  template: `\r\n<div class=\"demo-full-width margin-top\" [formGroup]=\"group\">\r\n<label class=\"radio-label-padding\">{{field.label}}:</label>\r\n<mat-radio-group [formControlName]=\"field.name\">\r\n<mat-radio-button *ngFor=\"let item of field.options\" [value]=\"item\">{{item}}</mat-radio-button>\r\n</mat-radio-group>\r\n</div>\r\n`,\r\n  styles: []\r\n})\r\nexport class RadiobuttonComponent implements OnInit {\r\n  field: FieldConfig;\r\n  group: FormGroup;\r\n  constructor() {}\r\n  ngOnInit() {}\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { FieldConfig } from \"../../field.interface\";\r\n@Component({\r\n  selector: \"app-select\",\r\n  template: `\r\n<mat-form-field class=\"demo-full-width margin-top\" [formGroup]=\"group\">\r\n<mat-select placeholder=\"{{field.label}} *\" [formControlName]=\"field.name\" >\r\n<mat-option *ngFor=\"let item of field.options\" [value]=\"item.option\">{{item.option}}</mat-option>\r\n</mat-select>\r\n<ng-container *ngFor=\"let validation of field.validations;\" ngProjectAs=\"mat-error\">\r\n<mat-error *ngIf=\"group.get(field.name).errors?.required\">{{'ConfigPleaseselect' | translate }}  {{field.label}}.</mat-error>\r\n</ng-container>\r\n</mat-form-field>\r\n`,\r\n  styles: []\r\n})\r\nexport class SelectComponent implements OnInit {\r\n  field: FieldConfig;\r\n  group: FormGroup;\r\n  constructor() {}\r\n  ngOnInit() {}\r\n}\r\n","import { Validators } from \"@angular/forms\";\r\n\r\nexport class Validator {\r\n  constructor(strName:string)\r\n  {\r\n    this.name = strName;\r\n    this.validator = Validators.required;\r\n    this.message = \"Please enter \" + strName + \".\";\r\n  }\r\n  name: string;\r\n  validator: Validators;\r\n  message: string;\r\n}\r\nexport class FieldConfig {\r\n  constructor(){\r\n    this.validations = <Validator[]>[];\r\n  }\r\n  order?: number;\r\n  label?: string;\r\n  name?: string;\r\n  inputType?: string;\r\n  options?: options[];\r\n  collections?: any;\r\n  type: string;\r\n  value?: any;\r\n  validations?: Validator[];\r\n}\r\nexport class options{\r\n  option: string;\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, Inject } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-confirmation-dialog',\r\n  templateUrl: './confirmation-dialog.component.html',\r\n  styleUrls: ['./confirmation-dialog.component.css']\r\n})\r\nexport class ConfirmationDialogComponent implements OnInit {\r\n\r\n\r\n  @Input() title: string;\r\n  @Input() message: string;\r\n  @Input() btnOkText: string;\r\n  @Input() btnCancelText: string;\r\n  \r\n  //constructor(public dialogRef: MatDialogRef<ConfirmationDialogComponent>) {}\r\n  constructor(private dialogRef: NgbActiveModal) { }\r\n\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public decline() {\r\n    this.dialogRef.close(false);\r\n  }\r\n\r\n   accept() {\r\n     this.dialogRef.close(true);\r\n  }\r\n\r\n  public dismiss() {\r\n    this.dialogRef.dismiss();\r\n  }\r\n}\r\n","<div class=\"\">\r\n    <div class=\"confirmMessage text-center\">\r\n        <p><i class=\"fa fa-info-circle\"></i> </p>\r\n        <h5 class=\"txt-color-red\">{{'ConfigMSGAlert' | translate }}</h5>\r\n        {{ message }}\r\n\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"accept()\">{{'ConfigMSGbtnOkText' | translate }}</button>\r\n        <button type=\"button\" class=\"btn btn-danger\" (click)=\"decline()\">{{'ConfigMSGbtnCancelText' | translate }}</button>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { ConfirmationDialogComponent } from './confirmation-dialog.component';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Component, Inject } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfirmationDialogService {\r\n\r\n\r\n  //constructor(private modalService: MatDialog) { }\r\n  constructor(private modalService: NgbModal) { }\r\n\r\n  public confirm(\r\n    // title: string,\r\n    message: string ,\r\n    btnOkText: string = 'OK',\r\n    btnCancelText: string = 'Cancel',\r\n    dialogSize: 'sm'|'lg' = 'lg'): Promise<boolean> {\r\n    const modalRef = this.modalService.open(ConfirmationDialogComponent);\r\n    //modalRef.componentInstance.title = title;\r\n    modalRef.componentInstance.message = message;\r\n    modalRef.componentInstance.btnOkText = btnOkText;\r\n    modalRef.componentInstance.btnCancelText = btnCancelText;\r\n\r\n    return modalRef.result;\r\n  }\r\n\r\n  public confirmActivation(\r\n    // title: string,\r\n    message: string = \"Are you sure you want to Activate?\",\r\n    btnOkText: string = 'OK',\r\n    btnCancelText: string = 'Cancel',\r\n    dialogSize: 'sm'|'lg' = 'lg'): Promise<boolean> {\r\n    const modalRef = this.modalService.open(ConfirmationDialogComponent);\r\n    //modalRef.componentInstance.title = title;\r\n    modalRef.componentInstance.message = message;\r\n    modalRef.componentInstance.btnOkText = btnOkText;\r\n    modalRef.componentInstance.btnCancelText = btnCancelText;\r\n\r\n    return modalRef.result;\r\n  }\r\n  \r\n  public confirmDeactivation(\r\n    // title: string,\r\n    message: string = \"Are you sure you want to Deactivate?\",\r\n    btnOkText: string = 'OK',\r\n    btnCancelText: string = 'Cancel',\r\n    dialogSize: 'sm'|'lg' = 'lg'): Promise<boolean> {\r\n    const modalRef = this.modalService.open(ConfirmationDialogComponent);\r\n    //modalRef.componentInstance.title = title;\r\n    modalRef.componentInstance.message = message;\r\n    modalRef.componentInstance.btnOkText = btnOkText;\r\n    modalRef.componentInstance.btnCancelText = btnCancelText;\r\n\r\n    return modalRef.result;\r\n  }\r\n}\r\n","import { Component, OnInit, EventEmitter, Input, Output } from '@angular/core';\r\nimport { Page } from '../../../pagination/page';\r\n\r\n//https://keepgrowing.in/angular/handle-server-side-sorting-in-an-angular-application/\r\n@Component({\r\n  selector: 'app-custom-pagination',\r\n  templateUrl: './custom-pagination.component.html',\r\n  styleUrls: ['./custom-pagination.component.scss']\r\n})\r\nexport class CustomPaginationComponent implements OnInit {\r\n  @Input() page: Page<any>;\r\n  @Output() nextPageEvent = new EventEmitter();\r\n  @Output() previousPageEvent = new EventEmitter();\r\n  @Output() loadPageCurrentEvent = new EventEmitter();\r\n  \r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  nextPage(): void {\r\n    this.nextPageEvent.emit(null);\r\n  }\r\n\r\n  previousPage(): void {\r\n    this.previousPageEvent.emit(null);\r\n  }\r\n  loadPageCurrent(PageCurrent:number): void {\r\n    //TODO::Fix this error. work fine in runtime\r\n    this.page.pageable.pageCurrent = PageCurrent;\r\n    this.loadPageCurrentEvent.emit(null);\r\n  }\r\n}\r\n","<div class=\"\" *ngIf=\"page.totalElements == 0\">\r\n  <div class=\"text-center bg-red noresult\">\r\n    <span class=\"font-italic\">{{'PageNoResult' | translate }}</span><span>&#9785;</span>\r\n  </div>\r\n</div>\r\n<div class=\"mbp_pagination\" *ngIf=\"page.totalElements > 0\">\r\n  <ul class=\"page_navigation\">\r\n    <li class=\"page-item\">\r\n      <a class=\"page-link\" [ngClass]=\"{'disabled': page.pageable.IsFirst }\" (click)=\"previousPage()\"><span\r\n          class=\"flaticon-left-arrow\"></span>\r\n        {{'PagePrevious' | translate }}\r\n      </a>\r\n    </li>\r\n    <li *ngFor=\"let indexItem of page.pageable.PageDisplayList\" class=\"page-item\"\r\n      [ngClass]=\"{'active': page.pageable.pageCurrent == indexItem }\">\r\n      <a class=\"page-link\" [ngClass]=\"{'disabled': page.pageable.pageCurrent == indexItem }\"\r\n        (click)=\"loadPageCurrent(indexItem)\">{{indexItem}}</a>\r\n    </li>\r\n    <!-- </div> -->\r\n    <!-- [routerLink]=\"\"-->\r\n    <li class=\"page-item\">\r\n      <a class=\"page-link\" [ngClass]=\"{'disabled': page.pageable.IsLast }\" (click)=\"nextPage()\">\r\n        {{'PageNext' | translate }} <span\r\n          class=\"flaticon-right-arrow\"></span> </a>\r\n    </li>\r\n  </ul>\r\n</div>","//import  { Sort } from './sort';\r\nimport  { Pageable } from './pageable';\r\n\r\nexport class Page<T> {\r\n  content: Array<T>;\r\n  pageable: Pageable;\r\n  \r\n  private _totalElements: number;\r\n  public get totalElements(): number {\r\n    return this._totalElements;\r\n  }\r\n  public set totalElements(value: number) {\r\n    \r\n    this._totalElements = value;\r\n    this.pageable.PageTotalCount = Math.ceil((this.totalElements/this.pageable.pageSize))\r\n    this.pageable.PageTotalCount = this.pageable.PageTotalCount == 0 ? 1 : this.pageable.PageTotalCount;\r\n  }\r\n  \r\n  public constructor() {\r\n    this.pageable = new Pageable();\r\n  }\r\n}\r\n","import { Constants } from 'src/app/constants';\r\n\r\nexport class Pageable {\r\n  \r\n  PageDisplayCount: number = 5;\r\n  PageDisplayList: Array<number>;\r\n  IsFirst: boolean = true;\r\n  IsLast: boolean = false;\r\n\r\n  private _pageSize: number;\r\n  public get pageSize(): number {\r\n    return this._pageSize;\r\n  }\r\n  public set pageSize(value: number) {\r\n    this._pageSize = value;\r\n  }\r\n\r\n  private _PageTotalCount: number = -1;\r\n  public get PageTotalCount(): number {\r\n    return this._PageTotalCount;\r\n  }\r\n  public set PageTotalCount(value: number) {\r\n    this._PageTotalCount = value;\r\n    this.CalculateLastFirst();\r\n    this.calculateDisplayPage();\r\n  }\r\n\r\n  private _pageCurrent: number;\r\n  public get pageCurrent(): number {\r\n    return this._pageCurrent;\r\n  }\r\n  public set pageCurrent(value: number) {\r\n    if(value <= 0 )\r\n      value = 1;\r\n    \r\n    if(value > this.PageTotalCount && this.PageTotalCount != -1)\r\n      value = this.PageTotalCount;\r\n\r\n    this._pageCurrent = value;\r\n    this.CalculateLastFirst();\r\n    this.calculateDisplayPage();\r\n  }\r\n  private CalculateLastFirst(){\r\n    if(this._pageCurrent == 1)\r\n      this.IsFirst = true;\r\n    else\r\n      this.IsFirst = false;\r\n    \r\n    if(this._pageCurrent == this.PageTotalCount && this.PageTotalCount != -1)\r\n      this.IsLast = true;\r\n    else\r\n      this.IsLast = false;\r\n\r\n    if(this.PageTotalCount == -1)\r\n    {\r\n      this.PageTotalCount = 1;\r\n      this.IsLast = true;\r\n      this.IsFirst = true;\r\n    }\r\n  }\r\n  private calculateDisplayPage()\r\n  {\r\n    \r\n    this.PageDisplayList = [];\r\n    let indexStart = this.pageCurrent - this.PageDisplayCount;\r\n    let indexEnd   = this.pageCurrent + this.PageDisplayCount;\r\n    \r\n    // if(this.pageSize == 1 && this.pageCurrent == 1)\r\n    // {\r\n    //   this.PageDisplayList.push(1);\r\n    //   return;\r\n    // }\r\n    if(indexStart <= 0)\r\n      indexStart = 1;\r\n    if(indexEnd > this.PageTotalCount)\r\n      indexEnd = this.PageTotalCount;\r\n\r\n      for(let i=indexStart;i<=indexEnd;i++)\r\n      {\r\n        this.PageDisplayList.push(i);\r\n      }\r\n  }\r\n\r\n  public constructor() {\r\n    this.pageSize = Constants.PAGE_SIZE;\r\n    this.pageCurrent = Constants.PAGE_FIRST_NUMBER;\r\n    this.PageDisplayCount = Constants.PAGE_Display_Count;\r\n    //this.calculateDisplayPage();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Page } from '../../pagination/page';\r\nimport { Pageable } from '../../pagination/pageable';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CustomPaginationService {\r\n\r\n  constructor() { }\r\n\r\n  public getNextPage(page: Page<any>): Pageable {\r\n    if(!page.pageable.IsLast) {\r\n      page.pageable.pageCurrent = page.pageable.pageCurrent+1;\r\n    }\r\n    return page.pageable;\r\n  }\r\n\r\n  public getPreviousPage(page: Page<any>): Pageable {\r\n    if(!page.pageable.IsFirst) {\r\n      page.pageable.pageCurrent = page.pageable.pageCurrent-1;\r\n    }\r\n    return page.pageable;\r\n  }\r\n}\r\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { Observable, Observer, noop, of } from 'rxjs';\r\nimport { map, switchMap, tap } from 'rxjs/operators';\r\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead/public_api';\r\nimport { cJobItem } from 'src/app/interface/Response/Job.class';\r\nimport { ServiceJob } from 'src/app/services/job.service';\r\nimport { ServiceUserProfile } from 'src/app/services/userprofile.service';\r\nimport { cUserProfileItem } from 'src/app/interface/Response/UserProfile.class';\r\n\r\n@Component({\r\n  selector: 'app-search-employer',\r\n  templateUrl: './search-employer.component.html',\r\n  styleUrls: ['./search-employer.component.css']\r\n})\r\nexport class SearchEmployerComponent implements OnInit {\r\n\r\n  \r\n \r\n  @Output() OnSelect : EventEmitter<string> = new EventEmitter<string>();\r\n  \r\n  noResult: boolean = false;\r\n  search: string;\r\n  suggestions$: Observable<cJobItem[]>;\r\n  errorMessage: string;\r\n  selectedOption: any;\r\n  typeaheadLoading: boolean;\r\n\r\n  constructor(private BLService: ServiceUserProfile) { \r\n    \r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.suggestions$ = new Observable((observer: Observer<string>) => {\r\n      observer.next(this.search);\r\n    }).pipe(\r\n      switchMap((query: string) => {\r\n        if (query) {\r\n          return this.BLService.searchActiveEmployer(query).pipe(\r\n            map((items: cUserProfileItem[]) => {\r\n              return items.map((item: cUserProfileItem) => (\r\n                { Name: item.Name + \" <\" + item.Email + \">\",Id:item.Id }))\r\n            }),\r\n            tap(() => noop, err => {\r\n              // in case of http error\r\n              this.errorMessage = err && err.message || 'Something goes wrong';\r\n            }));\r\n        }\r\n\r\n        return of([]);\r\n      })\r\n    );\r\n  }\r\n  typeaheadNoResults(event: boolean): void {\r\n    this.noResult = event;\r\n  }\r\n  onSelect(event: TypeaheadMatch): void {\r\n    this.selectedOption = event.item.Id;\r\n    this.OnSelect.emit(event.item.Id);\r\n  }\r\n  changeTypeaheadLoading(e: boolean): void {\r\n    this.typeaheadLoading = e;\r\n  }\r\n\r\n\r\n\r\n}\r\n","<div class=\"form-group\">\r\n  <input [(ngModel)]=\"search\" typeaheadOptionField=\"Name\" [typeahead]=\"suggestions$\" [typeaheadAsync]=\"true\"\r\n    [typeaheadItemTemplate]=\"customItemTemplate\" class=\"form-control\"\r\n    placeholder=\"{{'CommentEmployerSerachtext' | translate }}\" [typeaheadMinLength]=\"3\" [isAnimated]=\"true\"\r\n    (typeaheadOnSelect)=\"onSelect($event)\" (typeaheadLoading)=\"changeTypeaheadLoading($event)\"\r\n    (typeaheadNoResults)=\"typeaheadNoResults($event)\">\r\n\r\n  <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"errorMessage\">\r\n    {{ errorMessage }}\r\n  </div>\r\n  <ng-template #customItemTemplate let-model=\"item\">\r\n    <span>{{model.Name}}</span>\r\n  </ng-template>\r\n  <div *ngIf=\"typeaheadLoading\">\r\n    <app-atom-spinner [animationDuration]=\"1000\" [size]=\"60\" [color]=\"'#ff1d5e'\"></app-atom-spinner>\r\n  </div>\r\n  <div class=\"alert alert-danger\" *ngIf=\"noResult\">{{'PageNoResult' | translate }}</div>\r\n</div>","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { Observable } from 'rxjs/internal/Observable';\r\nimport { cJobItem } from 'src/app/interface/Response/Job.class';\r\nimport { ServiceUserProfile } from 'src/app/services/userprofile.service';\r\nimport { Observer, noop, of } from 'rxjs';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead/public_api';\r\nimport { cUserProfileItem } from 'src/app/interface/Response/UserProfile.class';\r\n\r\n@Component({\r\n  selector: 'app-search-job-seeker',\r\n  templateUrl: './search-job-seeker.component.html',\r\n  styleUrls: ['./search-job-seeker.component.css']\r\n})\r\nexport class SearchJobSeekerComponent implements OnInit {\r\n\r\n \r\n  @Output() OnSelect : EventEmitter<string> = new EventEmitter<string>();\r\n  \r\n  noResult: boolean = false;\r\n  search: string;\r\n  suggestions$: Observable<cUserProfileItem[]>;\r\n  errorMessage: string;\r\n  selectedOption: any;\r\n  typeaheadLoading: boolean;\r\n\r\n  constructor(private BLService: ServiceUserProfile) { \r\n    \r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.suggestions$ = new Observable((observer: Observer<string>) => {\r\n      observer.next(this.search);\r\n    }).pipe(\r\n      switchMap((query: string) => {\r\n        if (query) {\r\n          return this.BLService.searchActiveJobSeeker(query).pipe(\r\n            map((items: cUserProfileItem[]) => {\r\n              return items.map((item: cUserProfileItem) => (\r\n                { Name: item.Name + \" <\" + item.Email + \">\",Id:item.Id }))\r\n            }),\r\n            tap(() => noop, err => {\r\n              // in case of http error\r\n              this.errorMessage = err && err.message || 'Something goes wrong';\r\n            }));\r\n        }\r\n\r\n        return of([]);\r\n      })\r\n    );\r\n  }\r\n  typeaheadNoResults(event: boolean): void {\r\n    this.noResult = event;\r\n  }\r\n  onSelect(event: TypeaheadMatch): void {\r\n    this.selectedOption = event.item.Id;\r\n    this.OnSelect.emit(event.item.Id);\r\n  }\r\n  changeTypeaheadLoading(e: boolean): void {\r\n    this.typeaheadLoading = e;\r\n  }\r\n\r\n\r\n\r\n}\r\n","<div class=\"form-group\">\r\n    <input [(ngModel)]=\"search\" typeaheadOptionField=\"Name\" [typeahead]=\"suggestions$\" [typeaheadAsync]=\"true\"\r\n      [typeaheadItemTemplate]=\"customItemTemplate\" class=\"form-control\"\r\n      placeholder=\"{{'CommentJobSearkerSerachtext' | translate }}\" [typeaheadMinLength]=\"3\" [isAnimated]=\"true\"\r\n      (typeaheadOnSelect)=\"onSelect($event)\" (typeaheadLoading)=\"changeTypeaheadLoading($event)\"\r\n      (typeaheadNoResults)=\"typeaheadNoResults($event)\">\r\n  \r\n    <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"errorMessage\">\r\n      {{ errorMessage }}\r\n    </div>\r\n    <ng-template #customItemTemplate let-model=\"item\">\r\n      <span>{{model.Name}}</span>\r\n    </ng-template>\r\n    <div *ngIf=\"typeaheadLoading\">\r\n      <app-atom-spinner [animationDuration]=\"1000\" [size]=\"60\" [color]=\"'#ff1d5e'\"></app-atom-spinner>\r\n    </div>\r\n    <div class=\"alert alert-danger\" *ngIf=\"noResult\">{{'PageNoResult' | translate }}</div>\r\n  </div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatButtonModule, MatTableModule, MatInputModule, MatSelectModule, MatFormFieldModule, MatIconModule, MatRadioModule, MatCheckboxModule, MAT_LABEL_GLOBAL_OPTIONS, MatMenuModule, MatMenu, MatTabsModule, MatTooltipModule, MatAutocompleteModule, MatSlideToggleModule, MatDialog, MatDialogModule, MatDatepickerModule, MatCardModule, MatListModule, MatNativeDateModule, MatOptionModule, MatExpansionModule } from '@angular/material';\r\n\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { TypeaheadModule } from 'ngx-bootstrap/typeahead';\r\nimport { AtomSpinnerModule } from 'angular-epic-spinners';\r\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime';\r\n//import { OwlTooltipModule } from 'owl-ng';\r\n\r\nimport { CustomPaginationComponent } from './pagination/components/custom-pagination/custom-pagination.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgbModule, NgbDateParserFormatter } from '@ng-bootstrap/ng-bootstrap';\r\nimport { SearchEmployerComponent } from './search-employer/search-employer.component';\r\nimport { AngularEditorModule } from '@kolkov/angular-editor';\r\nimport { ConfirmationDialogComponent } from './confirmation-dialog/confirmation-dialog.component';\r\nimport { InputComponent } from './ConfigForms/components/input/input.component';\r\nimport { ButtonComponent } from './ConfigForms/components/button/button.component';\r\nimport { SelectComponent } from './ConfigForms/components/select/select.component';\r\nimport { DateComponent } from './ConfigForms/components/date/date.component';\r\nimport { RadiobuttonComponent } from './ConfigForms/components/radiobutton/radiobutton.component';\r\nimport { CheckboxComponent } from './ConfigForms/components/checkbox/checkbox.component';\r\nimport { DynamicFieldDirective } from './ConfigForms/components/dynamic-field/dynamic-field.directive';\r\nimport { DynamicFormComponent } from './ConfigForms/components/dynamic-form/dynamic-form.component';\r\nimport { CreateFormComponent } from './ConfigForms/AdminConfig/create-form/create-form.component';\r\nimport { SelectMultiComponent } from './ConfigForms/components/SelectMulti/selectmulti.component';\r\nimport { SearchJobSeekerComponent } from './search-job-seeker/search-job-seeker.component';\r\nimport { NgxFileDropModule } from 'ngx-file-drop';\r\nimport { UploadFilesComponent } from './upload-files/upload-files.component';\r\nimport { NgbDateCustomParserFormatter } from '../core/NgbDateCustomParserFormatter.class';\r\n\r\n\r\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CustomPaginationComponent,\r\n    SearchEmployerComponent,\r\n    ConfirmationDialogComponent,\r\n    InputComponent,\r\n    ButtonComponent,\r\n    SelectComponent,\r\n    SelectMultiComponent,\r\n    DateComponent,\r\n    RadiobuttonComponent,\r\n    CheckboxComponent,\r\n    DynamicFieldDirective,\r\n    DynamicFormComponent,\r\n    CreateFormComponent,\r\n    SearchJobSeekerComponent,\r\n    UploadFilesComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    AtomSpinnerModule,\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule,\r\n    MatCardModule,\r\n    MatListModule,\r\n    MatNativeDateModule,\r\n    MatOptionModule,\r\n    MatDatepickerModule,\r\n    MatDatepickerModule,\r\n    MatButtonModule,\r\n    MatTableModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatFormFieldModule,\r\n    MatTooltipModule,\r\n    MatTabsModule,\r\n    MatIconModule,\r\n    MatMenuModule,\r\n    MatRadioModule,\r\n    MatDialogModule,\r\n    MatCheckboxModule,\r\n    MatAutocompleteModule,\r\n    MatExpansionModule,\r\n    TypeaheadModule.forRoot(),\r\n    AngularEditorModule ,\r\n    NgxFileDropModule,\r\n    HttpClientModule ,\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: httpTranslateLoader,\r\n        deps: [HttpClient]\r\n      }\r\n    })\r\n  ],\r\n  exports: [\r\n    CustomPaginationComponent,\r\n    CommonModule,\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    MatCardModule,\r\n    MatListModule,\r\n    MatNativeDateModule,\r\n    MatOptionModule,\r\n    MatDatepickerModule,\r\n    MatButtonModule,\r\n    MatTableModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatFormFieldModule,\r\n    MatTooltipModule,\r\n    MatTabsModule,\r\n    MatIconModule,\r\n    MatMenuModule,\r\n    MatRadioModule,\r\n    MatCheckboxModule,\r\n    MatDialogModule,\r\n    ReactiveFormsModule,\r\n    MatAutocompleteModule,\r\n    MatMenuModule,\r\n    MatSlideToggleModule,\r\n    AtomSpinnerModule,\r\n    TypeaheadModule,\r\n    OwlDateTimeModule, \r\n    OwlNativeDateTimeModule,\r\n    NgbModule,\r\n    SearchEmployerComponent,\r\n    SearchJobSeekerComponent,\r\n    AngularEditorModule,\r\n    HttpClientModule ,\r\n    InputComponent,\r\n    ButtonComponent,\r\n    SelectComponent,\r\n    SelectMultiComponent,\r\n    DateComponent,\r\n    RadiobuttonComponent,\r\n    CheckboxComponent,\r\n    DynamicFieldDirective,\r\n    DynamicFormComponent,\r\n    MatExpansionModule,\r\n    CreateFormComponent,\r\n    NgxFileDropModule,\r\n    UploadFilesComponent,\r\n    TranslateModule,\r\n  ],\r\n  providers: [\r\n    // { provide: MAT_LABEL_GLOBAL_OPTIONS, useValue: { float: 'auto' } }\r\n    { provide: NgbDateParserFormatter, useClass: NgbDateCustomParserFormatter }\r\n  ]\r\n})\r\nexport class SharedModule { }\r\n// AOT compilation support\r\nexport function httpTranslateLoader(http: HttpClient) {\r\n  return new TranslateHttpLoader(http);\r\n}","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\r\nimport { ServiceFiles } from 'src/app/services/files.service';\r\nimport { NgxFileDropEntry, FileSystemFileEntry } from 'ngx-file-drop';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-upload-files',\r\n  templateUrl: './upload-files.component.html',\r\n  styleUrls: ['./upload-files.component.css']\r\n})\r\nexport class UploadFilesComponent extends baseComponent {\r\n\r\n  @Input() IsDropZone: boolean = true;\r\n  @Input() acceptExtensions: string;\r\n  @Output() OnFileUpload: EventEmitter<string> = new EventEmitter<string>();\r\n  @Output() UploadStatus: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n  htmlContent: string;\r\n  IsUploading: boolean = false;\r\n  OrgFileName: string;\r\n  fileToUpload: File = null;\r\n\r\n  constructor(private BLService: ServiceFiles,\r\n    BLServiceShowMessage: ServiceShowMessage,\r\n    BLServiceLoginUser: ServiceLoginUser,BLTranslate: TranslateService,) {\r\n    super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\r\n  }\r\n\r\n  public files: NgxFileDropEntry[] = [];\r\n\r\n  public dropped(files: NgxFileDropEntry[]) {\r\n\r\n    this.files = files;\r\n    for (const droppedFile of files) {\r\n\r\n      // Is it a file?\r\n      if (droppedFile.fileEntry.isFile) {\r\n        const fileEntry = droppedFile.fileEntry as FileSystemFileEntry;\r\n        fileEntry.file((file: File) => {\r\n          this.Upload(file, droppedFile.relativePath);\r\n        });\r\n      }\r\n    }\r\n  }\r\n  handleFileInput(files: FileList) {\r\n    this.fileToUpload = files.item(0);\r\n    this.Upload(files.item(0), files.item(0).name);\r\n  }\r\n  Upload(file, name) {\r\n    \r\n    if (this.acceptExtensions != \"\") {\r\n      var fileExtenstion = \".\" + file.name.split('.').pop();\r\n      if (this.acceptExtensions.indexOf(fileExtenstion) === -1) {\r\n        this.message.Error(\"The file extension is not allowed.\");\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        return;\r\n      }\r\n    }\r\n    const formData = new FormData()\r\n    formData.append('logo', file, name)\r\n    this.OrgFileName = file.name;\r\n    this.IsUploading = true;\r\n    this.UploadStatus.emit(true);\r\n\r\n    this.BLService.UploadFile(formData).subscribe({\r\n      next: obj => {\r\n        this.IsUploading = false;\r\n        this.UploadStatus.emit(false);\r\n        this.OnFileUpload.emit(obj);\r\n      }\r\n      ,\r\n      error: err => {\r\n        this.IsUploading = false;\r\n        this.UploadStatus.emit(false);\r\n        this.OrgFileName = \"\";\r\n      }\r\n    });\r\n  }\r\n  removeFile() {\r\n    this.OrgFileName = \"\";\r\n    this.OnFileUpload.emit(\"\");\r\n  }\r\n}\r\n","<div>\r\n  <ngx-file-drop *ngIf=\"IsDropZone\" dropZoneLabel=\"Drop files here\" (onFileDrop)=\"dropped($event)\"\r\n    [accept]=\"acceptExtensions\">\r\n    \r\n    <ng-template ngx-file-drop-content-tmp let-openFileSelector=\"openFileSelector\">\r\n      Drop Files Here\r\n      <a (click)=\"openFileSelector()\"><img src=\"/assets/images/resource/upload.png\"></a>\r\n    </ng-template>\r\n  </ngx-file-drop>\r\n  <span class=\"upladfilename\">{{OrgFileName}}</span> <a *ngIf=\"OrgFileName\" (click)=\"removeFile()\" data-toggle=\"tooltip\"\r\n  data-placement=\"bottom\" title=\"Deactivate\"><span class=\"flaticon-rubbish-bin\"></span></a>\r\n \r\n \r\n</div>","\r\nexport class Constants {\r\n\t//static readonly clientId = 'spa-codingofemployment-client';\r\n\r\n\tstatic readonly clientRoot = 'http://www.ms-employment.digisummits.com/';\r\n\tstatic readonly apiRoot = 'http://api.ms-employment.digisummits.com/';\r\n\tstatic readonly stsAuthority = 'http://sts.ms-employment.digisummits.com/';\r\n\tstatic readonly clientId = '87a10b87-5410-491b-9457-083ed25faac5';\r\n\r\n\tstatic readonly IsAzureLoginEnabled = false;\r\n\tstatic readonly MCTWebsiteURL = \"https://employmentportalb2c.azurewebsites.net\";\r\n\tstatic readonly PAGE_SIZE = 3;\r\n\tstatic readonly PAGE_FIRST_NUMBER = 1;\r\n\tstatic readonly PAGE_Display_Count = 5;\r\n}\r\n","\r\nimport { NgbDateParserFormatter, NgbDateStruct } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\r\nexport class NgbDateCustomParserFormatter extends NgbDateParserFormatter {\r\n  parse(value: string): NgbDateStruct {\r\n    if (value) {\r\n      const dateParts = value.trim().split(\"/\");\r\n      if (dateParts.length === 1 && isNumber(dateParts[0])) {\r\n        return { day: toInteger(dateParts[0]), month: null, year: null };\r\n      } else if (dateParts.length === 2 && isNumber(dateParts[0]) && isNumber(dateParts[1])) {\r\n        return {\r\n          day: toInteger(dateParts[0]),\r\n          month: toInteger(dateParts[1]),\r\n          year: null\r\n        };\r\n      } else if (dateParts.length === 3 && isNumber(dateParts[0]) && isNumber(dateParts[1]) && isNumber(dateParts[2])) {\r\n        return {\r\n          day: toInteger(dateParts[0]),\r\n          month: toInteger(dateParts[1]),\r\n          year: toInteger(dateParts[2])\r\n        };\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  format(date: NgbDateStruct): string {\r\n    return date\r\n      ? `${isNumber(date.day) ? padNumber(date.day) : \"\"}/${isNumber(date.month) ? padNumber(date.month) : \"\"}/${\r\n          date.year\r\n        }`\r\n      : \"\";\r\n  }\r\n}\r\nexport function toInteger(value: any): number {\r\n  return parseInt(`${value}`, 10);\r\n}\r\n\r\nexport function isNumber(value: any): value is number {\r\n  return !isNaN(toInteger(value));\r\n}\r\n\r\nexport function padNumber(value: number) {\r\n  if (isNumber(value)) {\r\n    return `0${value}`.slice(-2);\r\n  } else {\r\n    return \"\";\r\n  }\r\n}","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { Constants } from '../constants';\r\nimport { UserProfile } from '../model/user-profile';\r\nimport { CoreModule } from './core.module';\r\n\r\n@Injectable()\r\nexport class AccountService {\r\n    userProfile: UserProfile;\r\n    constructor(private _httpClient: HttpClient) { }\r\n      \r\n    getAllUsers(): Observable<UserProfile[]> {\r\n        return this._httpClient.get<UserProfile[]>(Constants.apiRoot + 'Account/Users');\r\n    }\r\n\r\n    createUserProfile(userProfile: UserProfile) {\r\n        return this._httpClient.post(`${Constants.apiRoot}Account/Profile`, userProfile);\r\n    }\r\n\r\n    updateUserProfile(userProfile: UserProfile) {\r\n        return this._httpClient.put(`${Constants.apiRoot}Account/Profile/${userProfile.id}`, userProfile);\r\n    }\r\n\r\n    register(userInfo: any) {\r\n        return this._httpClient.post(`${Constants.apiRoot}Account/Register`, userInfo);\r\n\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot } from '@angular/router';\r\nimport { AuthService } from './auth-service.component';\r\n\r\n@Injectable()\r\nexport class AdminRouteGuard implements CanActivate {\r\n    constructor(private _authService: AuthService) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n\r\n        return !!this._authService.authContext &&\r\n        this._authService.isLoggedIn &&\r\n            this._authService.authContext.isAdmin;\r\n    }\r\n}\r\n@Injectable()\r\nexport class EmployerRouteGuard implements CanActivate {\r\n    constructor(private _authService: AuthService) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        return !!this._authService.authContext &&\r\n        this._authService.isLoggedIn &&\r\n            this._authService.authContext.isEmployer;\r\n    }\r\n}\r\n@Injectable()\r\nexport class JobSeekerRouteGuard implements CanActivate {\r\n    constructor(private _authService: AuthService) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        return !!this._authService.authContext &&\r\n            this._authService.isLoggedIn &&\r\n            this._authService.authContext.isJobSeeker; \r\n    }\r\n}","import { HttpEvent, HttpHandler, HttpHeaders, HttpInterceptor, HttpRequest, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { from, Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { Constants } from '../constants';\r\nimport { AuthService } from './auth-service.component';\r\nimport { Utils } from './utils';\r\nimport { ShowMessage } from '../interface/Model/ModelShowMessage.class';\r\nimport { ServiceShowMessage } from '../services/show-message.service';\r\n\r\n@Injectable()\r\nexport class AuthInterceptorService implements HttpInterceptor {\r\n  message:ShowMessage = new ShowMessage();\r\n\r\n  constructor(private _authService: AuthService,\r\n    private _router: Router,\r\n    private BLServiceShowMessage : ServiceShowMessage) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    if (req.url.startsWith(Constants.apiRoot)) {\r\n      return from(this._authService.getAccessToken().then(token => {\r\n        var lang = \"en\";\r\n        if (localStorage.getItem('lang'))\r\n          lang = localStorage.getItem('lang');\r\n\r\n        const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`).set(\"currentLang\", lang);\r\n        // const headers = new HttpHeaders().set('Authorization', `Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjNENUZDQTJEOTg3MTI1QUU4NzZBQkI4QjdGQjhENTU4RjNBREE0NzciLCJ0eXAiOiJhdCtqd3QiLCJ4NXQiOiJQVl9LTFpoeEphNkhhcnVMZjdqVldQT3RwSGMifQ.eyJuYmYiOjE2Mjg1MTkwODAsImV4cCI6MTYyODUyOTA4MCwiaXNzIjoiaHR0cHM6Ly9lbXBsb3ltZW50c3RzLmlkZWFsYWtlLmNvbSIsImF1ZCI6InByb2plY3RzLWFwaSIsImNsaWVudF9pZCI6Ijg3YTEwYjg3LVhYWFgtOTQ1Ny0wODNlZDI1ZmFhYzUiLCJzdWIiOiI5ODk3ZjMwYi05NDE2LTRkMDAtYTNkOS01Yjk5MjIzMDM4OGMiLCJhdXRoX3RpbWUiOjE2MjgxNjIwNTcsImlkcCI6ImxvY2FsIiwiQXNwTmV0LklkZW50aXR5LlNlY3VyaXR5U3RhbXAiOiJWRlVWU1hGSEZPWTMySTVHNTRaWDIyWklFRUxBVEFRRCIsInJvbGUiOiJFbXBsb3llciIsInByZWZlcnJlZF91c2VybmFtZSI6InNvbmFsX2FnYXJ3YWxAaWRlYWxha2UuY29tIiwibmFtZSI6InNvbmFsX2FnYXJ3YWxAaWRlYWxha2UuY29tIiwiZW1haWwiOiJzb25hbF9hZ2Fyd2FsQGlkZWFsYWtlLmNvbSIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJNRElEIjoiNjBkOTgyNDc3NTY3YmUxZmEwNDA2MjBlIiwic2NvcGUiOlsib3BlbmlkIiwicHJvZmlsZSIsInByb2plY3RzLWFwaSJdLCJhbXIiOlsicHdkIl19.YjJ7fqYrMpmsmrw7zCqPcCXrqdv38f0JivxbANDxXjkFbY-gKYqiPXzyIdD1-d7qm6WtWIGth-qALAZBK4l8lzMaiHFrrGRrynEt0GfRWFShZ9vvdxAw7-YKEt6oCq-OS_qRA2Wk2XaC2xlT7GAWAVTJ6gnMiM4Oap5rSIdNnCayTJ4f3v04PPXrUv-C4gxoJjezm0LbiUEHgP5PhXmDzIKpJpQqUtkpoQhPzcg7rjc8NYiKY07LoQ0zdAv4TFWge2ITVQQ2WPexfzhQeiHGUZB14u75gNas-z0DpSUBlpZqzuVvb_wjuHFa_WASkrZ6W0Eex3tlBc36rSvN05mZ7w`).set(\"currentLang\", lang);\r\n        const authReq = req.clone({ headers });\r\n        return next.handle(authReq).pipe(tap(_ => { }, error => {\r\n          var respError = error as HttpErrorResponse;\r\n          if (respError && (respError.status === 401 || respError.status === 403)) {\r\n            this._router.navigate(['/unauthorized']);\r\n          }\r\n          if (respError && (respError.status === 400 )) {\r\n            var msg = Utils.formatError(respError);\r\n            this.message.Error(respError.error);\r\n            this.BLServiceShowMessage.sendMessage(this.message);\r\n          }\r\n        })).toPromise();\r\n      }));\r\n    }\r\n    else {\r\n      return next.handle(req);\r\n    }\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { UserManager, User } from 'oidc-client';\r\nimport { Constants } from '../constants';\r\nimport { Subject } from 'rxjs';\r\nimport { CoreModule } from './core.module';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AuthContext } from '../model/auth-context';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n  private _userManager: UserManager;\r\n  private _user: User;\r\n  private _loginChangedSubject = new Subject<boolean>();\r\n  private _authContextSubject = new Subject<AuthContext>();\r\n  loginChanged = this._loginChangedSubject.asObservable();\r\n  authContextChanged = this._authContextSubject.asObservable();\r\n\r\n  authContext: AuthContext;\r\n  stsSettings = {\r\n    authority: Constants.stsAuthority,\r\n    client_id: Constants.clientId,\r\n    redirect_uri: `${Constants.clientRoot}signin-callback`,\r\n    scope: 'openid profile projects-api',\r\n    response_type: 'code',\r\n    post_logout_redirect_uri: `${Constants.clientRoot}signout-callback`,\r\n    automaticSilentRenew: true,\r\n    //silent_redirect_uri: `${Constants.clientRoot}core/silent-callback/silent-callback.component.html`\r\n    silent_redirect_uri: `${Constants.clientRoot}assets/silent-callback.html`\r\n    //,acr_values: 'idp:AAD', //redirect automateclly to azure\r\n  };\r\n  stsSettingsAdmin = {\r\n    authority: Constants.stsAuthority,\r\n    client_id: Constants.clientId,\r\n    redirect_uri: `${Constants.clientRoot}signin-callback`,\r\n    scope: 'openid profile projects-api', \r\n    response_type: 'code',\r\n    post_logout_redirect_uri: `${Constants.clientRoot}signout-callback`,\r\n    automaticSilentRenew: true,\r\n    //silent_redirect_uri: `${Constants.clientRoot}core/silent-callback/silent-callback.component.html`\r\n    silent_redirect_uri: `${Constants.clientRoot}assets/silent-callback.html`\r\n    //acr_values:'idp:AAD' //redirect automateclly to azure\r\n  };\r\n  constructor(private _httpClient: HttpClient) {\r\n    // var isAdmin = false;\r\n    // if(localStorage.getItem('lang'))\r\n    //   isAdmin = localStorage.getItem('lang')?.toLowerCase() == \"true\";\r\n\r\n    this._userManager = new UserManager( this.stsSettings);\r\n    this._userManager.events.addAccessTokenExpired(_ => {\r\n      this._loginChangedSubject.next(false);\r\n    });\r\n    this._userManager.events.addUserLoaded(user => {\r\n      if (this._user !== user) {\r\n        this._user = user;\r\n        this.loadSecurityContext();\r\n        this._loginChangedSubject.next(!!user && !user.expired);\r\n      }\r\n    });\r\n    // this._userManager.events.addAccessTokenExpiring(() =>\r\n    // {\r\n    //     this._userManager.signinSilent(this.stsSettingsAdmin)\r\n    //         .then((user: any) =>\r\n    //         {\r\n    //             alert(user);\r\n    //         })\r\n    //         .catch((error: Error) =>\r\n    //         {\r\n    //           \r\n    //             alert(error);\r\n    //         });\r\n    // });\r\n  }\r\n  \r\n  loginAdmin() {\r\n    localStorage.setItem('IsAdminSettings', \"true\");\r\n\r\n    this._userManager = new UserManager(this.stsSettingsAdmin);\r\n    this._userManager.events.addAccessTokenExpired(_ => {\r\n      this._loginChangedSubject.next(false);\r\n    });\r\n    this._userManager.events.addUserLoaded(user => {\r\n      if (this._user !== user) {\r\n        this._user = user;\r\n        this.loadSecurityContext();\r\n        this._loginChangedSubject.next(!!user && !user.expired);\r\n      }\r\n    });\r\n\r\n    return this._userManager.signinRedirect();\r\n  }\r\n  login() {\r\n    localStorage.setItem('IsAdminSettings', \"false\");\r\n    return this._userManager.signinRedirect();\r\n  }\r\n  CheckLogin() {\r\n    this._userManager.signinSilent();\r\n  }\r\n  isLoggedIn(): Promise<boolean> {\r\n    return this._userManager.getUser().then(user => {\r\n      const userCurrent = !!user && !user.expired;\r\n      if (this._user !== user) {\r\n        this._loginChangedSubject.next(userCurrent);\r\n      }\r\n      if (userCurrent && !this.authContext) {\r\n        \r\n        this.loadSecurityContext();\r\n      }\r\n      this._user = user;\r\n      return userCurrent;\r\n    });\r\n  }\r\n\r\n  completeLogin() {\r\n    \r\n    return this._userManager.signinRedirectCallback().then(user => { \r\n      this._user = user;\r\n      this._loginChangedSubject.next(!!user && !user.expired);\r\n      return user;\r\n    }).catch(err => console.log(err));\r\n  }\r\n  logout() {\r\n    this._userManager.signoutRedirect();\r\n  }\r\n\r\n  completeLogout() {\r\n    this._user = null;\r\n    this._loginChangedSubject.next(false);\r\n    return this._userManager.signoutRedirectCallback();\r\n  }\r\n\r\n  getAccessToken() {\r\n    return this._userManager.getUser().then(user => {\r\n      if (!!user && !user.expired) {\r\n        return user.access_token;\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    });\r\n  }\r\n\r\n  loadSecurityContext() {\r\n    this._httpClient\r\n      .get<AuthContext>(`${Constants.apiRoot}Account/AuthContext`)\r\n      .subscribe(\r\n        context => {\r\n          \r\n          this.authContext = new AuthContext();\r\n          this.authContext.claims = context.claims;\r\n          this.authContext.userProfile = context.userProfile;\r\n          this._authContextSubject.next(this.authContext);\r\n        },\r\n        error => console.error(error)\r\n      );\r\n  }\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { AuthInterceptorService } from './auth-interceptor.service';\r\nimport { AuthService } from './auth-service.component';\r\nimport { AccountService } from './account.service';\r\nimport { ProjectService } from './project.service';\r\nimport { AdminRouteGuard } from './admin-route-guard';\r\nimport { FilterPipe } from './pipe/filter.pipe';\nimport { SearchfilterPipe } from './pipe/searchfilter.pipe';\r\n\r\n@NgModule({\r\n    imports: [],\r\n    exports: [\r\n        FilterPipe\r\n    ],\r\n    declarations: [\r\n        FilterPipe,\r\n        SearchfilterPipe\r\n    ],\r\n    providers: [\r\n        AuthService,\r\n        AccountService,\r\n        ProjectService,\r\n        AdminRouteGuard,\r\n        { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptorService, multi: true }\r\n    ],\r\n})\r\nexport class CoreModule { }\r\n","// // filter.pipe.ts\r\n\r\n// import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n// @Pipe({ name: 'Filter' })\r\n// export class FilterPipe implements PipeTransform {\r\n//   transform(items: any[], searchText: string): any[] {\r\n//     if (!items) {\r\n//       console.log(\"1\",items);\r\n//       return [];\r\n//     }\r\n//     if (!searchText) {\r\n//       console.log(\"11\",items);\r\n//       return items;\r\n//     }\r\n//     searchText = searchText.toLocaleLowerCase();\r\n//     console.log(\"10\",items);\r\n//     return items.filter(it => {\r\n//       return it.toLocaleLowerCase().includes(searchText);\r\n//     });\r\n//   }\r\n// }\r\n\r\n\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\n\r\n\r\n@Pipe({\r\n  name: 'Filter'\r\n})\r\nexport class FilterPipe implements PipeTransform {\r\n\r\n  transform(value, args): any {\r\n    // return value.filter(function(search) {\r\n    //   return search.name.indexOf(searchTerm) > -1\r\n    // })\r\n    console.log(value); \r\n\r\n    if(!args) {\r\n      return value;\r\n    }\r\n\r\n     return value.filter(item =>{\r\n       console.log(item);\r\n       item.LkupIndustry.Name.indexOf(args) > -1}); \r\n  }\r\n}\r\n ","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'searchfilter'\n})\nexport class SearchfilterPipe implements PipeTransform {\n\n  // transform(value: unknown, args: unknown[]): unknown {\n  //   console.log(value); \n    \n    \n  //   if(!args) {\n  //     return value;\n  //   }\n\n  //   //  return value.filter(item =>{\n  //     //  console.log(item);\n  //     //  item.LkupIndustry.Name.indexOf(args) > -1}); \n  //   return null;\n  // }\n\n  transform(value, args): any {\n    // return value.filter(function(search) {\n    //   return search.name.indexOf(searchTerm) > -1\n    // })\n    console.log(value); \n\n    if(!args) {\n      return value;\n    }\n\n     return value.filter(item =>{\n       console.log(item);\n       item.LkupIndustry.Name.indexOf(args) > -1}); \n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, from } from 'rxjs';\r\nimport { Constants } from '../constants';\r\nimport { Milestone } from '../model/milestone';\r\nimport { MilestoneStatus } from '../model/milestone-status';\r\nimport { Project } from '../model/project';\r\nimport { UserPermission } from '../model/user-permission';\r\nimport { UserProfile } from '../model/user-profile';\r\nimport { CoreModule } from './core.module';\r\nimport { AuthService } from './auth-service.component';\r\n\r\n\r\n@Injectable()\r\nexport class ProjectService {\r\n    constructor(private _httpClient: HttpClient,\r\n                private _authService: AuthService) { }\r\n    \r\n    getProjects(): Observable<Project[]> {\r\n        return from(this._authService.getAccessToken().then(token => {\r\n            const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\r\n            return this._httpClient.get<Project[]>(Constants.apiRoot + 'Projects/GetProjects', {headers: headers}).toPromise();\r\n        }));\r\n    }\r\n\r\n    getProject(projectId: number): Observable<Project> {\r\n        return this._httpClient.get<Project>(Constants.apiRoot + 'Projects/' + projectId);\r\n    }\r\n\r\n    getProjectUsers(projectId: number): Observable<UserProfile[]> {\r\n        return this._httpClient.get<UserProfile[]>(Constants.apiRoot + 'Projects/' + projectId + '/Users');\r\n    }\r\n\r\n    addProject(project: Project): Observable<Project> {\r\n        return this._httpClient.post<Project>(Constants.apiRoot + 'Projects', project);\r\n    }\r\n\r\n    deleteProject(project: Project): Observable<object> {\r\n        return this._httpClient.delete(Constants.apiRoot + 'Projects/' + project.id);\r\n    }\r\n\r\n    addUserPermission(userPermission: UserPermission) {\r\n        return this._httpClient.post(Constants.apiRoot + 'UserPermissions', userPermission);\r\n    }\r\n\r\n    removeUserPermission(userId: string, projectId: number) {\r\n        return this._httpClient.delete(`${Constants.apiRoot}UserPermissions/?userId=${userId}&projectId=${projectId}`);\r\n    }\r\n\r\n    updateUserPermission(userPermission) {\r\n        return this._httpClient.put(`${Constants.apiRoot}UserPermissions`, userPermission);\r\n    }\r\n\r\n    getMilestones(projectId: number): Observable<Milestone[]> {\r\n        return this._httpClient.get<Milestone[]>(Constants.apiRoot + 'Milestone');\r\n    }\r\n\r\n    getMilestoneStatuses() {\r\n        return this._httpClient.get<MilestoneStatus[]>(`${Constants.apiRoot}Projects/MilestoneStatuses`);\r\n    }\r\n\r\n    addMilestone(milestone: Milestone) {\r\n        return this._httpClient.post(`${Constants.apiRoot}Projects/Milestones`, milestone);\r\n    }\r\n\r\n    deleteMilestone(id: number) {\r\n        return this._httpClient.delete(`${Constants.apiRoot}Projects/Milestones/${id}`);\r\n    }\r\n\r\n    updateMilestone(milestone: Milestone) {\r\n        return this._httpClient.put(`${Constants.apiRoot}Projects/Milestones/${milestone.id}`, milestone);\r\n    }\r\n}","import { HttpErrorResponse } from \"@angular/common/http\";\r\nimport { ShowMessage } from '../interface/Model/ModelShowMessage.class';\r\nimport { ServiceShowMessage } from '../services/show-message.service';\r\n\r\nexport class Utils {\r\n\r\n  public static formatError(error: HttpErrorResponse): string {\r\n    if (error.error instanceof ErrorEvent) {\r\n      // A client-side or network error occurred. Handle it accordingly.\r\n      return 'An error occurred: ' + error.error.message;\r\n    } else {\r\n      // The backend returned an unsuccessful response code.\r\n      // The response body may contain clues as to what went wrong,\r\n      let msg = \"Unknown error\";\r\n      if (error.error && typeof error.error === 'string') {\r\n        msg = <string>error.error;\r\n      }\r\n      else if (error.message) {\r\n        msg = error.message;\r\n      }\r\n\r\n      return `Backend returned code ${error.status}, ${error.error}`;\r\n    }\r\n  };\r\n\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { ServiceShowMessage } from '../services/show-message.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ShowMessage } from '../interface/Model/ModelShowMessage.class';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ModelUserProfile } from '../interface/Model/ModelUserProfile.class';\r\nimport { cUserProfileItem } from '../interface/Response/UserProfile.class';\r\nimport { ServiceUserProfile } from '../services/userprofile.service';\r\nimport { UserType } from '../Enum/UserType.enum';\r\nimport { baseComponent } from '../interface/baseComponent.class';\r\nimport { ServiceLoginUser } from '../services/loginuser.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AuthService } from '../core/auth-service.component';\r\nimport { config } from 'process';\r\nimport { Constants } from '../constants';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: 'home.component.html'\r\n})\r\n\r\nexport class HomeComponent extends baseComponent implements OnInit {\r\n  \r\n  passwordPattern = \"//^(?=.*[A-Z])(?=.*\\\\d)(?=.*[$@$!%*#?&])[A-Za-z\\\\d$@$!%*#?&]{8,20}$//\"\r\n  isClicked = false;\r\n  modelObj: ModelUserProfile = new ModelUserProfile();\r\n  msgShow: ShowMessage = new ShowMessage();\r\n  isTermAgreed: boolean = false;\r\n  IsRoleUndefined: boolean = false;\r\n  userRole: string;\r\n  IsAzureLoginEnabled:Boolean;\r\n\r\n  constructor(private BLUserProfileService: ServiceUserProfile,\r\n    private _authService: AuthService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private BLServiceMessage: ServiceShowMessage,\r\n    private BLServiceLoggedIn: ServiceLoginUser,BLTranslate: TranslateService,) {\r\n    super(BLServiceMessage, BLServiceLoggedIn,BLTranslate);\r\n    \r\n    this.userRole = this.BLServiceLoggedIn.userRole;\r\n    this.BLServiceLoginUser.UserRoleChanged.subscribe(obj => {\r\n      this.userRole = obj;\r\n      this.IsRoleUndefined = this.userRole.toLowerCase() == \"undefined\";\r\n    });\r\n\r\n    this.IsAzureLoginEnabled = Constants.IsAzureLoginEnabled;\r\n  }\r\n\r\n  ngOnInit() {\r\n    const msgRedirect = this.route.snapshot.paramMap.get('msg');\r\n    const msgIsSuccess = this.route.snapshot.paramMap.get('isSuccess');\r\n    if (msgRedirect) {\r\n      var isSuccess = false;\r\n      if (msgIsSuccess)\r\n        isSuccess = msgIsSuccess.toLowerCase() == \"true\" ? true : false;\r\n\r\n      this.msgShow.Send(msgRedirect, isSuccess);\r\n      this.BLServiceMessage.sendMessage(this.msgShow);\r\n      this.IsRoleUndefined = this.userRole.toLowerCase() == \"undefined\";\r\n    }\r\n    // if(this.IsLoggedIn)\r\n    // {\r\n    //   this.router.navigate(['Employer/Dashboard']);\r\n    // }\r\n  }\r\n  modelSaveBtn(modelForm: NgForm): void {\r\n    if (!modelForm.valid)\r\n      return;\r\n    this.isClicked = true;\r\n    \r\n    this.BLUserProfileService.create(this.modelObj).subscribe({\r\n      next: obj => {\r\n        this.isClicked = false;\r\n        this.router.navigate(['home/RegisterSuccess']);\r\n      },\r\n      error: err => {\r\n        this.message.Error(err)\r\n        this.isClicked = false;\r\n      }\r\n    });\r\n  }\r\n  AssignRole(userType){\r\n    this.BLUserProfileService.UpdateUserRole(userType).subscribe({\r\n      next: obj => {\r\n        this.message.Success(\"Role updated successfully.\");\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this._authService.logout();\r\n        this.router.navigate(['/']);\r\n      },\r\n      error: err => {\r\n        this.message.Error(err)\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.isClicked = false;\r\n      }\r\n    });\r\n  }\r\n}","<!-- Home Design -->\r\n<section id=\"homepageSecionDiv\" class=\"home-one style3 parallax home_bg3\" data-stellar-background-ratio=\"0.3\">\r\n    <div class=\"container\">\r\n        <div class=\"row home-content\">\r\n           <!-- <div>\r\n            IsRoleUndefined: {{IsRoleUndefined}}<br>\r\n            userRole: {{userRole}} <br>\r\n           </div> -->\r\n            <div class=\"col-lg-5 registerbox\" *ngIf=\"IsLoggedIn && IsRoleUndefined\">\r\n                <div class=\"heading\">\r\n                    <h3 class=\"text-center color-white\">{{'HomeChooseType' | translate }}</h3>\r\n                </div>\r\n                <div class=\"text-center m-4\">\r\n                    <a class=\"btn btn-md btn-transparent bg-Orange w-75\" (click)=\"AssignRole(3)\"><i\r\n                        class=\"fas fa-user-lock\"></i>{{'GenericJobSeeker' | translate }}</a>\r\n                </div>\r\n                <div class=\"separator\">OR</div>\r\n                <div class=\"text-center m-4\">\r\n                    <a class=\"btn btn-md btn-transparent bg-Orange w-75\" (click)=\"AssignRole(2)\"><i\r\n                        class=\"fas fa-user-lock\"></i>{{'GenericJobEmployer' | translate }}</a>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-lg-5 registerbox\" *ngIf=\"!IsLoggedIn && !IsAzureLoginEnabled\">\r\n                <div class=\"heading\">\r\n                    <h3 class=\"text-center color-white\">{{'HomeCreateAccount' | translate }}</h3>\r\n                </div>\r\n                <form novalidate (ngSubmit)=\"modelSaveBtn(modelForm)\" #modelForm=\"ngForm\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>{{'GenericName' | translate }}</mat-label>\r\n                        <input matInput type=\"FullName\" required placeholder=\"{{'GenericRequiredName' | translate }}\"\r\n                            [(ngModel)]=\"modelObj.Name\" #modelFullNameVar=\"ngModel\" name=\"modelFullName\"\r\n                            [ngClass]=\"{'is-invalid': (modelFullNameVar.touched || modelFullNameVar.dirty) && !modelFullNameVar.valid }\" />\r\n                        <mat-error *ngIf=\"modelFullNameVar.errors?.required\">{{'HomeNameError' | translate }}</mat-error>\r\n                    </mat-form-field>\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>{{'GenericEmail' | translate }}</mat-label>\r\n                        <input matInput oninput=\"this.value = this.value.toLowerCase()\" id=\"modelEmailId\" type=\"email\"\r\n                            placeholder=\"{{'GenericRequiredEmail' | translate }}\" [pattern]=\"emailPattern\" required\r\n                            [(ngModel)]=\"modelObj.Email\" #modelEmailVar=\"ngModel\" name=\"modelEmail\"\r\n                            [ngClass]=\"{'is-invalid': (modelEmailVar.touched || modelEmailVar.dirty) && !modelEmailVar.valid }\" />\r\n                        <mat-error *ngIf=\"modelEmailVar.errors?.required\">{{'GenericEnterEmail' | translate }}</mat-error>\r\n                        <mat-error *ngIf=\"modelEmailVar.errors?.pattern\">{{'GenericEnterEmailValid' | translate }}\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>{{'HomePassword' | translate }}</mat-label>\r\n                        <input matInput type=\"password\" required placeholder=\"{{'HomePasswordEnter' | translate }}\"\r\n                            [(ngModel)]=\"modelObj.password\" #modelPasswordVar=\"ngModel\" name=\"modelPassword\"\r\n                            [ngClass]=\"{'is-invalid': (modelPasswordVar.touched || modelPasswordVar.dirty) && !modelPasswordVar.valid }\" />\r\n                        <mat-error *ngIf=\"modelPasswordVar.errors?.required\">{{'HomePasswordError' | translate }}</mat-error>\r\n                    </mat-form-field>\r\n                    <mat-radio-group [(ngModel)]=\"modelObj.Type\" aria-label=\"Select an option\" name=\"modelType\"\r\n                        required>\r\n                        <mat-radio-button value=\"2\">{{'GenericJobEmployer' | translate }}</mat-radio-button><br>\r\n                        <mat-radio-button value=\"3\">{{'GenericJobSeeker' | translate }}</mat-radio-button>\r\n                    </mat-radio-group>\r\n                    <div class=\"form-group form-check term\">\r\n                        <mat-checkbox required [(ngModel)]=\"isTermAgreed\" #modelTermVar=\"ngModel\" name=\"modelTerm\"\r\n                            [ngClass]=\"{'is-invalid': (modelTermVar.touched || modelTermVar.dirty) && !modelTermVar.valid }\">\r\n                            <mat-label class=\"form-check-label\" for=\"exampleCheck2\"> {{'HomeConfirmTerm' | translate }}\r\n                                <a class=\"lnk-white\" target=\"_blank\" routerLink=\"/Terms\">{{'HomeTerm' | translate }}</a> and <a\r\n                                    class=\"lnk-white\" target=\"_blank\" routerLink=\"/Policy\">{{'HomePolicy' | translate }}</a>\r\n                            </mat-label>\r\n                        </mat-checkbox>\r\n                    </div>\r\n                    <button type=\"submit\" class=\"btn btn-log btn-block btn-transparent bg-Orange\"\r\n                        [title]=\"modelForm.valid && isTermAgreed ? 'Save your entered data' : 'Disabled until the form data is valid'\"\r\n                        [disabled]=\"!modelForm.valid || isClicked\">{{'HomeRegister' | translate }}<i class=\"fa fa-spinner fa-spin\"\r\n                            *ngIf=\"isClicked\"></i></button>\r\n\r\n                </form>\r\n            </div> \r\n            <div class=\"col-lg-5 homeMessage mt3\">\r\n                <div class=\"home-text\">\r\n                    <h2 class=\"fz40\">{{'HomeFindJob' | translate }}</h2>\r\n                    <p class=\"color-white\">{{'HomeEach' | translate }}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-policy',\n  templateUrl: './policy.component.html',\n  styleUrls: ['./policy.component.css']\n})\nexport class PolicyComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<section class=\"emplye_single_v2 mt70 mt50 pt50 shadow-sm p-3 mb-5 bg-white rounded\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <p>website policy works!</p>\n        </div>\n    </div>\n</section>\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-register-success',\r\n  templateUrl: './register-success.component.html',\r\n  styleUrls: ['./register-success.component.css']\r\n})\r\nexport class RegisterSuccessComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<section class=\"our-error bgc-fa\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"jumbotron text-center thankyou\">\r\n                <h1 class=\"display-3\">{{'RegisterThx' | translate }}</h1>\r\n                <p class=\"lead\"><strong>{{'RegisterCheck' | translate }}</strong></p>\r\n                <hr>\r\n                <p class=\"lead\">\r\n                  <a class=\"btn btn-primary btn-sm\"  routerLink=\"/\" role=\"button\">{{'RegisterContinue' | translate }}</a>\r\n                </p>\r\n              </div>\r\n        </div>\r\n    </div>\r\n</section>","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../core/auth-service.component';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-signin-callback',\r\n  template: `<div></div>`\r\n})\r\n\r\nexport class SigninRedirectCallbackComponent implements OnInit {\r\n  constructor(private _authService: AuthService,\r\n              private _router: Router) { }\r\n\r\n  ngOnInit() { \r\n    this._authService.completeLogin().then(user => { \r\n      this._router.navigate(['/'], { replaceUrl: true });\r\n    })\r\n  }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../core/auth-service.component';\r\n\r\n@Component({\r\n  selector: 'app-signout-callback',\r\n  template: `<div></div>`\r\n})\r\n\r\nexport class SignoutRedirectCallbackComponent implements OnInit {\r\n  constructor(private _authService: AuthService,\r\n              private _router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this._authService.completeLogout().then(_ => {\r\n      this._router.navigate(['/'], { replaceUrl: true });\r\n    })\r\n  }\r\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-term',\n  templateUrl: './term.component.html',\n  styleUrls: ['./term.component.css']\n})\nexport class TermComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section class=\"emplye_single_v2 mt70 mt50 pt50 shadow-sm p-3 mb-5 bg-white rounded\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <p>term and conditions works!</p>\n        </div>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../core/auth-service.component';\r\n\r\n@Component({\r\n  selector: 'app-unauthorized',\r\n  templateUrl: 'unauthorized.component.html'\r\n})\r\n\r\nexport class UnauthorizedComponent implements OnInit {\r\n  constructor(private _authService: AuthService) { }\r\n\r\n  ngOnInit() { }\r\n\r\n  logout() {\r\n    this._authService.logout();\r\n  }\r\n}","<div class=\"mat-title\" style=\"color: red; font-weight: bold\">{{'UnAuthorized' | translate }}</div>\r\n<a href=\"javascript:void(0)\" (click)=\"logout()\" class=\"mat-subheading-1\">{{'UnAuthorized1' | translate }}</a>\r\n","import { ModelPaging } from \"./ModelPaging.interface\"\r\n\r\nexport class ModelAccountSearch extends ModelPaging{\r\n    filterType: number;\r\n}","import { ModelId } from './ModelId.interface';\r\n\r\nexport class ModelApplyCreate extends ModelId{\r\n    Message:string;\r\n}","import { ModelId } from \"./ModelId.interface\";\r\n\r\nexport class ModelApplyHire extends ModelId{\r\n    JobSeekerId:string;\r\n}","import { ModelPaging } from './ModelPaging.interface';\r\n\r\nexport class ModelApplyList extends ModelPaging{\r\n    JobId: string;\r\n}","export class ModelChangePassword{\r\n    NewPassword:string;\r\n    OldPassword:string;\r\n    ConfirmPassword:string;\r\n}","import { ModelDynamic } from \"./ModelDynamic.class\";\r\n\r\nexport class ModelCompany{\r\n    constructor(){\r\n        this.IndustryId = \"-1\";\r\n        this.CityId = \"-1\";\r\n        this.CountryId = \"-1\";\r\n    }\r\n    _id:string;\r\n    Name:string;\r\n    Email:string;\r\n    Phone:string;\r\n    Website:string;\r\n    Establish:Date;\r\n    IndustryId:string = \"-1\";\r\n    About:string;\r\n    SocialFacebook:string;\r\n    SocialTwitter:string;\r\n    SocialLinkedin:string;\r\n    SocialGooglePlus:string;\r\n    CountryId:string = \"-1\";\r\n    CityId:string = \"-1\";\r\n    Address:string;\r\n    CompanyLogo:string;\r\n    data:ModelDynamic[];\r\n}","export class ModelCompanyAddEmployer{\r\n    UserId: string;\r\n    CompanyId: string;\r\n}","import { ConfigForm } from 'src/app/Enum/ConfigForm.enum';\r\n\r\nexport class ModelConfigForm{\r\n\r\n    FormType: ConfigForm;\r\n    Form: ModelFieldConfig[];\r\n}\r\n\r\nexport class ModelFieldConfig {\r\n\r\n    order?: number;\r\n    label?: string;\r\n    name?: string;\r\n    inputType?: string;\r\n    options?: ModelOptions[];\r\n    collections?: any;\r\n    type: string;\r\n    value?: any;\r\n    validations?: boolean;\r\n  }\r\n  export class ModelOptions{\r\n    option: string;\r\n  }\r\n  ","import { ConfigForm } from 'src/app/Enum/ConfigForm.enum';\r\n\r\nexport class ModelConfigFormGet{\r\n    type: ConfigForm;\r\n}","export class ModelFileUpload{\r\n    FileName: string;\r\n    type: number;\r\n}","export class ModelId{\r\n    Id: string;\r\n}","export class ModelIdName{\r\n    Id:string;\r\n    Name:string;\r\n}","export class ModelJob{\r\n    constructor(){\r\n        this.Name = \"\";\r\n    }\r\n    Name: string;\r\n    _id: string;\r\n    Gender:number;\r\n    CompanyId: string;\r\n    Description: string;\r\n    Skills:string;\r\n    Benefits:string;\r\n    Deadline: Date;\r\n    JobFieldId: string;\r\n    JobSubFieldId: string;\r\n    ExperienceId: string;\r\n    IndustryId: string;\r\n    QualificationId: string;\r\n    CountryId: string;\r\n    CityId: string;\r\n    Address: string;\r\n    Type: number;\r\n    Remuneration:string;\r\n}","import { ModelDynamic } from './ModelDynamic.class';\r\n\r\nexport class ModelJobFair{\r\n    Name: string;\r\n    _id: string;\r\n    EventDate: Date;\r\n    Location: string;\r\n    IsOnline: boolean;\r\n    ShortDescription: string;\r\n    Field:string;\r\n    data:ModelDynamic[];\r\n}\r\n\r\n","export class ModelJobFairAttendance{\r\n    Code: number;\r\n    JobFairId: string;\r\n}","import { ModelDynamic } from './ModelDynamic.class';\r\n\r\nexport class ModelJobFairRegisteration {\r\n    JobFairId: string;\r\n    UserId: string;\r\n    Name: string;\r\n    JobTitle: string;\r\n    Email: string;\r\n    DOB: Date;\r\n    IsAttendance: boolean;\r\n    data: ModelDynamic[];\r\n}","import { NumberFixedLenPipe } from \"ng-pick-datetime/date-time/numberedFixLen.pipe\";\r\nimport { ModelPaging } from \"./ModelPaging.interface\"\r\n\r\nexport class ModelAdminJobSearch extends ModelPaging{\r\n    CompanyId:string;\r\n    StatusId: number;\r\n}","import { ModelPaging } from './ModelPaging.interface';\r\n\r\nexport class ModelJobSearch extends ModelPaging\r\n{\r\n    ExperienceId: string[];\r\n    GenderId: string[];\r\n    Qualificationid: string[];\r\n    IndustryId:string[];\r\n    JobFieldId:string[];\r\n    CountryId:string;\r\n    CityId:string;\r\n}","export class ModelJobSeeker {\r\n    _id: string;\r\n    Name: string;\r\n    UserId: string;\r\n    JobTitle: string;\r\n    DOB: Date;\r\n    Gender:number;\r\n    Email: string;\r\n    Phone: string;\r\n    Website: string;\r\n    ExperienceId: string;\r\n    QualificationId: string;\r\n    About: string;\r\n    SocialFacebook: string;\r\n    SocialTwitter: string;\r\n    SocialLinkedin: string;\r\n    SocialGooglePlus: string;\r\n    Languages: string[];\r\n    CountryId: string;\r\n    CityId: string;\r\n    CoverLetterFile: string;\r\n    ResumeFile: string;\r\n    ProfilePicture:string\r\n}\r\nexport class ModelResumeItem {\r\n    _id: string;\r\n    Name: string;\r\n    SubTitle: string;\r\n    StartDate: Date;\r\n    EndDate: Date;\r\n    Description: string;\r\n}\r\nexport class ModelResumeCertification {\r\n    _id: string;\r\n    Name: string;\r\n    StartDate: Date;\r\n    Description: string;\r\n    CertificatePath:string;\r\n}","import { ModelPaging } from './ModelPaging.interface';\r\n\r\nexport class ModelJobSeekerSearch extends ModelPaging\r\n{\r\n    ExperienceId: string[];\r\n    GenderId: string[];\r\n    Qualificationid: string[];\r\n    LanguageId:string[];\r\n    CountryId:string;\r\n    CityId:string;\r\n    filterText:string;\r\n}","export class ModelMyAssignedAccount{\r\n    UserId: string;\r\n    AccountId: string;\r\n    Type: number;\r\n}","export class ModelPaging{\r\n    CurrentPage: number = 1;\r\n    filterText: string = '';\r\n}","export class ModelReportDates{\r\n    StartDate :Date;\r\n    EndDate:Date;\r\n}\r\nexport class ModelReportJob extends ModelReportDates{\r\n    CompanyId :string;\r\n    JobFieldId:string;\r\n}","export class ShowMessage\r\n{\r\n    type : EnumShowMessage ;\r\n    message: string;\r\n    Error(msg : string):void{\r\n        this.type = EnumShowMessage.Error ;\r\n        this.message= msg;\r\n    }\r\n    Success(msg : string):void{\r\n        this.type = EnumShowMessage.Success;\r\n        this.message= msg;\r\n    }\r\n    Send(msg:string, isSucess:boolean)\r\n    {\r\n        this.type = isSucess? EnumShowMessage.Success : EnumShowMessage.Error;\r\n        this.message= msg;\r\n    }\r\n}\r\nexport enum EnumShowMessage\r\n{\r\n    Success = 1,\r\n    Error = 2\r\n}","export class ModelSubEntity{\r\n    Id: string;\r\n    MainId:string;\r\n    Name:string;\r\n}","import { TranslateType } from 'src/app/Enum/TranslateType.enum';\r\n\r\n\r\nexport class ModelTranslateList{\r\n    Type:TranslateType;\r\n    Id:string;\r\n}","import { UserType } from 'src/app/Enum/UserType.enum';\r\n\r\nexport class ModelUserProfile{\r\n    Id: string;\r\n    Name: string;\r\n    Email:string;\r\n    Type:UserType;\r\n    password:string;\r\n    SelectedPartnerEntityId: string[];\r\n    SelectedSubPartnerEntityId: string[];\r\n}","export class UserTypeList{\r\n\r\n    private lst: UserTypeItem[] = [];\r\n\r\n    constructor()\r\n    {\r\n        this.lst.push(new UserTypeItem(1,\"Admin\"));\r\n        this.lst.push(new UserTypeItem(2,\"Employer\"));\r\n        this.lst.push(new UserTypeItem(3,\"Job Seeker\"));\r\n    }\r\n    getUserTypes():UserTypeItem[]{\r\n        return this.lst.filter(x=>x.Id >= 1);\r\n    }\r\n}\r\nexport class UserTypeItem{\r\n    constructor(id:number, name:string)\r\n    {\r\n        this.Id = id;\r\n        this.Name = name;\r\n    }\r\n    Id: number;\r\n    Name: string;\r\n   \r\n}","import { JobStatus } from 'src/app/Enum/JobStatus.enum';\r\nimport { cGenericSubItem, cGenericSubItemURL } from './GenericIdName.class';\r\nimport { JobType } from 'src/app/Enum/JobType.enum';\r\n\r\nexport interface cJobList {\r\n    totalCount: number;\r\n    lstResult: cJobItem[];\r\n    pageSize: number;\r\n}\r\nexport class cJobItem {\r\n    _id: string;\r\n    Name: string;\r\n    IsActive: boolean;\r\n    Gender: number\r\n    Company: cGenericSubItemURL;\r\n    Description: string;\r\n    Skills:string;\r\n    Benefits:string;\r\n    Status: JobStatus;\r\n    Type: JobType;\r\n    Deadline: Date;\r\n    JobField: cGenericSubItem;\r\n    JobSubField: cGenericSubItem;\r\n    Experience: cGenericSubItem;\r\n    Industry: cGenericSubItem;\r\n    Qualification: cGenericSubItem;\r\n    Country: cGenericSubItem;\r\n    City: cGenericSubItem;\r\n    Address: string;\r\n    CreatedAt: Date;\r\n    ApplicantCount:number;\r\n    Remuneration:string;\r\n}\r\nexport class ReportJobCount{\r\n    Company: cGenericSubItemURL;\r\n    Count:number;\r\n}","import { cGenericSubItem } from './GenericIdName.class';\r\n\r\nexport interface cJobSeekerList {\r\n    totalCount: number;\r\n    lstResult: cJobSeekerItem[];\r\n    pageSize: number;\r\n}\r\nexport class cJobSeekerItem {\r\n    _id: string;\r\n    Name: string;\r\n    IsMyResume: boolean;\r\n    IsActive: boolean;\r\n    JobTitle: string;\r\n    DOB: Date;\r\n    Gender: number;\r\n    Email: string;\r\n    Phone: string;\r\n    Website: string;\r\n    Experience: cGenericSubItem;\r\n    Qualification: cGenericSubItem;\r\n    About: string;\r\n    SocialFacebook: string;\r\n    SocialTwitter: string;\r\n    SocialLinkedin: string;\r\n    SocialGooglePlus: string;\r\n    Languages: cGenericSubItem[];\r\n    Country: cGenericSubItem;\r\n    City: cGenericSubItem;\r\n    Education: ResponseResumeItem[];\r\n    WorkHistory: ResponseResumeItem[];\r\n    ExtraCurricular: ResponseResumeItem[];\r\n    Certification: ResponseResumeCertification[];\r\n    CoverLetterFile: string;\r\n    ResumeFile: string;\r\n    ProfilePicture: string;\r\n    ContactPermissionHasPermission:number;\r\n}\r\nexport class ResponseResumeItem \r\n{\r\n    _id: string;\r\n    Name: string;\r\n    IsActive: boolean;\r\n    SubTitle: string;\r\n    StartDate: Date;\r\n    EndDate: Date;\r\n    Description: string;\r\n}\r\nexport class ResponseResumeCertification \r\n{\r\n    _id: string;\r\n    Name: string;\r\n    IsActive: boolean;\r\n    StartDate: Date;\r\n    Description: string;\r\n    CertificatePath:string;\r\n}\r\nexport class ResponseContactInformationRequest{\r\n    EmployerId:string;\r\n    CompanyId:string;\r\n    CompanyName:string;\r\n    IsApproved:number;\r\n    CreatedAt:Date;\r\n}\r\nexport interface cResponseContactInformationRequestList {\r\n    totalCount: number;\r\n    lstResult: ResponseContactInformationRequest[];\r\n    pageSize: number;\r\n}","export class ReportJobSeekerGender{\r\n    Male:number = 0;\r\n    Female:number= 0;\r\n    Other:number= 0;\r\n}","import { UserType } from 'src/app/Enum/UserType.enum';\r\n\r\nexport class cUserProfileList{\r\n    totalCount: number;\r\n    lstResult:cUserProfileItem[] ;\r\n    pageSize: number;\r\n}\r\nexport class cUserProfileItem{\r\n    Id: string;\r\n    Name: string;\r\n    IsActive: boolean;\r\n    Email:string;\r\n    Type:UserType;\r\n    IsEmployerLimitedCompanies:boolean;\r\n    MyCompanies: cEntityObj[];\r\n}\r\n\r\nexport class cEntityObj{\r\n    _id: string;\r\n    Name: string;\r\n    IsApproved:boolean;\r\n}","import { ServiceShowMessage } from '../services/show-message.service';\r\nimport { ShowMessage } from './Model/ModelShowMessage.class';\r\nimport { ServiceLoginUser } from '../services/loginuser.service';\r\nimport { AngularEditorConfig } from '@kolkov/angular-editor';\r\nimport { NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\nexport class baseComponent {\r\n    emailPattern = \"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\";\r\n    message: ShowMessage = new ShowMessage();\r\n    userRole: string;\r\n    IsAdmin: Boolean;\r\n    isJobSeeker: boolean = false;\r\n    isEmployer: boolean = false;\r\n    IsLoggedIn: Boolean;\r\n    userId: string;\r\n    dateToday: NgbDateStruct;\r\n   \r\n\r\n    msgSavedSuccessfully: string;\r\n    msgDeactivatedSuccessfully: string;\r\n    msgActivatedSuccessfully: string;\r\n    msgsetDeactivate: string;\r\n    msgsetActivate: string;\r\n    msgsetDeleted: string;\r\n    msgDeletedSuccessfully: string;\r\n    msgUpdatedsuccessfully:string;\r\n    msgsetRemove:string;\r\n\r\n    textEditorConfig: AngularEditorConfig = {\r\n        editable: true,\r\n        spellcheck: true,\r\n        minHeight: '5rem',\r\n        translate: 'yes',\r\n        defaultParagraphSeparator: 'p',\r\n        defaultFontName: 'Arial',\r\n        toolbarHiddenButtons: [\r\n            ['insertImage',\r\n                'insertVideo',\r\n                'toggleEditorMode',\r\n                'link',\r\n                'unlink',\r\n                'backgroundColor',\r\n                'justifyLeft',\r\n                'justifyCenter',\r\n                'justifyRight',\r\n                'justifyFull'\r\n            ]\r\n        ]\r\n    };\r\n\r\n    constructor(protected BLServiceShowMessage: ServiceShowMessage,\r\n        protected BLServiceLoginUser: ServiceLoginUser,\r\n        protected BLTranslate: TranslateService) {\r\n        this.Init();\r\n    }\r\n    Init() {\r\n        this.BLTranslate.get(\"msgSavedSuccessfully\").subscribe(res => { this.msgSavedSuccessfully = res; });\r\n        this.BLTranslate.get(\"msgDeactivatedSuccessfully\").subscribe(res => { this.msgDeactivatedSuccessfully = res; });\r\n        this.BLTranslate.get(\"msgActivatedSuccessfully\").subscribe(res => { this.msgActivatedSuccessfully = res; });\r\n        this.BLTranslate.get(\"msgsetDeactivate\").subscribe(res => { this.msgsetDeactivate = res; });\r\n        this.BLTranslate.get(\"msgsetActivate\").subscribe(res => { this.msgsetActivate = res; });\r\n        this.BLTranslate.get(\"msgDeletedSuccessfully\").subscribe(res => { this.msgDeletedSuccessfully = res; });\r\n        this.BLTranslate.get(\"msgsetDeleted\").subscribe(res => { this.msgsetDeleted = res; });\r\n        this.BLTranslate.get(\"msgUpdatedsuccessfully\").subscribe(res => { this.msgUpdatedsuccessfully = res; });\r\n        this.BLTranslate.get(\"msgsetRemove\").subscribe(res => { this.msgsetRemove = res; });\r\n       \r\n        var d = new Date();\r\n        this.dateToday = {\r\n            year: d.getUTCFullYear(), month: d.getUTCMonth() + 1\r\n            , day: d.getUTCDate() \r\n        };\r\n        \r\n        this.IsLoggedIn = this.BLServiceLoginUser.isLoggedIn;\r\n        this.BLServiceLoginUser.UserIsLoggedInChanged.subscribe(obj => {\r\n            this.IsLoggedIn = obj;\r\n        });\r\n\r\n        this.userId = this.BLServiceLoginUser.userId;\r\n        this.BLServiceLoginUser.UserIdChanged.subscribe(obj => {\r\n            this.userId = obj;\r\n        });\r\n        this.userRole = this.BLServiceLoginUser.userRole;\r\n        this.BLServiceLoginUser.UserRoleChanged.subscribe(obj => {\r\n            this.userRole = obj;\r\n        });\r\n\r\n        this.IsAdmin = this.BLServiceLoginUser.IsAdmin;\r\n        this.BLServiceLoginUser.UserIsAdminChanged.subscribe(obj => {\r\n            this.IsAdmin = obj;\r\n        });\r\n\r\n        this.isEmployer = this.BLServiceLoginUser.isEmployer;\r\n        this.BLServiceLoginUser.UserIsEmployerChanged.subscribe(obj => {\r\n            this.isEmployer = obj;\r\n        });\r\n\r\n        this.isJobSeeker = this.BLServiceLoginUser.isJobSeeker;\r\n        this.BLServiceLoginUser.UserIsJobSeekerChanged.subscribe(obj => {\r\n            this.isJobSeeker = obj;\r\n        });\r\n    }\r\n    CheckDateBiggerThanToday(date: Date) {\r\n        var today = new Date();\r\n        return date > today;\r\n    }\r\n    CompareDates(dateFrom,dateTo) {\r\n        if (dateFrom && dateTo) {\r\n\r\n            var d1 = Date.parse(dateTo);\r\n            var d2 = Date.parse(dateFrom);\r\n\r\n            if (d1 > d2) {\r\n                return true;\r\n            }\r\n            return false\r\n        }\r\n    }\r\n    CompareDatesEqual(dateFrom,dateTo) {\r\n        if (dateFrom && dateTo) {\r\n\r\n            var d1 = Date.parse(dateTo);\r\n            var d2 = Date.parse(dateFrom);\r\n\r\n            if (d1 >= d2) {\r\n                return true;\r\n            }\r\n            return false\r\n        }\r\n    }\r\n}","import { UserProfile } from './user-profile';\r\nimport { SimpleClaim } from './simple-claim';\r\n\r\nexport class AuthContext {\r\n  claims: SimpleClaim[];\r\n  userProfile: UserProfile;\r\n  get getUserProfile(){\r\n    if(!!this.userProfile)\r\n    {\r\n      return this.userProfile;\r\n    }\r\n    return  null;\r\n  }\r\n  get userRole(){ \r\n    if(!!this.claims && !!this.claims.find(c => c.Type === 'role'))\r\n    {\r\n      return this.claims.find(c => c.Type === 'role').Value;\r\n    }\r\n    return  \"\";\r\n  }\r\n  get userName(){\r\n    if(!!this.userProfile)\r\n    {\r\n      return this.userProfile.FullName;\r\n    }\r\n    return  \"\";\r\n  }\r\n  get userId(){\r\n    if(!!this.claims && !!this.claims.find(c => c.Type === 'MDID'))\r\n    {\r\n      return this.claims.find(c => c.Type === 'MDID').Value;\r\n    }\r\n    return  \"-1\";\r\n  }\r\n  get isAdmin() { \r\n    return !!this.claims && !!this.claims.find(c =>\r\n      c.Type === 'role' && c.Value.toLowerCase() === 'admin');\r\n  }\r\n  get isEmployer(){\r\n    return !!this.claims && !!this.claims.find(c =>\r\n      c.Type === 'role' && c.Value.toLowerCase() === 'employer');\r\n  }\r\n  get isJobSeeker(){\r\n    return !!this.claims && !!this.claims.find(c =>\r\n      c.Type === 'role' && c.Value.toLowerCase() === 'jobseeker');\r\n  }\r\n}","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Constants } from '../constants';\r\nimport { tap, catchError } from 'rxjs/operators';\r\nimport { ModelId } from '../interface/Model/ModelId.interface';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { ModelPaging } from '../interface/Model/ModelPaging.interface';\r\n\r\nexport class ServiceGeneric<T, W, Z> {\r\n    protected apiURL = Constants.apiRoot;\r\n    \r\n    constructor(ControllerName: string,\r\n        protected httpClient: HttpClient) {\r\n        this.apiURL += ControllerName;\r\n    }\r\n    getGetByid(Id: string): Observable<T> {\r\n        var model = new ModelId();\r\n        model.Id = Id;\r\n        return this.httpClient.post<T>(this.apiURL + 'GetById', model).pipe(\r\n            //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n            catchError(this.handleError)\r\n        );\r\n    }\r\n    getListActive(): Observable<T[]> {\r\n        return this.httpClient.get<T[]>(this.apiURL + 'ListActive').pipe(\r\n            // tap(data => console.log('All: ' + JSON.stringify(data))),\r\n            catchError(this.handleError)\r\n        );\r\n    }\r\n    getAll(currentPage: number, filterText: string): Observable<W> {\r\n\r\n        var model = new ModelPaging()\r\n        model.CurrentPage = currentPage;\r\n        model.filterText = filterText;\r\n        return this.httpClient.post<W>(this.apiURL + 'ListAll', model).pipe(\r\n            //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n            catchError(this.handleError)\r\n        );\r\n    }\r\n    setActivate(Id: string): Observable<boolean> {\r\n        var model = new ModelId();\r\n        model.Id = Id;\r\n        return this.httpClient.post<boolean>(this.apiURL + 'Activate', model).pipe(\r\n            //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n            catchError(this.handleError)\r\n        );\r\n    }\r\n    setDeActivate(Id: string): Observable<boolean> {\r\n        var model = new ModelId();\r\n        model.Id = Id;\r\n        return this.httpClient.post<boolean>(this.apiURL + 'DeActivate', model).pipe(\r\n            //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n            catchError(this.handleError)\r\n        );\r\n    }\r\n    update(model: Z): Observable<boolean> {\r\n        return this.httpClient.post<boolean>(this.apiURL + 'Update', model).pipe(\r\n            //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n            catchError(this.handleError)\r\n        );\r\n    }\r\n    create(model: Z): Observable<boolean> {\r\n        return this.httpClient.post<boolean>(this.apiURL + 'Create', model).pipe(\r\n            //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n            catchError(this.handleError)\r\n        );\r\n    }\r\n    //#endregion\r\n    protected handleError(err: HttpErrorResponse) {\r\n        // in a real world app, we may send the server to some remote logging infrastructure\r\n        // instead of just logging it to the console\r\n        let errorMessage = '';\r\n        if (err.error instanceof ErrorEvent) {\r\n            // A client-side or network error occurred. Handle it accordingly.\r\n            errorMessage = `An error occurred: ${err.error.message}`;\r\n        } else {\r\n            // The backend returned an unsuccessful response code.\r\n            // The response body may contain clues as to what went wrong,\r\n            errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\r\n        }\r\n        console.error(errorMessage);\r\n        return throwError(errorMessage);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { tap, catchError } from 'rxjs/operators';\r\nimport { ModelApplyList } from '../interface/Model/ModelApplyList.class';\r\nimport { Constants } from '../constants';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { cApplyList, ReportApply } from '../interface/Response/Apply.class';\r\nimport { ModelId } from '../interface/Model/ModelId.interface';\r\nimport { ModelApplyCreate } from '../interface/Model/ModelApplyCreate.class';\r\nimport { ModelApplyHire } from '../interface/Model/ModelApplyHire.class';\r\nimport { ModelReportDates } from '../interface/Model/ModelReportDates.class';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServiceApply{\r\n  protected apiURL = Constants.apiRoot + 'Apply/';\r\n\r\n  constructor(protected httpClient: HttpClient) { \r\n    \r\n  }\r\n  Hire(JobSeekerId: string, JobId:string): Observable<boolean> {\r\n    var model = new ModelApplyHire();\r\n    model.Id = JobId;\r\n    model.JobSeekerId = JobSeekerId;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'Hire', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  UnHire(JobSeekerId: string, JobId:string): Observable<boolean> {\r\n    var model = new ModelApplyHire();\r\n    model.Id = JobId;\r\n    model.JobSeekerId = JobSeekerId;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'UnHire', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  Create(JobId: string, msg:string): Observable<boolean> {\r\n    var model = new ModelApplyCreate();\r\n    model.Id = JobId\r\n    model.Message = msg;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'Create', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  ListAll(pageCurrent:number, filter: string, JobId: string = ''): Observable<cApplyList> {\r\n    var model = new ModelApplyList();\r\n    model.JobId = JobId;\r\n    model.CurrentPage = pageCurrent;\r\n    model.filterText = filter;\r\n    return this.httpClient.post<cApplyList>(this.apiURL + 'ListAll', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  CheckMyApply(JobId: string): Observable<boolean> {\r\n    var model = new ModelId();\r\n    model.Id = JobId\r\n    return this.httpClient.post<boolean>(this.apiURL + 'CheckMyApply', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  ReportJobSeekerHiredCount(model: ModelReportDates): Observable<number> {\r\n   \r\n    return this.httpClient.post<number>(this.apiURL + 'ReportJobSeekerHiredCount', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  ReportJobSeekerAppliedPerJobCount(model: ModelReportDates): Observable<ReportApply[]> {\r\n   \r\n    return this.httpClient.post<ReportApply[]>(this.apiURL + 'ReportJobSeekerAppliedPerJobCount', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  protected handleError(err: HttpErrorResponse) {\r\n    // in a real world app, we may send the server to some remote logging infrastructure\r\n    // instead of just logging it to the console\r\n    let errorMessage = '';\r\n    if (err.error instanceof ErrorEvent) {\r\n        // A client-side or network error occurred. Handle it accordingly.\r\n        errorMessage = `An error occurred: ${err.error.message}`;\r\n    } else {\r\n        // The backend returned an unsuccessful response code.\r\n        // The response body may contain clues as to what went wrong,\r\n        errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\r\n    }\r\n    console.error(errorMessage);\r\n    return throwError(errorMessage);\r\n}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Constants } from '../constants';\r\nimport { ModelConfigForm } from '../interface/Model/ModelConfigForm.class';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { tap, catchError } from 'rxjs/operators';\r\nimport { ConfigForm } from '../Enum/ConfigForm.enum';\r\nimport { FieldConfig, Validator } from '../common/ConfigForms/field.interface';\r\nimport { ModelConfigFormGet } from '../interface/Model/ModelConfigFormGet.class';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServiceConfigForm {\r\n  \r\n  protected apiURL = Constants.apiRoot;\r\n\r\n  constructor(protected httpClient: HttpClient) {\r\n    this.apiURL += \"ConfigForm/\";\r\n  }\r\n  GetByType(type: ConfigForm): Observable<FieldConfig[]> {\r\n    var model = new ModelConfigFormGet();\r\n    model.type = type;\r\n    return this.httpClient.post<FieldConfig[]>(this.apiURL + 'GetByType', model).pipe(\r\n      tap(data => {\r\n        \r\n        console.log('All: ' + JSON.stringify(data));\r\n      }),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  Update(model: ModelConfigForm): Observable<boolean> {\r\n    return this.httpClient.post<boolean>(this.apiURL + 'Update', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  protected handleError(err: HttpErrorResponse) {\r\n    // in a real world app, we may send the server to some remote logging infrastructure\r\n    // instead of just logging it to the console\r\n    let errorMessage = '';\r\n    if (err.error instanceof ErrorEvent) {\r\n        // A client-side or network error occurred. Handle it accordingly.\r\n        errorMessage = `An error occurred: ${err.error.message}`;\r\n    } else {\r\n        // The backend returned an unsuccessful response code.\r\n        // The response body may contain clues as to what went wrong,\r\n        errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\r\n    }\r\n    console.error(errorMessage);\r\n    return throwError(errorMessage);\r\n}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ServiceGeneric } from './GenericService.service';\r\nimport { cGenericIdNameItem, cGenericIdNameList } from '../interface/Response/GenericIdName.class';\r\nimport { ModelIdName } from '../interface/Model/ModelIdName.class';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ModelSubEntity } from '../interface/Model/ModelSubEntity.class';\r\nimport { Observable } from 'rxjs';\r\nimport { tap, catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServiceCountry extends ServiceGeneric<cGenericIdNameItem,cGenericIdNameList,ModelIdName> {\r\n\r\n  constructor(protected httpClient: HttpClient) {\r\n    super(\"Country/\", httpClient);\r\n  }\r\n  SubCreate(model: ModelSubEntity): Observable<boolean> {\r\n    return this.httpClient.post<boolean>(this.apiURL + 'SubCreate', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  SubUpdate(model: ModelSubEntity): Observable<boolean> {\r\n    return this.httpClient.post<boolean>(this.apiURL + 'SubUpdate', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  SubActivate(model: ModelSubEntity): Observable<boolean> {\r\n    return this.httpClient.post<boolean>(this.apiURL + 'SubActivate', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  SubDeActivate(model: ModelSubEntity): Observable<boolean> {\r\n    return this.httpClient.post<boolean>(this.apiURL + 'SubDeActivate', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { ModelId } from '../interface/Model/ModelId.interface';\r\nimport { tap, catchError } from 'rxjs/operators';\r\nimport { Constants } from '../constants';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { cFavouriteItem } from '../interface/Response/Favourite.class';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServiceFavourite {\r\n  \r\n  protected apiURL = Constants.apiRoot+'Favourite/';\r\n\r\n  constructor(protected httpClient: HttpClient) { }\r\n  \r\n  Create(Id: string): Observable<boolean> {\r\n    var model = new ModelId();\r\n    model.Id = Id;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'Create', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  ListAll(): Observable<cFavouriteItem[]> {\r\n    return this.httpClient.get<cFavouriteItem[]>(this.apiURL + 'ListAll').pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  setDeActivate(Id: string): Observable<boolean> {\r\n    var model = new ModelId();\r\n    model.Id = Id;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'DeActivate', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  \r\n  // DeActivateByProfileId(Id: string): Observable<boolean> {\r\n  //   var model = new ModelId();\r\n  //   model.Id = Id;\r\n  //   return this.httpClient.post<boolean>(this.apiURL + 'DeActivateByProfileId', model).pipe(\r\n  //     //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n  //     catchError(this.handleError)\r\n  //   );\r\n  // }\r\n\r\n  DeActivateByJobId(Id: string): Observable<boolean> {\r\n    var model = new ModelId();\r\n    model.Id = Id;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'DeActivateByJobId', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  CheckMyFavourite(JobId: string): Observable<boolean> {\r\n    var model = new ModelId();\r\n    model.Id = JobId\r\n    return this.httpClient.post<boolean>(this.apiURL + 'CheckMyFavourite', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  protected handleError(err: HttpErrorResponse) {\r\n    // in a real world app, we may send the server to some remote logging infrastructure\r\n    // instead of just logging it to the console\r\n    let errorMessage = '';\r\n    if (err.error instanceof ErrorEvent) {\r\n        // A client-side or network error occurred. Handle it accordingly.\r\n        errorMessage = `An error occurred: ${err.error.message}`;\r\n    } else {\r\n        // The backend returned an unsuccessful response code.\r\n        // The response body may contain clues as to what went wrong,\r\n        errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\r\n    }\r\n    console.error(errorMessage);\r\n    return throwError(errorMessage);\r\n}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Constants } from '../constants';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { Observable, throwError } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServiceFiles {\r\n\r\n  protected apiURL = Constants.apiRoot+'Files/';\r\n\r\n  constructor(protected httpClient: HttpClient) { }\r\n  MCTURL(): Observable<string> {\r\n    return this.httpClient.get<string>(this.apiURL + 'MCTURL').pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  UploadFile(formData: FormData): Observable<string> {\r\n    return this.httpClient.post<string>(this.apiURL + 'UploadFile', formData).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  async UploadFileAsync(formData: FormData): Promise<Observable<string>> {\r\n\r\n    return this.httpClient.post<string>(this.apiURL + 'UploadFile', formData).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  protected handleError(err: HttpErrorResponse) {\r\n    // in a real world app, we may send the server to some remote logging infrastructure\r\n    // instead of just logging it to the console\r\n    let errorMessage = '';\r\n    if (err.error instanceof ErrorEvent) {\r\n        // A client-side or network error occurred. Handle it accordingly.\r\n        errorMessage = `An error occurred: ${err.error.message}`;\r\n    } else {\r\n        // The backend returned an unsuccessful response code.\r\n        // The response body may contain clues as to what went wrong,\r\n        errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\r\n    }\r\n    console.error(errorMessage);\r\n    return throwError(errorMessage);\r\n}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ServiceGeneric } from './GenericService.service';\r\nimport { cGenericIdNameItem, cGenericIdNameList } from '../interface/Response/GenericIdName.class';\r\nimport { ModelIdName } from '../interface/Model/ModelIdName.class';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServiceIndustry extends ServiceGeneric<cGenericIdNameItem,cGenericIdNameList,ModelIdName> {\r\n\r\n  constructor(protected httpClient: HttpClient) {\r\n    super(\"Industry/\", httpClient);\r\n  }\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ServiceGeneric } from './GenericService.service';\r\nimport { cJobFairItem, cJobFairList } from '../interface/Response/JobFair.class';\r\nimport { ModelJobFair } from '../interface/Model/ModelJobFair.class';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { ModelPaging } from '../interface/Model/ModelPaging.interface';\r\nimport { tap, catchError } from 'rxjs/operators';\r\nimport { ModelId } from '../interface/Model/ModelId.interface';\r\nimport { ModelJobFairRegisteration } from '../interface/Model/ModelJobFairRegisteration.class';\r\nimport { Constants } from '../constants';\r\nimport { ModelJobFairAttendance } from '../interface/Model/ModelJobFairAttendance.class';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServiceJobFair extends ServiceGeneric<cJobFairItem, cJobFairList, ModelJobFair> {\r\n\r\n\r\n  constructor(protected httpClient: HttpClient) {\r\n    super(\"JobFair/\", httpClient);\r\n  }\r\n  Search(currentPage: number, filterText: string): Observable<cJobFairList> {\r\n\r\n    var model = new ModelPaging()\r\n    model.CurrentPage = currentPage;\r\n    model.filterText = filterText;\r\n    return this.httpClient.post<cJobFairList>(this.apiURL + 'Search', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  CheckRegister(JobFairId: string): Observable<boolean> {\r\n\r\n    var model = new ModelId()\r\n    model.Id = JobFairId;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'CheckRegister', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  Register(model: ModelJobFairRegisteration): Observable<cJobFairList> {\r\n    return this.httpClient.post<cJobFairList>(this.apiURL + 'Register', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  SetAttendance(model: ModelJobFairAttendance): Observable<boolean> {\r\n    return this.httpClient.post<boolean>(this.apiURL + 'SetAttendance', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  Export(JobFairId: string): Observable<string> {\r\n\r\n    var model = new ModelId()\r\n    model.Id = JobFairId;\r\n    return this.httpClient.post<string>(this.apiURL + 'ExportRegisteredUser', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ServiceGeneric } from './GenericService.service';\r\nimport { cGenericIdNameItem, cGenericIdNameList } from '../interface/Response/GenericIdName.class';\r\nimport { ModelIdName } from '../interface/Model/ModelIdName.class';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ModelSubEntity } from '../interface/Model/ModelSubEntity.class';\r\nimport { Observable } from 'rxjs';\r\nimport { tap, catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServiceJobFields extends ServiceGeneric<cGenericIdNameItem,cGenericIdNameList,ModelIdName> {\r\n\r\n  constructor(protected httpClient: HttpClient) {\r\n    super(\"JobFields/\", httpClient);\r\n  }\r\n  ListAnyJobFields(): Observable<cGenericIdNameItem[]> {\r\n    return this.httpClient.get<cGenericIdNameItem[]>(this.apiURL + 'ListAnyJobFields').pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  SubCreate(model: ModelSubEntity): Observable<boolean> {\r\n    return this.httpClient.post<boolean>(this.apiURL + 'SubCreate', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  SubUpdate(model: ModelSubEntity): Observable<boolean> {\r\n    return this.httpClient.post<boolean>(this.apiURL + 'SubUpdate', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  SubActivate(model: ModelSubEntity): Observable<boolean> {\r\n    return this.httpClient.post<boolean>(this.apiURL + 'SubActivate', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  SubDeActivate(model: ModelSubEntity): Observable<boolean> {\r\n    return this.httpClient.post<boolean>(this.apiURL + 'SubDeActivate', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ServiceGeneric } from './GenericService.service';\r\nimport { cJobSeekerItem, cJobSeekerList, cResponseContactInformationRequestList, ResponseContactInformationRequest } from '../interface/Response/JobSeeker.class';\r\nimport { ModelJobSeeker, ModelResumeItem, ModelResumeCertification } from '../interface/Model/ModelJobSeeker.class';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\nimport { ModelId } from '../interface/Model/ModelId.interface';\r\nimport { ModelJobSeekerSearch } from '../interface/Model/ModelJobSeekerSearch.class';\r\nimport { ModelFileUpload } from '../interface/Model/ModelFileUpload.class';\r\nimport { ServiceFiles } from './files.service';\r\nimport { ModelPaging } from '../interface/Model/ModelPaging.interface';\r\nimport { ModelReportDates } from '../interface/Model/ModelReportDates.class';\r\nimport { ReportJobSeekerGender } from '../interface/Response/ReportJobSeekerGender.class';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServiceJobSeeker extends ServiceGeneric<cJobSeekerItem, cJobSeekerList, ModelJobSeeker> {\r\n\r\n  constructor(protected httpClient: HttpClient,\r\n    protected BLServiceFiles: ServiceFiles) {\r\n    super(\"JobSeeker/\", httpClient);\r\n  }\r\n  UploadFile(fileName: string, type: number): Observable<boolean> {\r\n    var model = new ModelFileUpload();\r\n    model.FileName = fileName;\r\n    model.type = type;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'UploadFile', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  UpdateInfo(model: ModelJobSeeker): Observable<boolean> {\r\n    return this.httpClient.post<boolean>(this.apiURL + 'UpdateInfo', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n \r\n  UpdateDescription(model: ModelJobSeeker): Observable<boolean> {\r\n    return this.httpClient.post<boolean>(this.apiURL + 'UpdateDescription', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  UpdateProfile(model: ModelJobSeeker): Observable<boolean> {\r\n    return this.httpClient.post<boolean>(this.apiURL + 'UpdateProfile', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  UpdateSocialMedia(model: ModelJobSeeker): Observable<boolean> {\r\n    return this.httpClient.post<boolean>(this.apiURL + 'UpdateSocialMedia', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  AddEducation(model: ModelResumeItem): Observable<boolean> {\r\n    return this.httpClient.post<boolean>(this.apiURL + 'AddEducation', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  UpdateEducation(model: ModelResumeItem): Observable<boolean> {\r\n    return this.httpClient.post<boolean>(this.apiURL + 'UpdateEducation', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  RemoveEducation(Id: string): Observable<boolean> {\r\n    var model = new ModelId();\r\n    model.Id = Id;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'RemoveEducation', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  AddWorkExperience(model: ModelResumeItem): Observable<boolean> {\r\n    return this.httpClient.post<boolean>(this.apiURL + 'AddWorkExperience', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  UpdateWorkExperience(model: ModelResumeItem): Observable<boolean> {\r\n    return this.httpClient.post<boolean>(this.apiURL + 'UpdateWorkExperience', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  RemoveWorkExperience(Id: string): Observable<boolean> {\r\n    var model = new ModelId();\r\n    model.Id = Id;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'RemoveWorkExperience', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  AddExtraCurricular(model: ModelResumeItem): Observable<boolean> {\r\n    return this.httpClient.post<boolean>(this.apiURL + 'AddExtraCurricular', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  UpdateExtraCurricular(model: ModelResumeItem): Observable<boolean> {\r\n    return this.httpClient.post<boolean>(this.apiURL + 'UpdateExtraCurricular', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  RemoveExtraCurricular(Id: string): Observable<boolean> {\r\n    var model = new ModelId();\r\n    model.Id = Id;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'RemoveExtraCurricular', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  AddCertification(model: ModelResumeCertification): Observable<boolean> {\r\n    \r\n      return this.httpClient.post<boolean>(this.apiURL + 'AddCertification', model).pipe(\r\n        //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n        catchError(this.handleError)\r\n      );\r\n  \r\n  }\r\n  UpdateCertification(model: ModelResumeCertification): Observable<boolean> {\r\n   \r\n    return this.httpClient.post<boolean>(this.apiURL + 'UpdateCertification', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  RemoveCertification(Id: string): Observable<boolean> {\r\n    var model = new ModelId();\r\n    model.Id = Id;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'RemoveCertification', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  Search(model: ModelJobSeekerSearch): Observable<cJobSeekerList> {\r\n    // let headers = new HttpHeaders()\r\n    // headers=headers.set('Authorization', `Bearer 'eyJhbGciOiJSUzI1NiIsImtpZCI6IjNENUZDQTJEOTg3MTI1QUU4NzZBQkI4QjdGQjhENTU4RjNBREE0NzciLCJ0eXAiOiJhdCtqd3QiLCJ4NXQiOiJQVl9LTFpoeEphNkhhcnVMZjdqVldQT3RwSGMifQ.eyJuYmYiOjE2Mjg1MTkwODAsImV4cCI6MTYyODUyOTA4MCwiaXNzIjoiaHR0cHM6Ly9lbXBsb3ltZW50c3RzLmlkZWFsYWtlLmNvbSIsImF1ZCI6InByb2plY3RzLWFwaSIsImNsaWVudF9pZCI6Ijg3YTEwYjg3LVhYWFgtOTQ1Ny0wODNlZDI1ZmFhYzUiLCJzdWIiOiI5ODk3ZjMwYi05NDE2LTRkMDAtYTNkOS01Yjk5MjIzMDM4OGMiLCJhdXRoX3RpbWUiOjE2MjgxNjIwNTcsImlkcCI6ImxvY2FsIiwiQXNwTmV0LklkZW50aXR5LlNlY3VyaXR5U3RhbXAiOiJWRlVWU1hGSEZPWTMySTVHNTRaWDIyWklFRUxBVEFRRCIsInJvbGUiOiJFbXBsb3llciIsInByZWZlcnJlZF91c2VybmFtZSI6InNvbmFsX2FnYXJ3YWxAaWRlYWxha2UuY29tIiwibmFtZSI6InNvbmFsX2FnYXJ3YWxAaWRlYWxha2UuY29tIiwiZW1haWwiOiJzb25hbF9hZ2Fyd2FsQGlkZWFsYWtlLmNvbSIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJNRElEIjoiNjBkOTgyNDc3NTY3YmUxZmEwNDA2MjBlIiwic2NvcGUiOlsib3BlbmlkIiwicHJvZmlsZSIsInByb2plY3RzLWFwaSJdLCJhbXIiOlsicHdkIl19.YjJ7fqYrMpmsmrw7zCqPcCXrqdv38f0JivxbANDxXjkFbY-gKYqiPXzyIdD1-d7qm6WtWIGth-qALAZBK4l8lzMaiHFrrGRrynEt0GfRWFShZ9vvdxAw7-YKEt6oCq-OS_qRA2Wk2XaC2xlT7GAWAVTJ6gnMiM4Oap5rSIdNnCayTJ4f3v04PPXrUv-C4gxoJjezm0LbiUEHgP5PhXmDzIKpJpQqUtkpoQhPzcg7rjc8NYiKY07LoQ0zdAv4TFWge2ITVQQ2WPexfzhQeiHGUZB14u75gNas-z0DpSUBlpZqzuVvb_wjuHFa_WASkrZ6W0Eex3tlBc36rSvN05mZ7w'`);\r\n    return this.httpClient.post<cJobSeekerList>(this.apiURL + 'Search', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  ContactPermissionRequest(model: ModelId): Observable<boolean> {\r\n    return this.httpClient.post<boolean>(this.apiURL + 'ContactPermissionRequest', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  ContactPermissionApprove(model: ModelId): Observable<boolean> {\r\n    return this.httpClient.post<boolean>(this.apiURL + 'ContactPermissionApprove', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  ContactPermissionReject(model: ModelId): Observable<boolean> {\r\n    return this.httpClient.post<boolean>(this.apiURL + 'ContactPermissionReject', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  ContactPermissioGetApprovalList(currentPage: number, filterText: string): Observable<cResponseContactInformationRequestList> {\r\n    var model = new ModelPaging()\r\n    model.CurrentPage = currentPage;\r\n    model.filterText = filterText;\r\n    return this.httpClient.post<cResponseContactInformationRequestList>(this.apiURL + 'ContactPermissioGetApprovalList', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  ReportJobSeekerCount(model: ModelReportDates): Observable<number> {\r\n    return this.httpClient.post<number>(this.apiURL + 'ReportJobSeekerCount', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  ReportJobSeekerGenderCount(model: ModelReportDates): Observable<ReportJobSeekerGender> {\r\n    return this.httpClient.post<ReportJobSeekerGender>(this.apiURL + 'ReportJobSeekerGenderCount', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  ImportCertification(): Observable<ReportJobSeekerGender> {\r\n    return this.httpClient.get<ReportJobSeekerGender>(this.apiURL + 'ImportCertification').pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ServiceGeneric } from './GenericService.service';\r\nimport { cJobItem, cJobList, ReportJobCount } from '../interface/Response/Job.class';\r\nimport { ModelJob } from '../interface/Model/ModelJob.class';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { tap, catchError } from 'rxjs/operators';\r\nimport { ModelPaging } from '../interface/Model/ModelPaging.interface';\r\nimport { ModelJobSearch } from '../interface/Model/ModelJobSearch.class';\r\nimport { ModelId } from '../interface/Model/ModelId.interface';\r\nimport { JobStats } from '../interface/Response/JobStats.class';\r\nimport { ModelAdminJobSearch } from '../interface/Model/ModelJobFilter.class';\r\nimport { ModelReportJob } from '../interface/Model/ModelReportDates.class';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServiceJob extends ServiceGeneric<cJobItem, cJobList, ModelJob> {\r\n  searchSer(param: { filterText: \"Market\"; }) {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n\r\n  constructor(protected httpClient: HttpClient) {\r\n    super(\"Job/\", httpClient);\r\n  }\r\n  GetJobsByCompanyId(Id: string): Observable<cJobItem[]> {\r\n    var model = new ModelId();\r\n    model.Id = Id\r\n    return this.httpClient.post<cJobItem[]>(this.apiURL + 'GetJobsByCompanyId', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  GetMyJobStats(): Observable<JobStats> {\r\n    return this.httpClient.get<JobStats>(this.apiURL + 'GetMyJobStats').pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  updateDraft(model: ModelJob): Observable<boolean> {\r\n    return this.httpClient.post<boolean>(this.apiURL + 'updateDraft', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  updateDraftPublish(model: ModelJob): Observable<boolean> {\r\n    return this.httpClient.post<boolean>(this.apiURL + 'updateDraftPublish', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  updatePublish(model: ModelJob): Observable<boolean> {\r\n    return this.httpClient.post<boolean>(this.apiURL + 'updatePublish', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  ListAllByEmployerId(currentPage: number, filterText: string): Observable<cJobList> {\r\n    var model = new ModelPaging()\r\n    model.CurrentPage = currentPage;\r\n    model.filterText = filterText;\r\n    return this.httpClient.post<cJobList>(this.apiURL + 'ListAllByEmployerId', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  Search(model: ModelJobSearch): Observable<cJobList> {\r\n    return this.httpClient.post<cJobList>(this.apiURL + 'Search', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  setApproved(Id: string): Observable<boolean> {\r\n    var model = new ModelId();\r\n    model.Id = Id;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'updateApproved', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  setRejected(Id: string): Observable<boolean> {\r\n    var model = new ModelId();\r\n    model.Id = Id;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'updateRejected', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  GetJobWaitingApproval(currentPage: number, filterText: string): Observable<cJobList> {\r\n    var model = new ModelPaging()\r\n    model.CurrentPage = currentPage;\r\n    model.filterText = filterText;\r\n    return this.httpClient.post<cJobList>(this.apiURL + 'GetJobWaitingApproval', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  AdminJobSearch(model: ModelAdminJobSearch): Observable<cJobList> {\r\n    return this.httpClient.post<cJobList>(this.apiURL + 'AdminJobSearch', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  GetJobWaitingApprovalCount(): Observable<number> {\r\n    return this.httpClient.get<number>(this.apiURL + 'GetJobWaitingApprovalCount').pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  ReportJobCount(model: ModelReportJob): Observable<ReportJobCount[]> {\r\n   \r\n    return this.httpClient.post<ReportJobCount[]>(this.apiURL + 'ReportJobCount', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ServiceGeneric } from './GenericService.service';\r\nimport { cGenericIdNameItem, cGenericIdNameList } from '../interface/Response/GenericIdName.class';\r\nimport { ModelIdName } from '../interface/Model/ModelIdName.class';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServiceLanguages extends ServiceGeneric<cGenericIdNameItem,cGenericIdNameList,ModelIdName> {\r\n\r\n  constructor(protected httpClient: HttpClient) {\r\n    super(\"Languages/\", httpClient);\r\n  }\r\n}\r\n","import { Injectable, OnInit } from '@angular/core';\r\nimport { AuthService } from '../core/auth-service.component';\r\nimport { Subject } from 'rxjs';\r\nimport { AuthContext } from '../model/auth-context';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServiceLoginUser implements OnInit {\r\n  AuthContext: AuthContext;\r\n  isLoggedIn = false;\r\n  userName: string;\r\n  userId: string;\r\n  userRole: string;\r\n  IsAdmin: boolean;\r\n  isEmployer: boolean;\r\n  isJobSeeker: boolean;\r\n\r\n  private _userId = new Subject<string>();\r\n  UserIdChanged = this._userId.asObservable();\r\n\r\n  private _userName = new Subject<string>();\r\n  UserNameChanged = this._userName.asObservable();\r\n\r\n  private _userRole = new Subject<string>();\r\n  UserRoleChanged = this._userRole.asObservable();\r\n\r\n  private _userIsLoggedIn = new Subject<boolean>();\r\n  UserIsLoggedInChanged = this._userIsLoggedIn.asObservable();\r\n\r\n  private _userIsAdmin = new Subject<boolean>();\r\n  UserIsAdminChanged = this._userIsAdmin.asObservable();\r\n\r\n  private _userIsEmployer = new Subject<boolean>();\r\n  UserIsEmployerChanged = this._userIsEmployer.asObservable();\r\n\r\n  private _userIsJobSeeker = new Subject<boolean>();\r\n  UserIsJobSeekerChanged = this._userIsJobSeeker.asObservable();\r\n\r\n  constructor(private _authService: AuthService) {\r\n    this._authService.loginChanged.subscribe(loggedIn => {\r\n      this.isLoggedIn = loggedIn;\r\n      this._userIsLoggedIn.next(loggedIn);\r\n    });\r\n    this._authService.authContextChanged.subscribe(obj => {\r\n      this.AuthContext = obj;\r\n      if (this.isLoggedIn && this.AuthContext) {\r\n        this.userName = obj.userProfile.FullName;\r\n        this.userId = obj.userId;\r\n        this.userRole = obj.userProfile.Role;\r\n        this.IsAdmin = obj.isAdmin;\r\n        this.isEmployer = obj.isEmployer;\r\n        this.isJobSeeker = obj.isJobSeeker;\r\n\r\n        this._userName.next(obj.userProfile.FullName);\r\n        this._userId.next(obj.userId);\r\n        this._userRole.next(obj.userProfile.Role);\r\n        this._userIsAdmin.next(obj.isAdmin);\r\n        this._userIsEmployer.next(obj.isEmployer);\r\n        this._userIsJobSeeker.next(obj.isJobSeeker);\r\n      }\r\n    });\r\n  }\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Constants } from '../constants';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { catchError, tap } from 'rxjs/operators';\nimport { Observable, throwError } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MiscService {\n\n  protected apiURL = Constants.apiRoot + 'Misc/';\n\n  constructor(protected httpClient: HttpClient) { }\n  MCTURL(): Observable<string> {\n    return this.httpClient.get<string>(this.apiURL + 'MCTURL').pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  protected handleError(err: HttpErrorResponse) {\n    // in a real world app, we may send the server to some remote logging infrastructure\n    // instead of just logging it to the console\n    let errorMessage = '';\n    if (err.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      errorMessage = `An error occurred: ${err.error.message}`;\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\n    }\n    console.error(errorMessage);\n    return throwError(errorMessage);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { ServiceGeneric } from './GenericService.service';\r\nimport { cGenericIdNameItem, cGenericIdNameList } from '../interface/Response/GenericIdName.class';\r\nimport { ModelIdName } from '../interface/Model/ModelIdName.class';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServiceQualification extends ServiceGeneric<cGenericIdNameItem,cGenericIdNameList,ModelIdName> {\r\n\r\n  constructor(protected httpClient: HttpClient) {\r\n    super(\"Qualification/\", httpClient);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ModelCompany } from '../interface/Model/ModelCompany.class';\r\nimport { ServiceGeneric } from './GenericService.service';\r\nimport { cCompanyItem, cCompanyList } from '../interface/Response/Company.class';\r\nimport { Observable } from 'rxjs';\r\nimport { ModelId } from '../interface/Model/ModelId.interface';\r\nimport { tap, catchError } from 'rxjs/operators';\r\nimport { CompanyEmployers } from '../interface/Response/CompanyEmployer.class';\r\nimport { ModelCompanyAddEmployer } from '../interface/Model/ModelCompanyAddEmployer.class';\r\nimport { ModelPaging } from '../interface/Model/ModelPaging.interface';\r\nimport { ModelReportDates } from '../interface/Model/ModelReportDates.class';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServiceCompany extends ServiceGeneric<cCompanyItem,cCompanyList,ModelCompany> {\r\n\r\n  constructor(protected httpClient: HttpClient) {\r\n    super(\"Company/\", httpClient);\r\n  }\r\n  ListCompanyEmployers(Id: string): Observable<CompanyEmployers[]> {\r\n    var model = new ModelId();\r\n    model.Id = Id;\r\n    return this.httpClient.post<CompanyEmployers[]>(this.apiURL + 'ListCompanyEmployers', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  } \r\n  \r\n  AddEmployer(UserId: string, CompanyId: string): Observable<boolean> {\r\n    var model = new ModelCompanyAddEmployer();\r\n    model.UserId = UserId;\r\n    model.CompanyId = CompanyId;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'AddEmployer', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  } \r\n  RemoveEmployer(UserId: string, CompanyId: string): Observable<boolean> {\r\n    var model = new ModelCompanyAddEmployer();\r\n    model.UserId = UserId;\r\n    model.CompanyId = CompanyId;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'RemoveEmployer', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  } \r\n  GetCompanyWaitingApproval(currentPage: number, filterText: string): Observable<cCompanyList> {\r\n    var model = new ModelPaging()\r\n    model.CurrentPage = currentPage;\r\n    model.filterText = filterText;\r\n    return this.httpClient.post<cCompanyList>(this.apiURL + 'GetCompanyWaitingApproval', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  setApproved(Id: string): Observable<boolean> {\r\n    var model = new ModelId();\r\n    model.Id = Id;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'updateApproved', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  setRejected(Id: string): Observable<boolean> {\r\n    var model = new ModelId();\r\n    model.Id = Id;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'updateRejected', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  ListCompany(): Observable<CompanyEmployers> {\r\n    return this.httpClient.get<CompanyEmployers>(this.apiURL + 'ListCompany').pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  ListAnyCompany(): Observable<CompanyEmployers> {\r\n    return this.httpClient.get<CompanyEmployers>(this.apiURL + 'ListAnyCompany').pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  ListAnyCompanyPaged(currentPage: number, filterText: string): Observable<cCompanyList> {\r\n    var model = new ModelPaging();\r\n    model.CurrentPage = currentPage;\r\n    model.filterText = filterText;\r\n    return this.httpClient.post<cCompanyList>(this.apiURL + 'ListAnyCompanyPaged',model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  GetCompanyWaitingApprovalCount(): Observable<number> {\r\n    return this.httpClient.get<number>(this.apiURL + 'GetCompanyWaitingApprovalCount').pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  ReportCompanyCount(model: ModelReportDates): Observable<number> {\r\n   \r\n    return this.httpClient.post<number>(this.apiURL + 'ReportCompanyCount', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ShowMessage } from '../interface/Model/ModelShowMessage.class';\r\nimport { Observable, Subject, observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServiceShowMessage {\r\n\r\n  constructor() { }\r\n  private _msgSubject = new Subject<ShowMessage>();\r\n\r\n  msgChanged = this._msgSubject.asObservable();\r\n  \r\n  sendMessage(message: ShowMessage) {\r\n      this._msgSubject.next(message);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Constants } from '../constants';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { ModelTranslateList } from '../interface/Model/ModelTranslateList.class';\nimport { Observable, throwError } from 'rxjs';\nimport { TranslateList } from '../interface/Response/TranslateList.class';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServiceTranslateList {\n\n  private apiURL = Constants.apiRoot + 'Translate/'\n\n  constructor(private httpClient: HttpClient) { }\n  \n  ListTranslationByType(model: ModelTranslateList): Observable<TranslateList> {\n    return this.httpClient.post<TranslateList>(this.apiURL + 'ListTranslationByType', model).pipe(\n      ////tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  SaveListTranslation(model: TranslateList): Observable<TranslateList> {\n    return this.httpClient.post<TranslateList>(this.apiURL + 'SaveListTranslation', model).pipe(\n      ////tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  private handleError(err: HttpErrorResponse) {\n    // in a real world app, we may send the server to some remote logging infrastructure\n    // instead of just logging it to the console\n    let errorMessage = '';\n    if (err.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      errorMessage = `An error occurred: ${err.error.message}`;\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\n    }\n    console.error(errorMessage);\n    return throwError(errorMessage);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { ModelId } from '../interface/Model/ModelId.interface';\r\nimport { tap, catchError } from 'rxjs/operators';\r\nimport { cUserProfileItem, cUserProfileList } from '../interface/Response/UserProfile.class';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { HttpErrorResponse, HttpClient } from '@angular/common/http';\r\nimport { Constants } from '../constants';\r\nimport { ModelPaging } from '../interface/Model/ModelPaging.interface';\r\nimport { ModelUserProfile } from '../interface/Model/ModelUserProfile.class';\r\nimport { ServiceGeneric } from './GenericService.service';\r\nimport { ModelAccountSearch } from '../interface/Model/ModelAccountSearch.class';\r\nimport { ModelMyAssignedAccount } from '../interface/Model/ModelMyAssignedAccount.class';\r\nimport { ModelChangePassword } from '../interface/Model/ModelChangePassword.class';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServiceUserProfile extends ServiceGeneric<cUserProfileItem, cUserProfileList, ModelUserProfile> {\r\n  constructor(protected httpClient: HttpClient) {\r\n    super(\"AccountManagement/\", httpClient);\r\n  }\r\n  ChangePassword(model: ModelChangePassword): Observable<boolean> {\r\n\r\n    return this.httpClient.post<boolean>(this.apiURL + 'ChangePassword', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  Limit(userId: string): Observable<cUserProfileItem[]> {\r\n    var model = new ModelId();\r\n    model.Id = userId;\r\n    return this.httpClient.post<cUserProfileItem[]>(this.apiURL + 'Limit', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  GetMyUser(): Observable<cUserProfileItem> {\r\n    return this.httpClient.get<cUserProfileItem>(this.apiURL + 'GetMyUser').pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  getSearch(currentPage: number, filterText: string, filterType: string): Observable<cUserProfileList> {\r\n\r\n    var model = new ModelAccountSearch()\r\n    model.CurrentPage = currentPage;\r\n    model.filterText = filterText;\r\n    model.filterType = +filterType;\r\n\r\n    return this.httpClient.post<cUserProfileList>(this.apiURL + 'ListAll', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  GetMyTrainersBySubPartnerId(subPartnerId: string): Observable<cUserProfileItem[]> {\r\n    var model = new ModelId();\r\n    model.Id = subPartnerId;\r\n    return this.httpClient.post<cUserProfileItem[]>(this.apiURL + 'GetMyTrainersBySubPartnerId', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  UpdateUserRole(type: string): Observable<boolean> {\r\n    var model = new ModelId();\r\n    model.Id = type;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'UpdateRole', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  GetMyTrainers(): Observable<cUserProfileItem[]> {\r\n    return this.httpClient.get<cUserProfileItem[]>(this.apiURL + 'GetMyTrainers').pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  GetPartnerSearch(filterText: string, currentPage: number = 1): Observable<cUserProfileItem[]> {\r\n    var model = new ModelPaging()\r\n    model.CurrentPage = currentPage;\r\n    model.filterText = filterText;\r\n    return this.httpClient.post<cUserProfileItem[]>(this.apiURL + 'GetPartnerSearch', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  GetSubPartnerSearch(filterText: string, currentPage: number = 1): Observable<cUserProfileItem[]> {\r\n    var model = new ModelPaging()\r\n    model.CurrentPage = currentPage;\r\n    model.filterText = filterText;\r\n    return this.httpClient.post<cUserProfileItem[]>(this.apiURL + 'GetSubPartnerSearch', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  AddAccountToMyAssignedToAccount(UserId: string, AccountId, type: number): Observable<boolean> {\r\n    var model = new ModelMyAssignedAccount()\r\n    model.UserId = UserId;\r\n    model.AccountId = AccountId;\r\n    model.Type = type;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'AddAccountToMyAssignedToAccount', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  RemoveAccountToMyAssignedToAccount(UserId: string, AccountId: string, type: number): Observable<boolean> {\r\n    var model = new ModelMyAssignedAccount()\r\n    model.UserId = UserId;\r\n    model.AccountId = AccountId;\r\n    model.Type = type;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'RemoveAccountToMyAssignedToAccount', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  searchActiveEmployer(filterText: string): Observable<cUserProfileItem[]> {\r\n    var model = new ModelPaging()\r\n    model.CurrentPage = 1;\r\n    model.filterText = filterText;\r\n    return this.httpClient.post<cUserProfileItem[]>(this.apiURL + 'ListActiveEmployer', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  searchActiveJobSeeker(filterText: string): Observable<cUserProfileItem[]> {\r\n    var model = new ModelPaging()\r\n    model.CurrentPage = 1;\r\n    model.filterText = filterText;\r\n    return this.httpClient.post<cUserProfileItem[]>(this.apiURL + 'ListActiveJobSeeker', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  ResendActivationLink(Email:string): Observable<boolean> {\r\n    var model = new ModelUserProfile();\r\n    model.Email = Email;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'ResendActivationLink', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  ResendPasswordLink(Email:string): Observable<boolean> {\r\n    var model = new ModelUserProfile();\r\n    model.Email = Email;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'ResendPasswordLink', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { ServiceGeneric } from './GenericService.service';\r\nimport { cGenericIdNameItem, cGenericIdNameList } from '../interface/Response/GenericIdName.class';\r\nimport { ModelIdName } from '../interface/Model/ModelIdName.class';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServiceYearsOfExperience extends ServiceGeneric<cGenericIdNameItem,cGenericIdNameList,ModelIdName> {\r\n\r\n  constructor(protected httpClient: HttpClient) {\r\n    super(\"YearsOfExperience/\", httpClient);\r\n  }\r\n}\r\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormArray, FormControl } from '@angular/forms';\r\nimport { AngularEditorConfig } from '@kolkov/angular-editor';\r\nimport { ConfirmationDialogService } from 'src/app/common/confirmation-dialog/confirmation-dialog.service';\r\nimport { FileSystemDirectoryEntry, NgxFileDropEntry, FileSystemFileEntry } from 'ngx-file-drop';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { ServiceFiles } from 'src/app/services/files.service';\r\n@Component({\r\n  selector: 'app-test',\r\n  templateUrl: './test.component.html',\r\n  styleUrls: ['./test.component.css']\r\n})\r\nexport class TestComponent {\r\n\r\n  \r\n}","<section class=\"accounts\">\r\n  <div class=\"container\">\r\n    <div class=\"row w-100\">\r\n      <app-upload-files></app-upload-files>\r\n    </div>\r\n  </div>\r\n</section>","import { NgModule } from '@angular/core';\r\nimport { SharedModule } from 'src/app/common/sharedmodule.module';\r\nimport { TestComponent } from './test.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TestComponent\r\n  ],\r\n  imports: [\r\n    SharedModule,\r\n    HttpClientModule,\r\n    RouterModule.forChild([\r\n      { path: 'Test', component: TestComponent },\r\n    ])\r\n  ]\r\n})\r\nexport class TestModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}