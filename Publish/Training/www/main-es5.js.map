{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/Account/account.module.ts","webpack:///src/app/Account/account/account.component.ts","webpack:///src/app/Account/account/account.component.html","webpack:///src/app/Account/trainee/trainee.component.ts","webpack:///src/app/Account/trainee/trainee.component.html","webpack:///src/app/Account/trainer-certificate/trainer-certificate.component.ts","webpack:///src/app/Account/trainer-certificate/trainer-certificate.component.html","webpack:///src/app/Certificates/category/category.component.ts","webpack:///src/app/Certificates/category/category.component.html","webpack:///src/app/Certificates/generics/generics.component.ts","webpack:///src/app/Certificates/generics/generics.component.html","webpack:///src/app/Certificates/trainer-approval/trainer-approval.component.ts","webpack:///src/app/Certificates/trainer-approval/trainer-approval.component.html","webpack:///src/app/Certificates/trainingcenter/trainingcenter.component.ts","webpack:///src/app/Certificates/trainingcenter/trainingcenter.component.html","webpack:///src/app/Certificates/verify/verify.component.ts","webpack:///src/app/Certificates/verify/verify.component.html","webpack:///src/app/Content/about-edit/about-edit.component.ts","webpack:///src/app/Content/about-edit/about-edit.component.html","webpack:///src/app/Content/info-edit/info-edit.component.ts","webpack:///src/app/Content/info-edit/info-edit.component.html","webpack:///src/app/Content/partner-logo/partner-logo.component.ts","webpack:///src/app/Content/partner-logo/partner-logo.component.html","webpack:///src/app/Content/policy-edit/policy-edit.component.ts","webpack:///src/app/Content/policy-edit/policy-edit.component.html","webpack:///src/app/Content/site-logo/site-logo.component.ts","webpack:///src/app/Content/site-logo/site-logo.component.html","webpack:///src/app/Content/term-edit/term-edit.component.ts","webpack:///src/app/Content/term-edit/term-edit.component.html","webpack:///src/app/DataManagement/Course/Course-list.component.ts","webpack:///src/app/DataManagement/Course/Course-list.component.html","webpack:///src/app/DataManagement/TrainingCategory/TrainingCategory-list.component.ts","webpack:///src/app/DataManagement/TrainingCategory/TrainingCategory-list.component.html","webpack:///src/app/DataManagement/area/area.component.ts","webpack:///src/app/DataManagement/area/area.component.html","webpack:///src/app/DataManagement/city/city.component.ts","webpack:///src/app/DataManagement/city/city.component.html","webpack:///src/app/DataManagement/data-management.module.ts","webpack:///src/app/DataManagement/ngotype/ngotype.component.ts","webpack:///src/app/DataManagement/ngotype/ngotype.component.html","webpack:///src/app/DataManagement/training-type/training-type.component.ts","webpack:///src/app/DataManagement/training-type/training-type.component.html","webpack:///src/app/EntityManagement/entity-management.module.ts","webpack:///src/app/EntityManagement/partner-reports/partner-reports.component.ts","webpack:///src/app/EntityManagement/partner-reports/partner-reports.component.html","webpack:///src/app/EntityManagement/partner/partner.component.ts","webpack:///src/app/EntityManagement/partner/partner.component.html","webpack:///src/app/EntityManagement/sub-partner/sub-partner.component.ts","webpack:///src/app/EntityManagement/sub-partner/sub-partner.component.html","webpack:///src/app/EntityManagement/training-center/training-center.component.ts","webpack:///src/app/EntityManagement/training-center/training-center.component.html","webpack:///src/app/Enum/CertificateType.enum.ts","webpack:///src/app/Enum/ConfigForm.enum.ts","webpack:///src/app/Enum/ContentData.enum.ts","webpack:///src/app/Enum/LanguageType.enum.ts","webpack:///src/app/Enum/TranslateType.enum.ts","webpack:///src/app/Enum/UserType.enum.ts","webpack:///src/app/Exam/take-exam/take-exam.component.ts","webpack:///src/app/Exam/take-exam/take-exam.component.html","webpack:///src/app/Exam/templates/templates.component.ts","webpack:///src/app/Exam/templates/templates.component.html","webpack:///src/app/Home/about/about.component.ts","webpack:///src/app/Home/about/about.component.html","webpack:///src/app/Home/policy/policy.component.ts","webpack:///src/app/Home/policy/policy.component.html","webpack:///src/app/Questions/create/create.component.ts","webpack:///src/app/Questions/create/create.component.html","webpack:///src/app/Questions/list/list.component.ts","webpack:///src/app/Questions/list/list.component.html","webpack:///src/app/Request/register/register.component.ts","webpack:///src/app/Request/register/register.component.html","webpack:///src/app/Training/attendance/attendance.component.ts","webpack:///src/app/Training/attendance/attendance.component.html","webpack:///src/app/Training/my-trainings/my-trainings.component.ts","webpack:///src/app/Training/my-trainings/my-trainings.component.html","webpack:///src/app/Training/trainee-list/trainee-list.component.ts","webpack:///src/app/Training/trainee-list/trainee-list.component.html","webpack:///src/app/Training/training-list/training-list.component.ts","webpack:///src/app/Training/training-list/training-list.component.html","webpack:///src/app/Training/training.module.ts","webpack:///src/app/Translate/translate-list/translate-list.component.ts","webpack:///src/app/Translate/translate-list/translate-list.component.html","webpack:///src/app/admin/admin-routing.module.ts","webpack:///src/app/admin/admin.module.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/common/ConfigForms/AdminConfig/create-form/create-form.component.ts","webpack:///src/app/common/ConfigForms/AdminConfig/create-form/create-form.component.html","webpack:///src/app/common/ConfigForms/components/SelectMulti/selectmulti.component.ts","webpack:///src/app/common/ConfigForms/components/button/button.component.ts","webpack:///src/app/common/ConfigForms/components/dynamic-field/dynamic-field.directive.ts","webpack:///src/app/common/ConfigForms/components/dynamic-form/dynamic-form.component.ts","webpack:///src/app/common/ConfigForms/components/input/input.component.ts","webpack:///src/app/common/ConfigForms/components/select/select.component.ts","webpack:///src/app/common/ConfigForms/field.interface.ts","webpack:///src/app/common/FormControls/auto-compelet-list-generic/auto-compelet-list-generic.component.ts","webpack:///src/app/common/FormControls/auto-compelet-list-generic/auto-compelet-list-generic.component.html","webpack:///src/app/common/FormControls/search-partner-entity/search-partner-entity.component.ts","webpack:///src/app/common/FormControls/search-partner-entity/search-partner-entity.component.html","webpack:///src/app/common/FormControls/search-trainee/search-trainee.component.ts","webpack:///src/app/common/FormControls/search-trainee/search-trainee.component.html","webpack:///src/app/common/add-trainee/add-trainee.component.html","webpack:///src/app/common/add-trainee/add-trainee.component.ts","webpack:///src/app/common/confirmation-dialog/confirmation-dialog.component.ts","webpack:///src/app/common/confirmation-dialog/confirmation-dialog.component.html","webpack:///src/app/common/confirmation-dialog/confirmation-dialog.service.ts","webpack:///src/app/common/footer/footer.component.ts","webpack:///src/app/common/footer/footer.component.html","webpack:///src/app/common/formcontrols/search-partner/search-partner.component.ts","webpack:///src/app/common/formcontrols/search-partner/search-partner.component.html","webpack:///src/app/common/formcontrols/search-sub-partner-entity/search-sub-partner-entity.component.ts","webpack:///src/app/common/formcontrols/search-sub-partner-entity/search-sub-partner-entity.component.html","webpack:///src/app/common/formcontrols/search-sub-partner/search-sub-partner.component.ts","webpack:///src/app/common/formcontrols/search-sub-partner/search-sub-partner.component.html","webpack:///src/app/common/header/header.component.ts","webpack:///src/app/common/header/header.component.html","webpack:///src/app/common/pagination/components/custom-pagination/custom-pagination.component.ts","webpack:///src/app/common/pagination/components/custom-pagination/custom-pagination.component.html","webpack:///src/app/common/pagination/page.ts","webpack:///src/app/common/pagination/pageable.ts","webpack:///src/app/common/pagination/services/custom-pagination.service.ts","webpack:///src/app/common/sharedmodule.module.ts","webpack:///src/app/config/config-request-register/config-request-register.component.ts","webpack:///src/app/config/config-request-register/config-request-register.component.html","webpack:///src/app/config/config-trainee/config-trainee.component.ts","webpack:///src/app/config/config-trainee/config-trainee.component.html","webpack:///src/app/constants.ts","webpack:///src/app/core/account.service.ts","webpack:///src/app/core/admin-route-guard.ts","webpack:///src/app/core/auth-interceptor.service.ts","webpack:///src/app/core/auth-service.component.ts","webpack:///src/app/core/core.module.ts","webpack:///src/app/core/project.service.ts","webpack:///src/app/core/utils.ts","webpack:///src/app/home/contact-us.component.ts","webpack:///src/app/home/contact-us.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/home/signin-redirect-callback.component.ts","webpack:///src/app/home/signout-redirect-callback.component.ts","webpack:///src/app/home/terms/terms.component.ts","webpack:///src/app/home/terms/terms.component.html","webpack:///src/app/home/unauthorized.component.ts","webpack:///src/app/home/unauthorized.component.html","webpack:///src/app/interface/Model/ModelAccountSearch.class.ts","webpack:///src/app/interface/Model/ModelArea.class.ts","webpack:///src/app/interface/Model/ModelChangeEmail.class.ts","webpack:///src/app/interface/Model/ModelConfigForm.class.ts","webpack:///src/app/interface/Model/ModelConfigFormGet.class.ts","webpack:///src/app/interface/Model/ModelContentData.class.ts","webpack:///src/app/interface/Model/ModelCourse.class.ts","webpack:///src/app/interface/Model/ModelEntityMember.class.ts","webpack:///src/app/interface/Model/ModelEntitySubEntityIds.class.ts","webpack:///src/app/interface/Model/ModelEntitySubPartner.class.ts","webpack:///src/app/interface/Model/ModelEntityTrainingCenter.class.ts","webpack:///src/app/interface/Model/ModelExamTemplate.class.ts","webpack:///src/app/interface/Model/ModelFilterQuestions.class.ts","webpack:///src/app/interface/Model/ModelFilterTraining.class.ts","webpack:///src/app/interface/Model/ModelId.interface.ts","webpack:///src/app/interface/Model/ModelLanguage.class.ts","webpack:///src/app/interface/Model/ModelMyAssignedAccount.class.ts","webpack:///src/app/interface/Model/ModelPaging.interface.ts","webpack:///src/app/interface/Model/ModelQuestions.class.ts","webpack:///src/app/interface/Model/ModelRequestRegister.class.ts","webpack:///src/app/interface/Model/ModelSaveAttendance.class.ts","webpack:///src/app/interface/Model/ModelShowMessage.class.ts","webpack:///src/app/interface/Model/ModelTrainee.class.ts","webpack:///src/app/interface/Model/ModelTraineeTraining.class.ts","webpack:///src/app/interface/Model/ModelTrainerCertificateApproval.class.ts","webpack:///src/app/interface/Model/ModelTraining.class.ts","webpack:///src/app/interface/Model/ModelTrainingCategory.class.ts","webpack:///src/app/interface/Model/ModelTranslateList.class.ts","webpack:///src/app/interface/Model/ModelUserProfile.class.ts","webpack:///src/app/interface/Model/ModelUserType.class.ts","webpack:///src/app/interface/Response/City.class.ts","webpack:///src/app/interface/Response/EntityPartner.class.ts","webpack:///src/app/interface/Response/EntitySubPartner.class.ts","webpack:///src/app/interface/Response/LogoPartner.class.ts","webpack:///src/app/interface/Response/NGOType.class.ts","webpack:///src/app/interface/Response/StatsCount.class.ts","webpack:///src/app/interface/Response/Trainee.class.ts","webpack:///src/app/interface/Response/Training.class.ts","webpack:///src/app/interface/Response/TrainingCategory.interface.ts","webpack:///src/app/interface/Response/TrainingType.class.ts","webpack:///src/app/interface/Response/UserProfile.class.ts","webpack:///src/app/interface/baseComponent.class.ts","webpack:///src/app/interface/forms/AutoComplete.class.ts","webpack:///src/app/model/auth-context.ts","webpack:///src/app/services/GenericService.service.ts","webpack:///src/app/services/Question.service.ts","webpack:///src/app/services/certificate.service.ts","webpack:///src/app/services/config-form.service.ts","webpack:///src/app/services/content-data.service.ts","webpack:///src/app/services/datamanagement.service.ts","webpack:///src/app/services/entitymanagement.service.ts","webpack:///src/app/services/exam-template.service.ts","webpack:///src/app/services/exam.service.ts","webpack:///src/app/services/loginuser.service.ts","webpack:///src/app/services/logo-partner.service.ts","webpack:///src/app/services/misc.service.ts","webpack:///src/app/services/show-message.service.ts","webpack:///src/app/services/trainee.service.ts","webpack:///src/app/services/training.service.ts","webpack:///src/app/services/translate-list.service.ts","webpack:///src/app/services/userprofile.service.ts","webpack:///src/app/ztest/test/test.component.ts","webpack:///src/app/ztest/test/test.component.html","webpack:///src/app/ztest/test/test.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AccountModule","forChild","path","component","canActivate","declarations","imports","providers","AccountComponent","BLServiceUserProfile","BLServiceEntityManagement","BLServiceDataManagement","paginationService","modalService","router","BLServiceShowMessage","BLServiceLoginUser","BLTranslate","emailPattern","pageTitle","filterType","filtertxt","modelNameEdited","modelIsCreate","page","isClicked","IsDatesCorrect","modelChangeEmail","get","subscribe","res","AccountActivationLinkFailed","AccountActivationLinkSuccess","AccountPasswordSucess","AccountPasswordFailed","loadData","lstUserType","getUserListByType","userRole","getCityListActive","next","lst","lstCity","error","err","message","getEntityPartnerListActive","lstPartners","getSearch","pageable","pageCurrent","lstUserProfile","pageSize","totalElements","totalCount","content","lstResult","getNextPage","getPreviousPage","Email","ResendActivationLink","response","Success","sendMessage","ResendPasswordLink","Id","confirm","msgsetActivate","setActivate","msgActivatedSuccessfully","msgsetDeactivate","setDeactivate","msgDeactivatedSuccessfully","modelObj","lstPartnersSelected","lstSubPartnersSelected","open","backdropClass","centered","modelForm","valid","model","Name","Type","CityId","AreaId","TrainerTrainingDetails","TrainerStartDate","TrainerEndDate","SelectedPartnerEntityId","SelectedSubPartnerEntityId","create","msgSavedSuccessfully","dismissAll","update","obj","toString","MyPartnerListIds","map","MySubPartnerListIds","PartnerChange","CityChange","type","PartnerId","msgsetRemove","memberRemoveEntityPartner","ReloadTheAccount","memberAddEntityPartner","memberRemoveEntitySubPartner","memberAddEntitySubPartner","UserId","getGetByid","getEntitySubPartnerListActive","lstSubPartners","city","find","item","lstArea","Areas","filter","a","IsActive","sort","x","y","localeCompare","param","CompareTwoDates","navigate","emailOld","EmailOld","UpdateUserEmail","filterbtn","createBtn","getloadPageCurrent","selector","templateUrl","styleUrls","TraineeComponent","BLServiceTrainee","getAll","lstTrainee","TraineeId","TrainerCertificateComponent","BLService","route","modelName","modelId","snapshot","paramMap","MyTrainerCertificate","lstData","CategoryComponent","BLServiceCertificate","isTraineeChecked","isTrainerChecked","FilesURL","uploadFile","files","fileType","length","fileToUpload","CertificateSelectFileError","fileUploadResponse","getTrainingTypeListActive","lstTrainingTypes","CertificateListAllByPartnerId","lstCertificate","selectedTrainingTypeId","selectedTrainingCategory","event","value","getTrainingCategoryListByTrainingType","lstTrainingCategory","target","partnerFileToUpload","uploadCategoryCertificateFile","CertificateActivate","CertificateDeActivate","GenericsComponent","http","onUploadFinished","console","log","OnParentFileChanged","CertificatePDFOnly","CertificateListAllGenericByPartnerId","CertificateListAllSystemGeneric","lstSystemCertificate","TrainerApprovalComponent","msgApprovedSuccessfully","msgsetApproved","GetTrainerCertificate","TrainerId","TrainingCategoryId","CertificateApprove","CertificateTrainingCenterComponent","CertificateListAllByTrainingCenterId","selectPartnerId","selectedTrainingCenter","selectedPartner","tc","TrainingCenters","lstTrainingCenter","uploadTrainingCenterCertificateFile","VerifyComponent","AboutEditComponent","ContentDataOneGetByTypeId","About","updateContentData","modelSaveBtn","InfoEditComponent","Info","PartnerLogoComponent","getLogoPartnerAll","lstLogoPartner","FileToUpload","LogoPartnerSelectFileError","createLogoPartner","WebsiteURL","updateLogoPartner","_id","setLogoPartnerActivate","setLogoPartnerDeactivate","PolicyEditComponent","Policy","SiteLogoComponent","msgPngOnly","updateSiteLogo","fileInput","nativeElement","TermEditComponent","Terms","CourseListComponent","objTrainingCategory","ModelIsCreate","CourseId","filterCourse","PAGE_SIZE","getTrainingCategoryGetByid","Course","b","loadDataFilter","toLocaleLowerCase","indexOf","setCourseActivate","setCourseDeactivate","createCourse","updateCourse","name","Courses","Translate","onBack","TrainingCategoryListComponent","lstTrainingTypeoptions","opt","getTrainingCategoryAll","setTrainingCategoryActivate","setTrainingCategoryDeactivate","modelTrainingType","createTrainingCategory","updateTrainingCategory","TrainingType","TrainingCategory","AreaComponent","objCity","filterArea","getCityGetByid","setAreaActivate","setAreaDeactivate","createArea","updateArea","Area","CityComponent","getCityAll","setCityActivate","setCityDeactivate","createCity","updateCity","City","DataManagementModule","schemas","NGOTypeComponent","getNGOTypeAll","lstNGOType","setNGOTypeActivate","setNGOTypeDeactivate","createNGOType","updateNGOType","TrainingTypeComponent","getTrainingTypeAll","lstTrainingType","setTrainingTypeActivate","setTrainingTypeDeactivate","createTrainingType","updateTrainingType","EntityManagementModule","PartnerReportsComponent","EntityPartnerReportListAll","lstEntityPartner","PartnerComponent","IsHoursCorrect","getEntityPartnerAll","setEntityPartnerActivate","setEntityPartnerDeactivate","createEntityPartner","updateEntityPartner","LoadPartnersMemebers","getEntityPartnerGetByid","SavePartnersMemebers","MinHours","MaxHours","SubPartnerComponent","popup","msgsetAddAll","msgsetRemoveAll","partnersList","getEntityPartnerGetMy","lstMyPartners","getEntitySubPartnerAll","lstEntitySubPartner","setEntitySubPartnerActivate","setEntitySubPartnerDeactivate","modelObjSubPartner","ReconstructeTrainingCenterList","size","createEntitySubPartner","updateEntitySubPartner","ConvertEntityToModel","TrainingCenterList","Partners","forEach","concat","t1","t2","name1","toLowerCase","name2","tmpObj","Phone","PartnerIds","TrainingCenterIds","getEntitySubPartnerGetByid","LoadSubPartnersMemebers","RemovePartnerEntityToEntitySubPartner","LoadSubPartnersEntity","SavePartnersEntity","AddPartnerEntityToEntitySubPartner","TrainingCenterId","AddEntityTrainingCenterToSubPartner","RemoveEntityTrainingCenterToSubPartner","AddEntityTrainingCenterToSubPartnerByPartnerID","RemoveEntityTrainingCenterToSubPartnerByPartnerID","SaveTrainingCenterEntity","SubPartner","TrainingCenterComponent","_filtertxt","data","partnerObj","lstEntityTrainingCenterfilter","setEntityTrainingCenterActivate","setEntityTrainingCenterDeactivate","createEntityTrainingCenter","updateEntityTrainingCenter","CertificateType","ConfigForm","EnumContentData","LanguageType","TranslateType","UserType","TakeExamComponent","BLServiceExam","notFoundlist","ExamSuccess","ExamFailed","takeExam","examModel","lstQuestion","questions","ExamId","config","leftTime","EXAM_TIMER","format","questionItem","answer","SelectedAnswer","SubmitExam","isSuccess","text","submitExam","TemplatesComponent","BLServiceExamTemplate","msgExamTemplate100","getExamTemplateAll","lstExamTemplate","setExamTemplateActivate","setExamTemplateDeactivate","sum","Easy","Medium","Hard","createExamTemplate","updateExamTemplate","AboutComponent","PolicyComponent","BLServiceMisc","BLServiceMessage","msgShow","modelData","CreateComponent","BLServiceQuestion","fb","msgQuestion2Answer","msgQuestionCorrectAnswer","msgQuestionOneAnswer","IsCreate","InitForm","getQuestionGetByid","formQuestion","patchValue","Question","TrainingTypeId","Difficulty","Answer","Answers","removeAt","control","push","buildAnswer","IsCorrectAnswer","onTrainingTypeSelect","group","required","array","IsCorrect","index","c","ans","undefined","correctAnswersCount","getCorrectAnswersCount","createQuestion","updateQuestion","msgUpdatedsuccessfully","addAnswer","OnRedrirectBack","ListComponent","filterObj","CurrentPage","getQuestionAll","setQuestionActivate","setQuestionDeactivate","lstTrainingCategoryFilter","onTrainingTypeFilterSelect","Edit","RegisterComponent","BLServiceConfigForm","regConfig","getEntityPartnerListAllActiveAnonymous","InitDynamicForm","GetByType","RequestRegister","inputType","label","options","order","IsRequired","validations","form","fields","createControl","AttendanceComponent","BLServiceTraining","selectedSessionId","trainingId","trainingObj","attendance","Attendances","sessions","Sessions","trainees","Trainees","sessionId","attSession","SessionId","attTrainee","IsAttendant","ModelAttendance","element","att","getTraineeAttendance","traineeId","updateAttendanceModel","checked","isChecked","attIndex","findIndex","ref","toArray","SaveAttendnace","MyTrainingsComponent","GetTraineeTraining","trainings","GetMyTraining","TraineeListComponent","todayDate","Date","todayDateMinus2","IsTraineeUpload","ExcelOnly","ImportTrainee","IsValid","FileURL","DownloadURLError","msgTrainingNoCertificates","setDate","getDate","DonwloadURL","traineelst","Mobile","NationalId","msgsetDeleted","RemoveTraining","msgDeletedSuccessfully","StartDate","AddTraining","TrainingId","ApproveTraineeRegister","DownloadTrainingCertificate","window","ExportTrainingTrainee","downloadFile","TrainingListComponent","modelIsStarted","msgTrainingRegister","IsTrainee","ExamTemplateListActive","getEntitySubPartnerGetMyByPartnerId","IsSubPartner","lstTrainingCenters","lstTrainers","lstSubPartnersFilter","SubPartnerId","GetMyTrainersBySubPartnerId","sub","lstTrainersFilter","lstAreas","area","SetAdminApproved","SetConfirmed1","SetConfirmed2","searchTraining","ExportTraining","modelExamTemplate","MainEntityId","SubEntityId","ExamTemplateId","SaveExamTemplate","EndDate","days","IsOnline","start","end","onPartnerSelect","onSubPartnerSelect","OnCitySelect","lstCourses","user","cat","startdate","d","endtdate","TraineeRegister","TrainingModule","TranslateListComponent","BLServiceTranslate","paramType","paramId","loadTitle","title","ListTranslationByType","SaveListTranslation","routes","AdminRoutingModule","AdminModule","entryComponents","PageName","PageType","AppRoutingModule","forRoot","AppComponent","_authService","_snackBar","msgClass","msgText","isLoggedIn","isAdmin","isPartner","isCurrentPageHome","IsAppear","isLoggedInMYadd","lang","cssExt","url","localStorage","getItem","setItem","CheckLogin","msgChanged","msg","duration","panelClass","events","pipe","firstChild","outlet","InitData","UserRoleChanged","UserNameChanged","userName","UserIsAdminChanged","UserIsPartnerChanged","GetIsLoggedInFunction","self","reject","UserIsLoggedInChanged","setTimeout","GetIsHomeFunction","Islogged","AppModule","bootstrap","CreateFormComponent","confirmationDialogService","BLCompanyLoginUser","formType","FormInputs","ctl","Order","max","min","Label","maxLength","InputType","controls","yy","xx","buildoptions","adminForm","buildFormInputs","ConvertToForm","idx","confirmed","option","frm","obj1","obj2","FormType","Form","Update","addFormInputs","Save","SelectMultiComponent","template","styles","ButtonComponent","componentMapper","input","button","select","selectmulti","DynamicFieldDirective","resolver","container","factory","resolveComponentFactory","field","componentRef","createComponent","instance","DynamicFormComponent","submit","preventDefault","stopPropagation","emit","validateAllFormFields","bindValidations","addControl","validList","validator","compose","formGroup","Object","markAsTouched","onlySelf","onSubmit","exportAs","InputComponent","SelectComponent","Validator","strName","FieldConfig","AutoCompeletListGenericComponent","OnSelectedItem","noResult","selectedOption","typeaheadLoading","onSelect","typeaheadNoResults","changeTypeaheadLoading","SearchPartnerEntityComponent","BLServiceEntity","OnSelectedPartner","suggestions$","observer","search","query","errorMessage","SearchTraineeComponent","OnSelectedTrainee","ListSearch","items","AddTraineeComponent","IsEdit","IsModelTemplate","modelTraineeId","isPageRegister","IsLoggedInTrainee","getMyProfile","openBackDropCustomClass","paramCreate","paramTraineeId","paramTrainingId","Trainee","Gender","IdType","DOB","updateMyProfile","ConfirmationDialogComponent","dialogRef","close","dismiss","accept","decline","ConfirmationDialogService","strOk","strCancel","btnOkText","btnCancelText","dialogSize","modalRef","componentInstance","result","providedIn","FooterComponent","getLogoPartnerListActive","SearchPartnerComponent","GetPartnerSearch","SearchSubPartnerEntityComponent","SearchSubPartnerComponent","GetSubPartnerSearch","HeaderComponent","translate","isSubPartner","PathFiles","addLangs","setDefaultLang","IsAdmin","IsPartner","UserIsSubPartnerChanged","IsTrainer","UserIsTrainerChanged","UserIsTraineeChanged","login","logout","use","location","reload","switchLang","CustomPaginationComponent","nextPageEvent","previousPageEvent","loadPageCurrentEvent","PageCurrent","Page","_totalElements","PageTotalCount","Math","ceil","Pageable","PageDisplayCount","IsFirst","IsLast","_PageTotalCount","PAGE_FIRST_NUMBER","PAGE_Display_Count","_pageCurrent","PageDisplayList","indexStart","indexEnd","i","_pageSize","CalculateLastFirst","calculateDisplayPage","CustomPaginationService","SharedModule","loader","provide","useFactory","httpTranslateLoader","deps","ConfigRequestRegisterComponent","ConfigTraineeComponent","Constants","clientId","clientRoot","apiRoot","stsAuthority","AccountService","_httpClient","userProfile","post","put","userInfo","AdminRouteGuard","state","authContext","AdminPartnerRouteGuard","AdminPartnerSubPartnerRouteGuard","TraineeRouteGuard","isTrainee","AuthInterceptorService","_router","startsWith","getAccessToken","token","headers","set","authReq","clone","handle","_","respError","status","formatError","toPromise","AuthService","_loginChangedSubject","_authContextSubject","loginChanged","asObservable","authContextChanged","stsSettings","authority","client_id","redirect_uri","scope","response_type","post_logout_redirect_uri","automaticSilentRenew","silent_redirect_uri","_userManager","startSilentRenew","addAccessTokenExpired","addUserLoaded","_user","loadSecurityContext","expired","signinSilent","signinRedirect","getUser","userCurrent","signinRedirectCallback","signoutRedirect","signoutRedirectCallback","access_token","context","claims","CoreModule","useClass","multi","ProjectService","projectId","project","delete","userPermission","userId","milestone","Utils","ErrorEvent","ContactUsComponent","HomeComponent","modelAboutData","modelInfoData","objStats","msgRedirect","msgIsSuccess","Send","GetStats","SigninRedirectCallbackComponent","completeLogin","replaceUrl","SignoutRedirectCallbackComponent","completeLogout","TermsComponent","UnauthorizedComponent","ModelAccountSearch","ModelArea","ModelChangeEmail","ModelConfigForm","ModelFieldConfig","ModelOptions","ModelConfigFormGet","ModelContentData","ModelCourse","ModelEntityMember","ModelEntitySubEntityIds","ModelEntitySubPartner","ModelEntityTrainingCenter","ModelExamTempate","ModelFilterQuestions","ModelFilterTraining","ModelId","ModelLanguage","ModelMyAssignedAccount","ModelPaging","filterText","cQuestionItem","cExamQuestionList","cQuestionItemTemplate","cAnswerItem","ModelRequestRegister","ModelSaveAttendnace","ShowMessage","EnumShowMessage","isSucess","ModelTrainee","ModelTraineeTraining","ModelTrainerCertificateApproval","ModelTraining","ModelTrainingCategory","ModelTranslateList","ModelUserProfile","UserTypeList","strAdmin","strPartner","strSubPartner","strTrainer","UserTypeItem","getAdminUserTypes","getPartnerUserTypes","getSubPartnerUserTypes","cCityList","cCityItem","cEntityPartnerList","cEntityPartnerItem","cEntitySubPartnerList","cEntitySubPartnerItem","cLogoPartnerList","cLogoPartnerItem","cNGOTypeItem","StatsCount","cTraineeList","cTraineeItem","cTraineeItemInfo","cTrainingList","cTrainingItem","ItemDetails","cSessionItem","cAttendance","cAttendanceTrainee","ITrainingCategoryItem","cTrainingTypeItem","cUserProfileList","cUserProfileItem","cEntityObj","cUserProfileTrainerCertificateList","cUserProfileTrainerCertificateItem","cUserProfileTrainerCertificateItemWithProfile","baseComponent","textEditorConfig","editable","spellcheck","minHeight","defaultParagraphSeparator","defaultFontName","toolbarHiddenButtons","Init","msgGenericError","date1","date2","d1","getFullYear","getMonth","d2","same","getTime","dateFrom","dateTo","parse","cfAutoComplete","AuthContext","Value","FullName","ServiceGeneric","ControllerName","httpClient","apiURL","handleError","currentPage","ServiceQuestion","ServiceCertificate","partnerId","formData","FormData","append","trainingTypeId","trainingCategoryId","trainingCenterId","ServiceConfigForm","ServiceContentData","ServiceDataManagement","ServiceEntityManagement","EntityId","TrainginCenterId","ServiceExamTemplate","ServiceExam","examId","ServiceLoginUser","_userName","_userRole","_userIsLoggedIn","_userIsAdmin","_userIsPartner","_userIsSubPartner","_userIsTrainer","_userIsTrainee","loggedIn","Role","isTrainer","ServiceLogoPartner","ServiceMisc","strLang","Lang","English","Arabic","French","ServiceShowMessage","_msgSubject","ServiceTrainee","ServiceTraining","ServiceTranslateList","ServiceUserProfile","subPartnerId","AccountId","TestComponent","BLserviceEntity","dyForm","TestModule","environment","production","bootstrapModule","catch"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { AccountComponent } from './account/account.component';\r\nimport { SharedModule } from 'src/app/common/sharedmodule.module';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AdminPartnerRouteGuard, AdminRouteGuard, AdminPartnerSubPartnerRouteGuard } from 'src/app/core/admin-route-guard';\r\nimport { TraineeComponent } from './trainee/trainee.component';\nimport { TrainerCertificateComponent } from './trainer-certificate/trainer-certificate.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AccountComponent,\r\n    TraineeComponent,\r\n    TrainerCertificateComponent\r\n  ],\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      { path: 'Account/Account', component: AccountComponent, canActivate: [AdminPartnerSubPartnerRouteGuard] },\r\n      { path: 'Account/Trainee', component: TraineeComponent }\r\n    ])\r\n  ],\r\n  providers:[\r\n    AdminRouteGuard,\r\n    AdminPartnerRouteGuard,\r\n    AdminPartnerSubPartnerRouteGuard\r\n  ]\r\n})\r\nexport class AccountModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { cUserProfileList, cUserProfileItem } from 'src/app/interface/Response/UserProfile.class';\r\nimport { Page } from 'src/app/common/pagination/page';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { CustomPaginationService } from 'src/app/common/pagination/services/custom-pagination.service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ServiceUserProfile } from 'src/app/services/userprofile.service';\r\nimport { NgForm, FormControl, Validators } from '@angular/forms';\r\nimport { ModelUserProfile } from 'src/app/interface/Model/ModelUserProfile.class';\r\nimport { UserTypeItem, UserTypeList } from 'src/app/interface/Model/ModelUserType.class';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { UserType } from 'src/app/Enum/UserType.enum';\r\nimport { ServiceEntityManagement } from 'src/app/services/entitymanagement.service';\r\nimport { cEntityPartnerItem } from 'src/app/interface/Response/EntityPartner.class';\r\nimport { cEntitySubPartnerItem } from 'src/app/interface/Response/EntitySubPartner.class';\r\nimport { cCityList, cCityItem } from 'src/app/interface/Response/City.class';\r\nimport { ServiceDataManagement } from 'src/app/services/datamanagement.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { cArea } from 'src/app/interface/Response/Area.class';\r\nimport { noop } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { ModelChangeEmail } from 'src/app/interface/Model/ModelChangeEmail.class';\r\n\r\n@Component({\r\n  selector: 'app-account',\r\n  templateUrl: './account.component.html',\r\n  styleUrls: ['./account.component.scss']\r\n})\r\nexport class AccountComponent extends baseComponent implements OnInit {\r\n  emailPattern = \"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\";\r\n  get EnumUserTypes() { return UserType };\r\n  pageTitle: string = 'User Accounts';\r\n  lstUserProfile: cUserProfileList;\r\n  lstUserType: UserTypeItem[];\r\n  filterType: string = \"0\";\r\n  filtertxt: string = '';\r\n  modelNameEdited: string = '';\r\n  modelObj: cUserProfileItem;\r\n  modelIsCreate: boolean = true;\r\n  page: Page<cUserProfileItem> = new Page();\r\n  lstPartners: cEntityPartnerItem[];\r\n  lstPartnersSelected: string[];\r\n  lstSubPartners: cEntitySubPartnerItem[];\r\n  lstSubPartnersSelected: string[];\r\n  lstCity: cCityItem[];\r\n  lstArea: cArea[];\r\n  isClicked = false;\r\n  IsDatesCorrect: boolean = true;\r\n  modelChangeEmail: ModelChangeEmail = new ModelChangeEmail();\r\n\r\n  AccountActivationLinkFailed: string;\r\n  AccountActivationLinkSuccess: string;\r\n  AccountPasswordSucess: string;\r\n  AccountPasswordFailed: string;\r\n\r\n  constructor(private BLServiceUserProfile: ServiceUserProfile,\r\n    private BLServiceEntityManagement: ServiceEntityManagement,\r\n    private BLServiceDataManagement: ServiceDataManagement,\r\n    private paginationService: CustomPaginationService,\r\n    private modalService: NgbModal,\r\n    private router: Router,\r\n    BLServiceShowMessage: ServiceShowMessage,\r\n    BLServiceLoginUser: ServiceLoginUser, BLTranslate: TranslateService,) {\r\n    super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\r\n    this.BLTranslate.get(\"AccountActivationLinkFailed\").subscribe(res => { this.AccountActivationLinkFailed = res; });\r\n    this.BLTranslate.get(\"AccountActivationLinkSuccess\").subscribe(res => { this.AccountActivationLinkSuccess = res; });\r\n    this.BLTranslate.get(\"AccountPasswordSucess\").subscribe(res => { this.AccountPasswordSucess = res; });\r\n    this.BLTranslate.get(\"AccountPasswordFailed\").subscribe(res => { this.AccountPasswordFailed = res; });\r\n\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n    this.lstUserType = new UserTypeList(this.BLTranslate).getUserListByType(this.userRole);\r\n    this.BLServiceDataManagement.getCityListActive().subscribe({\r\n      next: lst => {\r\n        this.lstCity = lst;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n    this.BLServiceEntityManagement.getEntityPartnerListActive(\"\").subscribe({\r\n      next: lst => {\r\n        this.lstPartners = lst;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  private loadData(): void {\r\n    this.BLServiceUserProfile.getSearch(this.page.pageable.pageCurrent, this.filtertxt, this.filterType).subscribe({\r\n      next: lst => {\r\n\r\n        this.lstUserProfile = lst;\r\n        this.page.pageable.pageSize = lst.pageSize;\r\n        this.page.totalElements = lst.totalCount;\r\n        this.page.content = lst.lstResult;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  public getNextPage(): void {\r\n    this.page.pageable = this.paginationService.getNextPage(this.page);\r\n    this.loadData();\r\n  }\r\n\r\n  public getPreviousPage(): void {\r\n    this.page.pageable = this.paginationService.getPreviousPage(this.page);\r\n    this.loadData();\r\n  }\r\n  public getloadPageCurrent(): void {\r\n    this.loadData();\r\n  }\r\n  ResendActivationLink(Email: string) {\r\n    this.BLServiceUserProfile.ResendActivationLink(Email).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.AccountActivationLinkSuccess);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        //this.loadData();\r\n      },\r\n      error: err => {\r\n        this.message.Error(this.AccountActivationLinkFailed);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n      }\r\n    });\r\n  }\r\n  ResendPasswordLink(Email: string) {\r\n    this.BLServiceUserProfile.ResendPasswordLink(Email).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.AccountPasswordSucess);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        //this.loadData();\r\n      },\r\n      error: err => {\r\n        this.message.Error(this.AccountPasswordFailed);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n      }\r\n    });\r\n  }\r\n  setActivate(Id: string): void {\r\n    if (!confirm(this.msgsetActivate))\r\n      return;\r\n    this.BLServiceUserProfile.setActivate(Id).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.msgActivatedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  setDeactivate(Id: string): void {\r\n    if (!confirm(this.msgsetDeactivate))\r\n      return;\r\n\r\n    this.BLServiceUserProfile.setDeactivate(Id).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.msgDeactivatedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  filterbtn(): void {\r\n    this.page.pageable.pageCurrent = 1;\r\n    this.loadData();\r\n  }\r\n  createBtn(content): void {\r\n    this.modelObj = new cUserProfileItem;\r\n    this.modelIsCreate = true;\r\n    this.isClicked = false;\r\n    this.modelNameEdited = \"\";\r\n    this.lstPartnersSelected = [];\r\n    this.lstSubPartnersSelected = [];\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  modelSaveBtn(modelForm: NgForm): void {\r\n    if (!modelForm.valid)\r\n      return;\r\n    this.isClicked = true;\r\n    var model = new ModelUserProfile();\r\n    model.Id = this.modelObj.Id;\r\n    model.Name = this.modelObj.Name;\r\n    model.Type = UserType[this.modelObj.Type]\r\n    model.Email = this.modelObj.Email;\r\n    model.CityId = this.modelObj.CityId;\r\n    model.AreaId = this.modelObj.AreaId;\r\n    model.TrainerTrainingDetails = this.modelObj.TrainerTrainingDetails;\r\n    model.TrainerStartDate = this.modelObj.TrainerStartDate;\r\n    model.TrainerEndDate = this.modelObj.TrainerEndDate;\r\n    model.SelectedPartnerEntityId = this.lstPartnersSelected;\r\n    model.SelectedSubPartnerEntityId = this.lstSubPartnersSelected;\r\n\r\n\r\n    if (this.modelIsCreate) {\r\n      this.BLServiceUserProfile.create(model).subscribe({\r\n        next: response => {\r\n          this.message.Success(this.msgSavedSuccessfully);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.isClicked = false;\r\n          this.modalService.dismissAll();\r\n        },\r\n        error: err => {\r\n          this.message.Error(err)\r\n          this.isClicked = false;\r\n        }\r\n      });\r\n    }\r\n    else {\r\n      this.BLServiceUserProfile.update(model).subscribe({\r\n        next: response => {\r\n          this.message.Success(this.msgSavedSuccessfully);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.isClicked = false;\r\n          this.modalService.dismissAll();\r\n        },\r\n        error: err => {\r\n          this.message.Error(err);\r\n          this.isClicked = false;\r\n        }\r\n      });\r\n    }\r\n  }\r\n  openBackDropCustomClass(content, obj: cUserProfileItem) {\r\n    this.modelObj = obj;\r\n\r\n    this.modelObj.TrainerStartDate.toString() == \"0001-01-01T00:00:00Z\" ? this.modelObj.TrainerStartDate = null : noop;\r\n    this.modelObj.TrainerEndDate.toString() == \"0001-01-01T00:00:00Z\" ? this.modelObj.TrainerEndDate = null : noop;\r\n\r\n    this.modelObj.Type = obj.Type.toString();\r\n    this.modelIsCreate = false;\r\n    this.isClicked = false;\r\n    this.modelNameEdited = obj.Name;\r\n    this.lstPartnersSelected = this.modelObj?.MyPartnerListIds?.map(({ Id }) => Id);\r\n    this.lstSubPartnersSelected = this.modelObj?.MySubPartnerListIds?.map(({ Id }) => Id);\r\n    this.PartnerChange(this.lstPartnersSelected);\r\n    this.CityChange(this.modelObj.CityId)\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  ConvertUserType(type: number) {\r\n    return UserType[type];\r\n  }\r\n  RemovePartner(PartnerId: string) {\r\n    if (!confirm(this.msgsetRemove))\r\n      return;\r\n    this.BLServiceEntityManagement.memberRemoveEntityPartner(PartnerId, this.modelObj.Id).subscribe({\r\n      next: lst => {\r\n        this.message.Success(this.msgSavedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.ReloadTheAccount(this.modelObj.Id);\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  OnSelectedPartner(PartnerId: string): void {\r\n\r\n    this.BLServiceEntityManagement.memberAddEntityPartner(PartnerId, this.modelObj.Id).subscribe({\r\n      next: lst => {\r\n        this.ReloadTheAccount(this.modelObj.Id);\r\n        this.message.Success(this.msgSavedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  RemoveSubPartner(PartnerId: string) {\r\n    if (!confirm(this.msgsetRemove))\r\n      return;\r\n    this.BLServiceEntityManagement.memberRemoveEntitySubPartner(PartnerId, this.modelObj.Id).subscribe({\r\n      next: lst => {\r\n        this.message.Success(this.msgSavedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.ReloadTheAccount(this.modelObj.Id);\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  OnSelectedSubPartner(PartnerId: string): void {\r\n\r\n    this.BLServiceEntityManagement.memberAddEntitySubPartner(PartnerId, this.modelObj.Id).subscribe({\r\n      next: lst => {\r\n        this.ReloadTheAccount(this.modelObj.Id);\r\n        this.message.Success(this.msgSavedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  ReloadTheAccount(UserId: string) {\r\n    this.BLServiceUserProfile.getGetByid(UserId).subscribe({\r\n      next: obj => {\r\n\r\n        this.modelObj = obj;\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  PartnerChange(obj: any) {\r\n\r\n    this.BLServiceEntityManagement.getEntitySubPartnerListActive(\"\", this.lstPartnersSelected).subscribe({\r\n      next: lst => {\r\n\r\n        this.lstSubPartners = lst;\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  CityChange(obj: any) {\r\n\r\n    if (obj != null) {\r\n      var city = this.lstCity?.find(item => item.Id == this.modelObj.CityId);\r\n      if (city) {\r\n        this.lstArea = city?.Areas.filter(a => a.IsActive == true).sort((x, y) => x.Name.localeCompare(y.Name));;\r\n      }\r\n    }\r\n  }\r\n  // filterAccounts(type: number, obj: cAssignedToAccount[]) {\r\n  //   return obj.filter(x => x.AccountType == type);\r\n  // }\r\n  onStartDateSelect(param) {\r\n    if ((this.modelObj.TrainerStartDate == null && this.modelObj.TrainerEndDate == null) ||\r\n      (this.modelObj.TrainerStartDate != null && this.modelObj.TrainerEndDate == null))\r\n      this.IsDatesCorrect = true;\r\n    else\r\n      this.IsDatesCorrect = this.CompareTwoDates(this.modelObj.TrainerStartDate, this.modelObj.TrainerEndDate);\r\n  }\r\n  onEndDateSelect(param) {\r\n\r\n    if ((this.modelObj.TrainerStartDate == null && this.modelObj.TrainerEndDate == null) ||\r\n      (this.modelObj.TrainerStartDate != null && this.modelObj.TrainerEndDate == null))\r\n      this.IsDatesCorrect = true;\r\n    else\r\n      this.IsDatesCorrect = this.CompareTwoDates(this.modelObj.TrainerStartDate, param);\r\n  }\r\n  Certificate(Id) {\r\n    // path: 'Trainee/Create/:IsCreate/:TraineeId/:TrainingId'\r\n    this.router.navigate(['/TrainerCertificate/' + Id]);\r\n  }\r\n  ChangeEmail(content, emailOld: string) {\r\n    this.modelChangeEmail = new ModelChangeEmail();\r\n    this.modelChangeEmail.EmailOld = emailOld;\r\n\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  ChangeEmailSave(modelForm: NgForm): void {\r\n    if (!modelForm.valid)\r\n      return;\r\n\r\n    this.BLServiceUserProfile.UpdateUserEmail(this.modelChangeEmail).subscribe({\r\n      next: lst => {\r\n        this.loadData();\r\n        this.message.Success(this.msgSavedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.modalService.dismissAll();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n}\r\n","<section class=\"my-5\">\r\n  <div class=\"container container-max\">\r\n    <div class='row'>\r\n      <h4 class=\"mb-4\">{{'pageTitleAccount' | translate }}</h4>\r\n    </div>\r\n    <div class='row'>\r\n      <div class=\"col-sm-6 md-form\">\r\n        <mat-form-field class=\"example-full-width\">\r\n          <mat-label>{{'AccountSearchAccount' | translate }}</mat-label>\r\n          <input type=\"text\" placeholder=\"{{'AccountTypePH' | translate }}\" matInput [(ngModel)]=\"filtertxt\">\r\n        </mat-form-field>\r\n      </div>\r\n      <div class=\"col-sm-6 md-form\">\r\n        <mat-form-field>\r\n          <mat-label>{{'AccountUserType' | translate }}</mat-label>\r\n          <mat-select id=\"filterTypeId\" placeholder=\"{{'AccountFilterType' | translate }}\" [(ngModel)]=\"filterType\"\r\n            name=\"filterTypeId\">\r\n            <mat-option value=\"0\">{{'AccountSelectType' | translate }}</mat-option>\r\n            <mat-option *ngFor=\"let item of lstUserType\" value=\"{{item.Id}}\">{{item.Name}}</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n        <input type=\"submit\" value=\"{{'GenericSearch' | translate }}\" class=\"btn color-bg-02 white-text\"\r\n          (click)=\"filterbtn()\">\r\n      </div>\r\n      <div class=\"col-sm-12 md-form pull-right\">\r\n        <input type=\"button\" class=\"pull-right btn color-bg-01 white-text\" value=\"{{'GenericCreateNew' | translate }}\"\r\n          (click)=\"createBtn(content)\">\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-12\">\r\n      <div class='table-responsive'>\r\n        <table class='table' *ngIf='page.content && page.content.length'>\r\n          <thead>\r\n            <tr>\r\n              <th>{{'GenericName' | translate }}</th>\r\n              <th>{{'GenericEmail' | translate }}</th>\r\n              <th>{{'GenericType' | translate }}</th>\r\n              <th>{{'GenericAction' | translate }}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor='let obj of page.content'>\r\n              <td>{{ obj.Name}}</td>\r\n              <td>{{ obj.Email}}</td>\r\n              <td>{{ ConvertUserType(obj.Type)}}</td>\r\n              <td>\r\n                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-primary\" value=\"{{'GenericEdit' | translate }}\"\r\n                  (click)=\"openBackDropCustomClass(content,obj)\">\r\n                <!-- <input\r\n                  *ngIf=\"obj.IsActive && (obj.Type == EnumUserTypes.Partner || obj.Type == EnumUserTypes.SubPartner || obj.Type == EnumUserTypes.Trainer)\"\r\n                  type=\"button\" class=\"btn btn-warning\" value=\"Assign Entity\"\r\n                  (click)=\"openBackDropCustomClass(contentEntity,obj)\"> -->\r\n                <!-- <input *ngIf=\"obj.IsActive && (obj.Type == EnumUserTypes.SubPartner)\" type=\"button\"\r\n                  class=\"btn btn-warning\" value=\"SubPartner Entity\"\r\n                  (click)=\"openBackDropCustomClass(contentSubPartner,obj)\"> -->\r\n                <input *ngIf=\"!obj.IsActive\" type=\"button\" class=\"btn btn-success\"\r\n                  value=\"{{'GenericActivate' | translate }}\" (click)=\"setActivate(obj.Id)\">\r\n                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-danger\"\r\n                  value=\"{{'GenericDeactivate' | translate }}\" (click)=\"setDeactivate(obj.Id)\">\r\n                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-warning\"\r\n                  value=\"{{'AccountResendLink' | translate }}\" (click)=\"ResendActivationLink(obj.Email)\">\r\n                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-success\"\r\n                  value=\"{{'AccountPasswordLink' | translate }}\" (click)=\"ResendPasswordLink(obj.Email)\">\r\n                <input *ngIf=\"obj.IsActive && obj.Type == EnumUserTypes.Trainer.toString()\" type=\"button\"\r\n                  class=\"btn btn-info\" value=\"{{'HeaderCertificate' | translate }}\" (click)=\"Certificate(obj.Id)\">\r\n                  <input *ngIf=\"obj.IsActive\" type=\"button\"\r\n                  class=\"btn btn-dark\" value=\"{{'ChangeEmail' | translate }}\" (click)=\"ChangeEmail(contentChangeEmail, obj.Email)\">\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <app-custom-pagination [page]=\"page\" (nextPageEvent)=\"getNextPage()\" (previousPageEvent)=\"getPreviousPage()\"\r\n        (loadPageCurrentEvent)=\"getloadPageCurrent()\">\r\n      </app-custom-pagination>\r\n    </div>\r\n    <div>\r\n      <ng-template role=\"dialog\" #content let-modal class=\"modal fade\">\r\n        <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header color-bg-01 white-text text-center\">\r\n\r\n              <h6 class=\"modal-title\">\r\n                {{(modelIsCreate ? 'GenericCreate'   : 'GenericEditing') | translate}} :\r\n                {{modelIsCreate? (\"GenericNew\" | translate) : modelNameEdited}}\r\n              </h6>\r\n            </div>\r\n            <div class=\"modal-body pt-0\">\r\n\r\n              <form novalidate (ngSubmit)=\"modelSaveBtn(modelForm)\" #modelForm=\"ngForm\">\r\n                <div class=\"form-group \">\r\n                  <mat-form-field class=\"example-full-width\">\r\n                    <mat-label>{{'GenericName' | translate }}</mat-label>\r\n                    <input matInput id=\"modelNameId\" type=\"text\" placeholder=\"{{'GenericRequiredName' | translate }}\"\r\n                      required [(ngModel)]=\"modelObj.Name\" #modelNameVar=\"ngModel\" name=\"modelName\"\r\n                      [ngClass]=\"{'is-invalid': (modelNameVar.touched || modelNameVar.dirty) && !modelNameVar.valid }\" />\r\n                    <mat-error *ngIf=\"modelNameVar.errors?.required\">{{'GenericEnterName' | translate }}</mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"form-group \">\r\n                  <mat-form-field class=\"example-full-width\">\r\n                    <mat-label>{{'GenericEmail' | translate }}</mat-label>\r\n                    <input matInput oninput=\"this.value = this.value.toLowerCase()\" id=\"modelEmailId\" type=\"email\"\r\n                      placeholder=\"{{'GenericRequiredEmail' | translate }}\" [pattern]=\"emailPattern\" required\r\n                      disabled=\"{{!modelIsCreate}}\" [(ngModel)]=\"modelObj.Email\" #modelEmailVar=\"ngModel\"\r\n                      name=\"modelEmail\"\r\n                      [ngClass]=\"{'is-invalid': (modelEmailVar.touched || modelEmailVar.dirty) && !modelEmailVar.valid }\" />\r\n                    <mat-error *ngIf=\"modelEmailVar.errors?.required\">{{'GenericEnterEmail' | translate }}</mat-error>\r\n                    <mat-error *ngIf=\"modelEmailVar.errors?.pattern\">{{'GenericEnterEmailValid' | translate }}\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"form-group \">\r\n                  <mat-form-field>\r\n                    <mat-label>{{'AccountUserType' | translate }}</mat-label>\r\n                    <mat-select id=\"modelTypeId\" placeholder=\"{{'GenericRequiredType' | translate }}\" required\r\n                      [(ngModel)]=\"modelObj.Type\" #modelTypeListVar=\"ngModel\" name=\"modelTypeList\"\r\n                      [value]=\"modelObj.Type\" disabled=\"{{!modelIsCreate}}\"\r\n                      [ngClass]=\"{'is-invalid': (modelTypeListVar.touched || modelTypeListVar.dirty) && !modelTypeListVar.valid}\">\r\n                      <mat-option value=\"\">{{'AccountSelectType' | translate }}</mat-option>\r\n                      <mat-option *ngFor=\"let item of lstUserType\" value=\"{{item.Id}}\">{{item.Name}}</mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"modelTypeListVar.errors?.required\">{{'AccountErrorTypeSelect' | translate }}\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"form-group \" *ngIf=\"(modelIsCreate && (modelObj.Type == EnumUserTypes.Partner.toString() ||\r\n                                                    modelObj.Type == EnumUserTypes.SubPartner.toString() ||\r\n                                                    modelObj.Type == EnumUserTypes.Trainer.toString()))\r\n                                                || (modelObj.Type == EnumUserTypes.Trainer.toString())\">\r\n                  <mat-form-field>\r\n                    <mat-label>{{'GenericPartnerEntity' | translate }}</mat-label>\r\n                    <mat-select multiple placeholder=\"{{'AccountSelectPartner' | translate }}\" required\r\n                      [(ngModel)]=\"lstPartnersSelected\" #modelMyPartnerListIds=\"ngModel\" name=\"MyPartnerListIds\"\r\n                      (selectionChange)=\"PartnerChange($event)\"\r\n                      [ngClass]=\"{'is-invalid': (modelMyPartnerListIds.touched || modelMyPartnerListIds.dirty) && !modelMyPartnerListIds.valid}\">\r\n                      <mat-option *ngFor=\"let obj of lstPartners\" [value]=\"obj.Id\">{{ obj.Name }}</mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"modelMyPartnerListIds.errors?.required\">{{'GenericEnterPartner' | translate }}\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"form-group \" *ngIf=\"(modelIsCreate && lstPartnersSelected?.length > 0 && (\r\n                                                    modelObj.Type == EnumUserTypes.SubPartner.toString() ||\r\n                                                    modelObj.Type == EnumUserTypes.Trainer.toString()))\r\n                                                  || (modelObj.Type == EnumUserTypes.Trainer.toString())\">\r\n                  <mat-form-field>\r\n                    <mat-label>{{'GenericSubPartnerEntity' | translate }}</mat-label>\r\n                    <mat-select multiple placeholder=\"{{'AccountSelectSubPartner' | translate }}\" required\r\n                      [(ngModel)]=\"lstSubPartnersSelected\" #modelMySubPartnerListIds=\"ngModel\"\r\n                      name=\"MySubPartnerListIds\"\r\n                      [ngClass]=\"{'is-invalid': (modelMySubPartnerListIds.touched || modelMySubPartnerListIds.dirty) && !modelMySubPartnerListIds.valid}\">\r\n                      <mat-option *ngFor=\"let obj of lstSubPartners\" [value]=\"obj.Id\">{{ obj.Name }}</mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"modelMySubPartnerListIds.errors?.required\">\r\n                      {{'AccountSelectSubError' | translate }}</mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"form-group \" *ngIf=\"modelObj.Type == EnumUserTypes.Trainer.toString()\">\r\n                  <mat-form-field>\r\n                    <mat-label>{{'GenericCity' | translate }}</mat-label>\r\n                    <mat-select placeholder=\"{{'AccountSelectCity' | translate }}\" required\r\n                      [(ngModel)]=\"modelObj.CityId\" #modelCityIds=\"ngModel\" name=\"CityIds\"\r\n                      (selectionChange)=\"CityChange($event)\"\r\n                      [ngClass]=\"{'is-invalid': (modelCityIds.touched || modelCityIds.dirty) && !modelCityIds.valid}\">\r\n                      <mat-option *ngFor=\"let obj of lstCity\" [value]=\"obj.Id\">{{ obj.Name }}</mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"modelCityIds.errors?.required\">{{'AccountSelectCityError' | translate }}\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"form-group \" *ngIf=\"modelObj.Type == EnumUserTypes.Trainer.toString()\">\r\n                  <mat-form-field>\r\n                    <mat-label>{{'AreaTitle' | translate }}</mat-label>\r\n                    <mat-select placeholder=\"{{'AccountSelectArea' | translate }}\" required\r\n                      [(ngModel)]=\"modelObj.AreaId\" #modelAreaIds=\"ngModel\" name=\"AreaIds\"\r\n                      [ngClass]=\"{'is-invalid': (modelAreaIds.touched || modelAreaIds.dirty) && !modelAreaIds.valid}\">\r\n                      <mat-option *ngFor=\"let obj of lstArea\" [value]=\"obj.Id\">{{ obj.Name }}</mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"modelAreaIds.errors?.required\">{{'TrainingAreaSelectError' | translate }}\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"form-group \" *ngIf=\"modelObj.Type == EnumUserTypes.Trainer.toString()\">\r\n                  <mat-form-field class=\"example-full-width\">\r\n                    <mat-label>{{'AccountTrainerDetails' | translate }}</mat-label>\r\n                    <input matInput id=\"modelTrainingDetailsId\" type=\"text\"\r\n                      placeholder=\"{{'AccountTrainerDetails' | translate }}\"\r\n                      [(ngModel)]=\"modelObj.TrainerTrainingDetails\" #modelTrainingDetailsVar=\"ngModel\"\r\n                      name=\"modelTrainingDetails\" />\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"form-group \" *ngIf=\"modelObj.Type == EnumUserTypes.Trainer.toString()\">\r\n                  <mat-form-field class=\"example-full-width\">\r\n                    <mat-label>{{'AccountTrainerStartDate' | translate }}</mat-label>\r\n                    <input matInput [owlDateTime]=\"dt1\" id=\"modelStartDateId\" type=\"text\"\r\n                      placeholder=\"{{'AccountTrainerStartDate' | translate }}\" [(ngModel)]=\"modelObj.TrainerStartDate\"\r\n                      #modelStartDateVar=\"ngModel\" (ngModelChange)=\"onStartDateSelect($event)\" name=\"modelStartDate\" />\r\n                    <mat-icon matSuffix [owlDateTimeTrigger]=\"dt1\"><i class=\"fa fa-calendar\"></i></mat-icon>\r\n                  </mat-form-field>\r\n                  <owl-date-time #dt1 [pickerType]=\"'calendar'\"></owl-date-time>\r\n                </div>\r\n                <div class=\"form-group \" *ngIf=\"modelObj.Type == EnumUserTypes.Trainer.toString()\">\r\n                  <mat-form-field class=\"example-full-width\">\r\n                    <mat-label>{{'AccountTrainerEndDate' | translate }}</mat-label>\r\n                    <input matInput [owlDateTime]=\"dt2\" id=\"modelEndDateId\" type=\"text\"\r\n                      placeholder=\"{{'AccountTrainerEndDate' | translate }}\" [(ngModel)]=\"modelObj.TrainerEndDate\"\r\n                      #modelEndDateVar=\"ngModel\" (ngModelChange)=\"onEndDateSelect($event)\" name=\"modelEndDate\" />\r\n                    <mat-icon matSuffix [owlDateTimeTrigger]=\"dt2\"><i class=\"fa fa-calendar\"></i></mat-icon>\r\n                  </mat-form-field>\r\n                  <owl-date-time #dt2 [pickerType]=\"'calendar'\"></owl-date-time>\r\n                  <mat-error class=\"MatError\" *ngIf=\"!IsDatesCorrect\">{{'TrainingDateError' | translate }}</mat-error>\r\n                </div>\r\n\r\n                <div class=\"form-group pull-right md-form\">\r\n                  <button class=\"btn color-bg-01 btn-sm white-text\" type=\"submit\"\r\n                    [disabled]=\"!modelForm.valid || isClicked || !IsDatesCorrect\">{{'GenericSave' | translate }} <i\r\n                      class=\"fa fa-spinner fa-spin\" *ngIf=\"isClicked\"></i></button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n\r\n              <button type=\"button\" class=\"btn color-bg-02 btn-sm white-text\"\r\n                (click)=\"modal.close('Close click')\">{{'GenericClose' | translate }}</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </ng-template>\r\n    </div>\r\n    <div>\r\n      <ng-template #contentEntity let-modal>\r\n        <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header color-bg-01 white-text text-center\">\r\n\r\n              <h6 class=\"modal-title\">\r\n                {{'AccountAssignEntity' | translate }}: {{modelNameEdited}}</h6>\r\n            </div>\r\n            <div class=\"modal-body pt-0\">\r\n              <mat-tab-group animationDuration=\"1000ms\">\r\n                <mat-tab label=\"{{'GenericPartnerEntity' | translate }}\"\r\n                  *ngIf=\"modelObj.Type == EnumUserTypes.Partner.toString() || modelObj.Type == EnumUserTypes.Trainer.toString()\">\r\n                  <div>\r\n                    <cust-search-partner-entity (OnSelectedPartner)='OnSelectedPartner($event)'>\r\n                    </cust-search-partner-entity>\r\n                  </div>\r\n                  <div>\r\n                    <table class='table' *ngIf='modelObj.MyPartnerListIds && modelObj.MyPartnerListIds.length'>\r\n                      <thead>\r\n                        <tr>\r\n                          <th>{{'GenericName' | translate }}</th>\r\n                          <th>{{'GenericAction' | translate }}</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        <tr *ngFor='let obj of modelObj.MyPartnerListIds'>\r\n                          <td>{{ obj.Name }}\r\n                          </td>\r\n                          <td>\r\n                            <input type=\"button\" class=\"btn btn-danger\" value=\"{{'GenericRemove' | translate }}\"\r\n                              (click)=\"RemovePartner(obj.Id)\">\r\n                          </td>\r\n                        </tr>\r\n\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </mat-tab>\r\n                <mat-tab label=\"{{'GenericSubPartnerEntity' | translate }}\"\r\n                  *ngIf=\"modelObj.Type == EnumUserTypes.SubPartner.toString() || modelObj.Type == EnumUserTypes.Trainer.toString()\">\r\n                  <div>\r\n                    <cust-search-sub-partner-entity (OnSelectedPartner)='OnSelectedSubPartner($event)'>\r\n                    </cust-search-sub-partner-entity>\r\n                  </div>\r\n                  <div>\r\n                    <table class='table' *ngIf='modelObj.MySubPartnerListIds && modelObj.MySubPartnerListIds.length'>\r\n                      <thead>\r\n                        <tr>\r\n                          <th>{{'GenericName' | translate }}</th>\r\n                          <th>{{'GenericAction' | translate }}</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        <tr *ngFor='let obj of modelObj.MySubPartnerListIds'>\r\n                          <td>{{ obj.Name }}\r\n                          </td>\r\n                          <td>\r\n                            <input type=\"button\" class=\"btn btn-danger\" value=\"{{'GenericRemove' | translate }}\"\r\n                              (click)=\"RemoveSubPartner(obj.Id)\">\r\n                          </td>\r\n                        </tr>\r\n\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </mat-tab>\r\n              </mat-tab-group>\r\n\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              <button type=\"button\" class=\"btn color-bg-02 btn-sm white-text\"\r\n                (click)=\"modal.close('Close click')\">{{'GenericClose' | translate }}</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </ng-template>\r\n    </div>\r\n    <div>\r\n      <ng-template #contentChangeEmail let-modal>\r\n        <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header color-bg-01 white-text text-center\">\r\n\r\n              <h6 class=\"modal-title\">\r\n                {{'ChangeEmail' | translate}} \r\n              </h6>\r\n            </div>\r\n            <div class=\"modal-body pt-0\">\r\n\r\n              <form novalidate (ngSubmit)=\"ChangeEmailSave(modelForm)\" #modelForm=\"ngForm\">\r\n                <div class=\"form-group \">\r\n                  \r\n                    <mat-label><b>{{'OldEmail' | translate }}</b>: </mat-label>\r\n                    <mat-label>{{modelChangeEmail.EmailOld}} </mat-label>\r\n                </div>\r\n                <div class=\"form-group \">\r\n                  <mat-form-field class=\"example-full-width\">\r\n                    <mat-label>{{'NewEmail' | translate }}</mat-label>\r\n                    <input matInput oninput=\"this.value = this.value.toLowerCase()\" id=\"modelEmailId\" type=\"email\"\r\n                      placeholder=\"{{'GenericRequiredEmail' | translate }}\" [pattern]=\"emailPattern\" required\r\n                      [(ngModel)]=\"modelChangeEmail.EmailNew\" #modelEmailVar=\"ngModel\"\r\n                      name=\"modelEmail\"\r\n                      [ngClass]=\"{'is-invalid': (modelEmailVar.touched || modelEmailVar.dirty) && !modelEmailVar.valid }\" />\r\n                    <mat-error *ngIf=\"modelEmailVar.errors?.required\">{{'GenericEnterEmail' | translate }}</mat-error>\r\n                    <mat-error *ngIf=\"modelEmailVar.errors?.pattern\">{{'GenericEnterEmailValid' | translate }}\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"form-group pull-right md-form\">\r\n                  <button class=\"btn color-bg-01 btn-sm white-text\" type=\"submit\"\r\n                    [disabled]=\"!modelForm.valid\">{{'GenericSave' | translate }}</button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n\r\n              <button type=\"button\" class=\"btn color-bg-02 btn-sm white-text\"\r\n                (click)=\"modal.close('Close click')\">{{'GenericClose' | translate }}</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </ng-template>\r\n    </div>\r\n  </div>\r\n</section>","import { Component, OnInit } from '@angular/core';\r\nimport { cTraineeItem, cTraineeList } from 'src/app/interface/Response/Trainee.class';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { Page } from 'src/app/common/pagination/page';\r\nimport { CustomPaginationService } from 'src/app/common/pagination/services/custom-pagination.service';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ModelTrainee } from 'src/app/interface/Model/ModelTrainee.class';\r\nimport { ServiceTrainee } from 'src/app/services/trainee.service';\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ServiceUserProfile } from 'src/app/services/userprofile.service';\r\nimport { ModelChangeEmail } from 'src/app/interface/Model/ModelChangeEmail.class';\r\n\r\n@Component({\r\n  selector: 'app-trainee',\r\n  templateUrl: './trainee.component.html',\r\n  styleUrls: ['./trainee.component.css']\r\n})\r\nexport class TraineeComponent extends baseComponent implements OnInit {\r\n\r\n\r\n  pageTitle: string = 'Trainee List';\r\n  lstTrainee: cTraineeList;\r\n  filterType: string = \"0\";\r\n  filtertxt: string = '';\r\n  modelChangeEmail: ModelChangeEmail = new ModelChangeEmail();\r\n\r\n\r\n  page: Page<cTraineeItem> = new Page();\r\n  AccountActivationLinkFailed:string;\r\n  AccountActivationLinkSuccess:string;\r\n  AccountPasswordSucess:string;\r\n  AccountPasswordFailed:string;\r\n\r\n  constructor(private BLServiceTrainee: ServiceTrainee,\r\n    private BLServiceUserProfile: ServiceUserProfile,\r\n    private paginationService: CustomPaginationService,\r\n    private router: Router,\r\n    private modalService: NgbModal,\r\n    BLServiceShowMessage: ServiceShowMessage,\r\n    BLServiceLoginUser: ServiceLoginUser,BLTranslate: TranslateService,) {\r\n    super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\r\n    this.BLTranslate.get(\"AccountActivationLinkFailed\").subscribe(res => { this.AccountActivationLinkFailed = res; });\r\n    this.BLTranslate.get(\"AccountActivationLinkSuccess\").subscribe(res => { this.AccountActivationLinkSuccess = res; });\r\n    this.BLTranslate.get(\"AccountPasswordSucess\").subscribe(res => { this.AccountPasswordSucess = res; });\r\n    this.BLTranslate.get(\"AccountPasswordFailed\").subscribe(res => { this.AccountPasswordFailed = res; });\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n  public loadData(): void {\r\n    this.BLServiceTrainee.getAll(this.page.pageable.pageCurrent, this.filtertxt).subscribe({\r\n      next: lst => {\r\n\r\n        this.lstTrainee = lst;\r\n        this.page.pageable.pageSize = lst.pageSize;\r\n        this.page.totalElements = lst.totalCount;\r\n        this.page.content = lst.lstResult;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  public getNextPage(): void {\r\n    this.page.pageable = this.paginationService.getNextPage(this.page);\r\n    this.loadData();\r\n  }\r\n\r\n  public getPreviousPage(): void {\r\n    this.page.pageable = this.paginationService.getPreviousPage(this.page);\r\n    this.loadData();\r\n  }\r\n  public getloadPageCurrent(): void {\r\n    this.loadData();\r\n  }\r\n  setActivate(Id: string): void {\r\n    if (!confirm(this.msgsetActivate))\r\n      return;\r\n    this.BLServiceTrainee.setActivate(Id).subscribe({\r\n      next: response => {\r\n        \r\n          this.message.Success(this.msgActivatedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  setDeactivate(Id: string): void {\r\n    if (!confirm(this.msgsetDeactivate))\r\n      return;\r\n\r\n    this.BLServiceTrainee.setDeactivate(Id).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.msgDeactivatedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  filterbtn(): void {\r\n    this.page.pageable.pageCurrent = 1;\r\n    this.loadData();\r\n  }\r\n  createBtn() {\r\n    // path: 'Trainee/Create/:IsCreate/:TraineeId/:TrainingId'\r\n    this.router.navigate(['/Trainee/Create/1/0/0']);\r\n  }\r\n  Edit(TraineeId) {\r\n    // path: 'Trainee/Create/:IsCreate/:TraineeId/:TrainingId'\r\n    this.router.navigate(['/Trainee/Create/0/' + TraineeId + '/0']);\r\n  }\r\n  Certificate(TraineeId) {\r\n    // path: 'Trainee/Create/:IsCreate/:TraineeId/:TrainingId'\r\n    this.router.navigate(['/MyTraining/' + TraineeId ]);\r\n  }\r\n  ResendActivationLink(Email: string){\r\n    this.BLServiceTrainee.ResendActivationLink(Email).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.AccountActivationLinkSuccess);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => {\r\n        this.message.Error(this.AccountActivationLinkFailed);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n    }\r\n    });\r\n  }\r\n  ResendPasswordLink(Email: string) {\r\n    this.BLServiceTrainee.ResendPasswordLink(Email).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.AccountPasswordSucess);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        //this.loadData();\r\n      },\r\n      error: err => {\r\n        this.message.Error(this.AccountPasswordFailed);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n      }\r\n    });\r\n  }\r\n  ChangeEmail(content, emailOld: string) {\r\n    this.modelChangeEmail = new ModelChangeEmail();\r\n    this.modelChangeEmail.EmailOld = emailOld;\r\n\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  ChangeEmailSave(modelForm: NgForm): void {\r\n    if (!modelForm.valid)\r\n      return;\r\n\r\n    this.BLServiceUserProfile.UpdateUserEmail(this.modelChangeEmail).subscribe({\r\n      next: lst => {\r\n        this.loadData();\r\n        this.message.Success(this.msgSavedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.modalService.dismissAll();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n}\r\n","<section class=\"my-5\">\r\n    <div class=\"container container-max\">\r\n        <div class='row'>\r\n            <h4 class=\"mb-4\">{{'TraineepageTitle' | translate }}</h4>\r\n        </div>\r\n        <div class='row'>\r\n            <div class=\"col-sm-8 md-form\">\r\n                <mat-form-field class=\"example-full-width\">\r\n                    <mat-label>{{'TraineeSearchAccount' | translate }}</mat-label>\r\n                    <input type=\"text\" placeholder=\"{{'TraineeSearchPH' | translate }}\" matInput\r\n                        [(ngModel)]=\"filtertxt\">\r\n                </mat-form-field>\r\n                <input type=\"submit\" value=\"{{'GenericSearch' | translate }}\" class=\"btn color-bg-02 white-text\"\r\n                    (click)=\"filterbtn()\">\r\n            </div>\r\n            <div class=\"col-sm-4 md-form pull-right\">\r\n                <input type=\"button\" class=\"pull-right btn color-bg-01 white-text\"\r\n                    value=\"{{'GenericCreateNew' | translate }}\" (click)=\"createBtn()\">\r\n                <!-- <cust-add-trainee  [IsCreate]=\"true\" (Reload)=\"loadData()\"></cust-add-trainee> -->\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-12\">\r\n            <div class='table-responsive'>\r\n                <table class='table' *ngIf='page.content && page.content.length'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>{{'GenericName' | translate }}</th>\r\n                            <th>{{'GenericEmail' | translate }}</th>\r\n                            <th>{{'GenericNationalID' | translate }}</th>\r\n                            <th>{{'GenericMobile' | translate }}</th>\r\n                            <th *ngIf=\"IsAdmin\">{{'GenericAction' | translate }}</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor='let obj of page.content'>\r\n                            <td>{{ obj.Name}}</td>\r\n                            <td>{{ obj.Email}}</td>\r\n                            <td>{{ obj.NationalId}}</td>\r\n                            <td>{{ obj.Mobile}}</td>\r\n                            <td *ngIf=\"IsAdmin\">\r\n                                <!-- <cust-add-trainee [obj]=\"obj\" [IsEdit]=\"true\"></cust-add-trainee> -->\r\n                                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-primary\"\r\n                                    value=\"{{'GenericEdit' | translate }}\" (click)=\"Edit(obj.Id)\">\r\n                                <input *ngIf=\"!obj.IsActive\" type=\"button\" class=\"btn btn-success\"\r\n                                    value=\"{{'GenericActivate' | translate }}\" (click)=\"setActivate(obj.Id)\">\r\n                                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-danger\"\r\n                                    value=\"{{'GenericDeactivate' | translate }}\" (click)=\"setDeactivate(obj.Id)\">\r\n                                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-warning\"\r\n                                    value=\"{{'AccountResendLink' | translate }}\"\r\n                                    (click)=\"ResendActivationLink(obj.Email)\">\r\n                                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-success\"\r\n                                    value=\"{{'AccountPasswordLink' | translate }}\"\r\n                                    (click)=\"ResendPasswordLink(obj.Email)\">\r\n                                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-info\" value=\"{{'HeaderCertificate' | translate }}\"\r\n                                    (click)=\"Certificate(obj.Id)\">\r\n                                    <input *ngIf=\"obj.IsActive\" type=\"button\"\r\n                                    class=\"btn btn-dark\" value=\"{{'ChangeEmail' | translate }}\" (click)=\"ChangeEmail(contentChangeEmail, obj.Email)\">\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <app-custom-pagination [page]=\"page\" (nextPageEvent)=\"getNextPage()\" (previousPageEvent)=\"getPreviousPage()\"\r\n                (loadPageCurrentEvent)=\"getloadPageCurrent()\">\r\n            </app-custom-pagination>\r\n        </div>\r\n    </div>\r\n    <div>\r\n        <ng-template #contentChangeEmail let-modal>\r\n          <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header color-bg-01 white-text text-center\">\r\n  \r\n                <h6 class=\"modal-title\">\r\n                  {{'ChangeEmail' | translate}} \r\n                </h6>\r\n              </div>\r\n              <div class=\"modal-body pt-0\">\r\n  \r\n                <form novalidate (ngSubmit)=\"ChangeEmailSave(modelForm)\" #modelForm=\"ngForm\">\r\n                  <div class=\"form-group \">\r\n                    \r\n                      <mat-label><b>{{'OldEmail' | translate }}</b>: </mat-label>\r\n                      <mat-label>{{modelChangeEmail.EmailOld}} </mat-label>\r\n                  </div>\r\n                  <div class=\"form-group \">\r\n                    <mat-form-field class=\"example-full-width\">\r\n                      <mat-label>{{'NewEmail' | translate }}</mat-label>\r\n                      <input matInput oninput=\"this.value = this.value.toLowerCase()\" id=\"modelEmailId\" type=\"email\"\r\n                        placeholder=\"{{'GenericRequiredEmail' | translate }}\" [pattern]=\"emailPattern\" required\r\n                        [(ngModel)]=\"modelChangeEmail.EmailNew\" #modelEmailVar=\"ngModel\"\r\n                        name=\"modelEmail\"\r\n                        [ngClass]=\"{'is-invalid': (modelEmailVar.touched || modelEmailVar.dirty) && !modelEmailVar.valid }\" />\r\n                      <mat-error *ngIf=\"modelEmailVar.errors?.required\">{{'GenericEnterEmail' | translate }}</mat-error>\r\n                      <mat-error *ngIf=\"modelEmailVar.errors?.pattern\">{{'GenericEnterEmailValid' | translate }}\r\n                      </mat-error>\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <div class=\"form-group pull-right md-form\">\r\n                    <button class=\"btn color-bg-01 btn-sm white-text\" type=\"submit\"\r\n                      [disabled]=\"!modelForm.valid \">{{'GenericSave' | translate }}</button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n  \r\n                <button type=\"button\" class=\"btn color-bg-02 btn-sm white-text\"\r\n                  (click)=\"modal.close('Close click')\">{{'GenericClose' | translate }}</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </ng-template>\r\n      </div>\r\n</section>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\nimport { cUserProfileTrainerCertificateItem, cUserProfileTrainerCertificateItemWithProfile } from 'src/app/interface/Response/UserProfile.class';\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\nimport { ServiceUserProfile } from 'src/app/services/userprofile.service';\n\n@Component({\n  selector: 'app-trainer-certificate',\n  templateUrl: './trainer-certificate.component.html',\n  styleUrls: ['./trainer-certificate.component.css']\n})\nexport class TrainerCertificateComponent extends baseComponent implements OnInit {\n  pageTitle: string = 'My Trainings';\n  lstData: cUserProfileTrainerCertificateItemWithProfile;\n  message: ShowMessage = new ShowMessage();\n  filtertxt: string = '';\n  modelName: string = '';\n  modelId: string = '0';\n  modelNameEdited: string = '';\n\n  constructor(private BLService: ServiceUserProfile,\n    private router: Router,\n    private route: ActivatedRoute,\n    BLServiceShowMessage: ServiceShowMessage,\n    BLServiceLoginUser: ServiceLoginUser, BLTranslate: TranslateService,) {\n    super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\n  }\n\n  ngOnInit(): void {\n    this.loadData();\n  }\n  private loadData(): void {\n    const param = this.route.snapshot.paramMap.get('Id');\n    if (param) {\n      this.modelId = param;\n    }\n    this.BLService.MyTrainerCertificate(this.modelId).subscribe({\n      next: lst => {\n        this.lstData = lst;\n      },\n      error: err => this.message.Error(err)\n    });\n  }\n}\n","<section class=\"my-5\">\n    <div class=\"container\">\n        <div class='row'>\n            <h4 class=\"mb-4\">{{'CertificateTrainer' | translate }} - {{lstData?.TrainerName}}</h4>\n        </div>\n        <div class=\"col-md-12\" *ngIf='lstData?.lstResult && lstData?.lstResult.length'>\n            <div class='table-responsive'>\n                <table class='table'>\n                    <thead>\n                        <tr>\n                            <th>{{'GenericPartner' | translate }}</th>\n                            <th>{{'GenericTrainingType' | translate }}</th>\n                            <th>{{'GenericTrainingCategory' | translate }}</th>\n                            <th>{{'GenericAction' | translate }}</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor='let obj of lstData?.lstResult'>\n                            <td>{{ obj.PartnerName}}</td>\n                            <td>{{ obj.TrainingTypeName}}</td>\n                            <td>{{ obj.TrainingCategoryName}}</td>\n                            <td>\n                                <a *ngIf=\"obj.CertificatePath != ''\" href=\"{{FilesURL + obj.CertificatePath}}\"\n                                    target=\"_blank\">{{'CertificateDownloadCertificate' | translate }}</a>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n        <div class=\"col-md-12\" *ngIf='lstData?.lstResult.length == 0'>\n            <div class=\"text-center bg-red noresult\">\n                <span class=\"font-italic\">{{'CertificateNoResults' | translate }} </span><span>&#9785;</span>\n            </div>\n        </div>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\r\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\r\nimport { cEntityPartnerItem } from 'src/app/interface/Response/EntityPartner.class';\r\nimport { ServiceCertificate } from 'src/app/services/certificate.service';\r\nimport { ServiceEntityManagement } from 'src/app/services/entitymanagement.service';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgForm } from '@angular/forms';\r\nimport { cTrainingTypeItem } from 'src/app/interface/Response/TrainingType.class';\r\nimport { ITrainingCategoryItem } from 'src/app/interface/Response/TrainingCategory.interface';\r\nimport { ServiceDataManagement } from 'src/app/services/datamanagement.service';\r\nimport { Constants } from 'src/app/constants';\r\nimport { Page } from 'src/app/common/pagination/page';\r\nimport { cCertificateItem, cCertificateList } from 'src/app/interface/Response/Certificate.class';\r\nimport { CustomPaginationService } from 'src/app/common/pagination/services/custom-pagination.service';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { CertificateType } from 'src/app/Enum/CertificateType.enum';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-category',\r\n  templateUrl: './category.component.html',\r\n  styleUrls: ['./category.component.css']\r\n})\r\nexport class CategoryComponent extends baseComponent implements OnInit {\r\n  message: ShowMessage = new ShowMessage();\r\n  public progress: number;\r\n  public modelName;\r\n  public isTraineeChecked: boolean = true;\r\n  public isTrainerChecked: boolean = false;\r\n  public lstPartners: cEntityPartnerItem[];\r\n  public lstPartnersSelected: any;\r\n  public partnerFileToUpload: File;\r\n  public selectedTrainingTypeId: string;\r\n  public selectedTrainingCategory: string;\r\n\r\n  lstTrainingTypes: cTrainingTypeItem[];\r\n  lstTrainingCategory: ITrainingCategoryItem[];\r\n  TrainingTypeId: string;\r\n\r\n  FilesURL: string = Constants.FilesURL;\r\n\r\n  page: Page<cCertificateItem> = new Page();\r\n  lstCertificate: cCertificateList;\r\n\r\n\r\n  constructor(private BLServiceCertificate: ServiceCertificate,\r\n    private BLServiceDataManagement: ServiceDataManagement,\r\n    private BLServiceEntityManagement: ServiceEntityManagement,\r\n    private paginationService: CustomPaginationService,\r\n    BLServiceShowMessage: ServiceShowMessage,\r\n    BLServiceLoginUser: ServiceLoginUser,BLTranslate: TranslateService,\r\n    private modalService: NgbModal) { super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate); }\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n    this.BLServiceDataManagement.getTrainingTypeListActive().subscribe({\r\n      next: lst => {\r\n        this.lstTrainingTypes = lst;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n    this.BLServiceEntityManagement.getEntityPartnerListActive(\"\").subscribe({\r\n      next: lst => {\r\n        this.lstPartners = lst;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  loadData() {\r\n\r\n    this.BLServiceCertificate.CertificateListAllByPartnerId(this.page.pageable.pageCurrent, \"\").subscribe({\r\n      next: lst => {\r\n        this.lstCertificate = lst;\r\n        this.page.pageable.pageSize = lst.pageSize;\r\n        this.page.totalElements = lst.totalCount;\r\n        this.page.content = lst.lstResult;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  public getNextPage(): void {\r\n    this.page.pageable = this.paginationService.getNextPage(this.page);\r\n    this.loadData();\r\n  }\r\n\r\n  public getPreviousPage(): void {\r\n    this.page.pageable = this.paginationService.getPreviousPage(this.page);\r\n    this.loadData();\r\n  }\r\n  public getloadPageCurrent(): void {\r\n    this.loadData();\r\n  }\r\n  createBtn(content): void {\r\n    this.modelName = \"Upload partner certificate for category\";\r\n    this.isTraineeChecked = true;\r\n    this.isTrainerChecked = false;\r\n    this.lstPartnersSelected = \"\";\r\n    this.selectedTrainingTypeId = \"\";\r\n    this.selectedTrainingCategory = \"\";\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n\r\n  onTrainingTypeSelect(event) {\r\n    this.selectedTrainingTypeId = event.value;\r\n    this.BLServiceDataManagement.getTrainingCategoryListByTrainingType(this.selectedTrainingTypeId).subscribe({\r\n      next: lst => {\r\n        this.lstTrainingCategory = lst;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n\r\n  PartnerChange(event) {\r\n  }\r\n\r\n  onPartnerFileTypeChange(e, fileType: string) {\r\n    if (e.target.value == \"on\") {\r\n      if (fileType == \"Trainee\") {\r\n        this.isTraineeChecked = true;\r\n        this.isTrainerChecked = false;\r\n      }\r\n      else {\r\n        this.isTraineeChecked = false;\r\n        this.isTrainerChecked = true;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  modelSaveBtn(modelForm: NgForm): void {\r\n    if (!modelForm.valid)\r\n      return;\r\n    \r\n\r\n    if (!this.partnerFileToUpload) {\r\n      this.message.Error(this.CertificateSelectFileError);\r\n      this.BLServiceShowMessage.sendMessage(this.message);\r\n      return;\r\n    }\r\n    var fileType = 2;\r\n    if (this.isTraineeChecked)\r\n      fileType = 2;\r\n    else if (this.isTrainerChecked)\r\n      fileType = 1;\r\n    this.BLServiceCertificate.uploadCategoryCertificateFile(this.partnerFileToUpload, fileType, this.lstPartnersSelected, this.selectedTrainingTypeId, this.selectedTrainingCategory).subscribe({\r\n      next: fileUploadResponse => {\r\n        this.message.Success(this.msgSavedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n        this.modalService.dismissAll();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n    /* this.BLServiceUserProfile.create(model).subscribe({\r\n       next: response => {\r\n         this.message.Success(this.msgSavedSuccessfully);\r\n         this.BLServiceShowMessage.sendMessage(this.message);\r\n         this.loadData();\r\n         this.isClicked = false;\r\n         this.modalService.dismissAll();\r\n       },\r\n       error: err => {this.message.Error(err)\r\n         this.isClicked = false;}\r\n     });*/\r\n\r\n\r\n  }\r\n  /**\r\n   * name\r\n   */\r\n  public OnParentFileChanged(files) {\r\n    this.partnerFileToUpload = <File>files[0];\r\n  }\r\n\r\n  public uploadFile = (files, fileType) => {\r\n    if (files.length === 0) {\r\n      return;\r\n    }\r\n    let fileToUpload = <File>files[0];\r\n    if (fileToUpload.type != \"application/pdf\") {\r\n      this.message.Error(this.CertificateSelectFileError);\r\n      this.BLServiceShowMessage.sendMessage(this.message);\r\n    } else {\r\n      this.BLServiceCertificate.uploadFile(fileToUpload, fileType).subscribe({\r\n        next: fileUploadResponse => {\r\n          this.loadData();\r\n          this.message.Success(this.msgSavedSuccessfully);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.modalService.dismissAll();\r\n        },\r\n\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n  }\r\n\r\n  public onTrainingCategorySelect(event) {\r\n    this.selectedTrainingCategory = event.value;\r\n  }\r\n  GetType(Type) {\r\n    return CertificateType[Type];\r\n  }\r\n  setActivate(Id: string): void {\r\n    if (!confirm(this.msgsetActivate))\r\n      return;\r\n\r\n    this.BLServiceCertificate.CertificateActivate(Id).subscribe({\r\n      next: response => {\r\n\r\n        this.message.Success(this.msgActivatedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  setDeactivate(Id: string): void {\r\n    if (!confirm(this.msgsetDeactivate))\r\n      return;\r\n\r\n    this.BLServiceCertificate.CertificateDeActivate(Id).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.msgDeactivatedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n}\r\n","<section class=\"my-5\">\r\n  <div class=\"container\">\r\n    <div class='row'>\r\n      <h4 class=\"mb-4\">{{'CertificateCategoryPageTitle' | translate }}</h4>\r\n    </div>\r\n    <div class='row'>\r\n      <div class=\"col-sm-12 md-form pull-right mb-3\">\r\n        <button type=\"button\" class=\"pull-right btn color-bg-01 white-text\" (click)=\"createBtn(content)\">{{'CertificateAdd' | translate }}</button>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-12\">\r\n      <div class='table-responsive'>\r\n        <table class='table' *ngIf='page.content && page.content.length'>\r\n          <thead>\r\n            <tr>\r\n              <th>{{'GenericPartner' | translate }}</th>\r\n              <th>{{'GenericTrainingType' | translate }}</th>\r\n              <th>{{'GenericTrainingCategory' | translate }}</th>\r\n              <th>{{'GenericType' | translate }}</th>\r\n              <th>{{'GenericAction' | translate }}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor='let obj of page.content'>\r\n              <td>{{ obj.PartnerName}}</td>\r\n              <td>{{ obj.TrainingTypeName}}</td>\r\n              <td>{{ obj.TrainingCategoryName}}</td>\r\n              <td>{{ GetType(obj.Type)}}</td>\r\n              <td>\r\n                <a class=\"mr-2\" href=\"{{obj.FileName}}\" target=\"_blank\">{{'CertificateDownloadCertificate' | translate }}</a>  \r\n                <input *ngIf=\"!obj.IsActive\" type=\"button\" class=\"btn btn-success\" value=\"{{'GenericActivate' | translate }}\"\r\n                (click)=\"setActivate(obj._id)\">\r\n                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-danger\" value=\"{{'GenericDeactivate' | translate }}\"\r\n                (click)=\"setDeactivate(obj._id)\">\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <app-custom-pagination [page]=\"page\" (nextPageEvent)=\"getNextPage()\" (previousPageEvent)=\"getPreviousPage()\"\r\n        (loadPageCurrentEvent)=\"getloadPageCurrent()\">\r\n      </app-custom-pagination>\r\n    </div>\r\n\r\n\r\n<div>\r\n  <ng-template #content let-modal>\r\n    <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header color-bg-01 white-text text-center\">\r\n          <h6 class=\"modal-title\">{{'CertificateUploadPartnerCertificate' | translate }}</h6>\r\n        </div>\r\n        <div class=\"modal-body pt-0\">\r\n          <form novalidate (ngSubmit)=\"modelSaveBtn(modelForm)\" #modelForm=\"ngForm\">\r\n            <div class=\"form-group \">\r\n              <span class=\"pr-3\">{{'CertificateFiletype' | translate }}:</span>\r\n              <input type=\"radio\" checked=\"true\" name=\"partnerFileType\" (change)=\"onPartnerFileTypeChange($event,'Trainee')\" class=\"mr-2\"/>{{'GenericTrainee' | translate }}\r\n              <input type=\"radio\" name=\"partnerFileType\" (change)=\"onPartnerFileTypeChange($event,'Trainer')\"  class=\"mr-2 ml-4\"/>{{'GenericTrainer' | translate }}\r\n            </div>\r\n            <div class=\"form-group \">\r\n              <mat-form-field>\r\n                <mat-label>{{'GenericPartnerEntity' | translate }}</mat-label>\r\n                <mat-select placeholder=\"{{'GenericSelectPartner' | translate }}\" required [(ngModel)]=\"lstPartnersSelected\"\r\n                  #modelMyPartnerListIds=\"ngModel\" name=\"lstPartnersSelected\"  >\r\n                  <mat-option *ngFor=\"let obj of lstPartners\" [value]=\"obj.Id\">{{ obj.Name }}</mat-option>\r\n                </mat-select>\r\n                <mat-error *ngIf=\"modelMyPartnerListIds.errors?.required\">{{'GenericEnterPartner' | translate }}</mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n            <div class=\"form-group \">\r\n              <mat-form-field>\r\n                <mat-label>{{'GenericTrainingType' | translate }}</mat-label>\r\n                <mat-select id=\"TrainingTypeId\" placeholder=\"{{'GenericSelectTrainingType' | translate }}\"  #modelTrainingTypeIds=\"ngModel\" required\r\n                  [(ngModel)]=\"selectedTrainingTypeId\" name=\"selectedTrainingTypeId\" (selectionChange)=\"onTrainingTypeSelect($event)\">\r\n                  <mat-option value=\"\">{{'GenericSelectTrainingType' | translate }}</mat-option>\r\n                  <mat-option *ngFor=\"let item of lstTrainingTypes\" value=\"{{item.Id}}\">\r\n                    {{item.Name}}</mat-option>\r\n                </mat-select>\r\n                <mat-error *ngIf=\"modelTrainingTypeIds.errors?.required\">{{'GenericSelectTrainingTypeError' | translate }}</mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <mat-form-field>\r\n                <mat-label>{{'GenericTrainingCategory' | translate }}</mat-label>\r\n                <mat-select id=\"filtertrainingCategory\" placeholder=\"{{'GenericSelectTrainingCategory' | translate }}\"  #modelTrainingCategoryIds=\"ngModel\" required\r\n                  (selectionChange)=\"onTrainingCategorySelect($event)\" name=\"selectedTrainingCategory\" [(ngModel)]=\"selectedTrainingCategory\">\r\n                  <mat-option value=\"\">{{'GenericSelectTrainingCategory' | translate }}</mat-option>\r\n                  <mat-option *ngFor=\"let item of lstTrainingCategory\" value=\"{{item.Id}}\">\r\n                    {{item.Name}}</mat-option>\r\n                </mat-select>\r\n                <mat-error *ngIf=\"modelTrainingCategoryIds.errors?.required\">{{'GenericSelectTrainingCategoryError' | translate }}</mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n            <div class=\"col-md-12\">\r\n              <span class=\"pr-3\">{{'CertificateUploadCertificate' | translate }}</span>\r\n              <input id=\"uploadPartnerCertificate\" name=\"uploadPartnerCertificate\" type=\"file\" #filePartner\r\n                placeholder=\"{{'CertificateChoosefile' | translate }}\" accept=\"application/pdf,\" (change)=\"OnParentFileChanged(filePartner.files)\"\r\n                style=\"display:none;\">\r\n              <button id=\"btuploadPartnerCertificate\" name=\"btuploadPartnerCertificate\" type=\"button\"\r\n                class=\"btn btn-success\" (click)=\"filePartner.click()\">{{'CertificateSelectFile' | translate }}</button>\r\n            </div>\r\n            <div class=\"form-group pull-right\">\r\n              <button class=\"btn color-bg-01 btn-sm white-text btnSave\" type=\"submit\"\r\n                [disabled]=\"!modelForm.valid\">{{'GenericSave' | translate }}</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n\r\n          <button type=\"button\" class=\"btn color-bg-02 btn-sm white-text\"\r\n            (click)=\"modal.close('Close click')\">{{'GenericClose' | translate }}</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </ng-template>\r\n</div>","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { HttpEventType, HttpClient } from '@angular/common/http';\r\nimport { ServiceCertificate } from 'src/app/services/certificate.service';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgForm } from '@angular/forms';\r\nimport { cEntityPartnerItem } from 'src/app/interface/Response/EntityPartner.class';\r\nimport { ServiceEntityManagement } from 'src/app/services/entitymanagement.service';\r\nimport { ModelCertificateUpload } from 'src/app/interface/Model/ModelCertificateUpload.class';\r\nimport { CertificateType } from 'src/app/Enum/CertificateType.enum';\r\nimport { cCertificateItem, cCertificateList } from 'src/app/interface/Response/Certificate.class';\r\nimport { Page } from 'src/app/common/pagination/page';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { CustomPaginationService } from 'src/app/common/pagination/services/custom-pagination.service';\r\nimport { ConfigForm } from 'src/app/Enum/ConfigForm.enum';\r\nimport { Constants } from 'src/app/constants';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-generics',\r\n  templateUrl: './generics.component.html',\r\n  styleUrls: ['./generics.component.css']\r\n})\r\nexport class GenericsComponent extends baseComponent implements OnInit {\r\n  message: ShowMessage = new ShowMessage();\r\n  public progress: number;\r\n  public modelName;\r\n  public isTraineeChecked: boolean = false;\r\n  public isTrainerChecked: boolean = false;\r\n  public lstPartners: cEntityPartnerItem[];\r\n  public lstPartnersSelected: any;\r\n  public partnerFileToUpload: File;\r\n  FilesURL: string = Constants.FilesURL;\r\n\r\n  page: Page<cCertificateItem> = new Page();\r\n  lstCertificate: cCertificateList;\r\n  lstSystemCertificate: cCertificateList;\r\n\r\n  @Output() public onUploadFinished = new EventEmitter();\r\n\r\n  constructor(private BLServiceCertificate: ServiceCertificate,\r\n    private BLServiceEntityManagement: ServiceEntityManagement,\r\n    private paginationService: CustomPaginationService,\r\n    BLServiceShowMessage: ServiceShowMessage,\r\n    BLServiceLoginUser: ServiceLoginUser,BLTranslate: TranslateService,\r\n    private http: HttpClient, private modalService: NgbModal) {\r\n    super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.BLServiceEntityManagement.getEntityPartnerListActive(\"\").subscribe({\r\n      next: lst => {\r\n        this.lstPartners = lst;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n    this.loadData();\r\n  }\r\n  loadData() {\r\n    this.BLServiceCertificate.CertificateListAllGenericByPartnerId(this.page.pageable.pageCurrent, \"\").subscribe({\r\n      next: lst => {\r\n        this.lstCertificate = lst;\r\n        this.page.pageable.pageSize = lst.pageSize;\r\n        this.page.totalElements = lst.totalCount;\r\n        this.page.content = lst.lstResult;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n    this.BLServiceCertificate.CertificateListAllSystemGeneric().subscribe({\r\n      next: lst => {\r\n        \r\n        this.lstSystemCertificate = lst;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  public getNextPage(): void {\r\n    this.page.pageable = this.paginationService.getNextPage(this.page);\r\n    this.loadData();\r\n  }\r\n\r\n  public getPreviousPage(): void {\r\n    this.page.pageable = this.paginationService.getPreviousPage(this.page);\r\n    this.loadData();\r\n  }\r\n  public getloadPageCurrent(): void {\r\n    this.loadData();\r\n  }\r\n  createBtn(content): void {\r\n    this.modelName = \"Upload partner certificate\";\r\n    this.isTraineeChecked = true;\r\n    this.isTrainerChecked = false;\r\n    this.lstPartnersSelected = \"\";\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n\r\n  onPartnerFileTypeChange(e, fileType: string) {\r\n    if (e.target.value == \"on\") {\r\n      if (fileType == \"Trainee\") {\r\n        this.isTraineeChecked = true;\r\n        this.isTrainerChecked = false;\r\n      }\r\n      else {\r\n        this.isTraineeChecked = false;\r\n        this.isTrainerChecked = true;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  modelSaveBtn(modelForm: NgForm): void {\r\n\r\n    if (!modelForm.valid)\r\n      return;\r\n\r\n    if (!this.partnerFileToUpload) {\r\n      this.message.Error(this.CertificateSelectFileError);\r\n      this.BLServiceShowMessage.sendMessage(this.message);\r\n      return;\r\n    }\r\n\r\n    var fileType = 0;\r\n    if (this.isTraineeChecked)\r\n      fileType = 2;\r\n    else\r\n      fileType = 1;\r\n\r\n    this.BLServiceCertificate.uploadFile(this.partnerFileToUpload, fileType, this.lstPartnersSelected).subscribe({\r\n      next: fileUploadResponse => {\r\n        this.loadData();\r\n        this.message.Success(this.msgSavedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.modalService.dismissAll();\r\n      },\r\n\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n\r\n  public OnParentFileChanged(files) {\r\n    this.partnerFileToUpload = <File>files[0];\r\n  }\r\n\r\n  public uploadFile = (files, fileType,event) => {\r\n\r\n    console.log(event);\r\n    this.OnParentFileChanged(files);\r\n    if (files.length === 0) {\r\n      return;\r\n    }\r\n\r\n    if (!this.partnerFileToUpload) {\r\n      this.message.Error(this.CertificateSelectFileError);\r\n      this.BLServiceShowMessage.sendMessage(this.message);\r\n      return;\r\n    }\r\n\r\n    let fileToUpload = <File>files[0];\r\n    console.log(fileToUpload);\r\n    \r\n    if (fileToUpload.type != \"application/pdf\") {\r\n      this.message.Error(this.CertificatePDFOnly);\r\n      this.BLServiceShowMessage.sendMessage(this.message);\r\n    } else {\r\n      this.BLServiceCertificate.uploadFile(fileToUpload, fileType).subscribe({\r\n        next: fileUploadResponse => {\r\n          this.message.Success(this.msgSavedSuccessfully);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n        },\r\n\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n  }\r\n  GetType(Type) {\r\n    return CertificateType[Type];\r\n  }\r\n  setActivate(Id: string): void {\r\n    if (!confirm(this.msgsetActivate))\r\n      return;\r\n\r\n    this.BLServiceCertificate.CertificateActivate(Id).subscribe({\r\n      next: response => {\r\n\r\n        this.message.Success(this.msgActivatedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  setDeactivate(Id: string): void {\r\n    if (!confirm(this.msgsetDeactivate))\r\n      return;\r\n\r\n    this.BLServiceCertificate.CertificateDeActivate(Id).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.msgDeactivatedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n}\r\n","<section class=\"my-5\">\r\n  <div class=\"container\">\r\n    <div class='row'>\r\n      <h4 class=\"mb-4\">{{'CertificateGenerics' | translate }}</h4>\r\n    </div>\r\n    <div class='row'>\r\n      <h6 class=\"mb-4\">{{'CertificateSysten' | translate }}</h6>\r\n    </div>\r\n    <div class='row'>\r\n      <div class=\"col-sm-6 md-form\">\r\n        <span class=\"pr-2\">{{'CertificateUploadTrainee' | translate }}</span>\r\n        <input id=\"uploadTrainee\" name=\"uploadTrainee\" type=\"file\" #fileTrainee placeholder=\"{{'CertificateChoosefile' | translate }}\"\r\n          accept=\"application/pdf\" (change)=\"uploadFile(fileTrainee.files,2,$event)\" style=\"display:none;\">\r\n        <button id=\"btnuploadTrainee\" name=\"btnuploadTrainee\" type=\"button\" class=\"btn btn-success\"\r\n          (click)=\"fileTrainee.click()\">{{'CertificateSelectFile' | translate }}</button>\r\n      </div>\r\n      <div class=\"col-sm-6 md-form pull-right\">\r\n        <span class=\"pr-2\">{{'CertificateUploadTrainer' | translate }}</span>\r\n        <input id=\"uploadTrainer\" name=\"uploadTrainer\" type=\"file\" #fileTrainer placeholder=\"{{'CertificateChoosefile' | translate }}\"\r\n          accept=\"application/pdf\" (change)=\"uploadFile(fileTrainer.files,1,$event)\" style=\"display:none;\">\r\n        <button id=\"btnuploadTrainer\" name=\"btnuploadTrainer\" type=\"button\" class=\"btn btn-success\"\r\n          (click)=\"fileTrainer.click()\">{{'CertificateSelectFile' | translate }}</button>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-12 mt-2\">\r\n      <div class='table-responsive'>\r\n        <table class='table' >\r\n          <thead>\r\n            <tr>\r\n              <th>{{'GenericType' | translate }}</th>\r\n              <th>{{'GenericAction' | translate }}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor='let cert of lstSystemCertificate?.lstResult'>\r\n              <td>{{ GetType(cert.Type)}}</td>\r\n              <td>\r\n                <a class=\"mr-2\" href=\"{{cert.FileName}}\" target=\"_blank\">{{'CertificateDownloadCertificate' | translate }}</a>  \r\n                <input *ngIf=\"!cert.IsActive\" type=\"button\" class=\"btn btn-success\" value=\"{{'GenericActivate' | translate }}\"\r\n                (click)=\"setActivate(cert._id)\">\r\n                <input *ngIf=\"cert.IsActive\" type=\"button\" class=\"btn btn-danger\" value=\"{{'GenericDeactivate' | translate }}\"\r\n                (click)=\"setDeactivate(cert._id)\">\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n    <div class='row'>\r\n      <hr class=\"w-100\" style=\"border-top: 4px solid rgba(0,0,0,.1);\">\r\n    </div>\r\n    <div class='row'>\r\n      <h6 class=\"mb-4\">{{'CertificatePartnerGeneric' | translate }}</h6>\r\n    </div>\r\n    <div class=\"row\" style=\"margin-bottom:15px;\">\r\n      <div class=\"col-sm-12 md-form pull-right mb-3\">\r\n        <button type=\"button\" class=\"pull-right btn color-bg-01 white-text\" (click)=\"createBtn(content)\">{{'CertificateAdd' | translate }}</button>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-12\">\r\n      <div class='table-responsive'>\r\n        <table class='table' *ngIf='page.content && page.content.length'>\r\n          <thead>\r\n            <tr>\r\n              <th>{{'GenericPartner' | translate }}</th>\r\n              <th>{{'GenericType' | translate }}</th>\r\n              <th>{{'GenericAction' | translate }}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor='let obj of page.content'>\r\n              <td>{{ obj.PartnerName}}</td>\r\n              <td>{{ GetType(obj.Type)}}</td>\r\n              <td>\r\n                <a class=\"mr-2\" href=\"{{ obj.FileName}}\" target=\"_blank\">{{'CertificateDownloadCertificate' | translate }}</a>  \r\n                <input *ngIf=\"!obj.IsActive\" type=\"button\" class=\"btn btn-success\" value=\"{{'GenericActivate' | translate }}\"\r\n                (click)=\"setActivate(obj._id)\">\r\n                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-danger\" value=\"{{'GenericDeactivate' | translate }}\"\r\n                (click)=\"setDeactivate(obj._id)\">\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <app-custom-pagination [page]=\"page\" (nextPageEvent)=\"getNextPage()\" (previousPageEvent)=\"getPreviousPage()\"\r\n        (loadPageCurrentEvent)=\"getloadPageCurrent()\">\r\n      </app-custom-pagination>\r\n    </div>\r\n  </div>\r\n</section>\r\n\r\n<div>\r\n  <ng-template #content let-modal>\r\n    <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header color-bg-01 white-text text-center\">\r\n          <h6 class=\"modal-title\">{{'CertificateUploadPartnerCertificate' | translate }}</h6>\r\n        </div>\r\n        <div class=\"modal-body pt-0\">\r\n          <form novalidate (ngSubmit)=\"modelSaveBtn(modelForm)\" #modelForm=\"ngForm\">\r\n            <div class=\"form-group \">\r\n              <span class=\"pr-3\">{{'CertificateFiletype' | translate }}:</span>\r\n              <input type=\"radio\" checked=\"true\" name=\"partnerFileType\" (change)=\"onPartnerFileTypeChange($event,'Trainee')\" class=\"mr-2\"/>{{'GenericTrainee' | translate }}\r\n              <input type=\"radio\" name=\"partnerFileType\" (change)=\"onPartnerFileTypeChange($event,'Trainer')\"  class=\"mr-2 ml-4\"/>{{'GenericTrainer' | translate }}\r\n            </div>\r\n            <div class=\"form-group \">\r\n              <mat-form-field>\r\n                <mat-label>{{'GenericPartnerEntity' | translate }}</mat-label>\r\n                <mat-select placeholder=\"{{'GenericSelectPartner' | translate }} \" required [(ngModel)]=\"lstPartnersSelected\"\r\n                  #modelMyPartnerListIds=\"ngModel\" name=\"MyPartnerListIds\">\r\n                  <mat-option *ngFor=\"let obj of lstPartners\" [value]=\"obj.Id\">{{ obj.Name }}</mat-option>\r\n                </mat-select>\r\n                <mat-error *ngIf=\"modelMyPartnerListIds.errors?.required\">{{'GenericEnterPartner' | translate }}</mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n            <div class=\"form-group \">\r\n              <span class=\"pr-2\">{{'CertificateUploadCertificate' | translate }}</span>\r\n              <input id=\"uploadPartnerCertificate\" name=\"uploadPartnerCertificate\" type=\"file\" #filePartner\r\n                placeholder=\"{{'CertificateChoosefile' | translate }}\" accept=\"application/pdf,\" (change)=\"OnParentFileChanged(filePartner.files)\"\r\n                style=\"display:none;\">\r\n              <button id=\"btuploadPartnerCertificate\" name=\"btuploadPartnerCertificate\" type=\"button\"\r\n                class=\"btn btn-success\" (click)=\"filePartner.click()\">{{'CertificateSelectFile' | translate }}</button>\r\n            </div>\r\n            <div class=\"form-group pull-right\">\r\n              <button class=\"btn color-bg-01 btn-sm white-text btnSave\" type=\"submit\"\r\n                \r\n                [disabled]=\"!modelForm.valid\">{{'GenericSave' | translate }}</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n\r\n          <button type=\"button\" class=\"btn color-bg-02 btn-sm white-text\"\r\n            (click)=\"modal.close('Close click')\">{{'GenericClose' | translate }}</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </ng-template>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\nimport { ServiceUserProfile } from 'src/app/services/userprofile.service';\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\nimport { Page } from 'src/app/common/pagination/page';\nimport { cUserProfileTrainerCertificateList, cUserProfileTrainerCertificateItem } from 'src/app/interface/Response/UserProfile.class';\nimport { CustomPaginationService } from 'src/app/common/pagination/services/custom-pagination.service';\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\nimport { ModelTrainerCertificateApproval } from 'src/app/interface/Model/ModelTrainerCertificateApproval.class';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-trainer-approval',\n  templateUrl: './trainer-approval.component.html',\n  styleUrls: ['./trainer-approval.component.css']\n})\nexport class TrainerApprovalComponent extends baseComponent implements OnInit {\n  message: ShowMessage = new ShowMessage();\n\n  page: Page<cUserProfileTrainerCertificateItem> = new Page();\n  lstCertificate: cUserProfileTrainerCertificateList;\n  msgApprovedSuccessfully:string;\n  msgsetApproved:string;\n\n  constructor(private BLServiceUserProfile: ServiceUserProfile,\n    private paginationService: CustomPaginationService,\n    BLServiceShowMessage: ServiceShowMessage,\n    BLServiceLoginUser: ServiceLoginUser, BLTranslate: TranslateService,) {\n    super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\n  }\n\n  ngOnInit() {\n    this.BLTranslate.get(\"msgApprovedSuccessfully\").subscribe(res => { this.msgApprovedSuccessfully = res; });\n    this.BLTranslate.get(\"msgsetApproved\").subscribe(res => { this.msgsetApproved = res; });\n   \n    this.loadData();\n  }\n  loadData() {\n\n    this.BLServiceUserProfile.GetTrainerCertificate(this.page.pageable.pageCurrent, \"\").subscribe({\n      next: lst => {\n        this.lstCertificate = lst;\n        this.page.pageable.pageSize = lst.pageSize;\n        this.page.totalElements = lst.totalCount;\n        this.page.content = lst.lstResult;\n      },\n      error: err => this.message.Error(err)\n    });\n  }\n  public getNextPage(): void {\n    this.page.pageable = this.paginationService.getNextPage(this.page);\n    this.loadData();\n  }\n\n  public getPreviousPage(): void {\n    this.page.pageable = this.paginationService.getPreviousPage(this.page);\n    this.loadData();\n  }\n  public getloadPageCurrent(): void {\n    this.loadData();\n  }\n\n  Approve(obj: cUserProfileTrainerCertificateItem): void {\n    if (!confirm(this.msgsetApproved))\n      return;\n\n    var model = new ModelTrainerCertificateApproval();\n    model.TrainerId = obj.TrainerId;\n    model.PartnerId = obj.PartnerId;\n    model.TrainingCategoryId = obj.TrainingCategoryId;\n\n    this.BLServiceUserProfile.CertificateApprove(model).subscribe({\n      next: response => {\n\n        this.message.Success(this.msgApprovedSuccessfully);\n        this.BLServiceShowMessage.sendMessage(this.message);\n        this.loadData();\n      },\n      error: err => this.message.Error(err)\n    });\n  }\n\n}\n","<section class=\"my-5\">\n    <div class=\"container\">\n      <div class='row'>\n        <h4 class=\"mb-4\">{{'CertificateCertificateApproval' | translate }} </h4>\n      </div>\n      <div class=\"col-md-12\">\n        <div class='table-responsive'>\n          <table class='table' *ngIf='page.content && page.content.length'>\n            <thead>\n              <tr>\n                <th>{{'GenericTrainer' | translate }}</th>\n                <th>{{'GenericPartner' | translate }}</th>\n                <th>{{'GenericTrainingType' | translate }}</th>\n                <th>{{'GenericTrainingCategory' | translate }}</th>\n                <th>{{'CertificateExamCount' | translate }}</th>\n                <th>{{'GenericAction' | translate }}</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor='let obj of page.content'>\n                <td>{{ obj.TrainerName}}</td>\n                <td>{{ obj.PartnerName}}</td>\n                <td>{{ obj.TrainingTypeName}}</td>\n                <td>{{ obj.TrainingCategoryName}}</td>\n                <td>{{obj.ExamCount}}</td>\n                <td>\n                  <input type=\"button\" class=\"btn btn-success\" value=\"{{'CertificateApprove' | translate }}\"\n                  (click)=\"Approve(obj)\">\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n      <div>\n        <app-custom-pagination [page]=\"page\" (nextPageEvent)=\"getNextPage()\" (previousPageEvent)=\"getPreviousPage()\"\n          (loadPageCurrentEvent)=\"getloadPageCurrent()\">\n        </app-custom-pagination>\n      </div>\n  \n  ","import { Component, OnInit } from '@angular/core';\r\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\r\nimport { cEntityPartnerItem } from 'src/app/interface/Response/EntityPartner.class';\r\nimport { ServiceCertificate } from 'src/app/services/certificate.service';\r\nimport { ServiceEntityManagement } from 'src/app/services/entitymanagement.service';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgForm } from '@angular/forms';\r\nimport { cTrainingTypeItem } from 'src/app/interface/Response/TrainingType.class';\r\nimport { ITrainingCategoryItem } from 'src/app/interface/Response/TrainingCategory.interface';\r\nimport { ServiceDataManagement } from 'src/app/services/datamanagement.service';\r\nimport { CustomPaginationService } from 'src/app/common/pagination/services/custom-pagination.service';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { Page } from 'src/app/common/pagination/page';\r\nimport { cCertificateItem, cCertificateList } from 'src/app/interface/Response/Certificate.class';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { CertificateType } from 'src/app/Enum/CertificateType.enum';\r\nimport { Constants } from 'src/app/constants';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-trainingcenter',\r\n  templateUrl: './trainingcenter.component.html',\r\n  styleUrls: ['./trainingcenter.component.css']\r\n})\r\nexport class CertificateTrainingCenterComponent extends baseComponent implements OnInit {\r\n  message: ShowMessage = new ShowMessage();\r\n  public progress: number;\r\n  public modelName;\r\n  public isTraineeChecked: boolean = true;\r\n  public isTrainerChecked: boolean = false;\r\n  public lstPartners: cEntityPartnerItem[];\r\n  public lstTrainingCenter: any;\r\n  public lstPartnersSelected: cEntityPartnerItem;\r\n  public partnerFileToUpload: File;\r\n  public selectPartnerId: string;\r\n  public selectedTrainingTypeId: string;\r\n  public selectedTrainingCategory: string;\r\n  public selectedTrainingCenter: string;\r\n  lstTrainingTypes: cTrainingTypeItem[];\r\n  lstTrainingCategory: ITrainingCategoryItem[];\r\n  TrainingTypeId: string;\r\n\r\n  FilesURL: string = Constants.FilesURL;\r\n  page: Page<cCertificateItem> = new Page();\r\n  lstCertificate: cCertificateList;\r\n\r\n  constructor(private BLServiceCertificate: ServiceCertificate,\r\n    private BLServiceDataManagement: ServiceDataManagement,\r\n    private BLServiceEntityManagement: ServiceEntityManagement,\r\n    private paginationService: CustomPaginationService,\r\n    BLServiceShowMessage: ServiceShowMessage,\r\n    BLServiceLoginUser: ServiceLoginUser,BLTranslate: TranslateService, private modalService: NgbModal) {\r\n    super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n    this.BLServiceDataManagement.getTrainingTypeListActive().subscribe({\r\n      next: lst => {\r\n        this.lstTrainingTypes = lst;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n    this.BLServiceEntityManagement.getEntityPartnerListActive(\"\").subscribe({\r\n      next: lst => {\r\n        this.lstPartners = lst;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  loadData() {\r\n\r\n    this.BLServiceCertificate.CertificateListAllByTrainingCenterId(this.page.pageable.pageCurrent, \"\").subscribe({\r\n      next: lst => {\r\n        this.lstCertificate = lst;\r\n        this.page.pageable.pageSize = lst.pageSize;\r\n        this.page.totalElements = lst.totalCount;\r\n        this.page.content = lst.lstResult;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  public getNextPage(): void {\r\n    this.page.pageable = this.paginationService.getNextPage(this.page);\r\n    this.loadData();\r\n  }\r\n\r\n  public getPreviousPage(): void {\r\n    this.page.pageable = this.paginationService.getPreviousPage(this.page);\r\n    this.loadData();\r\n  }\r\n  public getloadPageCurrent(): void {\r\n    this.loadData();\r\n  }\r\n  createBtn(content): void {\r\n    this.modelName = \"Upload partner certificate for category\";\r\n\r\n    this.isTraineeChecked = true;\r\n    this.isTrainerChecked = false;\r\n    this.selectPartnerId = \"\";\r\n    this.selectedTrainingCenter = \"\";\r\n    this.selectedTrainingTypeId = \"\";\r\n    this.selectedTrainingCategory = \"\";\r\n\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n\r\n  onTrainingTypeSelect(event) {\r\n    this.selectedTrainingTypeId = event.value;\r\n    this.BLServiceDataManagement.getTrainingCategoryListByTrainingType(this.selectedTrainingTypeId).subscribe({\r\n      next: lst => {\r\n        this.lstTrainingCategory = lst;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n\r\n  PartnerChange(event) {\r\n    var selectedPartner = this.lstPartners.find(item => item.Id == this.selectPartnerId);\r\n\r\n    var tc = selectedPartner.TrainingCenters;\r\n    this.lstTrainingCenter = tc.filter(a => a.IsActive == true);\r\n  }\r\n\r\n  onPartnerFileTypeChange(e, fileType: string) {\r\n    if (e.target.value == \"on\") {\r\n      if (fileType == \"Trainee\") {\r\n        this.isTraineeChecked = true;\r\n        this.isTrainerChecked = false;\r\n      }\r\n      else {\r\n        this.isTraineeChecked = false;\r\n        this.isTrainerChecked = true;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  modelSaveBtn(modelForm: NgForm): void {\r\n    if (!modelForm.valid)\r\n      return;\r\n\r\n    if (!this.partnerFileToUpload) {\r\n      this.message.Error(this.CertificateSelectFileError);\r\n      this.BLServiceShowMessage.sendMessage(this.message);\r\n      return;\r\n    }\r\n\r\n    var fileType = 2;\r\n    if (this.isTraineeChecked)\r\n      fileType = 2;\r\n    else\r\n      fileType = 1;\r\n    this.BLServiceCertificate.uploadTrainingCenterCertificateFile(this.partnerFileToUpload, fileType, this.selectPartnerId, this.selectedTrainingCenter, this.selectedTrainingTypeId, this.selectedTrainingCategory).subscribe({\r\n      next: fileUploadResponse => {\r\n        this.message.Success(this.msgSavedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n        this.modalService.dismissAll();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n    /* this.BLServiceUserProfile.create(model).subscribe({\r\n       next: response => {\r\n         this.message.Success(this.msgSavedSuccessfully);\r\n         this.BLServiceShowMessage.sendMessage(this.message);\r\n         this.loadData();\r\n         this.isClicked = false;\r\n         this.modalService.dismissAll();\r\n       },\r\n       error: err => {this.message.Error(err)\r\n         this.isClicked = false;}\r\n     });*/\r\n  }\r\n  /**\r\n   * name\r\n   */\r\n  public OnParentFileChanged(files) {\r\n    this.partnerFileToUpload = <File>files[0];\r\n  }\r\n\r\n  public uploadFile = (files, fileType) => {\r\n    if (files.length === 0) {\r\n      return;\r\n    }\r\n    let fileToUpload = <File>files[0];\r\n    if (fileToUpload.type != \"application/pdf\") {\r\n      this.message.Error(this.CertificatePDFOnly);\r\n      this.BLServiceShowMessage.sendMessage(this.message);\r\n    } else {\r\n      this.BLServiceCertificate.uploadFile(fileToUpload, fileType).subscribe({\r\n        next: fileUploadResponse => {\r\n          this.message.Success(this.msgSavedSuccessfully);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.modalService.dismissAll();\r\n        },\r\n\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n  }\r\n\r\n  public onTrainingCategorySelect(event) {\r\n    this.selectedTrainingCategory = event.value;\r\n  }\r\n\r\n  public onTrainingCenterSelect(event) {\r\n    this.selectedTrainingCenter = event.value;\r\n  }\r\n  GetType(Type) {\r\n    return CertificateType[Type];\r\n  }\r\n  setActivate(Id: string): void {\r\n    if (!confirm(this.msgsetActivate))\r\n      return;\r\n\r\n    this.BLServiceCertificate.CertificateActivate(Id).subscribe({\r\n      next: response => {\r\n\r\n        this.message.Success(this.msgActivatedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  setDeactivate(Id: string): void {\r\n    if (!confirm(this.msgsetDeactivate))\r\n      return;\r\n\r\n    this.BLServiceCertificate.CertificateDeActivate(Id).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.msgDeactivatedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n}\r\n","<section class=\"my-5\">\r\n  <div class=\"container\">\r\n    <div class='row'>\r\n      <h4 class=\"mb-4\">{{'CertificateTrainingCenter' | translate }}</h4>\r\n    </div>\r\n    <div class='row'>\r\n      <div class=\"col-sm-12 md-form pull-right mb-3\">\r\n        <button type=\"button\" class=\"pull-right btn color-bg-01 white-text\" (click)=\"createBtn(content)\">{{'CertificateAdd' | translate }}</button>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-12\">\r\n      <div class='table-responsive'>\r\n        <table class='table' *ngIf='page.content && page.content.length'>\r\n          <thead>\r\n            <tr>\r\n              <th>{{'GenericPartner' | translate }}</th>\r\n              <th>{{'GenericTrainingCenter' | translate }}</th>\r\n              <th>{{'GenericTrainingType' | translate }}</th>\r\n              <th>{{'GenericTrainingCategory' | translate }}</th>\r\n              <th>{{'GenericType' | translate }}</th>\r\n              <th>{{'GenericAction' | translate }}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor='let obj of page.content'>\r\n              <td>{{ obj.PartnerName}}</td>\r\n              <td>{{ obj.TrainingCenterName}}</td>\r\n              <td>{{ obj.TrainingTypeName}}</td>\r\n              <td>{{ obj.TrainingCategoryName}}</td>\r\n              <td>{{ GetType(obj.Type)}}</td>\r\n              <td>\r\n                <a class=\"mr-2\" href=\"{{ obj.FileName}}\" target=\"_blank\">{{'CertificateDownloadCertificate' | translate }}</a>  \r\n                <input *ngIf=\"!obj.IsActive\" type=\"button\" class=\"btn btn-success\" value=\"{{'GenericActivate' | translate }}\"\r\n                (click)=\"setActivate(obj._id)\">\r\n                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-danger\" value=\"{{'GenericDeactivate' | translate }}\"\r\n                (click)=\"setDeactivate(obj._id)\">\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <app-custom-pagination [page]=\"page\" (nextPageEvent)=\"getNextPage()\" (previousPageEvent)=\"getPreviousPage()\"\r\n        (loadPageCurrentEvent)=\"getloadPageCurrent()\">\r\n      </app-custom-pagination>\r\n    </div>\r\n  </div>\r\n</section>\r\n\r\n<div>\r\n  <ng-template #content let-modal>\r\n    <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header color-bg-01 white-text text-center\">\r\n          <h6 class=\"modal-title\">{{'CertificateUploadPartnerCertificate' | translate }}</h6>\r\n        </div>\r\n        <div class=\"modal-body pt-0\">\r\n          <form novalidate (ngSubmit)=\"modelSaveBtn(modelForm)\" #modelForm=\"ngForm\">\r\n            <div class=\"form-group \">\r\n              <span class=\"pr-3\">{{'CertificateFiletype' | translate }}:</span>\r\n              <input type=\"radio\" checked=\"true\" name=\"partnerFileType\" (change)=\"onPartnerFileTypeChange($event,'Trainee')\" class=\"mr-2\"/>{{'GenericTrainee' | translate }}\r\n              <!-- <input type=\"radio\" name=\"partnerFileType\" (change)=\"onPartnerFileTypeChange($event,'Trainer')\"  class=\"mr-2 ml-4\"/>{{'GenericTrainer' | translate }} -->\r\n            </div>\r\n            <div class=\"form-group \">\r\n              <mat-form-field>\r\n                <mat-label>{{'GenericPartnerEntity' | translate }}</mat-label>\r\n                <mat-select placeholder=\"{{'GenericSelectPartner' | translate }}\" required [(ngModel)]=\"selectPartnerId\"\r\n                  #modelMyPartnerListIds=\"ngModel\" name=\"selectPartnerId\" (selectionChange)=\"PartnerChange($event)\">\r\n                  <mat-option *ngFor=\"let obj of lstPartners\" [value]=\"obj.Id\">{{ obj.Name }}</mat-option>\r\n                </mat-select>\r\n                <mat-error *ngIf=\"modelMyPartnerListIds.errors?.required\">{{'GenericEnterPartner' | translate }}</mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"form-group \">\r\n              <mat-form-field>\r\n                <mat-label>{{'GenericTrainingCenter' | translate }}s</mat-label>\r\n                <mat-select id=\"TrainingCenterId\" placeholder=\"Select a TrainingCenterId\" required #modelMyTCListIds=\"ngModel\"\r\n                  [(ngModel)]=\"selectedTrainingCenter\" (selectionChange)=\"onTrainingCenterSelect($event)\"\r\n                  name=\"TrainingCenterId\">\r\n                  <mat-option value=\"\">Select a Training Center</mat-option>\r\n                  <mat-option *ngFor=\"let item of lstTrainingCenter\" value=\"{{item.Id}}\">\r\n                    {{item.Name}}</mat-option>\r\n                </mat-select>\r\n                <mat-error *ngIf=\"modelMyTCListIds.errors?.required\">Please choose a Training Center.</mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n            <div class=\"form-group \">\r\n              <mat-form-field>\r\n                <mat-label>{{'GenericTrainingType' | translate }}</mat-label>\r\n                <mat-select id=\"TrainingTypeId\" placeholder=\"{{'GenericSelectTrainingType' | translate }}\" #modelTrainingTypeIds=\"ngModel\"\r\n                  required [(ngModel)]=\"selectedTrainingTypeId\" name=\"selectedTrainingTypeId\"\r\n                  (selectionChange)=\"onTrainingTypeSelect($event)\">\r\n                  <mat-option value=\"\">{{'GenericSelectTrainingType' | translate }}</mat-option>\r\n                  <mat-option *ngFor=\"let item of lstTrainingTypes\" value=\"{{item.Id}}\">\r\n                    {{item.Name}}</mat-option>\r\n                </mat-select>\r\n                <mat-error *ngIf=\"modelTrainingTypeIds.errors?.required\">{{'GenericSelectTrainingTypeError' | translate }}</mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <mat-form-field>\r\n                <mat-label>{{'GenericTrainingCategory' | translate }}</mat-label>\r\n                <mat-select id=\"filtertrainingCategory\" placeholder=\"{{'GenericSelectTrainingCategory' | translate }}\"\r\n                  #modelTrainingCategoryIds=\"ngModel\" required (selectionChange)=\"onTrainingCategorySelect($event)\"\r\n                  name=\"selectedTrainingCategory\" [(ngModel)]=\"selectedTrainingCategory\">\r\n                  <mat-option value=\"\">{{'GenericSelectTrainingCategory' | translate }}</mat-option>\r\n                  <mat-option *ngFor=\"let item of lstTrainingCategory\" value=\"{{item.Id}}\">\r\n                    {{item.Name}}</mat-option>\r\n                </mat-select>\r\n                <mat-error *ngIf=\"modelTrainingCategoryIds.errors?.required\">{{'GenericSelectTrainingCategoryError' | translate }}\r\n                </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n            <div class=\"col-md-12\">\r\n              <span class=\"pr-3\">{{'CertificateUploadCertificate' | translate }}</span>\r\n              <input id=\"uploadPartnerCertificate\" name=\"uploadPartnerCertificate\" type=\"file\" #filePartner\r\n                placeholder=\"{{'CertificateChoosefile' | translate }}\" accept=\"application/pdf,\" (change)=\"OnParentFileChanged(filePartner.files)\"\r\n                style=\"display:none;\">\r\n              <button id=\"btuploadPartnerCertificate\" name=\"btuploadPartnerCertificate\" type=\"button\"\r\n                class=\"btn btn-success\" (click)=\"filePartner.click()\">{{'CertificateSelectFile' | translate }}</button>\r\n            </div>\r\n            <div class=\"form-group pull-right\">\r\n              <button class=\"btn color-bg-01 btn-sm white-text btnSave\" type=\"submit\"\r\n                \r\n                [disabled]=\"!modelForm.valid\">{{'GenericSave' | translate }}</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n\r\n          <button type=\"button\" class=\"btn color-bg-02 btn-sm white-text\"\r\n            (click)=\"modal.close('Close click')\">{{'GenericClose' | translate }}</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </ng-template>\r\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-verify',\n  templateUrl: './verify.component.html',\n  styleUrls: ['./verify.component.css']\n})\nexport class VerifyComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>verify works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { ModelContentData } from 'src/app/interface/Model/ModelContentData.class';\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\nimport { ServiceContentData } from 'src/app/services/content-data.service';\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\nimport { EnumContentData } from 'src/app/Enum/ContentData.enum';\nimport { NgForm } from '@angular/forms';\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-about-edit',\n  templateUrl: './about-edit.component.html',\n  styleUrls: ['./about-edit.component.css']\n})\nexport class AboutEditComponent extends baseComponent implements OnInit {\n\n  pageTitle: string = 'Editing About Section';\n  modelObj: ModelContentData = new ModelContentData();\n  message: ShowMessage = new ShowMessage();\n  \n  constructor(private BLService: ServiceContentData,\n    BLServiceShowMessage: ServiceShowMessage,\n    BLServiceLoginUser : ServiceLoginUser,BLTranslate: TranslateService,) { \n      super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\n    }\n\n  ngOnInit(): void {\n    this.loadData();\n  }\nloadData() {\n    this.BLService.ContentDataOneGetByTypeId(EnumContentData.About).subscribe({\n      next: obj => {\n        this.modelObj = obj;\n      },\n      error: err => this.message.Error(err)\n    });\n  }\n  modelSaveBtn(modelForm: NgForm): void {\n    if (!modelForm.valid)\n      return;\n\n      this.BLService.updateContentData(this.modelObj).subscribe({\n        next: response => {\n          this.message.Success(this.msgSavedSuccessfully);\n          this.BLServiceShowMessage.sendMessage(this.message);\n        },\n        error: err => this.message.Error(err)\n      });\n    }\n}\n","<section class=\"my-5\">\n    <div class=\"container\">\n        <div class='row'>\n            <h4 class=\"mb-4\">{{'ContentAboutTitle' | translate }}</h4>\n        </div>\n        <div class='row'>\n            <div class=\"modal-body pt-0\">\n                <form novalidate (ngSubmit)=\"modelSaveBtn(modelForm)\" #modelForm=\"ngForm\">\n                    <div class=\"col-md-8\">\n                        <div class=\"form-group \">\n                            <mat-form-field class=\"example-full-width\">\n                                <mat-label>{{'ContentTitle' | translate }}</mat-label>\n                                <input matInput id=\"modelNameId\" type=\"text\" placeholder=\"{{'ContentTitlePH' | translate }}\" required\n                                    [(ngModel)]=\"modelObj.Name\" #modelNameVar=\"ngModel\" name=\"modelName\"\n                                    [ngClass]=\"{'is-invalid': (modelNameVar.touched || modelNameVar.dirty) && !modelNameVar.valid }\" />\n                                <mat-error *ngIf=\"modelNameVar.errors?.required\">{{'ContentTitleError' | translate }}</mat-error>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"form-group \">\n                            <mat-form-field class=\"example-full-width\">\n                                <mat-label>{{'ContentData' | translate }}</mat-label>\n                                <textarea matInput id=\"modelDataId\" type=\"text\" placeholder=\"{{'ContentDataPH' | translate }}\" required\n                                    [(ngModel)]=\"modelObj.Data\" #modelDataVar=\"ngModel\" name=\"modelData\" rows=\"5\" cols=\"20\"\n                                    [ngClass]=\"{'is-invalid': (modelDataVar.touched || modelDataVar.dirty) && !modelDataVar.valid }\"></textarea>\n                                <mat-error *ngIf=\"modelDataVar.errors?.required\">{{'ContentDataError' | translate }}</mat-error>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"form-group pull-right md-form\">\n                            <button class=\"btn color-bg-01 btn-sm white-text btnSave\" type=\"submit\"\n                                (click)=\"modelSaveBtn(modelForm)\"\n                                [disabled]=\"!modelForm.valid\">{{'GenericSave' | translate }}</button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\nimport { ModelContentData } from 'src/app/interface/Model/ModelContentData.class';\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\nimport { ServiceContentData } from 'src/app/services/content-data.service';\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\nimport { EnumContentData } from 'src/app/Enum/ContentData.enum';\nimport { NgForm } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-info-edit',\n  templateUrl: './info-edit.component.html',\n  styleUrls: ['./info-edit.component.css']\n})\nexport class InfoEditComponent extends baseComponent implements OnInit {\n\n  pageTitle: string = 'Editing Homepage Info Section';\n  modelObj: ModelContentData = new ModelContentData();\n  message: ShowMessage = new ShowMessage();\n  \n  constructor(private BLService: ServiceContentData,\n    BLServiceShowMessage: ServiceShowMessage,\n    BLServiceLoginUser : ServiceLoginUser,BLTranslate: TranslateService,) { \n      super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\n    }\n\n  ngOnInit(): void {\n    this.loadData();\n  }\nloadData() {\n    this.BLService.ContentDataOneGetByTypeId(EnumContentData.Info).subscribe({\n      next: obj => {\n        this.modelObj = obj;\n      },\n      error: err => this.message.Error(err)\n    });\n  }\n  modelSaveBtn(modelForm: NgForm): void {\n    if (!modelForm.valid)\n      return;\n\n      this.BLService.updateContentData(this.modelObj).subscribe({\n        next: response => {\n          this.message.Success(this.msgSavedSuccessfully);\n          this.BLServiceShowMessage.sendMessage(this.message);\n        },\n        error: err => this.message.Error(err)\n      });\n    }\n}\n","<section class=\"my-5\">\n    <div class=\"container\">\n        <div class='row'>\n            <h4 class=\"mb-4\">{{'ContentInfoTitle' | translate }}</h4>\n        </div>\n        <div class='row'>\n            <div class=\"modal-body pt-0\">\n                <form novalidate (ngSubmit)=\"modelSaveBtn(modelForm)\" #modelForm=\"ngForm\">\n                    <div class=\"col-md-8\">\n                        <div class=\"form-group \">\n                            <mat-form-field class=\"example-full-width\">\n                                <mat-label>{{'ContentData' | translate }}</mat-label>\n                                <textarea matInput id=\"modelDataId\" type=\"text\" placeholder=\"{{'ContentDataPH' | translate }}\" required\n                                    [(ngModel)]=\"modelObj.Data\" #modelDataVar=\"ngModel\" name=\"modelData\" rows=\"5\" cols=\"20\"\n                                    [ngClass]=\"{'is-invalid': (modelDataVar.touched || modelDataVar.dirty) && !modelDataVar.valid }\"></textarea>\n                                <mat-error *ngIf=\"modelDataVar.errors?.required\">{{'ContentDataError' | translate }}</mat-error>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"form-group pull-right md-form\">\n                            <button class=\"btn color-bg-01 btn-sm white-text btnSave\" type=\"submit\"\n                                (click)=\"modelSaveBtn(modelForm)\"\n                                [disabled]=\"!modelForm.valid\">{{'GenericSave' | translate }}</button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Page } from 'src/app/common/pagination/page';\nimport { CustomPaginationService } from 'src/app/common/pagination/services/custom-pagination.service';\nimport { Constants } from 'src/app/constants';\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\nimport { cLogoPartnerItem, cLogoPartnerList } from 'src/app/interface/Response/LogoPartner.class';\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\nimport { ServiceLogoPartner } from 'src/app/services/logo-partner.service';\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\n\n@Component({\n  selector: 'app-partner-logo',\n  templateUrl: './partner-logo.component.html',\n  styleUrls: ['./partner-logo.component.css']\n})\nexport class PartnerLogoComponent extends baseComponent implements OnInit {\n  message: ShowMessage = new ShowMessage();\n\n  modelIsCreate: boolean;\n  modelObj: cLogoPartnerItem;\n  FileToUpload: File;\n\n  FilesURL: string = Constants.FilesURL;\n\n  page: Page<cLogoPartnerItem> = new Page();\n  lstLogoPartner: cLogoPartnerList;\n  LogoPartnerSelectFileError: string;\n\n  constructor(private BLService: ServiceLogoPartner,\n    private paginationService: CustomPaginationService,\n    BLServiceShowMessage: ServiceShowMessage,\n    BLServiceLoginUser: ServiceLoginUser, BLTranslate: TranslateService,\n    private modalService: NgbModal) { super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate); }\n\n  ngOnInit() {\n    this.loadData();\n  }\n  loadData() {\n\n    this.BLService.getLogoPartnerAll(this.page.pageable.pageCurrent, \"\").subscribe({\n      next: lst => {\n        this.lstLogoPartner = lst;\n        this.page.pageable.pageSize = lst.pageSize;\n        this.page.totalElements = lst.totalCount;\n        this.page.content = lst.lstResult;\n      },\n      error: err => this.message.Error(err)\n    });\n  }\n  public getNextPage(): void {\n    this.page.pageable = this.paginationService.getNextPage(this.page);\n    this.loadData();\n  }\n\n  public getPreviousPage(): void {\n    this.page.pageable = this.paginationService.getPreviousPage(this.page);\n    this.loadData();\n  }\n  public getloadPageCurrent(): void {\n    this.loadData();\n  }\n  createBtn(content): void {\n    this.modelIsCreate = true;\n    this.FileToUpload = null;\n    this.modelObj = new cLogoPartnerItem();\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\n  }\n  openBackDropCustomClass(content, obj: cLogoPartnerItem) {\n    this.modelIsCreate = false;\n    this.FileToUpload = null;\n    this.modelObj = obj;\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\n  }\n  modelSaveBtn(modelForm: NgForm): void {\n    if (!modelForm.valid)\n      return;\n    if (this.FileToUpload == null) {\n      return;\n    }\n\n    if (this.FileToUpload.type != \"image/png\"\n      && this.FileToUpload.type != \"image/jpg\"\n      && this.FileToUpload.type != \"image/jpeg\") {\n      this.message.Error(this.LogoPartnerSelectFileError);\n      this.BLServiceShowMessage.sendMessage(this.message);\n      return;\n    }\n    if (this.modelIsCreate) {\n      this.BLService.createLogoPartner(this.modelObj.WebsiteURL, this.FileToUpload).subscribe({\n        next: fileUploadResponse => {\n          this.message.Success(this.msgSavedSuccessfully);\n          this.BLServiceShowMessage.sendMessage(this.message);\n          this.loadData();\n          this.modalService.dismissAll();\n        },\n        error: err => this.message.Error(err)\n      });\n    } else {\n      this.BLService.updateLogoPartner(this.modelObj._id, this.modelObj.WebsiteURL, this.FileToUpload).subscribe({\n        next: fileUploadResponse => {\n          this.message.Success(this.msgSavedSuccessfully);\n          this.BLServiceShowMessage.sendMessage(this.message);\n          this.loadData();\n          this.modalService.dismissAll();\n        },\n        error: err => this.message.Error(err)\n      });\n    }\n  }\n  public OnFileChanged(files) {\n    this.FileToUpload = <File>files[0];\n  }\n\n  setActivate(Id: string): void {\n    if (!confirm(this.msgsetActivate))\n      return;\n\n    this.BLService.setLogoPartnerActivate(Id).subscribe({\n      next: response => {\n\n        this.message.Success(this.msgActivatedSuccessfully);\n        this.BLServiceShowMessage.sendMessage(this.message);\n        this.loadData();\n      },\n      error: err => this.message.Error(err)\n    });\n  }\n  setDeactivate(Id: string): void {\n    if (!confirm(this.msgsetDeactivate))\n      return;\n\n    this.BLService.setLogoPartnerDeactivate(Id).subscribe({\n      next: response => {\n        this.message.Success(this.msgDeactivatedSuccessfully);\n        this.BLServiceShowMessage.sendMessage(this.message);\n        this.loadData();\n      },\n      error: err => this.message.Error(err)\n    });\n  }\n}\n","<section class=\"my-5\">\n    <div class=\"container\">\n        <div class='row'>\n            <h4 class=\"mb-4\">{{'LogoPartnerTitle' | translate }}</h4>\n        </div>\n        <div class='row'>\n            <div class=\"col-sm-12 md-form pull-right mb-3\">\n                <button type=\"button\" class=\"pull-right btn color-bg-01 white-text\"\n                    (click)=\"createBtn(content)\">{{'GenericCreate' | translate }}</button>\n            </div>\n        </div>\n        <div class=\"col-md-12\">\n            <div class='table-responsive'>\n                <table class='table' *ngIf='page.content && page.content.length'>\n                    <thead>\n                        <tr>\n                            <th>{{'LogoPartnerLogo' | translate }}</th>\n                            <th>{{'LogoPartnerWebsite' | translate }}</th>\n                            <th>{{'GenericAction' | translate }}</th>\n                        </tr>\n                    </thead>\n                    <tbody class=\"slide\">\n                        <tr *ngFor='let obj of page.content' >\n                            <td><img src=\"{{FilesURL + obj.ImagePath}}\"></td>\n                            <td>{{ obj.WebsiteURL}}</td>\n                            <td class=\"align-middle\">\n                                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-primary\"\n                                    value=\"{{'GenericEdit' | translate }}\"\n                                    (click)=\"openBackDropCustomClass(content,obj)\">\n                                <input *ngIf=\"!obj.IsActive\" type=\"button\" class=\"btn btn-success\"\n                                    value=\"{{'GenericActivate' | translate }}\" (click)=\"setActivate(obj._id)\">\n                                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-danger\"\n                                    value=\"{{'GenericDeactivate' | translate }}\" (click)=\"setDeactivate(obj._id)\">\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n        <div>\n            <app-custom-pagination [page]=\"page\" (nextPageEvent)=\"getNextPage()\" (previousPageEvent)=\"getPreviousPage()\"\n                (loadPageCurrentEvent)=\"getloadPageCurrent()\">\n            </app-custom-pagination>\n        </div>\n\n\n        <div>\n            <ng-template #content let-modal>\n                <div class=\"modal-dialog modal-lg\" role=\"document\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header color-bg-01 white-text text-center\">\n                            <h6 class=\"modal-title\">{{'LogoPartnerAddTitle' | translate }}</h6>\n                        </div>\n                        <div class=\"modal-body pt-0\">\n                            <form novalidate (ngSubmit)=\"modelSaveBtn(modelForm)\" #modelForm=\"ngForm\">\n                                <div class=\"form-group \">\n                                    <mat-form-field>\n                                        <mat-label>{{'LogoPartnerWebsite' | translate }}</mat-label>\n                                        <input matInput id=\"modelNameId\" type=\"text\"\n                                            placeholder=\"{{'LogoPartnerWebsiteRequired' | translate }}\" \n                                            [(ngModel)]=\"modelObj.WebsiteURL\" #modelNameVar=\"ngModel\" name=\"modelName\"\n                                            [ngClass]=\"{'is-invalid': (modelNameVar.touched || modelNameVar.dirty) && !modelNameVar.valid }\" />\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-md-12\">\n                                    <span class=\"pr-3\">{{'LogoPartnerLogo' | translate }}</span>\n                                    <input id=\"uploadLogo\" name=\"uploadLogo\" type=\"file\" #filePartner\n                                        placeholder=\"{{'SiteUploadLogo' | translate }}\"\n                                        accept=\"image/png,image/jpeg,image/jpg,\"\n                                        (change)=\"OnFileChanged(filePartner.files)\" style=\"display:none;\">\n                                    <button id=\"btuploadLogo\" name=\"btuploadLogo\" type=\"button\" class=\"btn btn-success\"\n                                        (click)=\"filePartner.click()\">{{'CertificateSelectFile' | translate }}</button>\n                                </div>\n                                <div class=\"form-group pull-right\">\n                                    <button class=\"btn color-bg-01 btn-sm white-text btnSave\" type=\"submit\"\n                                        [disabled]=\"!modelForm.valid\">{{'GenericSave' | translate }}</button>\n                                </div>\n                            </form>\n                        </div>\n                        <div class=\"modal-footer\">\n\n                            <button type=\"button\" class=\"btn color-bg-02 btn-sm white-text\"\n                                (click)=\"modal.close('Close click')\">{{'GenericClose' | translate }}</button>\n                        </div>\n                    </div>\n                </div>\n            </ng-template>\n        </div>","import { Component, OnInit } from '@angular/core';\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\nimport { ModelContentData } from 'src/app/interface/Model/ModelContentData.class';\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\nimport { ServiceContentData } from 'src/app/services/content-data.service';\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\nimport { EnumContentData } from 'src/app/Enum/ContentData.enum';\nimport { NgForm } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-policy-edit',\n  templateUrl: './policy-edit.component.html',\n  styleUrls: ['./policy-edit.component.css']\n})\nexport class PolicyEditComponent extends baseComponent implements OnInit {\n\n  \n  pageTitle: string = 'Editing Policy Section';\n  modelObj: ModelContentData = new ModelContentData();\n  message: ShowMessage = new ShowMessage();\n  \n  constructor(private BLService: ServiceContentData,\n    BLServiceShowMessage: ServiceShowMessage,\n    BLServiceLoginUser : ServiceLoginUser,BLTranslate: TranslateService,) { \n      super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\n    }\n\n  ngOnInit(): void {\n    this.loadData();\n  }\nloadData() {\n    this.BLService.ContentDataOneGetByTypeId(EnumContentData.Policy).subscribe({\n      next: obj => {\n        this.modelObj = obj;\n      },\n      error: err => this.message.Error(err)\n    });\n  }\n  modelSaveBtn(modelForm: NgForm): void {\n    if (!modelForm.valid)\n      return;\n\n      this.BLService.updateContentData(this.modelObj).subscribe({\n        next: response => {\n          this.message.Success(this.msgSavedSuccessfully);\n          this.BLServiceShowMessage.sendMessage(this.message);\n        },\n        error: err => this.message.Error(err)\n      });\n    }\n\n}\n","<section class=\"my-5\">\n    <div class=\"container\">\n        <div class='row'>\n            <h4 class=\"mb-4\">{{'ContentPolicyTitle' | translate }}</h4>\n        </div>\n        <div class='row'>\n            <div class=\"modal-body pt-0\">\n                <form novalidate (ngSubmit)=\"modelSaveBtn(modelForm)\" #modelForm=\"ngForm\">\n                    <div class=\"col-md-8\">\n                        <div class=\"form-group \">\n                            <angular-editor class=\"editor\" [config]=\"textEditorConfig\" required\n                                #modelDescription=\"ngModel\" name=\"modelDescription\" rows=\"20\"\n                                [ngClass]=\"{'is-invalid': (modelDescription.touched || modelDescription.dirty) && !modelDescription.valid }\"\n                                [(ngModel)]=\"modelObj.Data\"></angular-editor>\n                            <div class=\"valError\" *ngIf=\"modelDescription.touched && modelDescription.errors?.required\">\n                                {{'ContentDataError' | translate }}</div>\n\n\n                        </div>\n\n                        <div class=\"form-group pull-right md-form\">\n                            <button class=\"btn color-bg-01 btn-sm white-text btnSave\" type=\"submit\"\n                                (click)=\"modelSaveBtn(modelForm)\"\n                                [disabled]=\"!modelForm.valid\">{{'GenericSave' | translate }}</button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</section>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\nimport { ServiceContentData } from 'src/app/services/content-data.service';\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\n\n@Component({\n  selector: 'app-site-logo',\n  templateUrl: './site-logo.component.html',\n  styleUrls: ['./site-logo.component.css']\n})\nexport class SiteLogoComponent extends baseComponent implements OnInit {\n\n  message: ShowMessage = new ShowMessage();\n  msgPngOnly: string;\n\n  @ViewChild('fileInput') fileInput: any;\n\n  constructor(private BLService: ServiceContentData,\n    BLServiceShowMessage: ServiceShowMessage,\n    BLServiceLoginUser: ServiceLoginUser, BLTranslate: TranslateService,) {\n    super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\n    this.BLTranslate.get(\"msgPngOnly\").subscribe(res => { this.msgPngOnly = res; });\n  }\n\n  ngOnInit(): void {\n\n  }\n  modelSaveBtn(files): void {\n    if (files.length === 0) {\n      return;\n    }\n    let fileToUpload = <File>files[0]; \n    if (fileToUpload.type != \"image/png\") {\n      this.message.Error(this.msgPngOnly);\n      this.BLServiceShowMessage.sendMessage(this.message);\n    } else {\n      this.BLService.updateSiteLogo(fileToUpload).subscribe({\n        next: response => {\n          this.fileInput.nativeElement.value = '';\n          this.message.Success(this.msgSavedSuccessfully);\n          this.BLServiceShowMessage.sendMessage(this.message);\n        },\n        error: err => {\n          this.fileInput.nativeElement.value = '';\n          this.message.Error(err);\n          this.BLServiceShowMessage.sendMessage(this.message);\n        }\n      });\n    }\n  }\n}\n","<section class=\"my-5\">\n    <div class=\"container\">\n        <div class='row'>\n            <h4 class=\"mb-4\">{{'ContentHeaderLogoTitle' | translate }}</h4>\n        </div>\n        <div class='row'>\n            <div class=\"modal-body pt-0\">\n                <form novalidate (ngSubmit)=\"modelSaveBtn(modelForm)\" #modelForm=\"ngForm\">\n                    <div class=\"col-md-8\">\n                        <div class='row'>\n                            <div class=\"col-sm-6 md-form\">\n                              <span class=\"pr-2\">{{'SiteUploadLogo' | translate }}</span>\n                              <input #fileInput id=\"uploadLogo\" name=\"uploadLogo\" type=\"file\" #fileLogo placeholder=\"{{'CertificateChoosefile' | translate }}\"\n                                accept=\"image/png\" (change)=\"modelSaveBtn(fileLogo.files)\" style=\"display:none;\">\n                              <button id=\"btnuploadLogo\" name=\"btnuploadLogo\" type=\"button\" class=\"btn btn-success\"\n                                (click)=\"fileLogo.click()\">{{'CertificateSelectFile' | translate }}</button>\n                                <br><mat-hint>{{msgPngOnly | translate}}</mat-hint>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { ModelContentData } from 'src/app/interface/Model/ModelContentData.class';\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\nimport { ServiceContentData } from 'src/app/services/content-data.service';\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\nimport { EnumContentData } from 'src/app/Enum/ContentData.enum';\nimport { NgForm } from '@angular/forms';\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-term-edit',\n  templateUrl: './term-edit.component.html',\n  styleUrls: ['./term-edit.component.css']\n})\nexport class TermEditComponent extends baseComponent implements OnInit {\n\n  \n  pageTitle: string = 'Editing Terms & Conditios Section';\n  modelObj: ModelContentData = new ModelContentData();\n  message: ShowMessage = new ShowMessage();\n  \n  constructor(private BLService: ServiceContentData,\n    BLServiceShowMessage: ServiceShowMessage,\n    BLServiceLoginUser : ServiceLoginUser,BLTranslate: TranslateService,) { \n      super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\n    }\n\n  ngOnInit(): void {\n    this.loadData();\n  }\nloadData() {\n    this.BLService.ContentDataOneGetByTypeId(EnumContentData.Terms).subscribe({\n      next: obj => {\n        this.modelObj = obj;\n      },\n      error: err => this.message.Error(err)\n    });\n  }\n  modelSaveBtn(modelForm: NgForm): void {\n    if (!modelForm.valid)\n      return;\n\n      this.BLService.updateContentData(this.modelObj).subscribe({\n        next: response => {\n          this.message.Success(this.msgSavedSuccessfully);\n          this.BLServiceShowMessage.sendMessage(this.message);\n        },\n        error: err => this.message.Error(err)\n      });\n    }\n\n}\n","<section class=\"my-5\">\n    <div class=\"container\">\n        <div class='row'>\n            <h4 class=\"mb-4\">{{'ContentTermsTitle' | translate }}</h4>\n        </div>\n        <div class='row'>\n            <div class=\"modal-body pt-0\">\n                <form novalidate (ngSubmit)=\"modelSaveBtn(modelForm)\" #modelForm=\"ngForm\">\n                    <div class=\"col-md-8\">\n                        <div class=\"form-group \">\n                            <angular-editor class=\"editor\" [config]=\"textEditorConfig\" required\n                                #modelDescription=\"ngModel\" name=\"modelDescription\" rows=\"20\"\n                                [ngClass]=\"{'is-invalid': (modelDescription.touched || modelDescription.dirty) && !modelDescription.valid }\"\n                                [(ngModel)]=\"modelObj.Data\"></angular-editor>\n                            <div class=\"valError\" *ngIf=\"modelDescription.touched && modelDescription.errors?.required\">\n                                {{'ContentDataError' | translate }}</div>\n\n\n                        </div>\n\n                        <div class=\"form-group pull-right md-form\">\n                            <button class=\"btn color-bg-01 btn-sm white-text btnSave\" type=\"submit\"\n                                (click)=\"modelSaveBtn(modelForm)\"\n                                [disabled]=\"!modelForm.valid\">{{'GenericSave' | translate }}</button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\r\nimport { ServiceDataManagement } from 'src/app/services/datamanagement.service';\r\nimport { ICourse } from 'src/app/interface/Response/Course.interface';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ITrainingCategoryItem } from 'src/app/interface/Response/TrainingCategory.interface';\r\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Constants } from 'src/app/constants';\r\nimport { Page } from 'src/app/common/pagination/page';\r\nimport { CustomPaginationService } from 'src/app/common/pagination/services/custom-pagination.service';\r\nimport { NgForm } from '@angular/forms';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TranslateType } from 'src/app/Enum/TranslateType.enum';\r\n\r\n@Component({\r\n  selector: 'app-Course-list',\r\n  templateUrl: './Course-list.component.html',\r\n  styleUrls: ['./Course-list.component.scss']\r\n})\r\nexport class CourseListComponent extends baseComponent implements OnInit {\r\n  objTrainingCategory: ITrainingCategoryItem = new ITrainingCategoryItem();\r\n  pageTitle: string = \"Courses\";\r\n  message: ShowMessage = new ShowMessage();\r\n  modelName: string = '';\r\n  modelId: string = '';\r\n  modelNameEdited: string = '';\r\n  ModelIsCreate: boolean = true;\r\n  page: Page<ICourse> = new Page();\r\n\r\n  filtertxt: string = '';\r\n \r\n  /////////////\r\n\r\n  \r\n  CourseId: string = '';\r\n  filterCourse: ICourse[] = [];\r\n  constructor(private BLServiceDataManagement: ServiceDataManagement,\r\n    private route: ActivatedRoute,\r\n    BLServiceShowMessage: ServiceShowMessage,\r\n    BLServiceLoginUser: ServiceLoginUser,BLTranslate: TranslateService,\r\n    private paginationService: CustomPaginationService,\r\n    private router: Router,\r\n    private modalService: NgbModal) {\r\n      super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\r\n  }\r\n  ngOnInit() {\r\n    const param = this.route.snapshot.paramMap.get('id');\r\n    if (param) {\r\n      this.CourseId = param;\r\n      this.page.pageable.pageSize = Constants.PAGE_SIZE;\r\n      this.loadData();\r\n    }\r\n  }\r\n  loadData() {\r\n    this.BLServiceDataManagement.getTrainingCategoryGetByid(this.CourseId).subscribe({\r\n      next: obj => {\r\n        this.objTrainingCategory = obj;\r\n        this.objTrainingCategory.Course = obj.Course.sort((a,b)=> b.Id.localeCompare(a.Id));\r\n        this.filterCourse = this.loadDataFilter();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  public getNextPage(): void {\r\n    this.page.pageable = this.paginationService.getNextPage(this.page);\r\n  }\r\n\r\n  public getPreviousPage(): void {\r\n    this.page.pageable = this.paginationService.getPreviousPage(this.page);\r\n  }\r\n  public getloadPageCurrent(): void {\r\n  }\r\n  loadDataFilter(): ICourse[] {\r\n    var lst = this.filtertxt == \"\" ? this.objTrainingCategory.Course : this.objTrainingCategory.Course.filter((item: ICourse) =>\r\n      item.Name.toLocaleLowerCase().indexOf(this.filtertxt.toLocaleLowerCase()) !== -1);\r\n\r\n    this.page.totalElements = lst.length;\r\n    this.page.content = lst;\r\n    this.page.pageable.pageCurrent = 1\r\n    return lst;\r\n  }\r\n  setActivate(Id: string): void {\r\n    if (!confirm(this.msgsetActivate))\r\n      return;\r\n\r\n    this.BLServiceDataManagement.setCourseActivate(this.objTrainingCategory.Id, Id).subscribe({\r\n      next: response => {\r\n        \r\n          this.message.Success(this.msgActivatedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  setDeactivate(Id: string): void {\r\n    if (!confirm(this.msgsetDeactivate))\r\n      return;\r\n\r\n    this.BLServiceDataManagement.setCourseDeactivate(this.objTrainingCategory.Id, Id).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.msgDeactivatedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  filterbtn(): void {\r\n    this.loadDataFilter();\r\n  }\r\n  createBtn(content): void {\r\n    this.modelId = this.objTrainingCategory.Id;\r\n    this.modelName = \"\";\r\n    this.modelNameEdited = \"\";\r\n    this.ModelIsCreate = true;\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  modelSaveBtn(modelForm: NgForm): void {\r\n    if (!modelForm.valid)\r\n      return;\r\n\r\n\r\n    if (this.ModelIsCreate) {\r\n      this.BLServiceDataManagement.createCourse(this.objTrainingCategory.Id, this.modelName).subscribe({\r\n        next: response => {\r\n          this.message.Success(this.msgSavedSuccessfully);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.modalService.dismissAll();\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n    else {\r\n      this.BLServiceDataManagement.updateCourse(this.objTrainingCategory.Id, this.modelId, this.modelName).subscribe({\r\n        next: response => {\r\n          this.message.Success(this.msgSavedSuccessfully);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.modalService.dismissAll();\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n  }\r\n  openBackDropCustomClass(content, Id: string, name: string) {\r\n    this.modelId = Id;\r\n    this.modelName = name;\r\n    this.modelNameEdited = name;\r\n    this.ModelIsCreate = false;\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  onBack(): void {\r\n    this.router.navigate(['/DataManagement/TrainingCategory']);\r\n  }\r\n  Translate(){\r\n    this.router.navigate(['/Translate/' + TranslateType.Courses + '/' + this.CourseId]);\r\n  }\r\n}\r\n","<section class=\"my-5\">\r\n  <div class=\"container\">\r\n    <div class='row'>\r\n      <h4 class=\"mb-4\">{{objTrainingCategory.Name}}  {{'GenericTrainingCategory' | translate }} -  {{'CoursesTitle' | translate }}</h4>\r\n     \r\n    </div>\r\n    <div class='row'>\r\n      <div class=\"col-sm-6 md-form\">\r\n        <mat-form-field class=\"example-full-width\">\r\n          <mat-label>{{'CoursesSearch' | translate }}</mat-label>\r\n          <input type=\"text\" placeholder=\"{{'CoursesType' | translate }} \" matInput [(ngModel)]=\"filtertxt\">\r\n        </mat-form-field>\r\n        <input type=\"submit\" value=\"{{'GenericSearch' | translate }}\"  class=\"btn color-bg-02 white-text\" (click)=\"filterbtn()\">\r\n      </div>\r\n      <div class=\"col-sm-6 md-form pull-right\">\r\n        <input type=\"button\" class=\"pull-right btn color-bg-01 white-text\" value=\"{{'GenericCreateNew' | translate }}\"\r\n          (click)=\"createBtn(content)\">\r\n          <input type=\"button\" class=\"pull-right btn color-bg-03 white-text\" value=\"{{'GenericTranslate' | translate }}\"\r\n          (click)=\"Translate()\">\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-12\">\r\n      <div class='table-responsive'>\r\n        <table class='table' *ngIf='filterCourse && filterCourse.length'>\r\n          <thead>\r\n            <tr>\r\n              <th>{{'GenericName' | translate }}</th>\r\n              <th>{{'GenericAction' | translate }}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor='let obj of page.content | slice: (page.pageable.pageCurrent-1) * page.pageable.pageSize : (page.pageable.pageCurrent-1) * page.pageable.pageSize + page.pageable.pageSize'>\r\n              <td>{{obj.Name}}</td>\r\n              <td>\r\n                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-primary\" value=\"{{'GenericEdit' | translate }}\"\r\n                  (click)=\"openBackDropCustomClass(content,obj.Id, obj.Name)\">\r\n                <input *ngIf=\"!obj.IsActive\" type=\"button\" class=\"btn btn-success\" value=\"{{'GenericActivate' | translate }}\"\r\n                  (click)=\"setActivate(obj.Id)\">\r\n                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-danger\" value=\"{{'GenericDeactivate' | translate }}\"\r\n                  (click)=\"setDeactivate(obj.Id)\">\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div>\r\n        <app-custom-pagination [page]=\"page\" (nextPageEvent)=\"getNextPage()\" (previousPageEvent)=\"getPreviousPage()\"\r\n        (loadPageCurrentEvent)=\"getloadPageCurrent()\">\r\n      </app-custom-pagination>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div>\r\n    <div class='card-footer'>\r\n      <button class='btn btn-outline-secondary' (click)='onBack()' style='width:80px'>\r\n        <i class='fa fa-chevron-left'></i> {{'GenericBack' | translate }}\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <div>\r\n    <ng-template role=\"dialog\" #content let-modal class=\"modal fade\">\r\n      <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header color-bg-01 white-text text-center\">\r\n\r\n            <h6 class=\"modal-title\">\r\n              {{(modelId == \"-1\" ? 'GenericCreate'   : 'GenericEditing') | translate}} : {{modelId == \"-1\" ? (\"GenericNew\" | translate) : modelNameEdited}}\r\n            </h6>\r\n          </div>\r\n          <!-- <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button> -->\r\n          <div class=\"modal-body pt-0\">\r\n\r\n            <form novalidate (ngSubmit)=\"modelSaveBtn(modelForm)\" #modelForm=\"ngForm\">\r\n              <div class=\"form-group \">\r\n                <mat-form-field class=\"example-full-width\">\r\n                  <mat-label>{{'CoursesName' | translate }}</mat-label>\r\n                  <input matInput id=\"modelNameId\" type=\"text\" placeholder=\"{{'GenericRequiredName' | translate }}\" required\r\n                    [(ngModel)]=\"modelName\" #modelNameVar=\"ngModel\" name=\"modelName\"\r\n                    [ngClass]=\"{'is-invalid': (modelNameVar.touched || modelNameVar.dirty) && !modelNameVar.valid }\" />\r\n                  <mat-error *ngIf=\"modelNameVar.errors?.required\">{{'CoursesError' | translate }}</mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"form-group pull-right md-form\">\r\n                <button class=\"btn color-bg-01 btn-sm white-text btnSave\" type=\"submit\"\r\n                  \r\n                  [disabled]=\"!modelForm.valid\">{{'GenericSave' | translate }}</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n\r\n            <button type=\"button\" class=\"btn color-bg-02 btn-sm white-text\"\r\n              (click)=\"modal.close('Close click')\">{{'GenericClose' | translate }}</button>\r\n          </div>\r\n\r\n\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n  </div>\r\n</section>","import { Component, OnInit } from '@angular/core';\r\nimport { ServiceDataManagement } from 'src/app/services/datamanagement.service';\r\nimport { ITrainingCategory, ITrainingCategoryItem } from 'src/app/interface/Response/TrainingCategory.interface';\r\nimport { CustomPaginationService } from 'src/app/common/pagination/services/custom-pagination.service';\r\nimport { Page } from 'src/app/common/pagination/page';\r\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Router } from '@angular/router';\r\nimport { cfAutoComplete } from 'src/app/interface/forms/AutoComplete.class';\r\nimport { NgForm } from '@angular/forms';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TranslateType } from 'src/app/Enum/TranslateType.enum';\r\n\r\n@Component({\r\n  templateUrl: './TrainingCategory-list.component.html',\r\n  styleUrls: ['./TrainingCategory-list.component.scss']\r\n})\r\nexport class TrainingCategoryListComponent extends baseComponent implements OnInit {\r\n  pageTitle: string = 'Training Category';\r\n  lstTrainingCategory: ITrainingCategory;\r\n  lstTrainingTypeoptions: cfAutoComplete[];\r\n  message: ShowMessage = new ShowMessage();\r\n  filtertxt: string = '';\r\n  modelName: string = '';\r\n  modelId: string = '';\r\n  modelNameEdited: string = '';\r\n  modelTrainingType: string;\r\n  page: Page<ITrainingCategoryItem> = new Page();\r\n  /////////////////\r\n\r\n  /////////////\r\n  constructor(private BLServiceDataManagement: ServiceDataManagement,\r\n    private paginationService: CustomPaginationService,\r\n    BLServiceShowMessage: ServiceShowMessage,\r\n    BLServiceLoginUser: ServiceLoginUser, BLTranslate: TranslateService,\r\n    private router: Router,\r\n    private modalService: NgbModal) { super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate); }\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n    this.BLServiceDataManagement.getTrainingTypeListActive().subscribe({\r\n      next: lst => {\r\n\r\n        this.lstTrainingTypeoptions = lst.map(opt => new cfAutoComplete(opt.Id, opt.Name));\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n\r\n  private loadData(): void {\r\n    this.BLServiceDataManagement.getTrainingCategoryAll(this.page.pageable.pageCurrent, this.filtertxt).subscribe({\r\n      next: lst => {\r\n        this.lstTrainingCategory = lst;\r\n        this.page.pageable.pageSize = lst.pageSize;\r\n        this.page.totalElements = lst.totalCount;\r\n        this.page.content = lst.lstResult;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  public getNextPage(): void {\r\n    this.page.pageable = this.paginationService.getNextPage(this.page);\r\n    this.loadData();\r\n  }\r\n\r\n  public getPreviousPage(): void {\r\n    this.page.pageable = this.paginationService.getPreviousPage(this.page);\r\n    this.loadData();\r\n  }\r\n  public getloadPageCurrent(): void {\r\n    this.loadData();\r\n  }\r\n  setActivate(Id: string): void {\r\n    if (!confirm(this.msgsetActivate))\r\n      return;\r\n\r\n    this.BLServiceDataManagement.setTrainingCategoryActivate(Id).subscribe({\r\n      next: response => {\r\n\r\n        this.message.Success(this.msgActivatedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  setDeactivate(Id: string): void {\r\n    if (!confirm(this.msgsetDeactivate))\r\n      return;\r\n\r\n    this.BLServiceDataManagement.setTrainingCategoryDeactivate(Id).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.msgDeactivatedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  filterbtn(): void {\r\n    this.page.pageable.pageCurrent = 1;\r\n    this.loadData();\r\n  }\r\n  createBtn(content): void {\r\n    this.modelId = \"-1\";\r\n    this.modelTrainingType = \"\";\r\n    this.modelName = \"\";\r\n    this.modelNameEdited = \"\";\r\n    this.modelTrainingType = \"\";\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  modelSaveBtn(modelForm: NgForm): void {\r\n    if (!modelForm.valid)\r\n      return;\r\n\r\n    const x = this.modelTrainingType;\r\n    if (this.modelId == \"-1\") {\r\n      this.BLServiceDataManagement.createTrainingCategory(this.modelName, this.modelTrainingType).subscribe({\r\n        next: response => {\r\n          this.message.Success(this.msgSavedSuccessfully);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.modalService.dismissAll();\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n    else {\r\n      this.BLServiceDataManagement.updateTrainingCategory(this.modelId, this.modelName, this.modelTrainingType).subscribe({\r\n        next: response => {\r\n          this.message.Success(this.msgSavedSuccessfully);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.modalService.dismissAll();\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n  }\r\n  openBackDropCustomClass(content, obj: ITrainingCategoryItem) {\r\n    this.modelId = obj.Id;\r\n    this.modelName = obj.Name;\r\n    this.modelNameEdited = obj.Name;\r\n    this.modelTrainingType = obj.TrainingType.Id;\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  Courses(Id: string) {\r\n    this.router.navigate(['/DataManagement/Course/' + Id]);\r\n  }\r\n  Translate() {\r\n    this.router.navigate(['/Translate/' + TranslateType.TrainingCategory + '/0']);\r\n  }\r\n}\r\n","<section class=\"my-5\">\r\n  <div class=\"container\">\r\n    <div class='row'>\r\n      <h4 class=\"mb-4\">{{'GenericTrainingCategory' | translate }}</h4>\r\n    </div>\r\n    <div class='row'>\r\n      <div class=\"col-sm-6 md-form\">\r\n        <mat-form-field class=\"example-full-width\">\r\n          <mat-label>{{'TrainingCategorySearch' | translate }}</mat-label>\r\n          <input type=\"text\" placeholder=\"{{'TrainingCategoryType' | translate }}\" matInput [(ngModel)]=\"filtertxt\">\r\n        </mat-form-field>\r\n        <input type=\"submit\" value=\"{{'GenericSearch' | translate }}\"  class=\"btn color-bg-02 white-text\" (click)=\"filterbtn()\">\r\n      </div>\r\n      <div class=\"col-sm-6 md-form pull-right\">\r\n        <input type=\"button\" class=\"pull-right btn color-bg-01 white-text\" value=\"{{'GenericCreateNew' | translate }}\"\r\n          (click)=\"createBtn(content)\">\r\n          <input type=\"button\" class=\"pull-right btn color-bg-03 white-text\" value=\"{{'GenericTranslate' | translate }}\"\r\n          (click)=\"Translate()\">\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-12\">\r\n      <div class='table-responsive'>\r\n        <table class='table' *ngIf='page.content && page.content.length'>\r\n          <thead>\r\n            <tr>\r\n              <th>{{'GenericName' | translate }}</th>\r\n              <th>{{'GenericTrainingType' | translate }}</th>\r\n              <th>{{'GenericAction' | translate }}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor='let obj of page.content'>\r\n              <td>{{ obj.Name}}</td>\r\n              <td>{{ obj.TrainingType?.Name}}</td>\r\n              <td>\r\n                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-primary\" value=\"{{'GenericEdit' | translate }}\"\r\n                  (click)=\"openBackDropCustomClass(content,obj)\">\r\n                <input *ngIf=\"!obj.IsActive\" type=\"button\" class=\"btn btn-success\" value=\"{{'GenericActivate' | translate }}\"\r\n                  (click)=\"setActivate(obj.Id)\">\r\n                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-danger\" value=\"{{'GenericDeactivate' | translate }}\"\r\n                  (click)=\"setDeactivate(obj.Id)\">\r\n                <input type=\"button\" class=\"btn btn-warning\" value=\"{{'CoursesTitle' | translate }}\" (click)=\"Courses(obj.Id)\">\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <app-custom-pagination [page]=\"page\" (nextPageEvent)=\"getNextPage()\" (previousPageEvent)=\"getPreviousPage()\"\r\n        (loadPageCurrentEvent)=\"getloadPageCurrent()\">\r\n      </app-custom-pagination>\r\n    </div>\r\n  </div>\r\n  <div>\r\n    <ng-template role=\"dialog\" #content let-modal class=\"modal fade\">\r\n      <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header color-bg-01 white-text text-center\">\r\n\r\n            <h6 class=\"modal-title\">{{(modelId == \"-1\" ? 'GenericCreate'   : 'GenericEditing') | translate}} : {{modelId == \"-1\" ? (\"GenericNew\" | translate) : modelNameEdited}}</h6>\r\n          </div>\r\n          <!-- <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button> -->\r\n          <div class=\"modal-body pt-0\">\r\n\r\n            <form novalidate (ngSubmit)=\"modelSaveBtn(modelForm)\" #modelForm=\"ngForm\">\r\n              <div class=\"form-group \">\r\n                <mat-form-field class=\"example-full-width\">\r\n                  <mat-label>{{'TrainingCategoryName' | translate }}</mat-label>\r\n                  <input matInput id=\"modelNameId\" type=\"text\" placeholder=\"{{'GenericRequiredName' | translate }}\" required\r\n                    [(ngModel)]=\"modelName\" #modelNameVar=\"ngModel\" name=\"modelName\"\r\n                    [ngClass]=\"{'is-invalid': (modelNameVar.touched || modelNameVar.dirty) && !modelNameVar.valid }\" />\r\n                  <mat-error *ngIf=\"modelNameVar.errors?.required\">{{'TrainingCategoryError1' | translate }}</mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"form-group \">\r\n                <mat-form-field>\r\n                  <mat-label>{{'GenericTrainingType' | translate }}</mat-label>\r\n                  <mat-select  required [(ngModel)]=\"modelTrainingType\" required\r\n                    placeholder=\"{{'GenericSelectTrainingType' | translate }}\"\r\n                    [ngClass]=\"{'is-invalid': (modelTrainingTypeVar.touched || modelTrainingTypeVar.dirty) && !modelTrainingTypeVar.valid }\"\r\n                    #modelTrainingTypeVar=\"ngModel\" name=\"modelTrainingTypeVar\">\r\n                    <mat-option value=\"0\">{{'GenericSelectTrainingType' | translate }}</mat-option>\r\n                    <mat-option *ngFor=\"let item of lstTrainingTypeoptions\" [value]=\"item.Id\">{{item.Name}}</mat-option>\r\n                  </mat-select>\r\n                  <mat-error *ngIf=\"modelTrainingTypeVar.errors?.required\">{{'GenericSelectTrainingTypeError' | translate }}</mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"form-group pull-right md-form\">\r\n                <button class=\"btn color-bg-01 btn-sm white-text btnSave\" type=\"submit\"\r\n                  \r\n                  [disabled]=\"!modelForm.valid\">{{'GenericSave' | translate }}</button></div>\r\n            </form>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n\r\n            <button type=\"button\" class=\"btn color-bg-02 btn-sm white-text\"\r\n              (click)=\"modal.close('Close click')\">{{'GenericClose' | translate }}</button>\r\n          </div>\r\n\r\n\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n  </div>","import { Component, OnInit } from '@angular/core';\r\nimport { cArea } from 'src/app/interface/Response/Area.class';\r\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\r\nimport { Page } from 'src/app/common/pagination/page';\r\nimport { cCityItem } from 'src/app/interface/Response/City.class';\r\nimport { ServiceDataManagement } from 'src/app/services/datamanagement.service';\r\nimport { Constants } from 'src/app/constants';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { CustomPaginationService } from 'src/app/common/pagination/services/custom-pagination.service';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { NgForm } from '@angular/forms';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TranslateType } from 'src/app/Enum/TranslateType.enum';\r\n\r\n@Component({\r\n  selector: 'app-area',\r\n  templateUrl: './area.component.html',\r\n  styleUrls: ['./area.component.scss']\r\n})\r\nexport class AreaComponent extends baseComponent implements OnInit {\r\n  pageTitle: string = 'Area';\r\n  message: ShowMessage = new ShowMessage();\r\n  modelName: string = '';\r\n  modelId: string = '';\r\n  modelNameEdited: string = '';\r\n  ModelIsCreate: boolean = true;\r\n  page: Page<cArea> = new Page();\r\n\r\n  filtertxt: string = '';\r\n\r\n  /////////////\r\n\r\n  objCity: cCityItem = new cCityItem();\r\n  AreaId: string = '';\r\n  filterArea: cArea[] = [];\r\n\r\n  constructor(private BLServiceDataManagement: ServiceDataManagement,\r\n    private route: ActivatedRoute,\r\n    BLServiceShowMessage: ServiceShowMessage,\r\n    BLServiceLoginUser: ServiceLoginUser, BLTranslate: TranslateService,\r\n    private paginationService: CustomPaginationService,\r\n    private router: Router,\r\n    private modalService: NgbModal) {\r\n    super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\r\n  }\r\n  ngOnInit() {\r\n    const param = this.route.snapshot.paramMap.get('id');\r\n    if (param) {\r\n      this.AreaId = param;\r\n      this.page.pageable.pageSize = Constants.PAGE_SIZE;\r\n      this.loadData();\r\n    }\r\n  }\r\n  loadData() {\r\n    this.BLServiceDataManagement.getCityGetByid(this.AreaId).subscribe({\r\n      next: obj => {\r\n        this.objCity = obj;\r\n        this.objCity.Areas = obj.Areas.sort((a,b)=> b.Id.localeCompare(a.Id));\r\n        \r\n        this.filterArea = this.loadDataFilter();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  public getNextPage(): void {\r\n    this.page.pageable = this.paginationService.getNextPage(this.page);\r\n  }\r\n\r\n  public getPreviousPage(): void {\r\n    this.page.pageable = this.paginationService.getPreviousPage(this.page);\r\n  }\r\n  public getloadPageCurrent(): void {\r\n  }\r\n  loadDataFilter(): cArea[] {\r\n\r\n\r\n    var lst = this.filtertxt == \"\" ? this.objCity.Areas : this.objCity.Areas.filter((item: cArea) =>\r\n      item.Name.toLocaleLowerCase().indexOf(this.filtertxt.toLocaleLowerCase()) !== -1);\r\n\r\n    this.page.totalElements = lst.length;\r\n    this.page.content = lst;\r\n    this.page.pageable.pageCurrent = 1\r\n    return lst;\r\n  }\r\n  setActivate(Id: string): void {\r\n    if (!confirm(this.msgsetActivate))\r\n      return;\r\n\r\n    this.BLServiceDataManagement.setAreaActivate(this.objCity.Id, Id).subscribe({\r\n      next: response => {\r\n\r\n        this.message.Success(this.msgActivatedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  setDeactivate(Id: string): void {\r\n    if (!confirm(this.msgsetDeactivate))\r\n      return;\r\n\r\n    this.BLServiceDataManagement.setAreaDeactivate(this.objCity.Id, Id).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.msgDeactivatedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  filterbtn(): void {\r\n    this.loadDataFilter();\r\n  }\r\n  createBtn(content): void {\r\n    this.modelId = this.objCity.Id;\r\n    this.modelName = \"\";\r\n    this.modelNameEdited = \"\";\r\n    this.ModelIsCreate = true;\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  modelSaveBtn(modelForm: NgForm): void {\r\n    if (!modelForm.valid)\r\n      return;\r\n\r\n\r\n    if (this.ModelIsCreate) {\r\n      this.BLServiceDataManagement.createArea(this.objCity.Id, this.modelName).subscribe({\r\n        next: response => {\r\n          this.message.Success(this.msgSavedSuccessfully);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.modalService.dismissAll();\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n    else {\r\n      this.BLServiceDataManagement.updateArea(this.objCity.Id, this.modelId, this.modelName).subscribe({\r\n        next: response => {\r\n          this.message.Success(this.msgSavedSuccessfully);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.modalService.dismissAll();\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n  }\r\n  openBackDropCustomClass(content, Id: string, name: string) {\r\n    this.modelId = Id;\r\n    this.modelName = name;\r\n    this.modelNameEdited = name;\r\n    this.ModelIsCreate = false;\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  onBack(): void {\r\n    this.router.navigate(['/DataManagement/City']);\r\n  }\r\n  Translate() {\r\n    this.router.navigate(['/Translate/' + TranslateType.Area + '/' + this.AreaId]);\r\n  }\r\n}\r\n","<section class=\"my-5\">\r\n  <div class=\"container\">\r\n    <div class='row'>\r\n      <h4 class=\"mb-4\">{{objCity.Name}}  {{'GenericCity' | translate }} - {{'AreaTitle' | translate }}</h4>\r\n\r\n    </div>\r\n    <div class='row'>\r\n      <div class=\"col-sm-6 md-form\">\r\n        <mat-form-field class=\"example-full-width\">\r\n          <mat-label>{{'AreaSearch' | translate }}</mat-label>\r\n          <input type=\"text\" placeholder=\"{{'AreaType' | translate }}\" matInput [(ngModel)]=\"filtertxt\">\r\n        </mat-form-field>\r\n        <input type=\"submit\" value=\"{{'GenericSearch' | translate }}\"  class=\"btn color-bg-02 white-text\" (click)=\"filterbtn()\">\r\n      </div>\r\n      <div class=\"col-sm-6 md-form pull-right\">\r\n        <input type=\"button\" class=\"pull-right btn color-bg-01 white-text\" value=\"{{'GenericCreateNew' | translate }}\"\r\n          (click)=\"createBtn(content)\">\r\n          <input type=\"button\" class=\"pull-right btn color-bg-03 white-text\" value=\"{{'GenericTranslate' | translate }}\"\r\n          (click)=\"Translate()\">\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-12\">\r\n      <div class='table-responsive'>\r\n        <table class='table' *ngIf='filterArea && filterArea.length'>\r\n          <thead>\r\n            <tr>\r\n              <th>{{'GenericName' | translate }}</th>\r\n              <th>{{'GenericAction' | translate }}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor='let obj of page.content | slice: (page.pageable.pageCurrent-1) * page.pageable.pageSize : (page.pageable.pageCurrent-1) * page.pageable.pageSize + page.pageable.pageSize'>\r\n              <td>{{obj.Name}}</td>\r\n              <td>\r\n                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-primary\" value=\"{{'GenericEdit' | translate }}\"\r\n                  (click)=\"openBackDropCustomClass(content,obj.Id, obj.Name)\">\r\n                <input *ngIf=\"!obj.IsActive\" type=\"button\" class=\"btn btn-success\" value=\"{{'GenericActivate' | translate }}\"\r\n                  (click)=\"setActivate(obj.Id)\">\r\n                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-danger\" value=\"{{'GenericDeactivate' | translate }}\"\r\n                  (click)=\"setDeactivate(obj.Id)\">\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div>\r\n        <app-custom-pagination [page]=\"page\" (nextPageEvent)=\"getNextPage()\" (previousPageEvent)=\"getPreviousPage()\"\r\n        (loadPageCurrentEvent)=\"getloadPageCurrent()\">\r\n      </app-custom-pagination>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div>\r\n    <div class='card-footer'>\r\n      <button class='btn btn-outline-secondary' (click)='onBack()' style='width:80px'>\r\n        <i class='fa fa-chevron-left'></i> {{'GenericBack' | translate }}\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <div>\r\n    <ng-template #content let-modal>\r\n      <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header color-bg-01 white-text text-center\">\r\n\r\n            <h6 class=\"modal-title\">\r\n              {{(ModelIsCreate ? 'GenericCreate'   : 'GenericEditing') | translate}} : {{ModelIsCreate ? (\"GenericNew\" | translate) : modelNameEdited}}\r\n            </h6>\r\n          </div>\r\n          <div class=\"modal-body pt-0\">\r\n            <form novalidate (ngSubmit)=\"modelSaveBtn(modelForm)\" #modelForm=\"ngForm\">\r\n              <div>\r\n                <mat-form-field class=\"example-full-width\">\r\n                  <mat-label>{{'AreaName' | translate }}</mat-label>\r\n                <input matInput id=\"modelNameId\" type=\"text\" placeholder=\"{{'GenericRequiredName' | translate }}\" required\r\n                  [(ngModel)]=\"modelName\" #modelNameVar=\"ngModel\" name=\"modelName\"\r\n                  [ngClass]=\"{'is-invalid': (modelNameVar.touched || modelNameVar.dirty) && !modelNameVar.valid }\" />\r\n                  <mat-error *ngIf=\"modelNameVar.errors?.required\">{{'AreaError' | translate }}</mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"form-group pull-right\">\r\n                <button class=\"btn color-bg-01 btn-sm white-text btnSave\" type=\"submit\"\r\n                  \r\n                  [disabled]=\"!modelForm.valid\">{{'GenericSave' | translate }}</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n\r\n            <button type=\"button\" class=\"btn color-bg-02 btn-sm white-text\"\r\n              (click)=\"modal.close('Close click')\">{{'GenericClose' | translate }}</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n  </div>\r\n</section>","import { Component, OnInit } from '@angular/core';\r\nimport { cCityList, cCityItem } from 'src/app/interface/Response/City.class';\r\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\r\nimport { Page } from 'src/app/common/pagination/page';\r\nimport { ServiceDataManagement } from 'src/app/services/datamanagement.service';\r\nimport { CustomPaginationService } from 'src/app/common/pagination/services/custom-pagination.service';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { Router } from '@angular/router';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgForm } from '@angular/forms';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TranslateType } from 'src/app/Enum/TranslateType.enum';\r\n\r\n@Component({\r\n  selector: 'app-city',\r\n  templateUrl: './city.component.html',\r\n  styleUrls: ['./city.component.scss']\r\n})\r\nexport class CityComponent extends baseComponent implements OnInit {\r\n  pageTitle: string = 'City';\r\n  lstCity: cCityList;\r\n  message: ShowMessage = new ShowMessage();\r\n  filtertxt: string = '';\r\n  modelName: string = '';\r\n  modelId: string = '';\r\n  modelNameEdited: string = '';\r\n\r\n  page: Page<cCityItem> = new Page();\r\n\r\n  constructor(private BLServiceDataManagement: ServiceDataManagement,\r\n    private paginationService: CustomPaginationService,\r\n    private router: Router,\r\n    private modalService: NgbModal,\r\n    BLServiceShowMessage: ServiceShowMessage,\r\n    BLServiceLoginUser: ServiceLoginUser,\r\n    BLTranslate: TranslateService) {\r\n    super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\r\n  }\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n  private loadData(): void {\r\n    this.BLServiceDataManagement.getCityAll(this.page.pageable.pageCurrent, this.filtertxt).subscribe({\r\n      next: lst => {\r\n        this.lstCity = lst;\r\n        this.page.pageable.pageSize = lst.pageSize;\r\n        this.page.totalElements = lst.totalCount;\r\n        this.page.content = lst.lstResult;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  public getNextPage(): void {\r\n    this.page.pageable = this.paginationService.getNextPage(this.page);\r\n    this.loadData();\r\n  }\r\n\r\n  public getPreviousPage(): void {\r\n    this.page.pageable = this.paginationService.getPreviousPage(this.page);\r\n    this.loadData();\r\n  }\r\n  public getloadPageCurrent(): void {\r\n    this.loadData();\r\n  }\r\n  setActivate(Id: string): void {\r\n    if (!confirm(this.msgsetActivate))\r\n      return;\r\n\r\n    this.BLServiceDataManagement.setCityActivate(Id).subscribe({\r\n      next: response => {\r\n        \r\n        this.message.Success(this.msgActivatedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  setDeactivate(Id: string): void {\r\n    if (!confirm(this.msgsetDeactivate))\r\n      return;\r\n\r\n    this.BLServiceDataManagement.setCityDeactivate(Id).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.msgDeactivatedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  filterbtn(): void {\r\n    this.page.pageable.pageCurrent = 1;\r\n    this.loadData();\r\n  }\r\n  createBtn(content): void {\r\n    this.modelId = \"-1\";\r\n    this.modelName = \"\";\r\n    this.modelNameEdited = \"\";\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  modelSaveBtn(modelForm: NgForm): void {\r\n    if (!modelForm.valid)\r\n      return;\r\n\r\n\r\n    if (this.modelId == \"-1\") {\r\n      this.BLServiceDataManagement.createCity(this.modelName).subscribe({\r\n        next: response => {\r\n          this.message.Success(this.msgSavedSuccessfully);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.modalService.dismissAll();\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n    else {\r\n      this.BLServiceDataManagement.updateCity(this.modelId, this.modelName).subscribe({\r\n        next: response => {\r\n          this.message.Success(this.msgSavedSuccessfully);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.modalService.dismissAll();\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n  }\r\n  openBackDropCustomClass(content, Id: string, name: string) {\r\n    this.modelId = Id;\r\n    this.modelName = name;\r\n    this.modelNameEdited = name;\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  Areas(Id: string) {\r\n    this.router.navigate(['/DataManagement/Area/' + Id]);\r\n  }\r\n  Translate(){\r\n    this.router.navigate(['/Translate/' + TranslateType.City + '/0']);\r\n  }\r\n}\r\n","<section class=\"my-5\">\r\n  <div class=\"container\">\r\n    <div class='row'>\r\n      <h4 class=\"mb-4\">{{'GenericCity' | translate }}</h4>\r\n    </div>\r\n    <div class='row'>\r\n      <div class=\"col-sm-6 md-form\">\r\n        <mat-form-field class=\"example-full-width\">\r\n          <mat-label>{{'CitySearch' | translate }}</mat-label>\r\n          <input type=\"text\" placeholder=\"{{'CityType' | translate }}\" matInput [(ngModel)]=\"filtertxt\">\r\n        </mat-form-field>\r\n        <input type=\"submit\" value=\"{{'GenericSearch' | translate }}\"  class=\"btn color-bg-02 white-text\" (click)=\"filterbtn()\">\r\n      </div>\r\n      <div class=\"col-sm-6 md-form pull-right\">\r\n        <input type=\"button\" class=\"pull-right btn color-bg-01 white-text\" value=\"{{'GenericCreateNew' | translate }}\"\r\n          (click)=\"createBtn(content)\">\r\n          <input type=\"button\" class=\"pull-right btn color-bg-03 white-text\" value=\"{{'GenericTranslate' | translate }}\"\r\n          (click)=\"Translate()\">\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-12\">\r\n      <div class='table-responsive'>\r\n        <table class='table' *ngIf='page.content && page.content.length'>\r\n          <thead>\r\n            <tr>\r\n              <th>{{'GenericName' | translate }}</th>\r\n              <th>{{'GenericAction' | translate }}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor='let obj of page.content'>\r\n              <td>{{ obj.Name}}</td>\r\n              <td>\r\n                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-primary\" value=\"{{'GenericEdit' | translate }}\"\r\n                  (click)=\"openBackDropCustomClass(content,obj.Id, obj.Name)\">\r\n                <input *ngIf=\"!obj.IsActive\" type=\"button\" class=\"btn btn-success\" value=\"{{'GenericActivate' | translate }}\"\r\n                  (click)=\"setActivate(obj.Id)\">\r\n                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-danger\" value=\"{{'GenericDeactivate' | translate }}\"\r\n                  (click)=\"setDeactivate(obj.Id)\">\r\n                <input type=\"button\" class=\"btn btn-warning\" value=\"{{'TrainingArea' | translate }}\" (click)=\"Areas(obj.Id)\">\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <app-custom-pagination [page]=\"page\" (nextPageEvent)=\"getNextPage()\" (previousPageEvent)=\"getPreviousPage()\"\r\n        (loadPageCurrentEvent)=\"getloadPageCurrent()\">\r\n      </app-custom-pagination>\r\n    </div>\r\n  </div>\r\n  <div>\r\n    <ng-template role=\"dialog\" #content let-modal class=\"modal fade\">\r\n      <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header color-bg-01 white-text text-center\">\r\n\r\n            <h6 class=\"modal-title\">\r\n              {{(modelId == \"-1\" ? 'GenericCreate'   : 'GenericEditing') | translate}} : {{modelId == \"-1\" ? (\"GenericNew\" | translate) : modelNameEdited}}\r\n            </h6>\r\n          </div>\r\n          <div class=\"modal-body pt-0\">\r\n\r\n            <form novalidate (ngSubmit)=\"modelSaveBtn(modelForm)\" #modelForm=\"ngForm\">\r\n              <div class=\"form-group \">\r\n                <mat-form-field class=\"example-full-width\">\r\n                  <mat-label>{{'CityName' | translate }}</mat-label>\r\n                  <input matInput id=\"modelNameId\" type=\"text\" placeholder=\"{{'GenericRequiredName' | translate }}\" required\r\n                    [(ngModel)]=\"modelName\" #modelNameVar=\"ngModel\" name=\"modelName\"\r\n                    [ngClass]=\"{'is-invalid': (modelNameVar.touched || modelNameVar.dirty) && !modelNameVar.valid }\" />\r\n                  <mat-error *ngIf=\"modelNameVar.errors?.required\">{{'CityError' | translate }}</mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"form-group pull-right md-form\">\r\n                <button class=\"btn color-bg-01 btn-sm white-text btnSave\" type=\"submit\"\r\n                  \r\n                  [disabled]=\"!modelForm.valid\">{{'GenericSave' | translate }}</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n\r\n            <button type=\"button\" class=\"btn color-bg-02 btn-sm white-text\"\r\n              (click)=\"modal.close('Close click')\">{{'GenericClose' | translate }}</button>\r\n          </div>\r\n\r\n\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n  </div>\r\n</section>","import { NgModule, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { TrainingCategoryListComponent } from './TrainingCategory/TrainingCategory-list.component';\r\nimport { CourseListComponent } from './Course/Course-list.component';\r\nimport { AdminRouteGuard } from '../core/admin-route-guard';\r\nimport { AreaComponent } from './area/area.component';\r\nimport { CityComponent } from './city/city.component';\r\nimport { NGOTypeComponent } from './ngotype/ngotype.component';\r\nimport { TrainingTypeComponent } from './training-type/training-type.component';\r\nimport { SharedModule } from '../common/sharedmodule.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TrainingCategoryListComponent,\r\n    CourseListComponent,\r\n    AreaComponent,\r\n    CityComponent,\r\n    NGOTypeComponent,\r\n    TrainingTypeComponent\r\n  ],\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      { path: 'DataManagement/Course/:id', component: CourseListComponent, canActivate: [AdminRouteGuard] },\r\n      { path: 'DataManagement/TrainingType', component: TrainingTypeComponent, canActivate: [AdminRouteGuard]},\r\n      { path: 'DataManagement/TrainingCategory', component: TrainingCategoryListComponent, canActivate: [AdminRouteGuard]},\r\n      { path: 'DataManagement/NGOType', component: NGOTypeComponent, canActivate: [AdminRouteGuard]},\r\n      { path: 'DataManagement/City', component: CityComponent, canActivate: [AdminRouteGuard]},\r\n      { path: 'DataManagement/Area/:id', component: AreaComponent, canActivate: [AdminRouteGuard] },\r\n    ])\r\n  ],\r\n  schemas: [ CUSTOM_ELEMENTS_SCHEMA,NO_ERRORS_SCHEMA  ]\r\n})\r\nexport class DataManagementModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgForm } from '@angular/forms';\r\n\r\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\r\nimport { cNGOTypeItem, cNGOTypeList } from 'src/app/interface/Response/NGOType.class';\r\nimport { CustomPaginationService } from 'src/app/common/pagination/services/custom-pagination.service';\r\nimport { ServiceDataManagement } from 'src/app/services/datamanagement.service';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { Page } from 'src/app/common/pagination/page';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-ngotype',\r\n  templateUrl: './ngotype.component.html',\r\n  styleUrls: ['./ngotype.component.scss']\r\n})\r\nexport class NGOTypeComponent extends baseComponent implements OnInit {\r\n\r\n  pageTitle: string = 'NGO Type';\r\n  lstNGOType: cNGOTypeList;\r\n  message: ShowMessage = new ShowMessage();\r\n  filtertxt: string = '';\r\n  modelName: string = '';\r\n  modelId: string = '';\r\n  modelNameEdited: string = '';\r\n\r\n  page: Page<cNGOTypeItem> = new Page();\r\n\r\n  constructor(private BLServiceDataManagement: ServiceDataManagement,\r\n    private paginationService: CustomPaginationService,\r\n    BLServiceShowMessage: ServiceShowMessage,\r\n    BLServiceLoginUser: ServiceLoginUser,BLTranslate: TranslateService,\r\n    private modalService: NgbModal) {super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate); }\r\n\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n  private loadData(): void {\r\n    this.BLServiceDataManagement.getNGOTypeAll(this.page.pageable.pageCurrent, this.filtertxt).subscribe({\r\n      next: lst => {\r\n        this.lstNGOType = lst;\r\n        this.page.pageable.pageSize = lst.pageSize;\r\n        this.page.totalElements = lst.totalCount;\r\n        this.page.content = lst.lstResult;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  public getNextPage(): void {\r\n    this.page.pageable = this.paginationService.getNextPage(this.page);\r\n    this.loadData();\r\n  }\r\n\r\n  public getPreviousPage(): void {\r\n    this.page.pageable = this.paginationService.getPreviousPage(this.page);\r\n    this.loadData();\r\n  }\r\n  public getloadPageCurrent(): void {\r\n    this.loadData();\r\n  }\r\n  setActivate(Id: string): void {\r\n    if (!confirm(this.msgsetActivate))\r\n      return;\r\n    this.BLServiceDataManagement.setNGOTypeActivate(Id).subscribe({\r\n      next: response => {\r\n        \r\n          this.message.Success(this.msgActivatedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  setDeactivate(Id: string): void {\r\n    if (!confirm(this.msgsetDeactivate))\r\n      return;\r\n\r\n    this.BLServiceDataManagement.setNGOTypeDeactivate(Id).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.msgDeactivatedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  filterbtn(): void {\r\n    this.page.pageable.pageCurrent = 1;\r\n    this.loadData();\r\n  }\r\n  createBtn(content): void {\r\n    this.modelId = \"-1\";\r\n    this.modelName = \"\";\r\n    this.modelNameEdited = \"\";\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  modelSaveBtn(modelForm: NgForm): void {\r\n    if (!modelForm.valid)\r\n      return;\r\n\r\n    if (this.modelId == \"-1\") {\r\n      this.BLServiceDataManagement.createNGOType(this.modelName).subscribe({\r\n        next: response => {\r\n          this.message.Success(this.msgSavedSuccessfully);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.modalService.dismissAll();\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n    else {\r\n      this.BLServiceDataManagement.updateNGOType(this.modelId, this.modelName).subscribe({\r\n        next: response => {\r\n          this.message.Success(this.msgSavedSuccessfully);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.modalService.dismissAll();\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n  }\r\n  openBackDropCustomClass(content, Id: string, name: string) {\r\n    this.modelId = Id;\r\n    this.modelName = name;\r\n    this.modelNameEdited = name;\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n\r\n\r\n}\r\n","<section class=\"my-5\">\r\n  <div class=\"container\">\r\n    <div class='row'>\r\n      <h4 class=\"mb-4\">{{pageTitle}}</h4>\r\n    </div>\r\n    <div class='row'>\r\n      <div class=\"col-sm-6 md-form\">\r\n        <mat-form-field class=\"example-full-width\">\r\n          <mat-label>Search for NGO Type</mat-label>\r\n          <input type=\"text\" placeholder=\"Type NGO Type Name\" matInput [(ngModel)]=\"filtertxt\">\r\n        </mat-form-field>\r\n        <input type=\"submit\" value=\"{{'GenericSearch' | translate }}\"  class=\"btn color-bg-02 white-text\" (click)=\"filterbtn()\">\r\n      </div>\r\n      <div class=\"col-sm-6 md-form pull-right\">\r\n        <input type=\"button\" class=\"pull-right btn color-bg-01 white-text\" value=\"{{'GenericCreateNew' | translate }}\"\r\n          (click)=\"createBtn(content)\">\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-12\">\r\n      <div class='table-responsive'>\r\n        <table class='table' *ngIf='page.content && page.content.length'>\r\n          <thead>\r\n            <tr>\r\n              <th>{{'GenericName' | translate }}</th>\r\n              <th>{{'GenericAction' | translate }}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor='let obj of page.content'>\r\n              <td>{{ obj.Name}}</td>\r\n              <td>\r\n                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-primary\" value=\"{{'GenericEdit' | translate }}\"\r\n                  (click)=\"openBackDropCustomClass(content,obj.Id, obj.Name)\">\r\n                <input *ngIf=\"!obj.IsActive\" type=\"button\" class=\"btn btn-success\" value=\"{{'GenericActivate' | translate }}\"\r\n                  (click)=\"setActivate(obj.Id)\">\r\n                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-danger\" value=\"{{'GenericDeactivate' | translate }}\"\r\n                  (click)=\"setDeactivate(obj.Id)\">\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <app-custom-pagination [page]=\"page\" (nextPageEvent)=\"getNextPage()\" (previousPageEvent)=\"getPreviousPage()\"\r\n        (loadPageCurrentEvent)=\"getloadPageCurrent()\">\r\n      </app-custom-pagination>\r\n    </div>\r\n  </div>\r\n  <div>\r\n    <ng-template role=\"dialog\" #content let-modal class=\"modal fade\">\r\n      <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header color-bg-01 white-text text-center\">\r\n\r\n            <h6 class=\"modal-title\">\r\n              {{(modelId == \"-1\" ? 'GenericCreate'   : 'GenericEditing') | translate}} : {{modelId == \"-1\" ? (\"GenericNew\" | translate) : modelNameEdited}}\r\n            </h6>\r\n          </div>\r\n          <!-- <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button> -->\r\n          <div class=\"modal-body pt-0\">\r\n\r\n            <form novalidate (ngSubmit)=\"modelSaveBtn(modelForm)\" #modelForm=\"ngForm\">\r\n              <div class=\"form-group \">\r\n                <mat-form-field class=\"example-full-width\">\r\n                  <mat-label>NGO Type Name</mat-label>\r\n                <input matInput id=\"modelNameId\" type=\"text\" placeholder=\"{{'GenericRequiredName' | translate }}\" required\r\n                  [(ngModel)]=\"modelName\" #modelNameVar=\"ngModel\" name=\"modelName\"\r\n                  [ngClass]=\"{'is-invalid': (modelNameVar.touched || modelNameVar.dirty) && !modelNameVar.valid }\" />\r\n                  <mat-error *ngIf=\"modelNameVar.errors?.required\">Please enter {{pageTitle}} name.</mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"form-group pull-right md-form\">\r\n                <button class=\"btn color-bg-01 btn-sm white-text btnSave\" type=\"submit\"\r\n                  \r\n                  [disabled]=\"!modelForm.valid\">{{'GenericSave' | translate }}</button></div>\r\n            </form>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn color-bg-02 btn-sm white-text\"\r\n              (click)=\"modal.close('Close click')\">{{'GenericClose' | translate }}</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n  </div>","import { Component, OnInit } from '@angular/core';\r\nimport { cTrainingTypeList, cTrainingTypeItem } from 'src/app/interface/Response/TrainingType.class';\r\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\r\nimport { Page } from 'src/app/common/pagination/page';\r\nimport { ServiceDataManagement } from 'src/app/services/datamanagement.service';\r\nimport { CustomPaginationService } from 'src/app/common/pagination/services/custom-pagination.service';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgForm } from '@angular/forms';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TranslateType } from 'src/app/Enum/TranslateType.enum';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-training-type',\r\n  templateUrl: './training-type.component.html',\r\n  styleUrls: ['./training-type.component.scss']\r\n})\r\nexport class TrainingTypeComponent extends baseComponent implements OnInit {\r\n\r\n\r\n  pageTitle: string = 'Training Type';\r\n  lstTrainingType: cTrainingTypeList;\r\n  message: ShowMessage = new ShowMessage();\r\n  filtertxt: string = '';\r\n  modelName: string = '';\r\n  modelId: string = '';\r\n  modelNameEdited: string = '';\r\n\r\n  page: Page<cTrainingTypeItem> = new Page();\r\n\r\n  constructor(private BLServiceDataManagement: ServiceDataManagement,\r\n    private paginationService: CustomPaginationService,\r\n    private router: Router,\r\n    BLServiceShowMessage: ServiceShowMessage,\r\n    BLServiceLoginUser: ServiceLoginUser, BLTranslate: TranslateService,\r\n    private modalService: NgbModal) {\r\n    super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n  private loadData(): void {\r\n    this.BLServiceDataManagement.getTrainingTypeAll(this.page.pageable.pageCurrent, this.filtertxt).subscribe({\r\n      next: lst => {\r\n        this.lstTrainingType = lst;\r\n        this.page.pageable.pageSize = lst.pageSize;\r\n        this.page.totalElements = lst.totalCount;\r\n        this.page.content = lst.lstResult;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  public getNextPage(): void {\r\n    this.page.pageable = this.paginationService.getNextPage(this.page);\r\n    this.loadData();\r\n  }\r\n\r\n  public getPreviousPage(): void {\r\n    this.page.pageable = this.paginationService.getPreviousPage(this.page);\r\n    this.loadData();\r\n  }\r\n  public getloadPageCurrent(): void {\r\n    this.loadData();\r\n  }\r\n  setActivate(Id: string): void {\r\n    if (!confirm(this.msgsetActivate))\r\n      return;\r\n\r\n    this.BLServiceDataManagement.setTrainingTypeActivate(Id).subscribe({\r\n      next: response => {\r\n\r\n        this.message.Success(this.msgActivatedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  setDeactivate(Id: string): void {\r\n    if (!confirm(this.msgsetDeactivate))\r\n      return;\r\n    this.BLServiceDataManagement.setTrainingTypeDeactivate(Id).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.msgDeactivatedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  filterbtn(): void {\r\n    this.page.pageable.pageCurrent = 1;\r\n    this.loadData();\r\n  }\r\n  createBtn(content): void {\r\n    this.modelId = \"-1\";\r\n    this.modelName = \"\";\r\n    this.modelNameEdited = \"\";\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  modelSaveBtn(modelForm: NgForm): void {\r\n    if (!modelForm.valid)\r\n      return;\r\n\r\n\r\n    if (this.modelId == \"-1\") {\r\n      this.BLServiceDataManagement.createTrainingType(this.modelName).subscribe({\r\n        next: response => {\r\n          this.message.Success(this.msgSavedSuccessfully);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.modalService.dismissAll();\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n    else {\r\n      this.BLServiceDataManagement.updateTrainingType(this.modelId, this.modelName).subscribe({\r\n        next: response => {\r\n          this.message.Success(this.msgSavedSuccessfully);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.modalService.dismissAll();\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n  }\r\n  openBackDropCustomClass(content, Id: string, name: string) {\r\n    this.modelId = Id;\r\n    this.modelName = name;\r\n    this.modelNameEdited = name;\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n\r\n  Translate() {\r\n    this.router.navigate(['/Translate/' + TranslateType.TrainingType + '/0']);\r\n  }\r\n}\r\n","<section class=\"my-5\">\r\n  <div class=\"container\">\r\n    <div class='row'>\r\n      <h4 class=\"mb-4\">{{'GenericTrainingType' | translate }}</h4>\r\n    </div>\r\n    <div class='row'>\r\n      <div class=\"col-sm-6 md-form\">\r\n        <mat-form-field class=\"example-full-width\">\r\n          <mat-label>{{'TrainingTypeSearch' | translate }}</mat-label>\r\n          <input type=\"text\" placeholder=\"{{'TrainingTypeType' | translate }} \" matInput [(ngModel)]=\"filtertxt\">\r\n        </mat-form-field>\r\n        <input type=\"submit\" value=\"{{'GenericSearch' | translate }}\"  class=\"btn color-bg-02 white-text\" (click)=\"filterbtn()\">\r\n      </div>\r\n      <div class=\"col-sm-6 md-form pull-right\">\r\n        <input type=\"button\" class=\"pull-right btn color-bg-01 white-text\" value=\"{{'GenericCreateNew' | translate }}\"\r\n          (click)=\"createBtn(content)\">\r\n          <input type=\"button\" class=\"pull-right btn color-bg-03 white-text\" value=\"{{'GenericTranslate' | translate }}\"\r\n          (click)=\"Translate()\">\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-12\">\r\n      <div class='table-responsive '>\r\n        <table class='table' *ngIf='page.content && page.content.length'>\r\n          <thead>\r\n            <tr>\r\n              <th>{{'GenericName' | translate }}</th>\r\n              <th>{{'GenericAction' | translate }}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor='let obj of page.content'>\r\n              <td>{{ obj.Name}}</td>\r\n              <td>\r\n                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-primary\" value=\"{{'GenericEdit' | translate }}\"\r\n                  (click)=\"openBackDropCustomClass(content,obj.Id, obj.Name)\">\r\n                <input *ngIf=\"!obj.IsActive\" type=\"button\" class=\"btn btn-success\" value=\"{{'GenericActivate' | translate }}\"\r\n                  (click)=\"setActivate(obj.Id)\">\r\n                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-danger\" value=\"{{'GenericDeactivate' | translate }}\"\r\n                  (click)=\"setDeactivate(obj.Id)\">\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <app-custom-pagination [page]=\"page\" (nextPageEvent)=\"getNextPage()\" (previousPageEvent)=\"getPreviousPage()\"\r\n        (loadPageCurrentEvent)=\"getloadPageCurrent()\">\r\n      </app-custom-pagination>\r\n    </div>\r\n  </div>\r\n  <div>\r\n    <ng-template role=\"dialog\" #content let-modal class=\"modal fade\">\r\n      <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header color-bg-01 white-text text-center\">\r\n\r\n            <h6 class=\"modal-title\">{{(modelId == \"-1\" ? 'GenericCreate'   : 'GenericEditing') | translate}} : {{modelId == \"-1\" ? (\"GenericNew\" | translate) : modelNameEdited}}</h6>\r\n          </div>\r\n          <!-- <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button> -->\r\n          <div class=\"modal-body pt-0\">\r\n\r\n            <form novalidate (ngSubmit)=\"modelSaveBtn(modelForm)\" #modelForm=\"ngForm\">\r\n              <div class=\"form-group \">\r\n                <mat-form-field class=\"example-full-width\">\r\n                  <mat-label>{{'TrainingTypeName' | translate }}</mat-label>\r\n                <input matInput id=\"modelNameId\" type=\"text\" placeholder=\"{{'GenericRequiredName' | translate }}\" required\r\n                  [(ngModel)]=\"modelName\" #modelNameVar=\"ngModel\" name=\"modelName\"\r\n                  [ngClass]=\"{'is-invalid': (modelNameVar.touched || modelNameVar.dirty) && !modelNameVar.valid }\" />\r\n                  <mat-error *ngIf=\"modelNameVar.errors?.required\">{{'TrainingTypeError1' | translate }}</mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"form-group pull-right md-form\">\r\n                <button class=\"btn color-bg-01 btn-sm white-text btnSave\" type=\"submit\"\r\n                  \r\n                  [disabled]=\"!modelForm.valid\">{{'GenericSave' | translate }}</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n\r\n            <button type=\"button\" class=\"btn color-bg-02 btn-sm white-text\"\r\n              (click)=\"modal.close('Close click')\">{{'GenericClose' | translate }}</button>\r\n          </div>\r\n\r\n\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n  </div>","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { PartnerComponent } from '../EntityManagement/partner/partner.component';\r\nimport { SubPartnerComponent } from '../EntityManagement/sub-partner/sub-partner.component';\r\nimport { TrainingCenterComponent } from '../EntityManagement/training-center/training-center.component';\r\n\r\nimport { AdminRouteGuard, AdminPartnerRouteGuard } from '../core/admin-route-guard';\r\nimport { SharedModule } from '../common/sharedmodule.module';\r\nimport { PartnerReportsComponent } from './partner-reports/partner-reports.component';\r\n\r\n@NgModule({\r\n  declarations: [ \r\n    PartnerComponent,\r\n    SubPartnerComponent,\r\n    TrainingCenterComponent,\r\n    PartnerReportsComponent\r\n  ],\r\n  imports: [ \r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      { path: 'EntityManagement/Partner', component: PartnerComponent, canActivate: [AdminPartnerRouteGuard]},\r\n      { path: 'EntityManagement/PartnerReports', component: PartnerReportsComponent, canActivate: [AdminRouteGuard]},\r\n      { path: 'EntityManagement/SubPartner', component: SubPartnerComponent, canActivate: [AdminPartnerRouteGuard]},\r\n      { path: 'EntityManagement/TrainingCenter/:id', component: TrainingCenterComponent, canActivate: [AdminPartnerRouteGuard]}\r\n    ])\r\n  ]\r\n})\r\nexport class EntityManagementModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { cUserProfileItem } from 'src/app/interface/Response/UserProfile.class';\nimport { Page } from 'src/app/common/pagination/page';\nimport { ServiceEntityManagement } from 'src/app/services/entitymanagement.service';\nimport { CustomPaginationService } from 'src/app/common/pagination/services/custom-pagination.service';\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\nimport { cEntityPartnerReportsList, cEntityPartnerReportsItem } from 'src/app/interface/Response/PartnerReports.class';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-partner-reports',\n  templateUrl: './partner-reports.component.html',\n  styleUrls: ['./partner-reports.component.css']\n})\nexport class PartnerReportsComponent extends baseComponent implements OnInit {\n\n  pageTitle: string = 'Partner Reports Account';\n  lstEntityPartner: cEntityPartnerReportsList;\n  PartnerMembers: cUserProfileItem[];\n  filtertxt: string = '';\n  modelNameEdited: string = '';\n  modelObj: cEntityPartnerReportsItem;\n  modelIsCreate:boolean = true;\n  page: Page<cEntityPartnerReportsItem> = new Page();\n  MemberId: string;\n\n  constructor(private BLServiceEntityManagement: ServiceEntityManagement,\n    private paginationService: CustomPaginationService,\n    BLServiceShowMessage: ServiceShowMessage,BLTranslate: TranslateService,\n    BLServiceLoginUser : ServiceLoginUser) { \n      super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\n    }\n\n\n  ngOnInit() {\n    this.loadData();\n  }\n  private loadData(): void {\n    this.BLServiceEntityManagement.EntityPartnerReportListAll(this.page.pageable.pageCurrent, this.filtertxt).subscribe({\n      next: lst => {\n        this.lstEntityPartner = lst;\n        this.page.pageable.pageSize = lst.pageSize;\n        this.page.totalElements = lst.totalCount;\n        this.page.content = lst.lstResult;\n      },\n      error: err => this.message.Error(err)\n    });\n  }\n  public getNextPage(): void {\n    this.page.pageable = this.paginationService.getNextPage(this.page);\n    this.loadData();\n  }\n\n  public getPreviousPage(): void {\n    this.page.pageable = this.paginationService.getPreviousPage(this.page);\n    this.loadData();\n  }\n  public getloadPageCurrent(): void {\n    this.loadData();\n  }\n  \n  filterbtn(): void {\n    this.page.pageable.pageCurrent = 1;\n    this.loadData();\n  }\n  \n\n}\n","<section class=\"my-5\">\n    <div class=\"container\">\n      <div class='row'>\n        <h4 class=\"mb-4\">{{'PartnerReport' | translate }}</h4>\n      </div>\n      <div class='row'>\n        <div class=\"col-sm-12 md-form\">\n          <mat-form-field class=\"example-full-width\">\n            <mat-label>{{'PartnerSearch' | translate }}</mat-label>\n            <input type=\"text\" placeholder=\"{{'PartnerTypeName' | translate }}\" matInput [(ngModel)]=\"filtertxt\">\n          </mat-form-field>\n          <input type=\"submit\" value=\"{{'GenericSearch' | translate }}\"  class=\"btn color-bg-02 white-text\" (click)=\"filterbtn()\">\n        </div>\n       \n      </div>\n      <div class=\"col-md-12\">\n        <div class='table-responsive'>\n          <table class='table' *ngIf='page.content && page.content.length'>\n            <thead>\n              <tr>\n                <th>{{'GenericName' | translate }}</th>\n                <th>{{'PartnerReportUserName' | translate }}</th>\n                <th>{{'PartnerReportPassword' | translate }}</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor='let obj of page.content'>\n                <td>{{ obj.Name}}</td>\n                <td>{{ obj.UserName}}</td>\n                <td>{{ obj.Password}}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n      <div>\n        <app-custom-pagination [page]=\"page\" (nextPageEvent)=\"getNextPage()\" (previousPageEvent)=\"getPreviousPage()\"\n          (loadPageCurrentEvent)=\"getloadPageCurrent()\">\n        </app-custom-pagination>\n      </div>\n    </div>\n  </section>","import { Component, OnInit } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgForm } from '@angular/forms';\r\n\r\nimport { cEntityPartnerList, cEntityPartnerItem } from 'src/app/interface/Response/EntityPartner.class';\r\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\r\nimport { Page } from 'src/app/common/pagination/page';\r\nimport { CustomPaginationService } from 'src/app/common/pagination/services/custom-pagination.service';\r\n\r\nimport { ServiceEntityManagement } from 'src/app/services/entitymanagement.service';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { cUserProfileItem } from 'src/app/interface/Response/UserProfile.class';\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-partner',\r\n  templateUrl: './partner.component.html',\r\n  styleUrls: ['./partner.component.scss']\r\n})\r\nexport class PartnerComponent extends baseComponent implements OnInit {\r\n\r\n  pageTitle: string = 'Partner';\r\n  lstEntityPartner: cEntityPartnerList;\r\n  PartnerMembers: cUserProfileItem[];\r\n  filtertxt: string = '';\r\n  modelNameEdited: string = '';\r\n  modelObj: cEntityPartnerItem;\r\n  modelIsCreate: boolean = true;\r\n  page: Page<cEntityPartnerItem> = new Page();\r\n  MemberId: string;\r\n  IsHoursCorrect: boolean = false;\r\n\r\n  constructor(private BLServiceEntityManagement: ServiceEntityManagement,\r\n    private paginationService: CustomPaginationService,\r\n    private modalService: NgbModal,\r\n    private router: Router,\r\n    BLServiceShowMessage: ServiceShowMessage, BLTranslate: TranslateService,\r\n    BLServiceLoginUser: ServiceLoginUser) {\r\n    super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n  private loadData(): void {\r\n    this.BLServiceEntityManagement.getEntityPartnerAll(this.page.pageable.pageCurrent, this.filtertxt).subscribe({\r\n      next: lst => {\r\n        this.lstEntityPartner = lst;\r\n        this.page.pageable.pageSize = lst.pageSize;\r\n        this.page.totalElements = lst.totalCount;\r\n        this.page.content = lst.lstResult;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  public getNextPage(): void {\r\n    this.page.pageable = this.paginationService.getNextPage(this.page);\r\n    this.loadData();\r\n  }\r\n\r\n  public getPreviousPage(): void {\r\n    this.page.pageable = this.paginationService.getPreviousPage(this.page);\r\n    this.loadData();\r\n  }\r\n  public getloadPageCurrent(): void {\r\n    this.loadData();\r\n  }\r\n  setActivate(Id: string): void {\r\n    if (!confirm(this.msgsetActivate))\r\n      return;\r\n    this.BLServiceEntityManagement.setEntityPartnerActivate(Id).subscribe({\r\n      next: response => {\r\n\r\n        this.message.Success(this.msgActivatedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  setDeactivate(Id: string): void {\r\n    if (!confirm(this.msgsetDeactivate))\r\n      return;\r\n\r\n    this.BLServiceEntityManagement.setEntityPartnerDeactivate(Id).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.msgDeactivatedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  filterbtn(): void {\r\n    this.page.pageable.pageCurrent = 1;\r\n    this.loadData();\r\n  }\r\n  createBtn(content): void {\r\n    // this.modelId = \"-1\";\r\n    // this.modelName = \"\";\r\n    this.modelObj = new cEntityPartnerItem;\r\n    this.modelIsCreate = true;\r\n    this.modelNameEdited = \"\";\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  modelSaveBtn(modelForm: NgForm): void {\r\n    if (!modelForm.valid)\r\n      return;\r\n\r\n    if (this.modelIsCreate) {\r\n      this.BLServiceEntityManagement.createEntityPartner(this.modelObj).subscribe({\r\n        next: response => {\r\n          this.message.Success(this.msgSavedSuccessfully);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.modalService.dismissAll();\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n    else {\r\n      this.BLServiceEntityManagement.updateEntityPartner(this.modelObj).subscribe({\r\n        next: response => {\r\n          this.message.Success(this.msgSavedSuccessfully);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.modalService.dismissAll();\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n  }\r\n  openBackDropCustomClass(content, obj: cEntityPartnerItem) {\r\n    this.modelObj = obj;\r\n    this.LoadPartnersMemebers();\r\n    this.modelIsCreate = false;\r\n    this.modelNameEdited = obj.Name;\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  LoadPartnersMemebers() {\r\n    this.BLServiceEntityManagement.getEntityPartnerGetByid(this.modelObj.Id).subscribe({\r\n      next: response => this.modelObj = response\r\n    });\r\n  }\r\n  SavePartnersMemebers(UserId: string) {\r\n    if (this.modelObj == null)\r\n      return;\r\n    this.BLServiceEntityManagement.memberAddEntityPartner(this.modelObj.Id, UserId).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.msgSavedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n        this.LoadPartnersMemebers();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  Remove(UserId: string) {\r\n    if (!confirm(this.msgsetRemove))\r\n      return;\r\n    this.BLServiceEntityManagement.memberRemoveEntityPartner(this.modelObj.Id, UserId).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.msgSavedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n        this.LoadPartnersMemebers();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  OnSelectedPartner(UserId: string): void {\r\n    this.SavePartnersMemebers(UserId);\r\n  }\r\n  GoToTrainingCenters(Id: string) {\r\n    this.router.navigate(['/EntityManagement/TrainingCenter/' + Id]);\r\n  }\r\n  onHoursSelect(event: any) {\r\n    this.IsHoursCorrect = this.modelObj.MinHours > this.modelObj.MaxHours;\r\n    \r\n  }\r\n}\r\n","<section class=\"my-5\">\r\n  <div class=\"container\">\r\n    <div class='row'>\r\n      <h4 class=\"mb-4\">{{'GenericPartner' | translate }}</h4>\r\n    </div>\r\n    <div class='row'>\r\n      <div class=\"col-sm-6 md-form\">\r\n        <mat-form-field class=\"example-full-width\">\r\n          <mat-label>{{'PartnerSearch' | translate }}</mat-label>\r\n          <input type=\"text\" placeholder=\"{{'PartnerTypeName' | translate }}\" matInput [(ngModel)]=\"filtertxt\">\r\n        </mat-form-field>\r\n        <input type=\"submit\" value=\"{{'GenericSearch' | translate }}\"  class=\"btn color-bg-02 white-text\" (click)=\"filterbtn()\">\r\n      </div>\r\n      <div class=\"col-sm-6 md-form pull-right\">\r\n        <input type=\"button\" class=\"pull-right btn color-bg-01 white-text\" value=\"{{'GenericCreateNew' | translate }}\"\r\n          (click)=\"createBtn(content)\">\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-12\">\r\n      <div class='table-responsive'>\r\n        <table class='table' *ngIf='page.content && page.content.length'>\r\n          <thead>\r\n            <tr>\r\n              <th>{{'GenericName' | translate }}</th>\r\n              <th>{{'RequestPhone' | translate }}</th>\r\n              <th>{{'PartnerManageAccount' | translate }}</th>\r\n              <th>{{'GenericAction' | translate }}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor='let obj of page.content'>\r\n              <td>{{ obj.Name}}</td>\r\n              <td>{{ obj.Phone}}</td>\r\n              <td>\r\n                <span *ngFor=\"let item of obj.Members\">{{item.Name}}, </span>\r\n              </td>\r\n              <td>\r\n                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-primary\" value=\"{{'GenericEdit' | translate }}\"\r\n                  (click)=\"openBackDropCustomClass(content,obj)\">\r\n                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-warning\" value=\"{{'PartnerAccount' | translate }}\"\r\n                  (click)=\"openBackDropCustomClass(contentAssign,obj)\">\r\n                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-info\" value=\"{{'GenericTrainingCenter' | translate }}\"\r\n                  (click)=\"GoToTrainingCenters(obj.Id)\">\r\n                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-danger\" value=\"{{'GenericDeactivate' | translate }}\"\r\n                  (click)=\"setDeactivate(obj.Id)\">\r\n                <input *ngIf=\"!obj.IsActive\" type=\"button\" class=\"btn btn-success\" value=\"{{'GenericActivate' | translate }}\"\r\n                  (click)=\"setActivate(obj.Id)\">\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <app-custom-pagination [page]=\"page\" (nextPageEvent)=\"getNextPage()\" (previousPageEvent)=\"getPreviousPage()\"\r\n        (loadPageCurrentEvent)=\"getloadPageCurrent()\">\r\n      </app-custom-pagination>\r\n    </div>\r\n  </div>\r\n  <div>\r\n    <ng-template role=\"dialog\" #content let-modal class=\"modal fade\">\r\n      <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header color-bg-01 white-text text-center\">\r\n\r\n            <h6 class=\"modal-title\">\r\n          \r\n              {{(modelIsCreate ? 'GenericCreate'   : 'GenericEditing') | translate}} : {{modelIsCreate ? (\"GenericNew\" | translate) : modelNameEdited}}\r\n            </h6>\r\n          </div>\r\n          <div class=\"modal-body pt-0\">\r\n            <form novalidate (ngSubmit)=\"modelSaveBtn(modelForm)\" #modelForm=\"ngForm\">\r\n              <div class=\"form-group \">\r\n                <mat-form-field class=\"example-full-width\">\r\n                  <mat-label>{{'PartnerName' | translate }}</mat-label>\r\n                  <input matInput id=\"modelNameId\" type=\"text\" placeholder=\"{{'GenericRequiredName' | translate }}\" required\r\n                    [(ngModel)]=\"modelObj.Name\" #modelNameVar=\"ngModel\" name=\"modelName\"\r\n                    [ngClass]=\"{'is-invalid': (modelNameVar.touched || modelNameVar.dirty) && !modelNameVar.valid }\" />\r\n                  <mat-error *ngIf=\"modelNameVar.errors?.required\">{{'PartnerEnterNameError' | translate }}</mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"form-group \">\r\n                <mat-form-field class=\"example-full-width\">\r\n                  <mat-label>{{'RequestPhone' | translate }}</mat-label>\r\n                  <input matInput id=\"modelPhoneId\" type=\"number\" placeholder=\"{{'RequestPhoneSelect' | translate }}\" required number\r\n                    [(ngModel)]=\"modelObj.Phone\" #modelPhoneVar=\"ngModel\" name=\"modelPhone\"\r\n                    [ngClass]=\"{'is-invalid': (modelPhoneVar.touched || modelPhoneVar.dirty) && !modelPhoneVar.valid }\" />\r\n                  <mat-error *ngIf=\"modelPhoneVar.errors?.required\">{{'RequestPhoneError' | translate }}</mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"form-group \">\r\n                <mat-form-field class=\"example-full-width\">\r\n                  <mat-label>{{'PartnerMinHour' | translate }}</mat-label>\r\n                  <input matInput id=\"modelMinHoursId\" pattern=\"^[1-9][0-9]?$|^100$\" min=\"1\" type=\"number\" placeholder=\"{{'PartnerMinHourSelect' | translate }}\" required number\r\n                    [(ngModel)]=\"modelObj.MinHours\" #modelMinHoursVar=\"ngModel\" name=\"modelMinHours\" (ngModelChange)=\"onHoursSelect($event)\"\r\n                    [ngClass]=\"{'is-invalid': (modelMinHoursVar.touched || modelMinHoursVar.dirty) && !modelMinHoursVar.valid }\" />\r\n                  <mat-error *ngIf=\"modelMinHoursVar.errors?.required\">{{'PartnerMinHourError' | translate }}</mat-error>\r\n                  <mat-error *ngIf=\"modelMaxHoursVar?.errors?.pattern\">{{'ConfigOrderError' | translate }}</mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"form-group \">\r\n                <mat-form-field class=\"example-full-width\">\r\n                  <mat-label>{{'PartnerMaxHour' | translate }}</mat-label>\r\n                  <input matInput id=\"modelMaxHoursId\" pattern=\"^[1-9][0-9]?$|^100$\" type=\"number\" placeholder=\"{{'PartnerMaxHourSelect' | translate }}\" required number \r\n                    [(ngModel)]=\"modelObj.MaxHours\" #modelMaxHoursVar=\"ngModel\" name=\"modelMaxHours\"  min=\"1\" (ngModelChange)=\"onHoursSelect($event)\"\r\n                    [ngClass]=\"{'is-invalid': (modelMaxHoursVar.touched || modelMaxHoursVar.dirty) && !modelMaxHoursVar.valid }\" />\r\n                    <mat-error *ngIf=\"modelMaxHoursVar.errors?.required\">{{'PartnerMaxHourError' | translate }}</mat-error>\r\n                    <mat-error *ngIf=\"modelMaxHoursVar?.errors?.pattern\">{{'ConfigOrderError' | translate }}</mat-error>\r\n                    <!-- <mat-error class=\"MatError\" *ngIf=\"IsHoursCorrect\">{{'TrainingDateError' | translate }}111</mat-error> -->\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"form-group pull-right md-form\">\r\n                <button class=\"btn color-bg-01 btn-sm white-text btnSave\" type=\"submit\"\r\n                  \r\n                  [disabled]=\"!modelForm.valid\">{{'GenericSave' | translate }}</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n\r\n            <button type=\"button\" class=\"btn color-bg-02 btn-sm white-text\"\r\n              (click)=\"modal.close('Close click')\">{{'GenericClose' | translate }}</button>\r\n          </div>\r\n\r\n\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n\r\n    <div>\r\n      <ng-template #contentAssign let-modal>\r\n        <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header color-bg-01 white-text text-center\">\r\n\r\n              <h6 class=\"modal-title\">\r\n                {{'PartnerAssignAccount' | translate }}: {{modelNameEdited}}</h6>\r\n            </div>\r\n            <div class=\"modal-body pt-0\">\r\n              <div>\r\n                <cust-search-partner (OnSelectedPartner)='OnSelectedPartner($event)'></cust-search-partner>\r\n              </div>\r\n              <div>\r\n                <table class='table' *ngIf='modelObj.Members && modelObj.Members.length'>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>{{'GenericName' | translate }}</th>\r\n                      <th>{{'GenericAction' | translate }}</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr *ngFor='let obj of modelObj.Members'>\r\n                      <td>{{ obj.Name }}\r\n                      </td>\r\n                      <td>\r\n                        <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-danger\" value=\"{{'GenericRemove' | translate }}\"\r\n                          (click)=\"Remove(obj.Id)\">\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              <button type=\"button\" class=\"btn color-bg-02 btn-sm white-text\"\r\n                (click)=\"modal.close('Close click')\">{{'GenericClose' | translate }}</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </ng-template>\r\n    </div>\r\n  </div>\r\n</section>","import { Component, OnInit } from '@angular/core';\r\nimport { cEntitySubPartnerList, cEntitySubPartnerItem } from 'src/app/interface/Response/EntitySubPartner.class';\r\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\r\nimport { cEntityPartnerItem } from 'src/app/interface/Response/EntityPartner.class';\r\nimport { Page } from 'src/app/common/pagination/page';\r\nimport { ModelEntitySubPartner } from 'src/app/interface/Model/ModelEntitySubPartner.class';\r\nimport { ServiceEntityManagement } from 'src/app/services/entitymanagement.service';\r\nimport { CustomPaginationService } from 'src/app/common/pagination/services/custom-pagination.service';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgForm } from '@angular/forms';\r\nimport { cEntityTrainingCenterItem } from 'src/app/interface/Response/EntityTrainingCenter.class';\r\nimport { noop } from 'rxjs';\r\nimport { cTrainingTypeItem } from 'src/app/interface/Response/TrainingType.class';\r\nimport { UserType } from 'src/app/Enum/UserType.enum';\r\nimport { cUserProfileItem } from 'src/app/interface/Response/UserProfile.class';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-sub-partner',\r\n  templateUrl: './sub-partner.component.html',\r\n  styleUrls: ['./sub-partner.component.css']\r\n})\r\nexport class SubPartnerComponent extends baseComponent implements OnInit {\r\n\r\n\r\n  pageTitle: string = 'Sub Partner';\r\n  lstEntitySubPartner: cEntitySubPartnerList;\r\n  message: ShowMessage = new ShowMessage();\r\n  filtertxt: string = '';\r\n  modelNameEdited: string = '';\r\n  modelObj: ModelEntitySubPartner;\r\n  modelObjSubPartner: cEntitySubPartnerItem;\r\n  modelIsCreate: boolean = true;\r\n  page: Page<cEntitySubPartnerItem> = new Page();\r\n  partnersList: cEntityPartnerItem[];\r\n  TrainingCenterList: cEntityTrainingCenterItem[];\r\n  lstMyPartners: cEntityPartnerItem[];\r\n  popup:boolean = false;\r\n  msgsetAddAll:string;\r\n  msgsetRemoveAll:string;\r\n\r\n  constructor(private BLServiceEntityManagement: ServiceEntityManagement,\r\n    private paginationService: CustomPaginationService,\r\n    private modalService: NgbModal,\r\n     BLServiceShowMessage: ServiceShowMessage,BLTranslate: TranslateService,\r\n    BLServiceLoginUser : ServiceLoginUser) { \r\n      super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\r\n    }\r\n\r\n\r\n  ngOnInit() {\r\n    this.BLTranslate.get(\"msgsetAddAll\").subscribe(res => { this.msgsetAddAll = res; });\r\n    this.BLTranslate.get(\"msgsetRemoveAll\").subscribe(res => { this.msgsetRemoveAll = res; });\r\n   \r\n    this.loadData();\r\n    this.BLServiceEntityManagement.getEntityPartnerListActive().subscribe({\r\n      next: lst => {\r\n        this.partnersList = lst;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n    // this.BLServiceEntityManagement.getEntityTrainingCenterListActive().subscribe({\r\n    //   next: lst => {\r\n    //     this.TrainingCenterList = lst;\r\n    //   },\r\n    //   error: err => this.message.Error(err)\r\n    // });\r\n    this.BLServiceEntityManagement.getEntityPartnerGetMy().subscribe({\r\n      next: lst => {\r\n        this.lstMyPartners = lst;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n\r\n  private loadData(): void {\r\n    this.BLServiceEntityManagement.getEntitySubPartnerAll(this.page.pageable.pageCurrent, this.filtertxt).subscribe({\r\n      next: lst => {\r\n\r\n        this.lstEntitySubPartner = lst;\r\n        this.page.pageable.pageSize = lst.pageSize;\r\n        this.page.totalElements = lst.totalCount;\r\n        this.page.content = lst.lstResult;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  public getNextPage(): void {\r\n    this.page.pageable = this.paginationService.getNextPage(this.page);\r\n    this.loadData();\r\n  }\r\n\r\n  public getPreviousPage(): void {\r\n    this.page.pageable = this.paginationService.getPreviousPage(this.page);\r\n    this.loadData();\r\n  }\r\n  public getloadPageCurrent(): void {\r\n    this.loadData();\r\n  }\r\n  setActivate(Id: string): void {\r\n    if (!confirm(this.msgsetActivate))\r\n      return;\r\n    this.BLServiceEntityManagement.setEntitySubPartnerActivate(Id).subscribe({\r\n      next: response => {\r\n        \r\n          this.message.Success(this.msgActivatedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  setDeactivate(Id: string): void {\r\n    if (!confirm(this.msgsetDeactivate))\r\n      return;\r\n\r\n    this.BLServiceEntityManagement.setEntitySubPartnerDeactivate(Id).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.msgDeactivatedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  filterbtn(): void {\r\n    this.page.pageable.pageCurrent = 1;\r\n    this.loadData();\r\n  }\r\n  createBtn(content): void {\r\n    this.modelObj = new ModelEntitySubPartner();\r\n    this.modelObjSubPartner = new cEntitySubPartnerItem();\r\n    this.ReconstructeTrainingCenterList();\r\n    this.modelIsCreate = true;\r\n    this.modelNameEdited = \"\";\r\n    this.modalService.open(content, {size:'lg',backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  modelSaveBtn(modelForm: NgForm): void {\r\n    if (!modelForm.valid)\r\n      return;\r\n\r\n    if (this.modelIsCreate) {\r\n      this.BLServiceEntityManagement.createEntitySubPartner(this.modelObj).subscribe({\r\n        next: response => {\r\n          this.message.Success(this.msgSavedSuccessfully);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.modalService.dismissAll();\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n    else {\r\n      this.BLServiceEntityManagement.updateEntitySubPartner(this.modelObj).subscribe({\r\n        next: response => {\r\n\r\n          this.message.Success(this.msgSavedSuccessfully);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.modalService.dismissAll();\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n  }\r\n  openBackDropCustomClass(content, obj: cEntitySubPartnerItem) {\r\n    this.modelObjSubPartner = obj;\r\n    this.ReconstructeTrainingCenterList();\r\n    this.modelObj = this.ConvertEntityToModel(obj);\r\n    this.modelIsCreate = false;\r\n    this.modelNameEdited = obj.Name;\r\n    this.modalService.open(content, { size:'lg',  backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  ReconstructeTrainingCenterList() {\r\n    \r\n    this.TrainingCenterList = [];\r\n    if (!this.modelObjSubPartner.Partners?.length)\r\n      return;\r\n\r\n    this.modelObjSubPartner.Partners.forEach(value => {\r\n      value.TrainingCenters.length ? this.TrainingCenterList = this.TrainingCenterList.concat(value.TrainingCenters.filter(item => item.IsActive == true)) : noop;\r\n    });\r\n    this.TrainingCenterList = this.TrainingCenterList.sort((t1, t2) => {\r\n      const name1 = t1.Name.toLowerCase();\r\n      const name2 = t2.Name.toLowerCase();\r\n      if (name1 > name2) { return 1; }\r\n      if (name1 < name2) { return -1; }\r\n      return 0;\r\n    });\r\n  }\r\n  ConvertEntityToModel(obj: cEntitySubPartnerItem): ModelEntitySubPartner {\r\n    var tmpObj = new ModelEntitySubPartner();\r\n    tmpObj.Id = obj.Id;\r\n    tmpObj.Name = obj.Name;\r\n    tmpObj.Phone = obj.Phone;\r\n    tmpObj.PartnerIds = obj.Partners.map(x => x.Id);\r\n    tmpObj.TrainingCenterIds = obj.TrainingCenters.map(x => x.Id);\r\n    return tmpObj;\r\n  }\r\n  //region Assign Sub Partner Account\r\n  LoadSubPartnersMemebers() {\r\n    this.BLServiceEntityManagement.getEntitySubPartnerGetByid(this.modelObj.Id).subscribe({\r\n      next: response => this.modelObjSubPartner = response\r\n    });\r\n  }\r\n  SavePartnersMemebers(UserId: string) {\r\n    if (this.modelObj == null)\r\n      return;\r\n    \r\n    this.BLServiceEntityManagement.memberAddEntitySubPartner(this.modelObjSubPartner.Id, UserId).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.msgSavedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n        this.LoadSubPartnersMemebers();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  Remove(UserId: string) {\r\n    if (!confirm(this.msgsetRemove))\r\n      return;\r\n    this.BLServiceEntityManagement.memberRemoveEntitySubPartner(this.modelObjSubPartner.Id, UserId).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.msgSavedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n        this.LoadSubPartnersMemebers();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  OnSelectedPartner(UserId: string): void {\r\n    this.SavePartnersMemebers(UserId);\r\n  }\r\n  //Endregion Assign Sub Partner Account\r\n  /////////////////////////////\r\n  //region Assign Partner Entity\r\n  RemovePartnerEntity(PartnerId: string) {\r\n    if (!confirm(this.msgsetRemove))\r\n      return;\r\n    this.BLServiceEntityManagement.RemovePartnerEntityToEntitySubPartner(PartnerId, this.modelObjSubPartner.Id).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.msgSavedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.LoadSubPartnersEntity();\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  OnSelectedPartnerEntity(UserId: string): void {\r\n    this.SavePartnersEntity(UserId);\r\n  }\r\n  SavePartnersEntity(PartnerId: string) {\r\n    if (this.modelObj == null)\r\n      return;\r\n    \r\n    this.BLServiceEntityManagement.AddPartnerEntityToEntitySubPartner(PartnerId, this.modelObjSubPartner.Id).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.msgSavedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.LoadSubPartnersEntity();\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  \r\n  LoadSubPartnersEntity() {\r\n    this.BLServiceEntityManagement.getEntitySubPartnerGetByid(this.modelObj.Id).subscribe({\r\n      next: response => {\r\n        this.modelObjSubPartner = response;\r\n        this.ReconstructeTrainingCenterList();\r\n      }\r\n    });\r\n  }\r\n  //Endregion Assign Partner Entity\r\n  //region TrainingCenters\r\n  SaveTrainingCenterEntity(TrainingCenterId: string) {\r\n    if (this.modelObj == null)\r\n      return;\r\n    \r\n    this.BLServiceEntityManagement.AddEntityTrainingCenterToSubPartner(TrainingCenterId,this.modelObjSubPartner.Id ).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.msgSavedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.LoadSubPartnersEntity();\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n\r\n  RemoveTrainingCenterEntity(TrainingCenterId: string) {\r\n    if (!confirm(this.msgsetRemove))\r\n      return;\r\n    this.BLServiceEntityManagement.RemoveEntityTrainingCenterToSubPartner(TrainingCenterId,this.modelObjSubPartner.Id).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.msgSavedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.LoadSubPartnersEntity();\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  AddAllPartnerTrainingCenter(PartnerId: string) {\r\n    if (!confirm(this.msgsetAddAll))\r\n      return;\r\n    this.BLServiceEntityManagement.AddEntityTrainingCenterToSubPartnerByPartnerID(PartnerId,this.modelObjSubPartner.Id).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.msgSavedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.LoadSubPartnersEntity();\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  RemoveAllPartnerTrainingCenter(PartnerId: string) {\r\n    if (!confirm(this.msgsetRemoveAll))\r\n      return;\r\n    this.BLServiceEntityManagement.RemoveEntityTrainingCenterToSubPartnerByPartnerID(PartnerId,this.modelObjSubPartner.Id).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.msgSavedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.LoadSubPartnersEntity();\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  OnSelectedTrainingCenter(Id:string)\r\n  {\r\n    \r\n    this.SaveTrainingCenterEntity(Id);\r\n  }\r\n  //EndRegion training Centers\r\n  filterSubPartnerAccount(obj:cUserProfileItem[]){;\r\n    if(obj.length > 0)\r\n    return obj.filter(x=>x.Type == UserType.SubPartner.toString());\r\n  }\r\n}\r\n","<section class=\"my-5\">\r\n  <div class=\"container\">\r\n    <div class='row'>\r\n      <h4 class=\"mb-4\">{{'GenericSubPartner' | translate }}</h4>\r\n    </div>\r\n    <div class='row'>\r\n      <div class=\"col-sm-6 md-form\">\r\n        <mat-form-field class=\"example-full-width\">\r\n          <mat-label>{{'SubPartnerSearch' | translate }}</mat-label>\r\n          <input type=\"text\" placeholder=\"{{'SubPartnerType' | translate }}\" matInput [(ngModel)]=\"filtertxt\">\r\n        </mat-form-field>\r\n        <input type=\"submit\" value=\"{{'GenericSearch' | translate }}\" class=\"btn color-bg-02 white-text\"\r\n          (click)=\"filterbtn()\">\r\n      </div>\r\n      <div class=\"col-sm-6 md-form  pull-right\">\r\n        <input type=\"button\" class=\" pull-right btn color-bg-01 white-text\" value=\"{{'GenericCreateNew' | translate }}\"\r\n          (click)=\"createBtn(content)\">\r\n        <button type=\"button\" (click)=\"popup = true\" class=\" pull-right btn color-bg-03 white-text\">My Partners</button>\r\n        <div class=\"overlay\" *ngIf=\"popup\">\r\n          <div class=\"popup\">\r\n            <h4>My Partner List</h4>\r\n            <a class=\"close\" (click)=\"popup = false\">&times;</a>\r\n            <hr class=\"style-seven\">\r\n            <div class=\"content\">\r\n              <ol class=\"mypartner\">\r\n                <li *ngFor=\"let item of lstMyPartners\">{{item.Name}}</li>\r\n              </ol>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-12\">\r\n      <div class='table-responsive'>\r\n        <table class='table' *ngIf='page.content && page.content.length'>\r\n          <thead>\r\n            <tr>\r\n              <th>{{'GenericName' | translate }}</th>\r\n              <th>{{'RequestPhone' | translate }}</th>\r\n              <th>{{'PartnerManageAccount' | translate }}</th>\r\n              <th>{{'GenericAction' | translate }}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor='let obj of page.content'>\r\n              <td>{{ obj.Name}}</td>\r\n              <td>{{ obj.Phone}}</td>\r\n              <td>\r\n                <span *ngFor=\"let item of filterSubPartnerAccount(obj.MemberSubPartners)\">{{item.Name}}, </span>\r\n              </td>\r\n              <td>\r\n                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-primary\" value=\"{{'GenericEdit' | translate }}\"\r\n                  (click)=\"openBackDropCustomClass(content,obj)\">\r\n                <input *ngIf=\"obj.IsActive  && (IsAdmin || IsPartner)\" type=\"button\" class=\"btn btn-info\"\r\n                  value=\"{{'GenericPartnerEntity' | translate }}\"\r\n                  (click)=\"openBackDropCustomClass(contentAssignEntity,obj)\">\r\n                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-warning\"\r\n                  value=\"{{'SubPartnerAccount' | translate }}\" (click)=\"openBackDropCustomClass(contentAssign,obj)\">\r\n                <input *ngIf=\"!obj.IsActive\" type=\"button\" class=\"btn btn-success\"\r\n                  value=\"{{'GenericActivate' | translate }}\" (click)=\"setActivate(obj.Id)\">\r\n                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-danger\"\r\n                  value=\"{{'GenericDeactivate' | translate }}\" (click)=\"setDeactivate(obj.Id)\">\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <app-custom-pagination [page]=\"page\" (nextPageEvent)=\"getNextPage()\" (previousPageEvent)=\"getPreviousPage()\"\r\n        (loadPageCurrentEvent)=\"getloadPageCurrent()\">\r\n      </app-custom-pagination>\r\n    </div>\r\n  </div>\r\n  <div>\r\n    <ng-template role=\"dialog\" #content let-modal class=\"modal fade\">\r\n      <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header color-bg-01 white-text text-center\">\r\n            <h6 class=\"modal-title\">\r\n              {{(modelIsCreate ? 'GenericCreate'   : 'GenericEditing') | translate}} :\r\n              {{modelIsCreate ? (\"GenericNew\" | translate) : modelNameEdited}}\r\n            </h6>\r\n          </div>\r\n          <div class=\"modal-body pt-0\">\r\n            <form novalidate (ngSubmit)=\"modelSaveBtn(modelForm)\" #modelForm=\"ngForm\">\r\n              <div class=\"form-group \">\r\n                <mat-form-field class=\"example-full-width\">\r\n                  <mat-label>{{'SubPartnerName' | translate }}</mat-label>\r\n                  <input matInput id=\"modelNameId\" type=\"text\" placeholder=\"{{'GenericRequiredName' | translate }}\"\r\n                    required [(ngModel)]=\"modelObj.Name\" #modelNameVar=\"ngModel\" name=\"modelName\"\r\n                    [ngClass]=\"{'is-invalid': (modelNameVar.touched || modelNameVar.dirty) && !modelNameVar.valid }\" />\r\n                  <mat-error *ngIf=\"modelNameVar.errors?.required\">{{'SubPartnerNameError' | translate }}</mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"form-group \">\r\n                <mat-form-field class=\"example-full-width\">\r\n                  <mat-label>{{'RequestPhone' | translate }}</mat-label>\r\n                  <input matInput id=\"modelPhoneId\" type=\"number\" placeholder=\"{{'RequestPhoneSelect' | translate }}\"\r\n                    required [(ngModel)]=\"modelObj.Phone\" #modelPhoneVar=\"ngModel\" name=\"modelPhone\"\r\n                    [ngClass]=\"{'is-invalid': (modelPhoneVar.touched || modelPhoneVar.dirty) && !modelPhoneVar.valid }\" />\r\n                  <mat-error *ngIf=\"modelPhoneVar.errors?.required\">{{'RequestPhoneError' | translate }}</mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"form-group pull-right md-form\">\r\n                <button class=\"btn color-bg-01 btn-sm white-text btnSave\" type=\"submit\"\r\n                  [disabled]=\"!modelForm.valid\">{{'GenericSave' | translate }}</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n\r\n            <button type=\"button\" class=\"btn color-bg-02 btn-sm white-text\"\r\n              (click)=\"modal.close('Close click')\">{{'GenericClose' | translate }}</button>\r\n          </div>\r\n\r\n\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n  </div>\r\n  <div>\r\n    <ng-template role=\"dialog\" #contentAssignEntity let-modal class=\"modal fade\">\r\n      <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n        <div class=\"modal-content\" style=\"min-height: 300px;\">\r\n          <div class=\"modal-header color-bg-01 white-text text-center\">\r\n\r\n            <h6 class=\"modal-title\">\r\n              {{(modelIsCreate ? 'GenericCreate'   : 'GenericEditing') | translate}} :\r\n              {{modelIsCreate ? (\"GenericNew\" | translate) : modelNameEdited}}\r\n            </h6>\r\n          </div>\r\n          <div class=\"modal-body pt-0\">\r\n            <mat-tab-group animationDuration=\"1000ms\">\r\n              <mat-tab label=\"{{'GenericPartnerEntity' | translate }}\" style=\"min-height: 150px;\" *ngIf=\"modelObj.Id\">\r\n                <cust-search-partner-entity (OnSelectedPartner)=\"OnSelectedPartnerEntity($event)\" *ngIf=\"IsAdmin\">\r\n                </cust-search-partner-entity>\r\n                <div *ngIf=\"modelObj.Id\">\r\n                  <table class='table' *ngIf='modelObjSubPartner.Partners && modelObjSubPartner.Partners.length'>\r\n                    <tbody>\r\n                      <tr *ngFor='let obj of modelObjSubPartner.Partners'>\r\n                        <td>{{ obj.Name }}\r\n                        </td>\r\n                        <td>\r\n                          <input *ngIf=\"obj.IsActive && IsAdmin\" type=\"button\" class=\"btn btn-danger\" \r\n                            value=\"{{'GenericRemove' | translate }}\" (click)=\"RemovePartnerEntity(obj.Id)\">\r\n                        </td>\r\n                        <td>\r\n                          <button mat-raised-button *ngIf=\"obj.IsActive\" class=\"btn btn-success\"\r\n                            matTooltip=\"{{'SubPartnerAddTrainingCenter' | translate }}\"\r\n                            (click)=\"AddAllPartnerTrainingCenter(obj.Id)\"><i class=\"fas fa-plus\"></i></button>\r\n                          <button mat-raised-button *ngIf=\"obj.IsActive\" class=\"btn btn-danger\"\r\n                            value=\"{{'SubPartnerRemoveTrainingCenter' | translate }}\"\r\n                            (click)=\"RemoveAllPartnerTrainingCenter(obj.Id)\"><i class=\"fas fa-minus\"></i></button>\r\n\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </mat-tab>\r\n              <mat-tab label=\"{{'TrainingCentersEntity' | translate }}\" *ngIf=\"modelObj.Id\">\r\n                <div class=\"alert alert-danger\" *ngIf=\"!this.modelObjSubPartner.Partners?.length\">\r\n                  {{'SubPartnerCenterError' | translate }}</div>\r\n                <div *ngIf=\"this.modelObjSubPartner.Partners?.length\">\r\n                  <cust-auto-compelet-list-generic (OnSelectedItem)=\"OnSelectedTrainingCenter($event)\"\r\n                    [lstTrainingCenters]='TrainingCenterList'></cust-auto-compelet-list-generic>\r\n                </div>\r\n                <div *ngIf=\"modelObj.Id && this.modelObjSubPartner.Partners?.length\">\r\n                  <table class='table'\r\n                    *ngIf='modelObjSubPartner.TrainingCenters && modelObjSubPartner.TrainingCenters.length'>\r\n                    <tbody>\r\n                      <tr *ngFor='let obj of modelObjSubPartner.TrainingCenters'>\r\n                        <td>{{ obj.Name }}\r\n                        </td>\r\n                        <td>\r\n                          <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-danger\"\r\n                            value=\"{{'GenericRemove' | translate }}\" (click)=\"RemoveTrainingCenterEntity(obj.Id)\">\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </mat-tab>\r\n            </mat-tab-group>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n\r\n            <button type=\"button\" class=\"btn color-bg-02 btn-sm white-text\"\r\n              (click)=\"modal.close('Close click')\">{{'GenericClose' | translate }}</button>\r\n          </div>\r\n\r\n\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n  </div>\r\n  <div>\r\n    <ng-template role=\"dialog\" #contentAssign let-modal class=\"modal fade\">\r\n      <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header color-bg-01 white-text text-center\">\r\n\r\n            <h6 class=\"modal-title\">\r\n              {{'SubPartnerAddSubAccount' | translate }}: {{modelNameEdited}}</h6>\r\n          </div>\r\n          <div class=\"modal-body pt-0\">\r\n\r\n\r\n            <div class=\"form-group \">\r\n              <cust-search-sub-partner (OnSelectedPartner)='OnSelectedPartner($event)'></cust-search-sub-partner>\r\n            </div>\r\n            <div>\r\n              <table class='table'\r\n                *ngIf='modelObjSubPartner.MemberSubPartners && modelObjSubPartner.MemberSubPartners.length'>\r\n                <thead>\r\n                  <tr>\r\n                    <th>{{'GenericName' | translate }}</th>\r\n                    <th>{{'GenericAction' | translate }}</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr *ngFor='let obj of filterSubPartnerAccount(modelObjSubPartner.MemberSubPartners)'>\r\n                    <td>{{ obj.Name }}\r\n                    </td>\r\n                    <td>\r\n                      <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-danger\"\r\n                        value=\"{{'GenericRemove' | translate }}\" (click)=\"Remove(obj.Id)\">\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn color-bg-02 btn-sm white-text\"\r\n              (click)=\"modal.close('Close click')\">{{'GenericClose' | translate }}</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n\r\n  </div>\r\n</section>","import { Component, OnInit } from '@angular/core';\r\nimport { cEntityTrainingCenterList, cEntityTrainingCenterItem } from 'src/app/interface/Response/EntityTrainingCenter.class';\r\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\r\nimport { Page } from 'src/app/common/pagination/page';\r\nimport { ServiceEntityManagement } from 'src/app/services/entitymanagement.service';\r\nimport { CustomPaginationService } from 'src/app/common/pagination/services/custom-pagination.service';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgForm } from '@angular/forms';\r\nimport { cEntityPartnerItem } from 'src/app/interface/Response/EntityPartner.class';\r\nimport { ModelEntityTrainingCenter } from 'src/app/interface/Model/ModelEntityTrainingCenter.class';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { cTrainingTypeItem } from 'src/app/interface/Response/TrainingType.class';\r\nimport { Constants } from 'src/app/constants';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-training-center',\r\n  templateUrl: './training-center.component.html',\r\n  styleUrls: ['./training-center.component.scss']\r\n})\r\nexport class TrainingCenterComponent extends baseComponent implements OnInit {\r\n\r\n  pageTitle: string = 'Training Center';\r\n  message: ShowMessage = new ShowMessage();\r\n  modelNameEdited: string = '';\r\n  modelObj: ModelEntityTrainingCenter;\r\n  modelIsCreate: boolean = true;\r\n\r\n  ///////\r\n  partnerObj: cEntityPartnerItem;\r\n  PartnerId: string;\r\n  lstEntityTrainingCenterfilter: cEntityTrainingCenterItem[];\r\n  page: Page<cEntityTrainingCenterItem> = new Page();\r\n\r\n  private _filtertxt: string = '';\r\n  public get filtertxt(): string {\r\n    return this._filtertxt;\r\n  }\r\n  public set filtertxt(value: string) {\r\n    this._filtertxt = value;\r\n    this.lstEntityTrainingCenterfilter = this.filtertxt ? this.loadDataFilter() : this.partnerObj.TrainingCenters;\r\n  }\r\n\r\n  constructor(private BLServiceEntityManagement: ServiceEntityManagement,\r\n    private paginationService: CustomPaginationService,\r\n    BLServiceShowMessage: ServiceShowMessage,\r\n    BLServiceLoginUser: ServiceLoginUser,BLTranslate: TranslateService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private modalService: NgbModal) { \r\n      super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\r\n    }\r\n\r\n\r\n  ngOnInit() {\r\n    const param = this.route.snapshot.paramMap.get('id');\r\n    if (param) {\r\n      this.PartnerId = param;\r\n      this.page.pageable.pageSize = Constants.PAGE_SIZE;\r\n      this.loadData();\r\n    }\r\n\r\n\r\n  }\r\n  private loadData(): void {\r\n    this.BLServiceEntityManagement.getEntityPartnerGetByid(this.PartnerId).subscribe({\r\n      next: data => {\r\n        this.partnerObj = data;\r\n        this.lstEntityTrainingCenterfilter = this.loadDataFilter();;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  public getNextPage(): void {\r\n    this.page.pageable = this.paginationService.getNextPage(this.page);\r\n  }\r\n\r\n  public getPreviousPage(): void {\r\n    this.page.pageable = this.paginationService.getPreviousPage(this.page);\r\n  }\r\n  public getloadPageCurrent(): void {\r\n  }\r\n  setActivate(Id: string): void {\r\n    if (!confirm(this.msgsetActivate))\r\n      return;\r\n    this.BLServiceEntityManagement.setEntityTrainingCenterActivate(this.PartnerId,Id).subscribe({\r\n      next: response => {\r\n        \r\n          this.message.Success(this.msgActivatedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  setDeactivate(Id: string): void {\r\n    if (!confirm(this.msgsetDeactivate))\r\n      return;\r\n\r\n    this.BLServiceEntityManagement.setEntityTrainingCenterDeactivate(this.PartnerId,Id).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.msgDeactivatedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  loadDataFilter() {\r\n    var lst = this.partnerObj.TrainingCenters.filter((item: cTrainingTypeItem) =>\r\n      item.Name.toLocaleLowerCase().indexOf(this.filtertxt.toLocaleLowerCase()) !== -1);\r\n\r\n    this.page.totalElements = lst.length;\r\n    this.page.content = lst;\r\n\r\n    return lst;\r\n  }\r\n  createBtn(content): void {\r\n    this.modelObj = new ModelEntityTrainingCenter();\r\n    this.modelIsCreate = true;\r\n    this.modelNameEdited = \"\";\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  modelSaveBtn(modelForm: NgForm): void {\r\n    if (!modelForm.valid)\r\n      return;\r\n\r\n    this.modelObj.PartnerId = this.PartnerId;\r\n\r\n    if (this.modelIsCreate) {\r\n      this.BLServiceEntityManagement.createEntityTrainingCenter(this.modelObj).subscribe({\r\n        next: response => {\r\n          this.message.Success(this.msgSavedSuccessfully);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.modalService.dismissAll();\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n    else {\r\n      this.BLServiceEntityManagement.updateEntityTrainingCenter(this.modelObj).subscribe({\r\n        next: response => {\r\n\r\n          this.message.Success(this.msgSavedSuccessfully);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.modalService.dismissAll();\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n  }\r\n  openBackDropCustomClass(content, obj: cEntityTrainingCenterItem) {\r\n    var tmpObj = new ModelEntityTrainingCenter();\r\n    tmpObj.Id = obj.Id;\r\n    tmpObj.Name = obj.Name;\r\n    tmpObj.Phone = obj.Phone;\r\n    this.modelObj = tmpObj;\r\n    this.modelIsCreate = false;\r\n    this.modelNameEdited = obj.Name;\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  onBack(): void {\r\n    this.router.navigate(['/EntityManagement/Partner']);\r\n  }\r\n}\r\n","<section class=\"my-5\">\r\n  <div class=\"container\">\r\n    <div class='row'>\r\n        <h4 class=\"mb-4\">{{partnerObj.Name }} {{'GenericPartner' | translate }} -  {{'GenericTrainingCenter' | translate }}</h4>\r\n    </div>\r\n    <div class='row'>\r\n      <div class=\"col-sm-6 md-form\">\r\n        <mat-form-field class=\"example-full-width\">\r\n          <mat-label>{{'TrainingCenterSearch' | translate }}</mat-label>\r\n          <input type=\"text\" placeholder=\"Type Training Center Name\" matInput [(ngModel)]=\"filtertxt\">\r\n        </mat-form-field>\r\n        <input type=\"submit\" value=\"{{'GenericSearch' | translate }}\"   class=\"btn color-bg-02 white-text\">\r\n      </div>\r\n      <div class=\"col-sm-6 md-form pull-right\">\r\n        <input type=\"button\" class=\"pull-right btn color-bg-01 white-text\" value=\"{{'GenericCreateNew' | translate }}\"\r\n          (click)=\"createBtn(content)\">\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-12\">\r\n      <div class='table-responsive'>\r\n        <table class='table' *ngIf='lstEntityTrainingCenterfilter && lstEntityTrainingCenterfilter.length'>\r\n          <thead>\r\n            <tr>\r\n              <th>{{'GenericName' | translate }}</th>\r\n              <th>{{'RequestPhone' | translate }}</th>\r\n              <th>{{'GenericAction' | translate }}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr\r\n              *ngFor='let obj of lstEntityTrainingCenterfilter| slice: (page.pageable.pageCurrent-1) * page.pageable.pageSize : (page.pageable.pageCurrent-1) * page.pageable.pageSize + page.pageable.pageSize'>\r\n              <td>{{ obj.Name}}</td>\r\n              <td>{{ obj.Phone}}</td>\r\n              <td>\r\n                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-primary\" value=\"{{'GenericEdit' | translate }}\"\r\n                  (click)=\"openBackDropCustomClass(content,obj)\">\r\n                <input *ngIf=\"!obj.IsActive\" type=\"button\" class=\"btn btn-success\" value=\"{{'GenericActivate' | translate }}\"\r\n                  (click)=\"setActivate(obj.Id)\">\r\n                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-danger\" value=\"{{'GenericDeactivate' | translate }}\"\r\n                  (click)=\"setDeactivate(obj.Id)\">\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <app-custom-pagination [page]=\"page\" (nextPageEvent)=\"getNextPage()\" (previousPageEvent)=\"getPreviousPage()\"\r\n      (loadPageCurrentEvent)=\"getloadPageCurrent()\">\r\n    </app-custom-pagination>\r\n    </div>\r\n  </div>\r\n  <div>\r\n    <div class='card-footer'>\r\n      <button class='btn btn-outline-secondary' (click)='onBack()' style='width:80px'>\r\n        <i class='fa fa-chevron-left'></i> {{'GenericBack' | translate }}\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <div>\r\n    <ng-template role=\"dialog\" #content let-modal class=\"modal fade\">\r\n      <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n          <div class=\"modal-content\" style=\"min-height: 300px;\">\r\n            <div class=\"modal-header color-bg-01 white-text text-center\">\r\n          <h6 class=\"modal-title\">\r\n            {{(modelIsCreate ? 'GenericCreate'   : 'GenericEditing') | translate}} : {{modelIsCreate ? (\"GenericNew\" | translate) : modelNameEdited}}\r\n          </h6>\r\n        </div>\r\n        <div class=\"modal-body pt-0\">\r\n          <form novalidate (ngSubmit)=\"modelSaveBtn(modelForm)\" #modelForm=\"ngForm\">\r\n            <div class=\"form-group \">\r\n              <mat-form-field class=\"example-full-width\">\r\n                <mat-label>{{'GenericTrainingCenterName' | translate }} </mat-label>\r\n                <input matInput id=\"modelNameId\" type=\"text\" placeholder=\"{{'GenericRequiredName' | translate }}\" required\r\n                  [(ngModel)]=\"modelObj.Name\" #modelNameVar=\"ngModel\" name=\"modelName\"\r\n                  [ngClass]=\"{'is-invalid': (modelNameVar.touched || modelNameVar.dirty) && !modelNameVar.valid }\" />\r\n                <mat-error *ngIf=\"modelNameVar.errors?.required\">{{'TrainingCenterError1' | translate }}</mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n            <div class=\"form-group \">\r\n              <mat-form-field class=\"example-full-width\">\r\n                <mat-label>{{'RequestPhone' | translate }}</mat-label>\r\n                <input matInput id=\"modelPhoneId\" type=\"number\" placeholder=\"{{'RequestPhoneSelect' | translate }}\" required\r\n                  [(ngModel)]=\"modelObj.Phone\" #modelPhoneVar=\"ngModel\" name=\"modelPhone\"\r\n                  [ngClass]=\"{'is-invalid': (modelPhoneVar.touched || modelPhoneVar.dirty) && !modelPhoneVar.valid }\" />\r\n                <mat-error *ngIf=\"modelPhoneVar.errors?.required\">{{'RequestPhoneError' | translate }}</mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n            <div class=\"form-group pull-right md-form\">\r\n              <button class=\"btn color-bg-01 btn-sm white-text btnSave\" type=\"submit\"\r\n                \r\n                [disabled]=\"!modelForm.valid\">{{'GenericSave' | translate }}</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n\r\n          <button type=\"button\" class=\"btn color-bg-02 btn-sm white-text\"\r\n            (click)=\"modal.close('Close click')\">{{'GenericClose' | translate }}</button>\r\n        </div>\r\n\r\n\r\n      </div>\r\n  </div>\r\n  </ng-template>\r\n  </div>\r\n</section>","export enum CertificateType{\r\n    Trainer = 1,\r\n    Trainee = 2\r\n}","export enum ConfigForm {\r\n    Trainee = 1,\r\n    RequestRegister = 2\r\n}","export enum EnumContentData {\r\n    About = 1,\r\n    Terms = 2,\r\n    Policy = 3,\r\n    Info = 4\r\n}","export enum LanguageType {\r\n    English = 1,\r\n    Arabic = 2,\r\n    French = 3\r\n}","export enum TranslateType {\r\n    City = 1,\r\n    Area = 2,\r\n    TrainingType = 3,\r\n    TrainingCategory = 4,\r\n    Courses = 5\r\n}","export enum UserType {\r\n    Admin = 1,\r\n    Partner = 2,\r\n    SubPartner = 3,\r\n    Trainer = 4,\r\n    Trainee = 5\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { ServiceExam } from 'src/app/services/exam.service';\r\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\r\nimport { cQuestionItemTemplate, cAnswerItem } from 'src/app/interface/Model/ModelQuestions.class';\r\nimport { Constants } from 'src/app/constants';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-take-exam',\r\n  templateUrl: './take-exam.component.html',\r\n  styleUrls: ['./take-exam.component.css']\r\n})\r\nexport class TakeExamComponent extends baseComponent implements OnInit {\r\n\r\n  message: ShowMessage = new ShowMessage();\r\n  pageTitle: string = 'Exam';\r\n  lstQuestion: cQuestionItemTemplate[];\r\n  ExamId: string;\r\n  config: any;\r\n  modelId: string;\r\n  ExamSuccess:string;\r\n  ExamFailed:string;\r\n  notFoundlist:boolean=false\r\n  constructor(private BLServiceExam: ServiceExam,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    BLServiceShowMessage: ServiceShowMessage,\r\n    BLServiceLoginUser: ServiceLoginUser,BLTranslate: TranslateService) {\r\n      super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\r\n     }\r\n\r\n  ngOnInit() {\r\n    this.BLTranslate.get(\"ExamSuccess\").subscribe(res => { this.ExamSuccess = res; });\r\n    this.BLTranslate.get(\"ExamFailed\").subscribe(res => { this.ExamFailed = res; });\r\n\r\n    const param = this.route.snapshot.paramMap.get('Id');\r\n    if (param) {\r\n      this.modelId = param;\r\n      this.loadData();\r\n    }\r\n  }\r\n  private loadData(): void {\r\n    this.BLServiceExam.takeExam(this.modelId).subscribe({\r\n      next: examModel => {\r\n        \r\n        this.lstQuestion = examModel.questions;\r\n        this.ExamId = examModel.ExamId;\r\n        this.config = {};\r\n        this.config.leftTime = Constants.EXAM_TIMER * 60;\r\n        this.config.format = 'm:s';\r\n        this.notFoundlist=false;\r\n      },\r\n\r\n      error: err => {  \r\n        this.BLTranslate.get(err).subscribe(res => {this.notFoundlist=true; this.message.Error(res); });\r\n        \r\n      }\r\n    });\r\n  }\r\n  onChange(e, questionItem: cQuestionItemTemplate, answer: cAnswerItem) {\r\n    if (e.target.value == \"on\")\r\n      questionItem.SelectedAnswer = answer._id;\r\n  }\r\n\r\n  submitExam() {\r\n    this.BLServiceExam.SubmitExam(this.ExamId, this.lstQuestion).subscribe({\r\n      next: isSuccess => {\r\n        if (isSuccess) {\r\n          this.message.Success(this.ExamSuccess);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n        }\r\n        else{\r\n          this.message.Error(this.ExamFailed);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n        }\r\n        this.router.navigate(['/MyTraining']);\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n\r\n  }\r\n\r\n  handleEvent(event) {\r\n    //TODO enhance the way to check timer is ended\r\n    if (event.text == \"0:0\")\r\n      this.submitExam();\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n","<section class=\"my-5\">\r\n    <div class=\"container\">\r\n      <div class='row'>\r\n        <div class=\"col-md-6\">\r\n          <h4 class=\"mb-4\">{{'ExampageTitle' | translate }}</h4>\r\n        </div>\r\n        <div class=\"col-md-6 \" *ngIf=\"lstQuestion?.length\">\r\n          <countdown colspan=\"pull-right\" #cd [config]=\"config\" (event)=\"handleEvent($event)\"></countdown>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-12\">\r\n        <div class='table-responsive '>\r\n          <table class='table' *ngIf='lstQuestion && lstQuestion?.length'>\r\n            <tbody>\r\n              <tr *ngFor='let obj of lstQuestion;index as i'>\r\n                <td>\r\n                    <h3> Q{{i+1}}- {{ obj.Name}}</h3>\r\n              <h5 *ngFor='let ans of obj.Answer'>\r\n                   <input type=\"radio\" name=\"{{obj._id}}\" (change)=\"onChange($event,obj,ans)\" />\r\n                   {{ans.Name}}\r\n              </h5>\r\n                </td>\r\n              \r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n          \r\n        </div>\r\n        <div class=\"col-md-12\" *ngIf=\"lstQuestion?.length\">\r\n          <button (click)=\"submitExam()\"  class=\"btn pull-right color-bg-02 btn-sm white-text\">{{'GenericSubmit' | translate }}</button>\r\n        </div>\r\n        <!-- <div class=\"\" *ngIf=\"!lstQuestion  || lstQuestion?.length == 0\"> -->\r\n          <div class=\"\" *ngIf=\"notFoundlist\">\r\n          <div class=\"text-center bg-red noresult\">\r\n            <span class=\"font-italic\">{{'ExamNotAllowed' | translate }} </span><span>&#9785;</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n","import { Component, OnInit } from '@angular/core';\nimport { cExamTemplateList, cExamTemplateItem } from 'src/app/interface/Response/ExamTemplate.class';\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\nimport { Page } from 'src/app/common/pagination/page';\nimport { ServiceDataManagement } from 'src/app/services/datamanagement.service';\nimport { CustomPaginationService } from 'src/app/common/pagination/services/custom-pagination.service';\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\nimport { Router } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { NgForm } from '@angular/forms';\nimport { ServiceExamTemplate } from 'src/app/services/exam-template.service';\nimport { ModelExamTempate } from 'src/app/interface/Model/ModelExamTemplate.class';\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-templates',\n  templateUrl: './templates.component.html',\n  styleUrls: ['./templates.component.css']\n})\nexport class TemplatesComponent extends baseComponent implements OnInit {\n\n  pageTitle: string = 'Exam Template';\n  lstExamTemplate: cExamTemplateList;\n  message: ShowMessage = new ShowMessage();\n  filtertxt: string = '';\n  modelName: string = '';\n  modelId: string = '';\n  modelNameEdited: string = '';\n  modelObj: ModelExamTempate = new ModelExamTempate();\n  msgExamTemplate100:string;\n\n  page: Page<cExamTemplateItem> = new Page();\n\n  constructor(private BLServiceExamTemplate: ServiceExamTemplate,\n    private paginationService: CustomPaginationService,\n    BLServiceShowMessage: ServiceShowMessage,\n    BLServiceLoginUser: ServiceLoginUser,BLTranslate: TranslateService,\n    private router: Router,\n    private modalService: NgbModal) { super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);}\n\n  ngOnInit() {\n    this.BLTranslate.get(\"msgExamTemplate100\").subscribe(res => { this.msgExamTemplate100 = res; });\n    this.loadData();\n  }\n  private loadData(): void {\n    this.BLServiceExamTemplate.getExamTemplateAll(this.page.pageable.pageCurrent, this.filtertxt).subscribe({\n      next: lst => {\n        this.lstExamTemplate = lst;\n        this.page.pageable.pageSize = lst.pageSize;\n        this.page.totalElements = lst.totalCount;\n        this.page.content = lst.lstResult;\n      },\n      error: err => this.message.Error(err)\n    });\n  }\n  public getNextPage(): void {\n    this.page.pageable = this.paginationService.getNextPage(this.page);\n    this.loadData();\n  }\n\n  public getPreviousPage(): void {\n    this.page.pageable = this.paginationService.getPreviousPage(this.page);\n    this.loadData();\n  }\n  public getloadPageCurrent(): void {\n    this.loadData();\n  }\n  setActivate(Id: string): void {\n    if (!confirm(this.msgsetActivate))\n      return;\n\n    this.BLServiceExamTemplate.setExamTemplateActivate(Id).subscribe({\n      next: response => {\n\n        this.message.Success(this.msgActivatedSuccessfully);\n        this.BLServiceShowMessage.sendMessage(this.message);\n        this.loadData();\n      },\n      error: err => this.message.Error(err)\n    });\n  }\n  setDeactivate(Id: string): void {\n    if (!confirm(this.msgsetDeactivate))\n      return;\n\n    this.BLServiceExamTemplate.setExamTemplateDeactivate(Id).subscribe({\n      next: response => {\n        this.message.Success(this.msgDeactivatedSuccessfully);\n        this.BLServiceShowMessage.sendMessage(this.message);\n        this.loadData();\n      },\n      error: err => this.message.Error(err)\n    });\n  }\n  filterbtn(): void {\n    this.page.pageable.pageCurrent = 1;\n    this.loadData();\n  }\n  createBtn(content): void {\n    this.modelId = \"-1\";\n    this.modelName = \"\";\n    this.modelNameEdited = \"\";\n    this.modelObj = new ModelExamTempate();\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\n  }\n  modelSaveBtn(modelForm: NgForm): void {\n    if (!modelForm.valid)\n      return;\n\n    var sum = this.modelObj.Easy + this.modelObj.Medium + this.modelObj.Hard\n    if (sum != 100) {\n      this.message.Error(this.msgExamTemplate100);\n      this.BLServiceShowMessage.sendMessage(this.message);\n      return;\n    }\n    \n    if (this.modelId == \"-1\") {\n      this.BLServiceExamTemplate.createExamTemplate(this.modelObj).subscribe({\n        next: response => {\n          this.message.Success(this.msgSavedSuccessfully);\n          this.BLServiceShowMessage.sendMessage(this.message);\n          this.loadData();\n          this.modalService.dismissAll();\n        },\n        error: err => this.message.Error(err)\n      });\n    }\n    else {\n      this.BLServiceExamTemplate.updateExamTemplate(this.modelObj).subscribe({\n        next: response => {\n          this.message.Success(this.msgSavedSuccessfully);\n          this.BLServiceShowMessage.sendMessage(this.message);\n          this.loadData();\n          this.modalService.dismissAll();\n        },\n        error: err => this.message.Error(err)\n      });\n    }\n  }\n  openBackDropCustomClass(content, obj: cExamTemplateItem) {\n    this.modelId = obj._id;\n    this.modelName = obj.Name;\n    this.modelNameEdited = obj.Name;\n\n    this.modelObj = new ModelExamTempate();\n    this.modelObj.Id = obj._id;\n    this.modelObj.Name = obj.Name;\n    this.modelObj.Easy = obj.Easy;\n    this.modelObj.Medium = obj.Medium;\n    this.modelObj.Hard = obj.Hard;\n\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\n  }\n  // Areas(Id: string) {\n  //   this.router.navigate(['/DataManagement/Area/' + Id]);\n  // }\n\n\n}\n","<section class=\"my-5\">\n    <div class=\"container\">\n        <div class='row'>\n            <h4 class=\"mb-4\">{{'ExamTemplateTitle' | translate }}</h4>\n        </div>\n        <div class='row'>\n            <div class=\"col-sm-6 md-form\">\n                <mat-form-field class=\"example-full-width\">\n                    <mat-label>{{'ExamSearch' | translate }}</mat-label>\n                    <input type=\"text\" placeholder=\"{{'ExamFilter' | translate }}\" matInput [(ngModel)]=\"filtertxt\">\n                </mat-form-field>\n                <input type=\"submit\" value=\"{{'GenericSearch' | translate }}\"  class=\"btn color-bg-02 white-text\" (click)=\"filterbtn()\">\n            </div>\n            <div class=\"col-sm-6 md-form pull-right\">\n                <input type=\"button\" class=\"pull-right btn color-bg-01 white-text\"\n                    value=\"{{'GenericCreateNew' | translate }}\" (click)=\"createBtn(content)\">\n            </div>\n        </div>\n        <div class=\"col-md-12\">\n            <div class='table-responsive'>\n                <table class='table' *ngIf='page.content && page.content.length'>\n                    <thead>\n                        <tr>\n                            <th>{{'GenericName' | translate }}</th>\n                            <th>{{'GenericAction' | translate }}</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor='let obj of page.content'>\n                            <td>{{ obj.Name}}</td>\n                            <td>\n                                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-primary\"\n                                    value=\"{{'GenericEdit' | translate }}\"\n                                    (click)=\"openBackDropCustomClass(content,obj)\">\n                                <input *ngIf=\"!obj.IsActive\" type=\"button\" class=\"btn btn-success\"\n                                    value=\"{{'GenericActivate' | translate }}\" (click)=\"setActivate(obj._id)\">\n                                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-danger\"\n                                    value=\"{{'GenericDeactivate' | translate }}\" (click)=\"setDeactivate(obj._id)\">\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n        <div>\n            <app-custom-pagination [page]=\"page\" (nextPageEvent)=\"getNextPage()\" (previousPageEvent)=\"getPreviousPage()\"\n                (loadPageCurrentEvent)=\"getloadPageCurrent()\">\n            </app-custom-pagination>\n        </div>\n    </div>\n    <div>\n        <ng-template role=\"dialog\" #content let-modal class=\"modal fade\">\n            <div class=\"modal-dialog modal-lg\" role=\"document\">\n                <div class=\"modal-content\">\n                    <div class=\"modal-header color-bg-01 white-text text-center\">\n\n                        <h6 class=\"modal-title\">\n                            {{(modelId == \"-1\" ? 'GenericCreate'   : 'GenericEditing') | translate}} : {{modelId == \"-1\" ? (\"GenericNew\" | translate) : modelNameEdited}}\n                            \n                        </h6>\n                    </div>\n                    <div class=\"modal-body pt-0\">\n\n                        <form novalidate (ngSubmit)=\"modelSaveBtn(modelForm)\" #modelForm=\"ngForm\">\n                            <div class=\"form-group \">\n                                <mat-form-field class=\"example-full-width\">\n                                    <mat-label>{{'GenericName' | translate }}</mat-label>\n                                    <input matInput id=\"modelNameId\" type=\"text\"\n                                        placeholder=\"{{'GenericRequiredName' | translate }}\" required\n                                        [(ngModel)]=\"modelObj.Name\" #modelNameVar=\"ngModel\" name=\"modelName\"\n                                        [ngClass]=\"{'is-invalid': (modelNameVar.touched || modelNameVar.dirty) && !modelNameVar.valid }\" />\n                                    <mat-error *ngIf=\"modelNameVar.errors?.required\">{{'GenericEnterName' | translate }}</mat-error>\n                                </mat-form-field>\n                            </div>\n                            <div class=\"form-group \">\n                                <mat-form-field class=\"example-full-width\">\n                                    <mat-label>{{'ExamEasyPercent' | translate }}</mat-label>\n                                    <input matInput id=\"modelEasyId\" type=\"number\" placeholder=\"{{'ExamEasyPercentSelect' | translate }}\"\n                                        required [(ngModel)]=\"modelObj.Easy\" #modelEasyVar=\"ngModel\" name=\"modelEasy\"\n                                        min=\"1\" max=\"100\"\n                                        [ngClass]=\"{'is-invalid': (modelEasyVar.touched || modelEasyVar.dirty) && !modelEasyVar.valid }\" />\n                                    <mat-error *ngIf=\"modelEasyVar.errors?.required\">{{'ExamEasyPercentError' | translate }}\n                                    </mat-error>\n                                </mat-form-field>\n                            </div>\n                            <div class=\"form-group \">\n                                <mat-form-field class=\"example-full-width\">\n                                    <mat-label>{{'ExamMediumPercent' | translate }}</mat-label>\n                                    <input matInput id=\"modelMediumId\" type=\"number\" placeholder=\"{{'ExamMediumPercentSelect' | translate }}\"\n                                        required [(ngModel)]=\"modelObj.Medium\" #modelMediumVar=\"ngModel\" name=\"modelMedium\"\n                                        min=\"1\" max=\"100\"\n                                        [ngClass]=\"{'is-invalid': (modelMediumVar.touched || modelMediumVar.dirty) && !modelMediumVar.valid }\" />\n                                    <mat-error *ngIf=\"modelMediumVar.errors?.required\">{{'ExamMediumPercentError' | translate }}\n                                    </mat-error>\n                                </mat-form-field>\n                            </div>\n                            <div class=\"form-group \">\n                                <mat-form-field class=\"example-full-width\">\n                                    <mat-label>{{'ExamHardPercent' | translate }}</mat-label>\n                                    <input matInput id=\"modelHardId\" type=\"number\" placeholder=\"{{'ExamHardPercentSelect' | translate }}\"\n                                        required [(ngModel)]=\"modelObj.Hard\" #modelHardVar=\"ngModel\" name=\"modelHard\"\n                                        min=\"1\" max=\"100\"\n                                        [ngClass]=\"{'is-invalid': (modelHardVar.touched || modelHardVar.dirty) && !modelHardVar.valid }\" />\n                                    <mat-error *ngIf=\"modelHardVar.errors?.required\">{{'ExamHardPercentError' | translate }}\n                                    </mat-error>\n                                </mat-form-field>\n                            </div>\n                            <div class=\"form-group pull-right md-form\">\n                                <button class=\"btn color-bg-01 btn-sm white-text btnSave\" type=\"submit\"\n                                    [disabled]=\"!modelForm.valid\">{{'GenericSave' | translate }}</button>\n                            </div>\n                        </form>\n                    </div>\n                    <div class=\"modal-footer\">\n\n                        <button type=\"button\" class=\"btn color-bg-02 btn-sm white-text\"\n                            (click)=\"modal.close('Close click')\">{{'GenericClose' | translate }}</button>\n                    </div>\n\n\n                </div>\n            </div>\n        </ng-template>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>about works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\nimport { ModelContentData } from 'src/app/interface/Model/ModelContentData.class';\nimport { ServiceMisc } from 'src/app/services/misc.service';\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\nimport { EnumContentData } from 'src/app/Enum/ContentData.enum';\n\n@Component({\n  selector: 'app-policy',\n  templateUrl: './policy.component.html',\n  styleUrls: ['./policy.component.css']\n})\nexport class PolicyComponent implements OnInit {\n\n  msgShow: ShowMessage = new ShowMessage();\n  modelData: ModelContentData = new ModelContentData();\n\n  constructor(private BLServiceMisc: ServiceMisc,\n    private BLServiceMessage: ServiceShowMessage) { \n\n  }\n\n  ngOnInit(): void {\n    this.BLServiceMisc.ContentDataOneGetByTypeId(EnumContentData.Policy).subscribe({\n      next: obj => {\n        this.modelData = obj;\n      },\n      error: err => this.msgShow.Error(err)\n    });\n  }\n\n}\n","<section class=\"my-5\">\n    <div class=\"container\">\n        <div class='row'>\n            <div class=\"editor\" [innerHTML]=\"modelData.Data\"></div>\n        </div>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\r\nimport { cQuestionList, cQuestionItem, cAnswerItem } from 'src/app/interface/Model/ModelQuestions.class';\r\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\r\nimport { ServiceQuestion } from 'src/app/services/Question.service';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { NgForm, FormGroup, FormBuilder, Validators, FormArray } from '@angular/forms';\r\nimport { ServiceDataManagement } from 'src/app/services/datamanagement.service';\r\nimport { cTrainingTypeItem } from 'src/app/interface/Response/TrainingType.class';\r\nimport { ITrainingCategoryItem } from 'src/app/interface/Response/TrainingCategory.interface';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ModelFilterTraining } from 'src/app/interface/Model/ModelFilterTraining.class';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.css']\r\n})\r\nexport class CreateComponent extends baseComponent implements OnInit {\r\n\r\n  pageTitle: string = 'Questions';\r\n  lstQuestion: cQuestionList;\r\n  message: ShowMessage = new ShowMessage();\r\n  filtertxt: string = '';\r\n  modelObj: cQuestionItem = new cQuestionItem();\r\n  modelId: string = '';\r\n  IsCreate: boolean;\r\n  lstTrainingTypes: cTrainingTypeItem[];\r\n  lstTrainingCategory: ITrainingCategoryItem[];\r\n  TrainingTypeId: string;\r\n  formQuestion: FormGroup;\r\n  msgQuestion2Answer: string;\r\n  msgQuestionCorrectAnswer: string;\r\n  msgQuestionOneAnswer: string;\r\n\r\n  get Answers(): FormArray {\r\n    return <FormArray>this.formQuestion.get('Answers');\r\n  }\r\n\r\n  constructor(private BLServiceQuestion: ServiceQuestion,\r\n    private route: ActivatedRoute,\r\n    private BLServiceDataManagement: ServiceDataManagement,\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    BLServiceShowMessage: ServiceShowMessage,\r\n    BLServiceLoginUser: ServiceLoginUser, BLTranslate: TranslateService,) { super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate); }\r\n\r\n  ngOnInit(): void {\r\n    this.BLTranslate.get(\"msgQuestion2Answer\").subscribe(res => { this.msgQuestion2Answer = res; });\r\n    this.BLTranslate.get(\"msgQuestionCorrectAnswer\").subscribe(res => { this.msgQuestionCorrectAnswer = res; });\r\n    this.BLTranslate.get(\"msgQuestionOneAnswer\").subscribe(res => { this.msgQuestionOneAnswer = res; });\r\n\r\n    this.modelId = this.route.snapshot.paramMap.get('Id');\r\n    this.IsCreate = this.modelId == \"0\";\r\n\r\n    this.InitForm();\r\n    if (!this.IsCreate) {\r\n      this.BLServiceQuestion.getQuestionGetByid(this.modelId).subscribe({\r\n        next: lst => {\r\n          \r\n          if (lst != null) {\r\n            this.modelObj = lst;\r\n            //this.InitForm();\r\n            this.formQuestion.patchValue({\r\n              Question: this.modelObj.Name,\r\n              TrainingTypeId: this.modelObj.TrainingTypeId,\r\n              TrainingCategoryId: this.modelObj.TrainingCategoryId,\r\n              Difficulty: this.modelObj.Difficulty.toString(),\r\n            });\r\n            if (this.modelObj.Answer.length > 0) {\r\n              this.Answers.removeAt(0);\r\n              this.modelObj.Answer.forEach(item => {\r\n                const control = <FormArray>this.formQuestion.get('Answers');\r\n                control.push(this.buildAnswer(item.Name, item.IsCorrectAnswer));\r\n              });\r\n            }\r\n            this.onTrainingTypeSelect()\r\n          }\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n\r\n    this.BLServiceDataManagement.getTrainingTypeListActive().subscribe({\r\n      next: lst => {\r\n        this.lstTrainingTypes = lst;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n\r\n  }\r\n  InitForm() {\r\n    this.formQuestion = this.fb.group({\r\n      Question: ['', [Validators.required]],\r\n      TrainingTypeId: ['', [Validators.required]],\r\n      TrainingCategoryId: ['', [Validators.required]],\r\n      Difficulty: ['', [Validators.required]],\r\n      Answers: this.fb.array([this.buildAnswer()]),\r\n    });\r\n  }\r\n  buildAnswer(value: string = '', IsCorrect = false) {\r\n    return this.fb.group({\r\n      Answer: [value, [Validators.required]],\r\n      IsCorrectAnswer: IsCorrect\r\n    });\r\n  }\r\n  addAnswer() {\r\n    const control = <FormArray>this.formQuestion.get('Answers');\r\n    control.push(this.buildAnswer());\r\n  }\r\n  onTrainingTypeSelect() {\r\n    if (this.formQuestion.get('TrainingTypeId').value == \"\")\r\n      return;\r\n\r\n    this.BLServiceDataManagement.getTrainingCategoryListByTrainingType(this.formQuestion.get('TrainingTypeId').value).subscribe({\r\n      next: lst => {\r\n        this.lstTrainingCategory = lst;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  removeAnswer(index: number) {\r\n    var c = <FormArray>this.formQuestion.get('Answers')\r\n    c.removeAt(index);\r\n  }\r\n  modelSaveBtn(): void {\r\n    if (!this.formQuestion.valid)\r\n      return;\r\n\r\n    var model = new cQuestionItem();\r\n    model.Id = this.modelId;\r\n    model.Difficulty = (<FormArray>this.formQuestion.get('Difficulty')).value;\r\n    model.Name = (<FormArray>this.formQuestion.get('Question')).value;\r\n    model.TrainingCategoryId = (<FormArray>this.formQuestion.get('TrainingCategoryId')).value;\r\n    model.TrainingTypeId = (<FormArray>this.formQuestion.get('TrainingTypeId')).value;\r\n    model.Answer = <cAnswerItem[]>[];\r\n\r\n    var ans = <FormArray>this.formQuestion.get('Answers');\r\n    ans.value.forEach(item => {\r\n      if (item.IsCorrectAnswer == undefined)\r\n        item.IsCorrectAnswer = true;\r\n    });\r\n    \r\n    if (!ans || ans.length < 2) {\r\n      this.message.Error(this.msgQuestion2Answer);\r\n      this.BLServiceShowMessage.sendMessage(this.message);\r\n    }\r\n    else {\r\n      var correctAnswersCount = this.getCorrectAnswersCount(ans);\r\n      if (correctAnswersCount == 0) {//Case no correct answer selected\r\n        this.message.Error(this.msgQuestionCorrectAnswer);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n      }\r\n      else if (correctAnswersCount > 1) { //Case selecting more than corrent answer\r\n        this.message.Error(this.msgQuestionOneAnswer);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n      }\r\n      else {\r\n        ans.value.forEach(item => {\r\n\r\n          var obj = new cAnswerItem();\r\n\r\n          obj.Name = item.Answer;\r\n          obj.IsCorrectAnswer = item.IsCorrectAnswer;\r\n\r\n          model.Answer.push(obj);\r\n        });\r\n        if (this.IsCreate) {\r\n          this.BLServiceQuestion.createQuestion(model).subscribe({\r\n            next: response => {\r\n              this.message.Success(this.msgSavedSuccessfully);\r\n              this.BLServiceShowMessage.sendMessage(this.message);\r\n              this.router.navigate(['/Questions/List']);\r\n            },\r\n            error: err => this.message.Error(err)\r\n          });\r\n        }\r\n        else {\r\n          this.BLServiceQuestion.updateQuestion(model).subscribe({\r\n            next: response => {\r\n              this.message.Success(this.msgUpdatedsuccessfully);\r\n              this.BLServiceShowMessage.sendMessage(this.message);\r\n              this.router.navigate(['/Questions/List']);\r\n            },\r\n            error: err => this.message.Error(err)\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  getCorrectAnswersCount(ans: FormArray): number {\r\n    var correctAnswersCount = 0;\r\n    ans.value.forEach(item => {\r\n      if (item.IsCorrectAnswer) {\r\n        correctAnswersCount++;\r\n      }\r\n    });\r\n    return correctAnswersCount;\r\n  }\r\n  OnRedrirectBack() {\r\n    this.router.navigate(['/Questions/List']);\r\n  }\r\n  CorrectAnswer(obj) {\r\n    \r\n    var ans = <FormArray>this.formQuestion.get('Answers');\r\n    ans.value.forEach(item => {\r\n      item.IsCorrectAnswer = false;\r\n    });\r\n    ans.value[obj].IsCorrectAnswer = true;\r\n  }\r\n}\r\n","<section class=\"my-5\">\r\n    <div class=\"container\">\r\n        <div class='row'>\r\n            <h4 class=\"mb-4\">{{'HeaderQuestions' | translate }}</h4>\r\n        </div>\r\n        <div class='row'>\r\n\r\n\r\n            <div class=\"modal-body pt-0\">\r\n\r\n                <form novalidate [formGroup]=\"formQuestion\">\r\n                    <div class=\"col-md-8\">\r\n                        <div class=\"form-group \">\r\n                            <mat-form-field class=\"example-full-width\">\r\n                                <mat-label>{{'QuestionQ' | translate }}</mat-label>\r\n                                <textarea matInput id=\"modelNameId\" type=\"text\" placeholder=\"{{'QuestionSelect' | translate }}\"\r\n                                    required formControlName=\"Question\" cols=\"40\" rows=\"5\" value=\"\"></textarea>\r\n                                <mat-error *ngIf=\"formQuestion?.get('Question').errors?.required\">{{'QuestionError' | translate }}\r\n                                </mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"form-group \">\r\n                            <mat-form-field>\r\n                                <mat-label>{{'GenericTrainingType' | translate }}</mat-label>\r\n                                <mat-select id=\"TrainingTypeId\" placeholder=\"Select a TrainingTypeId\"\r\n                                    (selectionChange)=\"onTrainingTypeSelect()\" formControlName=\"TrainingTypeId\">\r\n                                    <mat-option value=\"\">{{'GenericSelectTrainingType' | translate }}</mat-option>\r\n                                    <mat-option *ngFor=\"let item of lstTrainingTypes\" value=\"{{item.Id}}\">\r\n                                        {{item.Name}}</mat-option>\r\n                                </mat-select>\r\n                                <mat-error *ngIf=\"formQuestion?.get('TrainingTypeId').errors?.required\">{{'GenericSelectTrainingTypeError' | translate }}</mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"form-group \">\r\n                            <mat-form-field>\r\n                                <mat-label>{{'GenericTrainingCategory' | translate }}</mat-label>\r\n                                <mat-select id=\"filtertrainingCategory\" placeholder=\"{{'GenericSelectTrainingCategory' | translate }}\"\r\n                                    formControlName=\"TrainingCategoryId\">\r\n                                    <mat-option value=\"\">{{'GenericSelectTrainingCategory' | translate }}</mat-option>\r\n                                    <mat-option *ngFor=\"let item of lstTrainingCategory\" value=\"{{item.Id}}\">\r\n                                        {{item.Name}}</mat-option>\r\n                                </mat-select>\r\n                                <mat-error *ngIf=\"formQuestion?.get('TrainingTypeId').errors?.required\">{{'GenericSelectTrainingCategoryError' | translate }}</mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"form-group \">\r\n                            <mat-form-field>\r\n                                <mat-label>{{'QuestionDifficulty' | translate }}</mat-label>\r\n                                <mat-select id=\"Difficulty\" placeholder=\"{{'QuestionDifficultySelect' | translate }}\"\r\n                                    formControlName=\"Difficulty\">\r\n                                    <mat-option value=\"\">{{'QuestionDifficultySelect' | translate }}</mat-option>\r\n                                    <mat-option value=\"1\">{{'QuestionEasy' | translate }}</mat-option>\r\n                                    <mat-option value=\"2\">{{'QuestionMedium' | translate }}</mat-option>\r\n                                    <mat-option value=\"3\">{{'QuestionHard' | translate }}</mat-option>\r\n                                </mat-select>\r\n                                <mat-error *ngIf=\"formQuestion?.get('TrainingTypeId').errors?.required\">{{'QuestionDifficultyError' | translate }}</mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <hr>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6\">\r\n                                <h4 class=\"mb-4\">{{'QuestionAnswer' | translate }}</h4>\r\n                            </div>\r\n                            <div class=\"col-md-6\"><button class=\"pull-right btn btn-success btn-sm white-text btnSave\" (click)=\"addAnswer()\">{{'GenericAdd' | translate }}</button></div>\r\n                        </div>\r\n                        <div formArrayName=\"Answers\" *ngFor=\"let item of Answers.controls; let i = index;\" class=\"row\">\r\n                            <div [formGroupName]=\"i\" class=\"col-md-12\">\r\n                                <div class=\"col-md-6 pull-left\">\r\n                                    <mat-form-field>\r\n                                        <mat-label>{{'QuestionAnswer' | translate }}</mat-label>\r\n                                        <textarea matInput formControlName=\"Answer\" placeholder=\"{{'QuestionEnterAnswer' | translate }}\"\r\n                                            cols=\"40\" rows=\"5\"></textarea>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-md-3  pull-left\">\r\n                                    <input type=\"checkbox\" [(ngModel)]=\"item.value.IsCorrectAnswer\" formControlName=\"IsCorrectAnswer\" id=\"radio{{i}}\" (click)=\"CorrectAnswer(i)\"\r\n                                        name=\"IsCorrectAnswer\">\r\n                                        <span> {{'QuestionCorrectAnswer' | translate }}</span>\r\n                                </div>\r\n                                <div class=\"col-md-2  pull-left\">\r\n                                    <button (click)=\"removeAnswer(i)\" class=\"pull-right btn btn-danger btn-sm white-text btnSave\">X</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group pull-right md-form\">\r\n                            <button class=\"btn color-bg-grey btn-sm btn-default white-text\" type=\"submit\" (click)=\"OnRedrirectBack()\">{{'GenericCancel' | translate }}</button>\r\n                            <button class=\"btn color-bg-01 btn-sm white-text btnSave\" type=\"submit\"\r\n                                (click)=\"modelSaveBtn()\"\r\n                                \r\n                                [disabled]=\"!formQuestion?.valid\">{{'GenericSave' | translate }}</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n\r\n    </div>","import { Component, OnInit } from '@angular/core';\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\nimport { cQuestionList, cQuestionItem } from 'src/app/interface/Model/ModelQuestions.class';\nimport { Page } from 'src/app/common/pagination/page';\nimport { ServiceQuestion } from 'src/app/services/Question.service';\nimport { CustomPaginationService } from 'src/app/common/pagination/services/custom-pagination.service';\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { cTrainingTypeItem } from 'src/app/interface/Response/TrainingType.class';\nimport { ITrainingCategoryItem } from 'src/app/interface/Response/TrainingCategory.interface';\nimport { ServiceDataManagement } from 'src/app/services/datamanagement.service';\nimport { ModelFilterQuestions } from 'src/app/interface/Model/ModelFilterQuestions.class';\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent extends baseComponent implements OnInit {\n\n  pageTitle: string = 'Questions';\n  lstQuestion: cQuestionList;\n  message: ShowMessage = new ShowMessage();\n  filtertxt: string = '';\n  modelName: string = '';\n  modelId: string = '';\n  modelNameEdited: string = '';\n  lstTrainingTypes: cTrainingTypeItem[];\n  lstTrainingCategory: ITrainingCategoryItem[];\n  lstTrainingCategoryFilter: ITrainingCategoryItem[];\n  filterObj: ModelFilterQuestions = new ModelFilterQuestions();\n\n  page: Page<cQuestionItem> = new Page();\n\n  constructor(private BLServiceQuestion: ServiceQuestion,\n    private paginationService: CustomPaginationService,\n    BLServiceShowMessage: ServiceShowMessage,\n    BLServiceLoginUser: ServiceLoginUser,BLTranslate: TranslateService,\n    private BLServiceDataManagement: ServiceDataManagement,\n    private router: Router,\n    private modalService: NgbModal) { super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);}\n\n\n  ngOnInit() {\n    this.loadData();\n  }\n  private loadData(): void {\n    this.filterObj.CurrentPage = this.page.pageable.pageCurrent;\n    this.BLServiceQuestion.getQuestionAll(this.filterObj).subscribe({\n      next: lst => {\n        this.lstQuestion = lst;\n        this.page.pageable.pageSize = lst.pageSize;\n        this.page.totalElements = lst.totalCount;\n        this.page.content = lst.lstResult;\n      },\n      error: err => this.message.Error(err)\n    });\n    this.BLServiceDataManagement.getTrainingTypeListActive().subscribe({\n      next: lst => {\n        this.lstTrainingTypes = lst;\n      },\n      error: err => this.message.Error(err)\n    });\n  }\n  public getNextPage(): void {\n    this.page.pageable = this.paginationService.getNextPage(this.page);\n    this.loadData();\n  }\n\n  public getPreviousPage(): void {\n    this.page.pageable = this.paginationService.getPreviousPage(this.page);\n    this.loadData();\n  }\n  public getloadPageCurrent(): void {\n    this.loadData();\n  }\n  setActivate(Id: string): void {\n    if (!confirm(this.msgsetActivate))\n      return;\n\n    this.BLServiceQuestion.setQuestionActivate(Id).subscribe({\n      next: response => {\n        this.message.Success(this.msgActivatedSuccessfully);\n        this.BLServiceShowMessage.sendMessage(this.message);\n        this.loadData();\n      },\n      error: err => this.message.Error(err)\n    });\n  }\n  setDeactivate(Id: string): void {\n    if (!confirm(this.msgsetDeactivate))\n      return;\n    this.BLServiceQuestion.setQuestionDeactivate(Id).subscribe({\n      next: response => {\n        this.message.Success(this.msgDeactivatedSuccessfully);\n        this.BLServiceShowMessage.sendMessage(this.message);\n        this.loadData();\n      },\n      error: err => this.message.Error(err)\n    });\n  }\n  filterbtn(): void {\n    this.page.pageable.pageCurrent = 1;\n    this.loadData();\n  }\n  Edit( Id: string) {\n      this.router.navigate(['/Questions/Create/' + Id]);\n  }\n  onTrainingTypeFilterSelect() {\n    if (this.filterObj.TrainingTypeId == \"\")\n      return;\n\n    this.BLServiceDataManagement.getTrainingCategoryListByTrainingType(this.filterObj.TrainingTypeId).subscribe({\n      next: lst => {\n        this.lstTrainingCategoryFilter = lst;\n      },\n      error: err => this.message.Error(err)\n    });\n  }\n}\n","<section class=\"my-5\">\n    <div class=\"container\">\n      <div class='row'>\n        <h4 class=\"mb-4\">{{'HeaderQuestions' | translate }}</h4>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-sm-6\">\n            <mat-form-field>\n                <mat-label>{{'GenericTrainingType' | translate }}</mat-label>\n                <mat-select id=\"filterTrainingType\" placeholder=\"Select a TrainingType\"\n                    (selectionChange)=\"onTrainingTypeFilterSelect()\" [(ngModel)]=\"filterObj.TrainingTypeId\"\n                    name=\"filterTrainingTypeVar\">\n                    <mat-option value=\"\">{{'GenericSelectTrainingType' | translate }}</mat-option>\n                    <mat-option *ngFor=\"let item of lstTrainingTypes\" value=\"{{item.Id}}\">\n                        {{item.Name}}</mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"col-sm-6\">\n            <mat-form-field>\n                <mat-label>{{'GenericTrainingCategory' | translate }}</mat-label>\n                <mat-select id=\"filtertrainingCategory\" placeholder=\"{{'GenericSelectTrainingCategory' | translate }}\"\n                    [(ngModel)]=\"filterObj.TrainingCagtegoryId\" name=\"filtertrainingCategoryVar\">\n                    <mat-option value=\"\">{{'GenericSelectTrainingCategory' | translate }}</mat-option>\n                    <mat-option *ngFor=\"let item of lstTrainingCategoryFilter\" value=\"{{item.Id}}\">\n                        {{item.Name}}</mat-option>\n                </mat-select>\n            </mat-form-field>\n            \n        </div>\n    </div>\n      <div class='row'>\n        <div class=\"col-sm-6 md-form\">\n          <mat-form-field class=\"example-full-width\">\n            <mat-label>{{'QuestionSearch' | translate }}</mat-label>\n            <input type=\"text\" placeholder=\"{{'QuestionSearch' | translate }}\" matInput [(ngModel)]=\"filtertxt\">\n          </mat-form-field>\n          <input type=\"submit\" value=\"{{'GenericSearch' | translate }}\"  class=\"btn color-bg-02 white-text\" (click)=\"filterbtn()\">\n        </div>\n        <div class=\"col-sm-6 md-form pull-right\">\n          <input type=\"button\" class=\"pull-right btn color-bg-01 white-text\" value=\"{{'GenericCreateNew' | translate }}\"\n            (click)=\"Edit('0')\">\n        </div>\n      </div>\n      <div class=\"col-md-12\">\n        <div class='table-responsive '>\n          <table class='table' *ngIf='page.content && page.content.length'>\n            <thead>\n              <tr>\n                <th>{{'GenericName' | translate }}</th>\n                <th>{{'GenericTrainingType' | translate }}</th>\n                <th>{{'GenericTrainingCategory' | translate }}</th>\n                <th>{{'GenericAction' | translate }}</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor='let obj of page.content'>\n                <td>{{ obj.Name}}</td>\n                <td>{{ obj.TrainingTypeName}}</td>\n                <td>{{ obj.TrainingCategoryName}}</td>\n                <td>\n                  <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-primary\" value=\"{{'GenericEdit' | translate }}\"\n                    (click)=\"Edit(obj.Id)\">\n                  <input *ngIf=\"!obj.IsActive\" type=\"button\" class=\"btn btn-success\" value=\"{{'GenericActivate' | translate }}\"\n                    (click)=\"setActivate(obj.Id)\">\n                  <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-danger\" value=\"{{'GenericDeactivate' | translate }}\"\n                    (click)=\"setDeactivate(obj.Id)\">\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n      <div>\n        <app-custom-pagination [page]=\"page\" (nextPageEvent)=\"getNextPage()\" (previousPageEvent)=\"getPreviousPage()\"\n          (loadPageCurrentEvent)=\"getloadPageCurrent()\">\n        </app-custom-pagination>\n      </div>\n    </div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\r\nimport { ModelRequestRegister } from 'src/app/interface/Model/ModelRequestRegister.class';\r\nimport { NgForm } from '@angular/forms';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { cEntityPartnerItem } from 'src/app/interface/Response/EntityPartner.class';\r\nimport { ServiceEntityManagement } from 'src/app/services/entitymanagement.service';\r\nimport { ServiceMisc } from 'src/app/services/misc.service';\r\nimport { Router } from '@angular/router';\r\nimport { DynamicFormComponent } from 'src/app/common/ConfigForms/components/dynamic-form/dynamic-form.component';\r\nimport { FieldConfig, Validator } from 'src/app/common/ConfigForms/field.interface';\r\nimport { ServiceConfigForm } from 'src/app/services/config-form.service';\r\nimport { ConfigForm } from 'src/app/Enum/ConfigForm.enum';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent extends baseComponent implements OnInit {\r\n\r\n  pageTitle: string = 'Request Register';\r\n  message: ShowMessage = new ShowMessage();\r\n  modelObj: ModelRequestRegister = new ModelRequestRegister();\r\n  lstPartners: cEntityPartnerItem[];\r\n  isClicked: boolean = false;\r\n\r\n  @ViewChild(DynamicFormComponent) form: DynamicFormComponent;\r\n  regConfig: FieldConfig[] = [];\r\n\r\n  constructor(private BLServiceEntityManagement: ServiceEntityManagement,\r\n    private BLServiceMisc: ServiceMisc,\r\n    private router: Router,\r\n    private BLServiceConfigForm: ServiceConfigForm,\r\n    BLServiceShowMessage: ServiceShowMessage,\r\n    BLServiceLoginUser: ServiceLoginUser,BLTranslate: TranslateService,) {\r\n    super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.BLServiceMisc.getEntityPartnerListAllActiveAnonymous().subscribe({\r\n      next: lst => {\r\n        this.lstPartners = lst;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n    this.InitDynamicForm();\r\n  }\r\n  InitDynamicForm() {\r\n    this.BLServiceMisc.GetByType(ConfigForm.RequestRegister).subscribe({\r\n      next: lst => {\r\n        this.regConfig = <FieldConfig[]>[];\r\n        lst.forEach(item => {\r\n\r\n          var obj = new FieldConfig();\r\n\r\n          obj.inputType = item.inputType;\r\n          obj.label = item.label;\r\n          obj.name = item.label;\r\n          obj.options = item.options;\r\n          obj.order = item.order;\r\n          obj.type = item.type;\r\n          obj.IsRequired = item.IsRequired;\r\n          if (obj.IsRequired)\r\n            obj.validations.push(new Validator(item.label));\r\n          if (this.modelObj.data)\r\n            obj.value = this.modelObj.data[item.label];\r\n\r\n          this.regConfig.push(obj);\r\n        });\r\n        this.form.fields = this.regConfig;\r\n        this.form.createControl();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n\r\n  }\r\n  modelSaveBtn(modelForm: NgForm): void {\r\n    if (!modelForm.valid)\r\n      return;\r\n    this.isClicked = true;\r\n    this.modelObj.data = this.form.value;\r\n\r\n    this.BLServiceMisc.RequestRegister(this.modelObj).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.msgSavedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.router.navigate(['/']);\r\n      },\r\n      error: err => {\r\n        this.message.Error(err)\r\n        this.isClicked = false;\r\n      }\r\n    });\r\n\r\n  }\r\n}\r\n","<section class=\"my-5\">\n    <div class=\"container\">\n        <div class='row'>\n            <h4 class=\"mb-4\">{{'RequestpageTitle' | translate }}</h4>\n        </div>\n        <div class='row'>\n            <div class=\"modal-body pt-0\">\n                <form novalidate (ngSubmit)=\"modelSaveBtn(modelForm)\" #modelForm=\"ngForm\">\n                    <div class=\"form-group \">\n                        <mat-form-field>\n                            <mat-label>{{'RequestUserType' | translate }}</mat-label>\n                            <mat-select placeholder=\"{{'GenericRequiredType' | translate }}\" required\n                                [(ngModel)]=\"modelObj.Type\" #modelTypeListVar=\"ngModel\" name=\"modelTypeList\"\n                                [value]=\"modelObj.Type\"\n                                [ngClass]=\"{'is-invalid': (modelTypeListVar.touched || modelTypeListVar.dirty) && !modelTypeListVar.valid}\">\n                                <mat-option value=\"\">{{'RequestUserTypeSelect' | translate }}</mat-option>\n                                <mat-option value=\"Trainer\">{{'GenericTrainer' | translate }}</mat-option>\n                                <mat-option value=\"Training Center\">{{'GenericTrainingCenter' | translate }}</mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"modelTypeListVar.errors?.required\">{{'RequestUserTypeError' | translate }}</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"form-group \">\n                        <mat-form-field>\n                            <mat-label>{{'GenericPartner' | translate }}</mat-label>\n                            <mat-select  placeholder=\"{{'GenericSelectPartner' | translate }}\" required\n                                [(ngModel)]=\"modelObj.PartnerName\" #modelMyPartnerListIds=\"ngModel\"\n                                name=\"MyPartnerListIds\"\n                                [ngClass]=\"{'is-invalid': (modelMyPartnerListIds.touched || modelMyPartnerListIds.dirty) && !modelMyPartnerListIds.valid}\">\n                                <mat-option *ngFor=\"let obj of lstPartners\" [value]=\"obj.Name\">{{ obj.Name }}</mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"modelMyPartnerListIds.errors?.required\">{{'GenericSelectPartnerError' | translate }}\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"form-group \">\n                        <mat-form-field class=\"example-full-width\">\n                            <mat-label>{{'GenericName' | translate }}</mat-label>\n                            <input matInput id=\"modelNameId\" type=\"text\" placeholder=\"{{'GenericRequiredName' | translate }}\" required\n                                [(ngModel)]=\"modelObj.Name\" #modelNameVar=\"ngModel\" name=\"modelName\"\n                                [ngClass]=\"{'is-invalid': (modelNameVar.touched || modelNameVar.dirty) && !modelNameVar.valid }\" />\n                            <mat-error *ngIf=\"modelNameVar.errors?.required\">{{'GenericEnterName' | translate }}</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"form-group \">\n                        <mat-form-field class=\"example-full-width\">\n                            <mat-label>{{'GenericEmail' | translate }}</mat-label>\n                            <input matInput oninput=\"this.value = this.value.toLowerCase()\" id=\"modelEmailId\"\n                                type=\"email\" placeholder=\"{{'GenericRequiredEmail' | translate }}\" [pattern]=\"emailPattern\" required\n                                 [(ngModel)]=\"modelObj.Email\" #modelEmailVar=\"ngModel\"\n                                name=\"modelEmail\"\n                                [ngClass]=\"{'is-invalid': (modelEmailVar.touched || modelEmailVar.dirty) && !modelEmailVar.valid }\" />\n                            <mat-error *ngIf=\"modelEmailVar.errors?.required\">{{'GenericEnterEmail' | translate }}</mat-error>\n                            <mat-error *ngIf=\"modelEmailVar.errors?.pattern\">{{'GenericEnterEmailValid' | translate }}</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"form-group \">\n                        <mat-form-field class=\"example-full-width\">\n                            <mat-label>{{'RequestPhone' | translate }}</mat-label>\n                            <input type=\"number\" matInput id=\"modelPhoneId\" placeholder=\"{{'RequestPhoneSelect' | translate }}\" required\n                                [(ngModel)]=\"modelObj.Phone\" #modelPhoneVar=\"ngModel\" name=\"modelPhone\"\n                                [ngClass]=\"{'is-invalid': (modelPhoneVar.touched || modelPhoneVar.dirty) && !modelPhoneVar.valid }\" />\n                            <mat-error *ngIf=\"modelPhoneVar.errors?.required\">{{'RequestPhoneError' | translate }}</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"form-group \">\n                        <mat-form-field class=\"example-full-width\">\n                            <mat-label>{{'RequestMessage' | translate }}</mat-label>\n                            <textarea matInput id=\"modelMessageId\" type=\"text\" placeholder=\"{{'RequestMessageSelect' | translate }}\" required\n                                [(ngModel)]=\"modelObj.Message\" #modelMessageVar=\"ngModel\" name=\"modelMessage\" rows=\"5\" cols=\"15\"\n                                [ngClass]=\"{'is-invalid': (modelMessageVar.touched || modelMessageVar.dirty) && !modelMessageVar.valid }\" ></textarea>\n                            <mat-error *ngIf=\"modelMessageVar.errors?.required\">{{'RequestMessageError' | translate }}</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"row\">\n                        <dynamic-form [fields]=\"regConfig\"></dynamic-form>\n                    </div>\n                    <div class=\"form-group pull-right md-form\">\n                        <button class=\"btn color-bg-01 btn-sm white-text\" type=\"submit\"                            \n                            [disabled]=\"!(modelForm.valid && form?.valid)|| isClicked\">{{'GenericSave' | translate }} <i class=\"fa fa-spinner fa-spin\" *ngIf=\"isClicked\"></i> </button>\n                    </div>\n                </form>\n            </div>\n        </div>\n\n    </div>","import { Component, OnInit, ViewChild, ElementRef, QueryList, ViewChildren } from '@angular/core';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ServiceTraining } from 'src/app/services/training.service';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { cTrainingItem, cAttendance, cSessionItem, cAttendanceTrainee } from 'src/app/interface/Response/Training.class';\r\nimport { cTraineeItem } from 'src/app/interface/Response/Trainee.class';\r\nimport { MatSlideToggle } from '@angular/material';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-attendance',\r\n  templateUrl: './attendance.component.html',\r\n  styleUrls: ['./attendance.component.css']\r\n})\r\nexport class AttendanceComponent extends baseComponent implements OnInit {\r\n\r\n  pageTitle: string = 'Attendance';\r\n  trainingId: string;\r\n  trainingObj: cTrainingItem;\r\n  attendance: cAttendance[];\r\n  sessions: cSessionItem[];\r\n  trainees: cTraineeItem[];\r\n  selectedSessionId: string = \"\";\r\n  ModelAttendance: cAttendance;\r\n\r\n\r\n  @ViewChildren(\"toggleElement\") ref: QueryList<MatSlideToggle>;\r\n\r\n  constructor(private route: ActivatedRoute,\r\n    private BLServiceTraining: ServiceTraining,\r\n    BLServiceShowMessage: ServiceShowMessage,\r\n    private router: Router,\r\n    BLServiceLoginUser: ServiceLoginUser,BLTranslate: TranslateService,) {\r\n    super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const param = this.route.snapshot.paramMap.get('Id');\r\n    if (param) {\r\n      this.trainingId = param;\r\n      this.loadData();\r\n    }\r\n  }\r\n  loadData() {\r\n    this.BLServiceTraining.getGetByid(this.trainingId).subscribe({\r\n      next: obj => {\r\n        this.trainingObj = obj;\r\n        this.attendance = obj.Attendances;\r\n        this.sessions = obj.Sessions;\r\n        this.trainees = obj.Trainees;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  getTraineeAttendance(sessionId: string, TraineeId: string): string {\r\n    if (!this.attendance)\r\n      return \"NA\";\r\n\r\n    var attSession = this.attendance.filter(x => x.SessionId == sessionId);\r\n    if (!attSession)\r\n      return \"NA\";\r\n\r\n    var attTrainee = attSession[0]?.Attendances?.filter(x => x.TraineeId == TraineeId);\r\n    if (!attTrainee)\r\n      return \"NA\";\r\n\r\n    return attTrainee[0]?.IsAttendant ? \"true\" : \"false\";\r\n  }\r\n  EnterAttendance(sessionId: string) {\r\n    this.selectedSessionId = sessionId;\r\n    this.ModelAttendance = new cAttendance();\r\n\r\n    this.ModelAttendance.SessionId = sessionId;\r\n    this.ModelAttendance.Attendances = [];\r\n    this.trainees.forEach(element => {\r\n      var att = new cAttendanceTrainee();\r\n      att.TraineeId = element.Id;\r\n      att.IsAttendant = this.getTraineeAttendance(sessionId, element.Id) == \"true\" ? true : false;\r\n      this.ModelAttendance.Attendances.push(att);\r\n    });\r\n  }\r\n  CancelAttendance() {\r\n    this.selectedSessionId = \"\";\r\n    this.ModelAttendance = new cAttendance();\r\n  }\r\n  AttendanceTraineeadded(traineeId: string, event: any) {\r\n    this.updateAttendanceModel(traineeId, event.checked);\r\n  }\r\n  updateAttendanceModel(traineeId: string, isChecked: boolean) {\r\n    var attIndex = this.ModelAttendance.Attendances.findIndex(x => x.TraineeId == traineeId);\r\n    this.ModelAttendance.Attendances[attIndex].IsAttendant = isChecked;\r\n  }\r\n  MarkAll() {\r\n    this.ref.toArray().forEach(item => {item.checked = true;});\r\n    this.ModelAttendance.Attendances.forEach(item => { item.IsAttendant = true });\r\n  }\r\n  UnMarkAll() {\r\n    this.ref.toArray().forEach(item => {item.checked = false;});\r\n    this.ModelAttendance.Attendances.forEach(item => { item.IsAttendant = false });\r\n  }\r\n  Save() {\r\n    this.BLServiceTraining.SaveAttendnace(this.trainingId, this.ModelAttendance).subscribe({\r\n      next: obj => {\r\n        this.selectedSessionId = \"\";\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  onBack(): void {\r\n    this.router.navigate(['/Training/List']);\r\n  }\r\n}\r\n","<section class=\"my-5\">\r\n    <div class=\"container\">\r\n        <div class='row'>\r\n            <h4 class=\"mb-4\">{{'AttendancepageTitle' | translate }}</h4>\r\n        </div>\r\n        <div class=\"col-md-12\">\r\n            <div class='table-responsive '>\r\n                <table class='table table-header-rotated'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>{{'GenericName' | translate }}</th>\r\n                            <th *ngFor=\"let item of sessions\" class=\"{{sessions.length > 6 ? 'rotate' : ''}}\">\r\n                                <div >\r\n                                    <span *ngIf=\"!item.IsFilled && item.Id != selectedSessionId\">\r\n                                        <a (click)=\"EnterAttendance(item.Id)\" *ngIf=\"((compareDate(trainingObj.StartDate , todayDate) == -1 || compareDate(trainingObj.StartDate , todayDate) == 0) \r\n                                                                    && compareDate(trainingObj.EndDate , todayDate) == 1 && IsTrainer) || IsAdmin || IsPartner || IsSubPartner\"><i title=\"{{'GenericEdit' | translate }}\"\r\n                                                class=\"far fa-edit\"></i></a>\r\n                                        {{item.Name}}\r\n                                    </span>\r\n                                    <span *ngIf=\"item.Id == selectedSessionId\">\r\n                                        <a (click)=\"CancelAttendance()\"><i title=\"{{'GenericCancel' | translate }}\"\r\n                                                class=\"far fa-times\"></i></a>\r\n                                        {{item.Name}}\r\n                                    </span>\r\n                                </div>\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let trainee of trainees\">\r\n                            <td>{{trainee.Name}}</td>\r\n                            <td *ngFor=\"let session of sessions\" class=\"\">\r\n                                <span *ngIf=\"session.Id == selectedSessionId\">\r\n                                    <mat-slide-toggle #toggleElement (change)=\"AttendanceTraineeadded(trainee.Id,$event)\" [checked]=\"getTraineeAttendance(session.Id,trainee.Id) == 'true' ? true : false\" color=\"primary\"></mat-slide-toggle>\r\n                                </span>\r\n                                <span *ngIf=\"session.Id != selectedSessionId\"\r\n                                    [ngSwitch]=\"getTraineeAttendance(session.Id,trainee.Id)\">\r\n                                    <i *ngSwitchCase=\"'NA'\" class=\"fas fa-minus\"></i>\r\n                                    <i *ngSwitchCase=\"'false'\" class=\"fas fa-times\"></i>\r\n                                    <i *ngSwitchCase=\"'true'\" class=\"fas fa-check\"></i>\r\n                                </span>\r\n\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                    <tfoot >\r\n                        <tr *ngIf=\"selectedSessionId\">\r\n                            <td></td>\r\n                            <td *ngFor=\"let session of sessions\" class=\"\">\r\n                                <span *ngIf=\"session.Id == selectedSessionId\">\r\n                                    <a (click)=\"MarkAll()\" title=\"{{'AttendanceMarkAll' | translate }}\"><i class=\"far fa-check-circle\"></i></a>\r\n                                    <a (click)=\"UnMarkAll()\" title=\"{{'AttendanceUnMarkAll' | translate }}\"><i class=\"far fa-times-circle\"></i></a>\r\n                                </span><br>\r\n                                <span *ngIf=\"session.Id == selectedSessionId\">\r\n                                    <button class=\"btn color-bg-01 btn-sm white-text\" (click)=\"Save()\"\r\n                                    type=\"submit\" style=\"width:80px\">{{'GenericSave' | translate }}</button>\r\n                                </span>\r\n                            </td>\r\n                        </tr>\r\n                    </tfoot>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div>\r\n        <div class='card-footer'>\r\n            <button class='btn btn-outline-secondary' (click)='onBack()' style='width:80px'>\r\n                <i class='fa fa-chevron-left'></i> {{'GenericBack' | translate }}\r\n            </button>\r\n        </div>\r\n    </div>\r\n\r\n</section>","import { Component, OnInit } from '@angular/core';\nimport { MyTraining, MyTrainingItems } from 'src/app/interface/Response/MyTraining.class';\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\nimport { Page } from 'src/app/common/pagination/page';\nimport { ServiceTrainee } from 'src/app/services/trainee.service';\nimport { CustomPaginationService } from 'src/app/common/pagination/services/custom-pagination.service';\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Constants } from 'src/app/constants';\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-my-trainings',\n  templateUrl: './my-trainings.component.html',\n  styleUrls: ['./my-trainings.component.css']\n})\nexport class MyTrainingsComponent extends baseComponent implements OnInit {\n  pageTitle: string = 'My Trainings';\n  lstData: MyTraining;\n  message: ShowMessage = new ShowMessage();\n  filtertxt: string = '';\n  modelName: string = '';\n  modelId: string = '';\n  modelNameEdited: string = '';\n  TraineeId: string = \"\";\n  page: Page<MyTrainingItems> = new Page();\n\n\n  constructor(private BLService: ServiceTrainee,\n    private paginationService: CustomPaginationService,\n    private router: Router,\n    private route: ActivatedRoute,\n    BLServiceShowMessage: ServiceShowMessage,\n    BLServiceLoginUser: ServiceLoginUser, BLTranslate: TranslateService,) {\n    super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\n  }\n\n  ngOnInit(): void {\n    this.loadData();\n  }\n  private loadData(): void {\n    const param = this.route.snapshot.paramMap.get('Id');\n    if (param) {\n      this.TraineeId = param;\n      this.BLService.GetTraineeTraining(this.TraineeId).subscribe({\n        next: lst => {\n          this.lstData = lst;\n          this.page.pageable.pageSize = Constants.PAGE_SIZE;\n          this.page.totalElements = lst.trainings.length;\n          this.page.content = lst.trainings;\n        },\n        error: err => this.message.Error(err)\n      });\n    }\n    else {\n      this.BLService.GetMyTraining().subscribe({\n        next: lst => {\n          this.lstData = lst;\n          this.page.pageable.pageSize = Constants.PAGE_SIZE;\n          this.page.totalElements = lst.trainings.length;\n          this.page.content = lst.trainings;\n        },\n        error: err => this.message.Error(err)\n      });\n    }\n  }\n  public getNextPage(): void {\n    this.page.pageable = this.paginationService.getNextPage(this.page);\n    this.loadData();\n  }\n\n  public getPreviousPage(): void {\n    this.page.pageable = this.paginationService.getPreviousPage(this.page);\n    this.loadData();\n  }\n  public getloadPageCurrent(): void {\n    this.loadData();\n  }\n  TakeExam(Id) {\n    this.router.navigate(['/Exam/TakeExam/' + Id]);\n  }\n}\n","<section class=\"my-5\">\n    <div class=\"container\">\n        <div class='row'>\n            <h4 class=\"mb-4\">{{'MyTraineepageTitle' | translate }} - {{lstData?.Profile.Name}}</h4>\n        </div>\n        <div class=\"col-md-12\">\n            <div class='table-responsive'>\n                <table class='table' *ngIf='page.content && page.content.length'>\n                    <thead>\n                        <tr>\n                            <th>{{'GenericName' | translate }}</th>\n                            <th>{{'TrainingDates' | translate }}</th>\n                            <th>{{'GenericAction' | translate }}</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor='let obj of page.content'>\n                            <td>{{ obj.Name}}</td>\n                            <td>{{ obj.Date }}</td>\n                            <td>\n                                <input *ngIf=\"!obj.HasCertificate && obj.ExamCount<2 && !IsAdmin\" type=\"button\"\n                                    class=\"btn btn-success\" value=\"{{'MyTraineeTakeExam' | translate }}\" (click)=\"TakeExam(obj.TrainingId)\">\n                                <a *ngIf=\"obj.HasCertificate && obj.CertificatePath != ''\"\n                                    href=\"{{FilesURL + obj.CertificatePath}}\" target=\"_blank\">{{'CertificateDownloadCertificate' | translate }}</a>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</section>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { cTrainingItem } from 'src/app/interface/Response/Training.class';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { ServiceTraining } from 'src/app/services/training.service';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { cTraineeItem, cTraineeItemInfo } from 'src/app/interface/Response/Trainee.class';\r\nimport { ServiceTrainee } from 'src/app/services/trainee.service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ModelTraineeTraining } from 'src/app/interface/Model/ModelTraineeTraining.class';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Constants } from 'src/app/constants';\r\nimport * as FileSaver from 'file-saver';\r\nimport { constants } from 'buffer';\r\n\r\n@Component({\r\n  selector: 'app-trainee-list',\r\n  templateUrl: './trainee-list.component.html',\r\n  styleUrls: ['./trainee-list.component.css']\r\n})\r\nexport class TraineeListComponent extends baseComponent implements OnInit {\r\n\r\n  @ViewChild('fileInput') fileInput: any;\r\n  pageTitle: string = \"Trainee List\"\r\n  trainingId: string;\r\n  trainingObj: cTrainingItem;\r\n  traineelst: cTraineeItemInfo[];\r\n  todayDate = new Date();\r\n  todayDateMinus2 = new Date();\r\n  ExcelOnly: string;\r\n  DonwloadURL: string;\r\n  DownloadURLError:string;\r\n  msgTrainingNoCertificates: string;\r\n  IsTraineeUpload:boolean = false;\r\n\r\n  private _filtertxt: string = '';\r\n  public get filtertxt(): string {\r\n    return this._filtertxt;\r\n  }\r\n  public set filtertxt(value: string) {\r\n    this._filtertxt = value;\r\n    this.filterbtn();\r\n  }\r\n  constructor(private route: ActivatedRoute,\r\n    private BLServiceTraining: ServiceTraining,\r\n    private modalService: NgbModal,\r\n    private BLServiceTrainee: ServiceTrainee,\r\n    private router: Router,\r\n    BLServiceShowMessage: ServiceShowMessage,\r\n    BLServiceLoginUser: ServiceLoginUser, BLTranslate: TranslateService,) {\r\n    super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\r\n    this.BLTranslate.get(\"ExcelOnly\").subscribe(res => { this.ExcelOnly = res; });\r\n    this.BLTranslate.get(\"TrainingNoCertificates\").subscribe(res => { this.msgTrainingNoCertificates = res; });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.todayDateMinus2.setDate(this.todayDateMinus2.getDate() - 2);\r\n    this.DonwloadURL = Constants.FilesURL + \"ImportTrainee.xlsx\";\r\n    const param = this.route.snapshot.paramMap.get('Id');\r\n    if (param) {\r\n      this.trainingId = param;\r\n      this.loadData();\r\n    }\r\n  }\r\n  filterbtn() {\r\n    this.traineelst = this.filtertxt ? this.loadDataFilter() : this.trainingObj.Trainees;\r\n  }\r\n  loadDataFilter(): cTraineeItemInfo[] {\r\n    return this.trainingObj.Trainees.filter((item: cTraineeItemInfo) =>\r\n      item.Name.toLocaleLowerCase().indexOf(this.filtertxt.toLocaleLowerCase()) !== -1\r\n      || item.Email.toLocaleLowerCase().indexOf(this.filtertxt.toLocaleLowerCase()) !== -1\r\n      || item.Mobile.toLocaleLowerCase().indexOf(this.filtertxt.toLocaleLowerCase()) !== -1\r\n      || item.NationalId.toLocaleLowerCase().indexOf(this.filtertxt.toLocaleLowerCase()) !== -1);\r\n  }\r\n  loadData() {\r\n    this.BLServiceTraining.getGetByid(this.trainingId).subscribe({\r\n      next: obj => {\r\n        this.trainingObj = obj;\r\n        this.filterbtn();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  setDeactivate(traineeId: string) {\r\n    if (!confirm(this.msgsetDeleted))\r\n      return;\r\n\r\n    this.BLServiceTrainee.RemoveTraining(this.trainingId, traineeId).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.msgDeletedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  isCourseStarted() {\r\n    if (this.trainingObj.StartDate < this.todayDate) //if start date less than today, course has started\r\n      return true;\r\n\r\n    return false;\r\n  }\r\n  AddTrainee(content) {\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  OnSelectedTrainee(TraineeId: string): void {\r\n    this.IsTraineeUpload = true;\r\n    this.BLServiceTrainee.AddTraining(this.trainingId, TraineeId).subscribe({\r\n      next: response => {\r\n        this.IsTraineeUpload = false;\r\n        this.loadData();\r\n        this.message.Success(this.msgSavedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => {\r\n        this.message.Error(err);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.IsTraineeUpload = false;\r\n      }\r\n    });\r\n  }\r\n  onBack(): void {\r\n    this.router.navigate(['/Training/List']);\r\n  }\r\n  createBtn() {\r\n    // path: 'Trainee/Create/:IsCreate/:TraineeId/:TrainingId'\r\n    this.router.navigate(['/Trainee/Create/1/0/' + this.trainingId]);\r\n  }\r\n  Approve(TraineeId: string) {\r\n    var model = new ModelTraineeTraining();\r\n    model.TraineeId = TraineeId;\r\n    model.TrainingId = this.trainingId;\r\n\r\n    this.BLServiceTrainee.ApproveTraineeRegister(model).subscribe({\r\n      next: response => {\r\n        this.loadData();\r\n        this.message.Success(this.msgSavedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  Certificate(TraineeId) {\r\n    // path: 'Trainee/Create/:IsCreate/:TraineeId/:TrainingId'\r\n    this.router.navigate(['/MyTraining/' + TraineeId]);\r\n  }\r\n  public uploadFile = (files) => {\r\n    if (files.length === 0) {\r\n      return;\r\n    }\r\n\r\n    let fileToUpload = <File>files[0];\r\n    if (fileToUpload.type != \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\") {\r\n      this.message.Error(this.ExcelOnly);\r\n\r\n      this.BLServiceShowMessage.sendMessage(this.message);\r\n    } else {\r\n      this.IsTraineeUpload = true;\r\n      this.BLServiceTrainee.ImportTrainee(fileToUpload, this.trainingId).subscribe({\r\n        next: response => {\r\n          this.fileInput.nativeElement.value = '';\r\n          this.IsTraineeUpload = false;\r\n          if(response.IsValid)\r\n          {\r\n            this.message.Success(this.msgSavedSuccessfully);\r\n            this.BLServiceShowMessage.sendMessage(this.message);\r\n          }\r\n          else{\r\n            this.message.Error(response.Error);\r\n            this.BLServiceShowMessage.sendMessage(this.message);\r\n            if(response.FileURL != \"\")\r\n            {\r\n              this.DownloadURLError = Constants.FilesURL + response.FileURL;\r\n            }\r\n          }\r\n          this.loadData();\r\n          \r\n        },\r\n\r\n        error: err => {\r\n          this.fileInput.nativeElement.value = '';\r\n          this.message.Error(err);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.IsTraineeUpload = false;\r\n        }\r\n      });\r\n    }\r\n  }\r\n  DownloadCertificate() {\r\n    this.BLServiceTrainee.DownloadTrainingCertificate(this.trainingId).subscribe({\r\n      next: data => {\r\n        window.open(Constants.FilesURL + data, \"_blank\");\r\n      },\r\n\r\n      error: err => {\r\n        this.message.Error(this.msgTrainingNoCertificates);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n      }\r\n    });\r\n  }\r\n  ExportBtn(){\r\n    this.BLServiceTraining.ExportTrainingTrainee(this.trainingId).subscribe({\r\n      next: data => {\r\n        this.downloadFile(data);\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n}\r\n","<section class=\"my-5\">\r\n  <div class=\"container \">\r\n    <div class='row'>\r\n      <h4 class=\"mb-4\">{{'TraineePageTitle' | translate }} ({{traineelst?.length ? traineelst?.length : 0}})</h4>\r\n    </div>\r\n    <div class='row'>\r\n      <div class=\"col-sm-6 md-form\">\r\n        <mat-form-field class=\"example-full-width\">\r\n          <mat-label>{{'TraineeSearch' | translate }}</mat-label>\r\n          <input type=\"text\" placeholder=\"{{'TraineeSearchPH' | translate }}\" matInput [(ngModel)]=\"filtertxt\">\r\n        </mat-form-field>\r\n        <input type=\"submit\" value=\"{{'GenericSearch' | translate }}\" class=\"btn color-bg-02 white-text\"\r\n          (click)=\"filterbtn()\">\r\n      </div>\r\n      <div class=\"col-sm-6 md-form pull-right \" *ngIf=\"compareDate(trainingObj?.StartDate , todayDateMinus2) == 1 || compareDate(trainingObj?.StartDate , todayDateMinus2) == 0\">\r\n        <div class=\"pull-right ml-3\">\r\n          <input #fileInput id=\"uploadTrainee\" name=\"uploadTrainee\" type=\"file\" #fileTrainee\r\n            placeholder=\"{{'ImportTrainee' | translate }}\"\r\n            accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\r\n            (change)=\"uploadFile(fileTrainee.files)\" style=\"display:none;\">\r\n          <button id=\"btnuploadTrainee\" name=\"btnuploadTrainee\" type=\"button\" class=\"btn btn-warning white-text \"\r\n            (click)=\"fileTrainee.click()\" [disabled]=\"IsTraineeUpload\">{{'ImportTrainee' | translate }}<i\r\n            class=\"fa fa-spinner fa-spin\" *ngIf=\"IsTraineeUpload\"></i></button>\r\n\r\n          <input type=\"button\" class=\"btn color-bg-03 white-text  \" value=\"{{'TraineeAdd' | translate }}\" [disabled]=\"IsTraineeUpload\"\r\n            (click)=\"AddTrainee(content)\">\r\n          <input type=\"button\" class=\" btn color-bg-01 white-text\" value=\"{{'GenericCreateNew' | translate }}\" [disabled]=\"IsTraineeUpload\"\r\n            (click)=\"createBtn()\">\r\n\r\n        </div>\r\n      </div>\r\n      <div class=\"col-sm-6 md-form pull-right \" *ngIf=\"compareDate(trainingObj?.EndDate , todayDate) == -1\">\r\n        <div class=\"pull-right ml-3\">\r\n          <input type=\"button\" class=\" btn btn-warning white-text\" value=\"{{'TrainingCourseCertificate' | translate }}\"\r\n            (click)=\"DownloadCertificate()\">\r\n            <input type=\"button\" class=\"pull-right btn color-bg-02 white-text Excel\"\r\n            value=\"{{'ExportToExcel' | translate }}\" (click)=\"ExportBtn()\">\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class='row col-sm-12 text-center' *ngIf='DownloadURLError'>\r\n      <div class=\"col-sm-4 md-form text-center bgDownloadError m-auto mb-1 \">\r\n        <a href=\"{{DownloadURLError}}\" target=\"_blank\">{{'TrainingDownloadTemplateError' | translate}}</a>\r\n      </div>\r\n    </div>\r\n    <div class='row' *ngIf=\"compareDate(trainingObj?.StartDate , todayDateMinus2) == 1\">\r\n      <div class=\"col-sm-12 md-form text-right mb-1\">\r\n        <a href=\"{{DonwloadURL}}\" target=\"_blank\">{{'TrainingDownloadTemplate' | translate}}</a>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-12\">\r\n      <div class='table-responsive'>\r\n        <table class='table' *ngIf='traineelst && traineelst?.length'>\r\n          <thead>\r\n            <tr>\r\n              <th>{{'GenericName' | translate }}</th>\r\n              <th>{{'GenericEmail' | translate }}</th>\r\n              <th>{{'GenericMobile' | translate }}</th>\r\n              <th>{{'GenericNationalID' | translate }}</th>\r\n              <th>{{'GenericAction' | translate }}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor='let obj of traineelst'>\r\n              <td>{{obj.Name}}</td>\r\n              <td>{{obj.Email}}</td>\r\n              <td>{{obj.Mobile}}</td>\r\n              <td>{{obj.NationalId}}</td>\r\n              <td>\r\n                <input *ngIf=\" (compareDate(trainingObj?.StartDate , todayDateMinus2) == 1 || compareDate(trainingObj?.StartDate , todayDateMinus2) == 0)\" type=\"button\"\r\n                  class=\"btn btn-danger\" value=\"{{'GenericRemove' | translate }}\" (click)=\"setDeactivate(obj.Id)\">\r\n                <input *ngIf=\"!obj.IsApproved && (compareDate(trainingObj?.StartDate , todayDateMinus2) == 1 || compareDate(trainingObj?.StartDate , todayDateMinus2) == 0)\" type=\"button\"\r\n                  class=\"btn btn-success\" value=\"{{'CertificateApprove' | translate }}\" (click)=\"Approve(obj.Id)\">\r\n                <input type=\"button\" class=\"btn btn-info\" value=\"Certificates\" (click)=\"Certificate(obj.Id)\">\r\n              </td>\r\n\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div class=\"\" *ngIf=\"traineelst?.length == 0\">\r\n        <div class=\"text-center bg-red noresult\">\r\n          <span class=\"font-italic\">{{'TrainingNoTraineeAdded' | translate }} </span><span>&#9785;</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <ng-template #content let-modal>\r\n        <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header color-bg-01 white-text text-center\">\r\n\r\n              <h6 class=\"modal-title\">{{'TraineeAdd2' | translate }}</h6>\r\n            </div>\r\n            <div class=\"modal-body pt-0\">\r\n              <div>\r\n                <cust-search-trainee (OnSelectedTrainee)=\"OnSelectedTrainee($event)\"></cust-search-trainee>\r\n              </div>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n\r\n              <button type=\"button\" class=\"btn color-bg-02 btn-sm white-text\"\r\n                (click)=\"modal.close('Close click')\">{{'GenericClose' | translate }}</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </ng-template>\r\n    </div>\r\n  </div>\r\n  <div>\r\n    <div class='card-footer'>\r\n      <button class='btn btn-outline-secondary' (click)='onBack()' style='width:80px'>\r\n        <i class='fa fa-chevron-left'></i> {{'GenericBack' | translate }}\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n</section>","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { cTrainingList, cTrainingItem } from 'src/app/interface/Response/Training.class';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ServiceTraining } from 'src/app/services/training.service';\r\nimport { CustomPaginationService } from 'src/app/common/pagination/services/custom-pagination.service';\r\nimport { Page } from 'src/app/common/pagination/page';\r\nimport { ModelTraining } from 'src/app/interface/Model/ModelTraining.class';\r\nimport { cEntityPartnerItem } from 'src/app/interface/Response/EntityPartner.class';\r\nimport { cEntitySubPartnerItem } from 'src/app/interface/Response/EntitySubPartner.class';\r\nimport { cUserProfileItem } from 'src/app/interface/Response/UserProfile.class';\r\nimport { ServiceUserProfile } from 'src/app/services/userprofile.service';\r\nimport { ServiceEntityManagement } from 'src/app/services/entitymanagement.service';\r\nimport { cTrainingTypeItem } from 'src/app/interface/Response/TrainingType.class';\r\nimport { ITrainingCategoryItem } from 'src/app/interface/Response/TrainingCategory.interface';\r\nimport { ServiceDataManagement } from 'src/app/services/datamanagement.service';\r\nimport { cCityItem } from 'src/app/interface/Response/City.class';\r\nimport { cArea } from 'src/app/interface/Response/Area.class';\r\nimport { ModelFilterTraining } from 'src/app/interface/Model/ModelFilterTraining.class';\r\nimport { Router } from '@angular/router';\r\nimport { ServiceTrainee } from 'src/app/services/trainee.service';\r\nimport { cEntityTrainingCenterItem } from 'src/app/interface/Response/EntityTrainingCenter.class';\r\nimport { cExamTemplateItem } from 'src/app/interface/Response/ExamTemplate.class';\r\nimport { ServiceExamTemplate } from 'src/app/services/exam-template.service';\r\nimport { ModelEntitySubEntityIds } from 'src/app/interface/Model/ModelEntitySubEntityIds.class';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Constants } from 'src/app/constants';\r\nimport { ICourse } from 'src/app/interface/Response/Course.interface';\r\n\r\n@Component({\r\n  selector: 'app-training-list',\r\n  templateUrl: './training-list.component.html',\r\n  styleUrls: ['./training-list.component.css']\r\n})\r\nexport class TrainingListComponent extends baseComponent implements OnInit {\r\n\r\n  filterObj: ModelFilterTraining = new ModelFilterTraining();\r\n  pageTitle: string = 'Training List';\r\n  lstTraining: cTrainingList;\r\n  filtertxt: string = '';\r\n  modelNameEdited: string = '';\r\n  modelObj: ModelTraining;\r\n  modelIsCreate: boolean = true;\r\n  modelIsStarted: boolean = false;\r\n  page: Page<cTrainingItem> = new Page();\r\n  MemberId: string;\r\n  lstPartners: cEntityPartnerItem[];\r\n  lstSubPartners: cEntitySubPartnerItem[];\r\n  lstTrainingCenters: cEntityTrainingCenterItem[];\r\n  lstSubPartnersFilter: cEntitySubPartnerItem[];\r\n  lstTrainers: cUserProfileItem[];\r\n  lstTrainersFilter: cUserProfileItem[];\r\n  lstTrainingTypes: cTrainingTypeItem[];\r\n  lstTrainingCategory: ITrainingCategoryItem[];\r\n  lstTrainingCategoryFilter: ITrainingCategoryItem[];\r\n  lstCity: cCityItem[];\r\n  lstAreas: cArea[];\r\n  todayDate = new Date();\r\n  IsDatesCorrect: boolean = true;\r\n  lstExamTemplate: cExamTemplateItem[];\r\n  modelExamTemplate: ModelEntitySubEntityIds;\r\n  lstCourses: ICourse[];\r\n\r\n  msgTrainingRegister: string;\r\n\r\n  constructor(private BLServiceTraining: ServiceTraining,\r\n    private BLServiceTrainee: ServiceTrainee,\r\n    private BLServiceUserProfile: ServiceUserProfile,\r\n    private BLServiceEntityManagement: ServiceEntityManagement,\r\n    private BLServiceDataManagement: ServiceDataManagement,\r\n    private BLServiceExamTemplate: ServiceExamTemplate,\r\n    private paginationService: CustomPaginationService,\r\n    private modalService: NgbModal,\r\n    private router: Router,\r\n    BLServiceShowMessage: ServiceShowMessage,\r\n    BLServiceLoginUser: ServiceLoginUser, BLTranslate: TranslateService,) {\r\n    super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n\r\n    this.BLTranslate.get(\"msgTrainingRegister\").subscribe(res => { this.msgTrainingRegister = res; });\r\n\r\n\r\n    this.loadData();\r\n    if (!this.IsTrainee) {\r\n      this.BLServiceEntityManagement.getEntityPartnerGetMy().subscribe({\r\n        next: lst => {\r\n          this.lstPartners = lst;\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n      this.BLServiceExamTemplate.ExamTemplateListActive().subscribe({\r\n        next: lst => {\r\n          this.lstExamTemplate = lst;\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n    this.BLServiceDataManagement.getTrainingTypeListActive().subscribe({\r\n      next: lst => {\r\n        this.lstTrainingTypes = lst;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n    this.BLServiceDataManagement.getCityListActive().subscribe({\r\n      next: lst => {\r\n        this.lstCity = lst;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n\r\n  }\r\n\r\n  onPartnerSelect() {\r\n    if (this.modelObj.PartnerId == \"\")\r\n      return;\r\n\r\n    if (!this.IsTrainee) {\r\n      this.BLServiceEntityManagement.getEntitySubPartnerGetMyByPartnerId(this.modelObj.PartnerId).subscribe({\r\n        next: lst => {\r\n          this.lstSubPartners = lst;\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n      if (!this.IsSubPartner) {\r\n        var tc = this.lstPartners.find(item => item.Id == this.modelObj.PartnerId).TrainingCenters;\r\n        this.lstTrainingCenters = tc.filter(a => a.IsActive == true).sort((a, b) => a.Name.localeCompare(b.Name));\r\n      }\r\n    }\r\n    this.lstTrainers = [];\r\n  }\r\n  onPartnerFilterSelect() {\r\n    if (this.filterObj.PartnerId == \"\")\r\n      return;\r\n\r\n    if (!this.IsTrainee) {\r\n      this.BLServiceEntityManagement.getEntitySubPartnerGetMyByPartnerId(this.filterObj.PartnerId).subscribe({\r\n        next: lst => {\r\n          this.lstSubPartnersFilter = lst;\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n    this.lstTrainers = [];\r\n  }\r\n  onSubPartnerSelect() {\r\n    if (this.modelObj.SubPartnerId == \"\")\r\n      return;\r\n    if (!this.IsTrainee) {\r\n      this.BLServiceUserProfile.GetMyTrainersBySubPartnerId(this.modelObj.SubPartnerId).subscribe({\r\n        next: lst => {\r\n          this.lstTrainers = lst;\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n    if (this.IsSubPartner) {\r\n\r\n      var sub = this.lstSubPartners.find(item => item.Id == this.modelObj.SubPartnerId);\r\n      this.lstTrainingCenters = sub.TrainingCenters;\r\n    }\r\n  }\r\n  onSubPartnerFilterSelect() {\r\n    if (this.filterObj.SubPartnerId == \"\")\r\n      return;\r\n    if (!this.IsTrainee) {\r\n      this.BLServiceUserProfile.GetMyTrainersBySubPartnerId(this.filterObj.SubPartnerId).subscribe({\r\n        next: lst => {\r\n          this.lstTrainersFilter = lst;\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n  }\r\n  onTrainingTypeSelect() {\r\n    if (this.modelObj.TrainingTypeId == \"\")\r\n      return;\r\n\r\n    this.BLServiceDataManagement.getTrainingCategoryListByTrainingType(this.modelObj.TrainingTypeId).subscribe({\r\n      next: lst => {\r\n        this.lstTrainingCategory = lst.filter(a => a.IsActive == true).sort((a, b) => a.Name.localeCompare(b.Name));;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  onTrainingTypeFilterSelect() {\r\n    if (this.filterObj.TrainingTypeId == \"\")\r\n      return;\r\n\r\n    this.BLServiceDataManagement.getTrainingCategoryListByTrainingType(this.filterObj.TrainingTypeId).subscribe({\r\n      next: lst => {\r\n        this.lstTrainingCategoryFilter = lst.filter(a => a.IsActive == true).sort((a, b) => a.Name.localeCompare(b.Name));;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  getCourses() {\r\n    var lst = this.lstTrainingCategory?.find(x => x.Id == this.modelObj.TrainingCategoryId)?.Course;\r\n    if (lst) {\r\n      var x = lst?.filter(y => y.IsActive == true).sort((a, b) => a.Name.localeCompare(b.Name));\r\n      return x;\r\n    }\r\n    return lst;\r\n  }\r\n  OnCitySelect() {\r\n\r\n    this.lstAreas = [];\r\n\r\n    var area = this.lstCity?.find(x => x.Id == this.modelObj.CityId).Areas;\r\n    if (area.length == 0)\r\n      return;\r\n    this.lstAreas = area.filter(y => y.IsActive == true).sort((x, y) => x.Name.localeCompare(y.Name));\r\n\r\n  }\r\n  onTrainingAdminApproved(Id: string) {\r\n    this.BLServiceTraining.SetAdminApproved(Id).subscribe({\r\n      next: obj => {\r\n        this.loadData();\r\n      }\r\n    });\r\n  }\r\n  onTrainingConfirm1(Id: string) {\r\n    this.BLServiceTraining.SetConfirmed1(Id).subscribe({\r\n      next: obj => {\r\n        this.loadData();\r\n      }\r\n    });\r\n  }\r\n  onTrainingConfirm2(Id: string) {\r\n    this.BLServiceTraining.SetConfirmed2(Id).subscribe({\r\n      next: obj => {\r\n        this.loadData();\r\n      }\r\n    });\r\n  }\r\n  private loadData(): void {\r\n\r\n    this.filterObj.CurrentPage = this.page.pageable.pageCurrent;\r\n    this.BLServiceTraining.searchTraining(this.filterObj).subscribe({\r\n      next: lst => {\r\n        this.page.pageable.pageSize = lst.pageSize;\r\n        this.page.totalElements = lst.totalCount;\r\n        this.page.content = lst.lstResult;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  public getNextPage(): void {\r\n    this.page.pageable = this.paginationService.getNextPage(this.page);\r\n    this.loadData();\r\n  }\r\n\r\n  public getPreviousPage(): void {\r\n    this.page.pageable = this.paginationService.getPreviousPage(this.page);\r\n    this.loadData();\r\n  }\r\n  public getloadPageCurrent(): void {\r\n    this.loadData();\r\n  }\r\n  setDeactivate(Id: string): void {\r\n    if (!confirm(this.msgsetDeleted))\r\n      return;\r\n\r\n    this.BLServiceTraining.setDeactivate(Id).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.msgDeletedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  filterbtn(): void {\r\n    this.page.pageable.pageCurrent = 1;\r\n    this.loadData();\r\n  }\r\n  createBtn(content): void {\r\n    // this.modelId = \"-1\";\r\n    // this.modelName = \"\";\r\n    this.modelIsStarted = false;\r\n    this.lstSubPartners = [];\r\n    this.lstTrainers = [];\r\n    this.lstAreas = [];\r\n    this.modelObj = new ModelTraining();\r\n    this.modelIsCreate = true;\r\n    this.modelNameEdited = \"\";\r\n    this.modalService.open(content, { size: 'lg', backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  ExportBtn() {\r\n    this.BLServiceTraining.ExportTraining(this.filterObj).subscribe({\r\n      next: data => {\r\n        \r\n        this.downloadFile(data);\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  modelSaveBtn(modelForm: NgForm): void {\r\n    if (!modelForm.valid)\r\n      return;\r\n\r\n    if (this.modelIsCreate) {\r\n      this.BLServiceTraining.create(this.modelObj).subscribe({\r\n        next: response => {\r\n          this.message.Success(this.msgSavedSuccessfully);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.modalService.dismissAll();\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n    else {\r\n      this.BLServiceTraining.update(this.modelObj).subscribe({\r\n        next: response => {\r\n          this.message.Success(this.msgSavedSuccessfully);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.modalService.dismissAll();\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n  }\r\n  openExamTemplate(content, obj: cTrainingItem) {\r\n    this.modelExamTemplate = new ModelEntitySubEntityIds();\r\n    this.modelExamTemplate.MainEntityId = obj.Id;\r\n    this.modelExamTemplate.SubEntityId = obj.ExamTemplateId;\r\n    this.modalService.open(content, { size: 'lg', backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  SaveExamTemplate(modelForm: NgForm) {\r\n    if (!modelForm.valid)\r\n      return;\r\n\r\n    if (this.modelIsCreate) {\r\n      this.BLServiceTraining.SaveExamTemplate(this.modelExamTemplate).subscribe({\r\n        next: response => {\r\n          this.message.Success(this.msgSavedSuccessfully);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.modalService.dismissAll();\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n  }\r\n  openBackDropCustomClass(content, obj: cTrainingItem) {\r\n\r\n    var model = new ModelTraining;\r\n    model.AreaId = obj.AreaId;\r\n    model.CityId = obj.CityId;\r\n    model.EndDate = obj.EndDate;\r\n    model.Id = obj.Id;\r\n    model.PartnerId = obj.PartnerId.Id;\r\n    model.SubPartnerId = obj.SubPartnerId.Id;\r\n    model.StartDate = obj.StartDate;\r\n    model.TrainingCategoryId = obj.TrainingCategoryId.Id;\r\n    model.TrainingTypeId = obj.TrainingTypeId.Id;\r\n    model.days = obj.days;\r\n    model.TrainerId = obj.TrainerId;\r\n    model.TrainingCenterId = obj.TrainingCenterId.Id;\r\n    model.Type = obj.Type.toString();\r\n    model.IsOnline = obj.IsOnline;\r\n\r\n    this.modelIsStarted = false;\r\n    var start = new Date(model.StartDate );\r\n    var end = new Date(model.EndDate);\r\n    if (start <= this.todayDate && end>= this.todayDate)\r\n      this.modelIsStarted = true;\r\n\r\n    this.modelObj = model;\r\n    this.onPartnerSelect();\r\n    this.onSubPartnerSelect();\r\n    this.onTrainingTypeSelect();\r\n    this.OnCitySelect();\r\n\r\n    this.modelIsCreate = false;\r\n    //this.modelNameEdited = obj.Name;\r\n    this.modalService.open(content, { size: 'lg', backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  openViewOnly(content, obj: cTrainingItem) {\r\n\r\n    var model = new ModelTraining;\r\n    this.lstCourses = [];\r\n    this.BLServiceUserProfile.getGetByid(obj.TrainerId).subscribe({\r\n      next: user => {\r\n        this.modelObj.TrainerId = user.Name;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n\r\n    this.BLServiceDataManagement.getTrainingCategoryGetByid(obj.TrainingCategoryId.Id).subscribe({\r\n      next: cat => {\r\n\r\n        if (cat) {\r\n          var x = cat.Course?.filter(y => y.IsActive == true).sort((a, b) => {\r\n            if (a.Name > b.Name)\r\n              return 1;\r\n            else\r\n              return -1\r\n          });\r\n          this.lstCourses = x;\r\n        }\r\n\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n\r\n\r\n    model.EndDate = obj.EndDate;\r\n    model.Id = obj.Id;\r\n    model.PartnerId = obj.PartnerId.Name;\r\n    model.SubPartnerId = obj.SubPartnerId.Name;\r\n    model.StartDate = obj.StartDate;\r\n    model.TrainingCategoryId = obj.TrainingCategoryId.Name;\r\n    model.TrainingTypeId = obj.TrainingTypeId.Name;\r\n    model.days = obj.days;\r\n    model.TrainingCenterId = obj.TrainingCenterId.Name;\r\n    model.Type = obj.Type.toString();\r\n    model.IsOnline = obj.IsOnline;\r\n\r\n\r\n    var city = this.lstCity?.find(x => x.Id == obj.CityId);\r\n    model.CityId = city?.Name;\r\n\r\n    var area = city.Areas.find(x => x.Id == obj.AreaId);\r\n    model.AreaId = area?.Name;\r\n\r\n    this.modelObj = model;\r\n\r\n    this.modelIsCreate = false;\r\n    this.modalService.open(content, { size: 'lg', backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  isCourseStarted(startdate: Date) {\r\n    var d = new Date(startdate);\r\n    if (d < this.todayDate) //if start date less than today, course has started\r\n      return true;\r\n\r\n    return false;\r\n  }\r\n  isCourseEnded(endtdate: Date) {\r\n    var d = new Date(endtdate);\r\n    if (d < this.todayDate) //if start date less than today, course has started\r\n      return true;\r\n\r\n    return false;\r\n  }\r\n  ListTrainees(Id: string) {\r\n    this.router.navigate(['/Training/Trainees/' + Id]);\r\n  }\r\n  Attendance(Id: string) {\r\n    this.router.navigate(['/Training/Attendance/' + Id]);\r\n  }\r\n  Register(Id: string) {\r\n    if (!confirm(this.msgTrainingRegister))\r\n      return;\r\n\r\n    this.BLServiceTrainee.TraineeRegister(Id).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.msgSavedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        //this.loadData();\r\n        //this.modalService.dismissAll();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  onStartDateSelect(param) {\r\n    this.IsDatesCorrect = this.CompareTwoDates(this.modelObj.StartDate, this.modelObj.EndDate);\r\n  }\r\n  onEndDateSelect(param) {\r\n    this.IsDatesCorrect = this.CompareTwoDates(this.modelObj.StartDate, param);\r\n  }\r\n  onLocationChange(e, fileType: string) {\r\n    //if (e.target.value == \"1\") {\r\n    if (fileType == \"1\") {\r\n      this.modelObj.IsOnline = true;\r\n    }\r\n    else {\r\n      this.modelObj.IsOnline = false;\r\n    }\r\n  }\r\n  // }\r\n\r\n}\r\n","<section class=\"my-5 \">\r\n    <div class=\"container container-max\">\r\n        <div class='row'>\r\n            <h4 class=\"mb-4\">{{'TrainingpageTitle' | translate }}</h4>\r\n        </div>\r\n\r\n        <div class=\"row\" *ngIf=\"!IsTrainee\">\r\n            <div class=\"col-sm-4\">\r\n                <mat-form-field>\r\n                    <mat-label>{{'GenericPartner' | translate }}</mat-label>\r\n                    <mat-select id=\"filterPartner\" placeholder=\"{{'GenericSelectPartner' | translate }}\"\r\n                        (selectionChange)=\"onPartnerFilterSelect()\" [(ngModel)]=\"filterObj.PartnerId\"\r\n                        name=\"filterPartnerVar\">\r\n                        <mat-option value=\"\">{{'GenericSelectPartner' | translate }}</mat-option>\r\n                        <mat-option *ngFor=\"let item of lstPartners\" value=\"{{item.Id}}\">\r\n                            {{item.Name}}</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"col-sm-4\">\r\n                <mat-form-field>\r\n                    <mat-label>{{'GenericSubPartner' | translate }}</mat-label>\r\n                    <mat-select id=\"filterSubPartnerId\" placeholder=\"{{'GenericSelectPartner' | translate }}\"\r\n                        (selectionChange)=\"onSubPartnerFilterSelect()\" [(ngModel)]=\"filterObj.SubPartnerId\"\r\n                        name=\"filterSubPartner\">\r\n                        <mat-option value=\"\">{{'GenericSelectPartner' | translate }}</mat-option>\r\n                        <mat-option *ngFor=\"let item of lstSubPartnersFilter\" value=\"{{item.Id}}\">\r\n                            {{item.Name}}</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"col-sm-4\">\r\n                <mat-form-field>\r\n                    <mat-label>{{'GenericTrainer' | translate }}</mat-label>\r\n                    <mat-select id=\"filterTrainer\" placeholder=\"{{'GenericSelectTrainer' | translate }}\"\r\n                        [(ngModel)]=\"filterObj.TrainerId\" name=\"filterTrainerVar\">\r\n                        <mat-option *ngFor=\"let item of lstTrainersFilter\" value=\"{{item.Id}}\">\r\n                            {{item.Name}}</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-6\">\r\n                <mat-form-field>\r\n                    <mat-label>{{'GenericTrainingType' | translate }}</mat-label>\r\n                    <mat-select id=\"filterTrainingType\" placeholder=\"Select a TrainingType\"\r\n                        (selectionChange)=\"onTrainingTypeFilterSelect()\" [(ngModel)]=\"filterObj.TrainingTypeId\"\r\n                        name=\"filterTrainingTypeVar\">\r\n                        <mat-option value=\"\">{{'GenericSelectTrainingType' | translate }}</mat-option>\r\n                        <mat-option *ngFor=\"let item of lstTrainingTypes\" value=\"{{item.Id}}\">\r\n                            {{item.Name}}</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"col-sm-6\">\r\n                <mat-form-field>\r\n                    <mat-label>{{'GenericTrainingCategory' | translate }}</mat-label>\r\n                    <mat-select id=\"filtertrainingCategory\"\r\n                        placeholder=\"{{'GenericSelectTrainingCategory' | translate }}\"\r\n                        [(ngModel)]=\"filterObj.TrainingCategoryId\" name=\"filtertrainingCategoryVar\">\r\n                        <mat-option value=\"\">{{'GenericSelectTrainingCategory' | translate }}</mat-option>\r\n                        <mat-option *ngFor=\"let item of lstTrainingCategoryFilter\" value=\"{{item.Id}}\">\r\n                            {{item.Name}}</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n                <input type=\"submit\" value=\"{{'GenericSearch' | translate }}\" class=\"btn color-bg-02 white-text\"\r\n                    (click)=\"filterbtn()\">\r\n            </div>\r\n        </div>\r\n        <div class='row' *ngIf=\"!IsTrainee\">\r\n            <div class=\"col-sm-12 md-form pull-right mb-1\">\r\n                <input type=\"button\" class=\"pull-right btn color-bg-01 white-text\"\r\n                    value=\"{{'GenericCreateNew' | translate }}\" (click)=\"createBtn(content)\">\r\n                <input type=\"button\" class=\"pull-right btn color-bg-02 white-text Excel\"\r\n                    value=\"{{'ExportToExcel' | translate }}\" (click)=\"ExportBtn()\">\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"col-md-12\">\r\n            <div class='table-responsive '>\r\n                <table class='table' *ngIf='page.content && page.content.length'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>{{'GenericTrainer' | translate }} ({{'GenericPartner' | translate }})</th>\r\n                            <th>{{'GenericType' | translate }}({{'TrainingCategory' | translate }})</th>\r\n                            <th>{{'TrainingDates' | translate }}</th>\r\n                            <!-- <th *ngIf=\"!IsTrainee\">{{'CertificateApprove' | translate }}</th>\r\n                            <th *ngIf=\"!IsTrainee\">{{'TrainingConfirm' | translate }} 1</th> -->\r\n                            <th *ngIf=\"!IsTrainee\">{{'TrainingConfirm' | translate }} 2</th>\r\n                            <th>{{'GenericAction' | translate }}</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor='let obj of page.content'>\r\n                            <td>{{ obj.TrainerCount }} - {{obj.TrainerDetails.Name}} ({{ obj.PartnerId.Name}})</td>\r\n                            <td>{{ obj.TrainingTypeId.Name}}({{ obj.TrainingCategoryId.Name}})</td>\r\n                            <td>{{ obj.StartDate | date:'dd/MM/yyyy'}} -\r\n                                {{ obj.EndDate | date:'dd/MM/yyyy'}}</td>\r\n                            <td *ngIf=\"( !IsTrainee)  \">\r\n                                <mat-slide-toggle *ngIf=\"IsAdmin && !obj.IsConfirm2 && isCourseEnded(obj.EndDate)\"\r\n                                    (change)=\"onTrainingConfirm2(obj.Id)\" color=\"primary\"></mat-slide-toggle>\r\n                                <span><i *ngIf=\" obj.IsConfirm2\" class=\"fas fa-check\"></i></span>\r\n                            </td>\r\n                            <!-- <td *ngIf=\"( !IsTrainee)   \">\r\n                                <i *ngIf=\"obj.IsConfirm1\" class=\"fas fa-check\"></i>\r\n                            </td> -->\r\n                            <!-- <td *ngIf=\"( !IsTrainee)  \">\r\n                                <i *ngIf=\"obj.IsConfirm2\" class=\"fas fa-check\"></i>\r\n                            </td> -->\r\n                            <td *ngIf=\"!IsTrainee\">\r\n                                <a *ngIf=\"obj.CanEdit \" title=\"{{'GenericEdit' | translate }}\"\r\n                                    (click)=\"openBackDropCustomClass(content,obj)\"><i\r\n                                        title=\"{{'GenericEdit' | translate }}\" class=\"far fa-edit\"></i></a>\r\n                                <a *ngIf=\"!obj.CanEdit\" title=\"{{'GenericView' | translate }}\"\r\n                                    (click)=\"openViewOnly(contentViewOnly,obj)\"><i\r\n                                        title=\"{{'GenericView' | translate }}\" class=\"far fa-eye\"></i></a>\r\n                                <a *ngIf=\"IsAdmin || IsTrainer\" title=\"{{'TrainingTrainees' | translate }}\"\r\n                                    (click)=\"ListTrainees(obj.Id)\"><i title=\"{{'TrainingTrainees' | translate }}\"\r\n                                        class=\"fas fa-users\"></i></a>\r\n                                <a title=\"{{'TrainingAttendance' | translate }}\" (click)=\"Attendance(obj.Id)\"><i\r\n                                        title=\"{{'TrainingAttendance' | translate }}\"\r\n                                        class=\"fas fa-clipboard-list\"></i></a>\r\n                                <a *ngIf=\"IsAdmin\" title=\"{{'HeaderExamTemplates' | translate }}\"\r\n                                    (click)=\"openExamTemplate(contentExamTemplate, obj)\"><i\r\n                                        title=\"{{'HeaderExamTemplates' | translate }}\" class=\"fas fa-diagnoses\"></i></a>\r\n                                <a *ngIf=\"(IsAdmin || IsPartner ) && compareDate(obj.StartDate , todayDate) == 1\"\r\n                                    title=\"{{'GenericDeactivate' | translate }}\" (click)=\"setDeactivate(obj.Id)\"><i\r\n                                        title=\"{{'TrainingDelete' | translate }}\" class=\"fas fa-trash-alt\"></i></a>\r\n                            </td>\r\n                            <td *ngIf=\"IsTrainee\">\r\n                                <a title=\"{{'TrainingRegister' | translate }}\" (click)=\"Register(obj.Id)\"><i\r\n                                        title=\"{{'TrainingRegister' | translate }}\" class=\"far fa-registered\"></i></a>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <app-custom-pagination [page]=\"page\" (nextPageEvent)=\"getNextPage()\" (previousPageEvent)=\"getPreviousPage()\"\r\n                (loadPageCurrentEvent)=\"getloadPageCurrent()\">\r\n            </app-custom-pagination>\r\n        </div>\r\n    </div>\r\n    <div>\r\n        <ng-template role=\"dialog\" #content let-modal class=\"modal fade\">\r\n            <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n                <div class=\"modal-content\">\r\n                    <div class=\"modal-header color-bg-01 white-text text-center\">\r\n\r\n                        <h6 class=\"modal-title\">\r\n                            {{(modelIsCreate ? 'GenericCreate'   : 'GenericEditing') | translate}} :\r\n                            {{modelIsCreate ? (\"GenericNew\" | translate) : modelNameEdited}}\r\n                        </h6>\r\n                    </div>\r\n                    <div class=\"modal-body pt-0\">\r\n                        <form novalidate (ngSubmit)=\"modelSaveBtn(modelForm)\" #modelForm=\"ngForm\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-4\">\r\n                                    <mat-form-field>\r\n                                        <mat-label>{{'GenericPartner' | translate }}</mat-label>\r\n                                        <mat-select id=\"modelPartner\" [disabled]=\"modelIsStarted\"\r\n                                            placeholder=\"{{'GenericSelectPartner' | translate }}\" required\r\n                                            (selectionChange)=\"onPartnerSelect()\" [(ngModel)]=\"modelObj.PartnerId\"\r\n                                            name=\"modelPartnerVar\" #modelPartnerVar=\"ngModel\" name=\"modelPartner\"\r\n                                            [ngClass]=\"{'is-invalid': (modelPartnerVar.touched || modelPartnerVar.dirty) && !modelPartnerVar.valid }\">\r\n                                            <!-- <mat-option value=\"0\">{{'GenericSelectPartner' | translate }}</mat-option> -->\r\n                                            <mat-option *ngFor=\"let item of lstPartners\" value=\"{{item.Id}}\">\r\n                                                {{item.Name}}</mat-option>\r\n                                        </mat-select>\r\n                                        <mat-error *ngIf=\"modelPartnerVar.errors?.required\">\r\n                                            {{'GenericSelectPartnerError' | translate }}\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-sm-4\">\r\n                                    <mat-form-field>\r\n                                        <mat-label>{{'GenericSubPartner' | translate }}</mat-label>\r\n                                        <mat-select id=\"modelSubPartner\" placeholder=\"Select a SubPartner\" required [disabled]=\"modelIsStarted\"\r\n                                            (selectionChange)=\"onSubPartnerSelect()\" [(ngModel)]=\"modelObj.SubPartnerId\"\r\n                                            name=\"modelSubPartnerVar\" #modelSubPartnerVar=\"ngModel\"\r\n                                            name=\"modelSubPartner\"\r\n                                            [ngClass]=\"{'is-invalid': (modelSubPartnerVar.touched || modelSubPartnerVar.dirty) && !modelSubPartnerVar.valid }\">\r\n                                            <!-- <mat-option value=\"0\">{{'GenericSelectSubPartner' | translate }}\r\n                                            </mat-option> -->\r\n                                            <mat-option *ngFor=\"let item of lstSubPartners\" value=\"{{item.Id}}\">\r\n                                                {{item.Name}}</mat-option>\r\n                                        </mat-select>\r\n                                        <mat-error *ngIf=\"modelSubPartnerVar.errors?.required\">\r\n                                            {{'GenericSelectSubPartnerError' | translate }}\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-sm-4\">\r\n                                    <mat-form-field>\r\n                                        <mat-label>{{'GenericTrainer' | translate }}</mat-label>\r\n                                        <mat-select id=\"modelTrainer\" placeholder=\"{{'GenericTrainer' | translate }}\" [disabled]=\"modelIsStarted\"\r\n                                            required [(ngModel)]=\"modelObj.TrainerId\" name=\"modelTrainerVar\"\r\n                                            #modelTrainerVar=\"ngModel\" name=\"modelTrainer\"\r\n                                            [ngClass]=\"{'is-invalid': (modelTrainerVar.touched || modelTrainerVar.dirty) && !modelTrainerVar.valid }\">\r\n                                            <!-- <mat-option value=\"0\">Select a Trainer</mat-option> -->\r\n                                            <mat-option *ngFor=\"let item of lstTrainers\" value=\"{{item.Id}}\">\r\n                                                {{item.Name}}\r\n                                            </mat-option>\r\n                                        </mat-select>\r\n                                        <mat-error *ngIf=\"modelTrainerVar.errors?.required\">\r\n                                            {{'TrainingSelectTrainerError' | translate }}\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-4\">\r\n                                    <mat-form-field>\r\n                                        <mat-label>{{'GenericTrainingCenter' | translate }}</mat-label>\r\n                                        <mat-select id=\"modelTrainingCenter\" placeholder=\"Select a Training Center\" [disabled]=\"modelIsStarted\"\r\n                                            required [(ngModel)]=\"modelObj.TrainingCenterId\"\r\n                                            #modelTrainingCenterVar=\"ngModel\" name=\"modelTrainingCenter\"\r\n                                            [ngClass]=\"{'is-invalid': (modelTrainingCenterVar.touched || modelTrainingCenterVar.dirty) && !modelTrainingCenterVar.valid }\">\r\n                                            <!-- <mat-option value=\"0\">{{'TrainingTrainingCenter' | translate }}</mat-option> -->\r\n                                            <mat-option *ngFor=\"let item of lstTrainingCenters\" value=\"{{item.Id}}\">\r\n                                                {{item.Name}}</mat-option>\r\n                                        </mat-select>\r\n                                        <mat-error *ngIf=\"modelTrainingCenterVar.errors?.required\">\r\n                                            {{'TrainingTrainingCenterError' | translate }}</mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-sm-4\">\r\n                                    <mat-form-field>\r\n                                        <mat-label>{{'GenericTrainingType' | translate }}</mat-label>\r\n                                        <mat-select id=\"modelTrainingType\" placeholder=\"{{'TrainingType' | translate }}\"\r\n                                            required (selectionChange)=\"onTrainingTypeSelect()\"\r\n                                            [(ngModel)]=\"modelObj.TrainingTypeId\" name=\"modelTrainingTypeVar\"\r\n                                            #modelTrainingTypeVar=\"ngModel\"\r\n                                            [ngClass]=\"{'is-invalid': (modelTrainingTypeVar.touched || modelTrainingTypeVar.dirty) && !modelTrainingTypeVar.valid }\">\r\n                                            <!-- <mat-option value=\"0\">{{'GenericSelectTrainingType' | translate }}\r\n                                            </mat-option> -->\r\n                                            <mat-option *ngFor=\"let item of lstTrainingTypes\" value=\"{{item.Id}}\">\r\n                                                {{item.Name}}</mat-option>\r\n                                        </mat-select>\r\n                                        <mat-error *ngIf=\"modelTrainingTypeVar.errors?.required\">\r\n                                            {{'TrainingTypeError' | translate }}\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-sm-4\">\r\n                                    <mat-form-field>\r\n                                        <mat-label>{{'GenericTrainingCategory' | translate }}</mat-label>\r\n                                        <mat-select id=\"modeltrainingCategory\"\r\n                                            placeholder=\"{{'GenericSelectTrainingCategory' | translate }}\" required\r\n                                            [(ngModel)]=\"modelObj.TrainingCategoryId\" name=\"modeltrainingCategoryVar\"\r\n                                            #modeltrainingCategoryVar=\"ngModel\" name=\"modeltrainingCategory\"\r\n                                            [ngClass]=\"{'is-invalid': (modeltrainingCategoryVar.touched || modeltrainingCategoryVar.dirty) && !modeltrainingCategoryVar.valid }\">\r\n                                            <!-- <mat-option value=\"0\">{{'GenericSelectTrainingCategory' | translate }}\r\n                                            </mat-option> -->\r\n                                            <mat-option *ngFor=\"let item of lstTrainingCategory\" value=\"{{item.Id}}\">\r\n                                                {{item.Name}}</mat-option>\r\n                                        </mat-select>\r\n                                        <mat-error *ngIf=\"modeltrainingCategoryVar.errors?.required\">\r\n                                            {{'TrainingCategoryError' | translate }}\r\n                                        </mat-error>\r\n                                    </mat-form-field><br>\r\n                                    <mat-hint class=\"matHintTraining\">\r\n                                        <span *ngFor=\"let item of getCourses()\">{{item.Name}}, </span>\r\n                                    </mat-hint>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-4\">\r\n                                    <mat-form-field>\r\n                                        <mat-label>{{'GenericType' | translate }}</mat-label>\r\n                                        <mat-select id=\"modelType\" placeholder=\"{{'AccountSelectType' | translate }}\"\r\n                                            required [(ngModel)]=\"modelObj.Type\" name=\"modelTypeVar\" [disabled]=\"modelIsStarted\"\r\n                                            #modelTypeVar=\"ngModel\" name=\"modelType\"\r\n                                            [ngClass]=\"{'is-invalid': (modelTypeVar.touched || modelTypeVar.dirty) && !modelTypeVar.valid }\">\r\n                                            <mat-option value=\"1\">{{'TrainingPublic' | translate }}</mat-option>\r\n                                            <mat-option value=\"2\">{{'TrainingPrivate' | translate }}</mat-option>\r\n                                        </mat-select>\r\n                                        <mat-error *ngIf=\"modelTypeVar.errors?.required\">\r\n                                            {{'TrainingSelectTypeError' | translate }}</mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-sm-4\">\r\n                                    <mat-form-field>\r\n                                        <mat-label>{{'GenericCity' | translate }}</mat-label>\r\n                                        <mat-select id=\"modelCity\" placeholder=\"{{'AccountSelectCity' | translate }}\"\r\n                                            required [(ngModel)]=\"modelObj.CityId\" name=\"modelCityVar\" [disabled]=\"modelIsStarted\"\r\n                                            (selectionChange)=\"OnCitySelect()\" #modelCityVar=\"ngModel\" name=\"modelCity\"\r\n                                            [ngClass]=\"{'is-invalid': (modelCityVar.touched || modelCityVar.dirty) && !modelCityVar.valid }\">\r\n                                            <!-- <mat-option value=\"0\">Select a City</mat-option> -->\r\n                                            <mat-option *ngFor=\"let item of lstCity\" value=\"{{item.Id}}\">\r\n                                                {{item.Name}}</mat-option>\r\n                                        </mat-select>\r\n                                        <mat-error *ngIf=\"modelCityVar.errors?.required\">\r\n                                            {{'AccountSelectCityError' | translate }}\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-sm-4\">\r\n                                    <mat-form-field>\r\n                                        <mat-label>{{'TrainingArea' | translate }}</mat-label>\r\n                                        <mat-select id=\"modelArea\" placeholder=\"Select a Area\" required [disabled]=\"modelIsStarted\"\r\n                                            [(ngModel)]=\"modelObj.AreaId\" name=\"filterTypeId\" #modelAreaVar=\"ngModel\"\r\n                                            name=\"modelArea\"\r\n                                            [ngClass]=\"{'is-invalid': (modelAreaVar.touched || modelAreaVar.dirty) && !modelAreaVar.valid }\">\r\n                                            <!-- <mat-option value=\"0\">{{'TrainingAreaSelect' | translate }}</mat-option> -->\r\n                                            <mat-option *ngFor=\"let item of lstAreas\" value=\"{{item.Id}}\">\r\n                                                {{item.Name}}</mat-option>\r\n                                        </mat-select>\r\n                                        <mat-error *ngIf=\"modelAreaVar.errors?.required\">\r\n                                            {{'TrainingAreaSelectError' | translate }}\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-4\">\r\n                                    <mat-form-field class=\"example-full-width\">\r\n                                        <mat-label>{{'TrainingStart' | translate }}</mat-label>\r\n                                        <input matInput [owlDateTime]=\"dt1\" [min]=\"todayDate\" required [disabled]=\"modelIsStarted\"\r\n                                            id=\"modelStartDateId\" type=\"text\"\r\n                                            placeholder=\"{{'TrainingStartSelect' | translate }}\" required\r\n                                            [(ngModel)]=\"modelObj.StartDate\" #modelStartDateVar=\"ngModel\"\r\n                                            name=\"modelStartDate\" (ngModelChange)=\"onStartDateSelect($event)\"\r\n                                            [ngClass]=\"{'is-invalid': (modelStartDateVar.touched || modelStartDateVar.dirty) && !modelStartDateVar.valid }\" />\r\n                                        <mat-error *ngIf=\"modelStartDateVar.errors?.required\">\r\n                                            {{'TrainingStartError' | translate }}\r\n                                        </mat-error>\r\n                                        <mat-icon matSuffix [owlDateTimeTrigger]=\"dt1\"><i class=\"fa fa-calendar\"></i>\r\n                                        </mat-icon>\r\n                                    </mat-form-field>\r\n                                    <owl-date-time #dt1></owl-date-time>\r\n                                </div>\r\n                                <div class=\"col-sm-4\">\r\n                                    <mat-form-field class=\"example-full-width\">\r\n                                        <mat-label>{{'TrainingEnd' | translate }}</mat-label>\r\n                                        <input matInput [owlDateTime]=\"dt2\" [min]=\"todayDate\" required [disabled]=\"modelIsStarted\"\r\n                                            id=\"modelEndDateId\" type=\"text\"\r\n                                            placeholder=\"{{'TrainingEndSelect' | translate }}\" required\r\n                                            (ngModelChange)=\"onEndDateSelect($event)\" [(ngModel)]=\"modelObj.EndDate\"\r\n                                            #modelEndDateVar=\"ngModel\" name=\"modelEndDate\"\r\n                                            [ngClass]=\"{'is-invalid': (modelEndDateVar.touched || modelEndDateVar.dirty) && !modelEndDateVar.valid }\" />\r\n                                        <mat-error *ngIf=\"modelEndDateVar.errors?.required\">\r\n                                            {{'TrainingEndError' | translate }}</mat-error>\r\n                                        <mat-icon matSuffix [owlDateTimeTrigger]=\"dt2\"><i class=\"fa fa-calendar\"></i>\r\n                                        </mat-icon>\r\n                                    </mat-form-field>\r\n                                    <owl-date-time #dt2></owl-date-time>\r\n                                    <mat-error class=\"MatError\" *ngIf=\"!IsDatesCorrect\">\r\n                                        {{'TrainingDateError' | translate }}</mat-error>\r\n                                </div>\r\n                                <div class=\"col-sm-4\">\r\n                                    <mat-form-field>\r\n                                        <mat-label>{{'TrainingDays' | translate }}</mat-label>\r\n                                        <mat-select multiple id=\"modelDays\" [disabled]=\"modelIsStarted\"\r\n                                            placeholder=\"{{'TrainingDaysSelect' | translate }}\" required\r\n                                            [(ngModel)]=\"modelObj.days\" name=\"modelDaysVar\" #modelDaysVar=\"ngModel\"\r\n                                            name=\"modelDays\"\r\n                                            [ngClass]=\"{'is-invalid': (modelDaysVar.touched || modelDaysVar.dirty) && !modelDaysVar.valid }\">\r\n                                            <!-- <mat-option value=\"0\">{{'TrainingDaysSelect' | translate }}</mat-option> -->\r\n                                            <mat-option value=\"1\">{{'TrainingSunday' | translate }}</mat-option>\r\n                                            <mat-option value=\"2\">{{'TrainingMonday' | translate }}</mat-option>\r\n                                            <mat-option value=\"3\">{{'TrainingTuesday' | translate }}</mat-option>\r\n                                            <mat-option value=\"4\">{{'TrainingWednesday' | translate }}</mat-option>\r\n                                            <mat-option value=\"5\">{{'TrainingThursday' | translate }}</mat-option>\r\n                                            <mat-option value=\"6\">{{'TrainingFriday' | translate }}</mat-option>\r\n                                            <mat-option value=\"7\">{{'TrainingSaturday' | translate }}</mat-option>\r\n                                        </mat-select>\r\n                                        <mat-error *ngIf=\"modelDaysVar.errors?.required\">\r\n                                            {{'TrainingDaysError' | translate }}\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-12\">\r\n                                    <div class=\"form-group \">\r\n                                        <span class=\"pr-3\">{{'TrainingIsOnline' | translate }}:</span>\r\n                                        <input type=\"radio\" [checked]=\"modelObj.IsOnline\" name=\"TrainingIsOnline\" [disabled]=\"modelIsStarted\"\r\n                                            (change)=\"onLocationChange($event,'1')\"\r\n                                            class=\"mr-2\" />{{'TrainingOnline' | translate }}\r\n                                        <input type=\"radio\" [checked]=\"!modelObj.IsOnline\" name=\"TrainingIsOnline\" [disabled]=\"modelIsStarted\"\r\n                                            (change)=\"onLocationChange($event,'0')\"\r\n                                            class=\"mr-2 ml-4\" />{{'TrainingOffline' | translate }}\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"form-group pull-right md-form\">\r\n                                <button class=\"btn color-bg-01 btn-sm white-text\" type=\"submit\" style=\"width:80px\"\r\n                                    [disabled]=\"!modelForm.valid || !IsDatesCorrect\">{{'GenericSave' | translate }}</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                    <div class=\"modal-footer\">\r\n                        <button type=\"button\" class=\"btn color-bg-02 btn-sm white-text\"\r\n                            (click)=\"modal.close('Close click')\">{{'GenericClose' | translate }}</button>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </ng-template>\r\n    </div>\r\n    <div>\r\n        <ng-template role=\"dialog\" #contentViewOnly let-modal class=\"modal fade\">\r\n            <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n                <div class=\"modal-content\">\r\n                    <div class=\"modal-header color-bg-01 white-text text-center\">\r\n\r\n                        <h6 class=\"modal-title\">\r\n                            {{(modelIsCreate ? 'GenericCreate'   : 'GenericEditing') | translate}} :\r\n                            {{modelIsCreate ? (\"GenericNew\" | translate) : modelNameEdited}}\r\n                        </h6>\r\n                    </div>\r\n                    <div class=\"modal-body pt-0\">\r\n\r\n                        <form novalidate (ngSubmit)=\"modelSaveBtn(modelForm)\" #modelForm=\"ngForm\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-4\">\r\n                                    <mat-label class=\"font-weight-bold\">{{'GenericPartner' | translate }}: </mat-label>\r\n                                    <mat-label class=\"view\">{{modelObj.PartnerId}}</mat-label>\r\n                                </div>\r\n                                <div class=\"col-sm-4\">\r\n                                    <mat-label class=\"font-weight-bold\">{{'GenericSubPartner' | translate }}:\r\n                                    </mat-label>\r\n                                    <mat-label class=\"view\">{{modelObj.SubPartnerId}}</mat-label>\r\n                                </div>\r\n                                <div class=\"col-sm-4\">\r\n                                    <mat-label class=\"font-weight-bold\">{{'GenericTrainer' | translate }}: </mat-label>\r\n                                    <mat-label class=\"view\">{{modelObj.TrainerId}}</mat-label>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-4\">\r\n                                    <mat-label class=\"font-weight-bold\">{{'GenericTrainingCenter' | translate }}:\r\n                                    </mat-label>\r\n                                    <mat-label class=\"view\">{{modelObj.TrainingCenterId}}</mat-label>\r\n                                </div>\r\n                                <div class=\"col-sm-4\">\r\n                                    <mat-label class=\"font-weight-bold\">{{'GenericTrainingType' | translate }}:\r\n                                    </mat-label>\r\n                                    <mat-label class=\"view\">{{modelObj.TrainingTypeId}}</mat-label>\r\n                                </div>\r\n                                <div class=\"col-sm-4\">\r\n                                    <mat-label class=\"font-weight-bold\">{{'GenericTrainingCategory' | translate }}:\r\n                                    </mat-label>\r\n                                    <mat-label class=\"view\">{{modelObj.TrainingCategoryId}}</mat-label><br>\r\n                                    <div class=\"viewHint\">\r\n                                        <span *ngFor=\"let item of lstCourses\">{{item.Name}}, </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-4\">\r\n\r\n                                    <mat-label class=\"font-weight-bold\">{{'GenericType' | translate }}: </mat-label>\r\n                                    <mat-label class=\"view\" *ngIf=\"modelObj.Type == '1'\">\r\n                                        {{'TrainingPublic' | translate }}</mat-label>\r\n                                    <mat-label class=\"view\" *ngIf=\"modelObj.Type == '2'\">\r\n                                        {{'TrainingPrivate' | translate }}</mat-label>\r\n                                </div>\r\n                                <div class=\"col-sm-4\">\r\n                                    <mat-label class=\"font-weight-bold\">{{'GenericCity' | translate }}: </mat-label>\r\n                                    <mat-label class=\"view\">{{modelObj.CityId}}</mat-label>\r\n                                </div>\r\n                                <div class=\"col-sm-4\">\r\n                                    <mat-label class=\"font-weight-bold\">{{'TrainingArea' | translate }}: </mat-label>\r\n                                    <mat-label class=\"view\">{{modelObj.AreaId}}</mat-label>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-4\">\r\n                                    <mat-label class=\"font-weight-bold\">{{'TrainingStart' | translate }}: </mat-label>\r\n                                    <mat-label class=\"view\">{{ modelObj.StartDate | date:\"dd/MM/yyyy\" }}</mat-label>\r\n                                </div>\r\n                                <div class=\"col-sm-4\">\r\n                                    <mat-label class=\"font-weight-bold\">{{'TrainingEnd' | translate }}: </mat-label>\r\n                                    <mat-label class=\"view\">{{ modelObj.EndDate | date:\"dd/MM/yyyy\" }}</mat-label>\r\n                                </div>\r\n                                <div class=\"col-sm-4\">\r\n                                    <mat-label class=\"font-weight-bold\">{{'TrainingDays' | translate }}: </mat-label>\r\n                                    <mat-label class=\"view\" *ngIf=\"modelObj.days.includes('1')\">\r\n                                        {{'TrainingSunday' | translate }}, </mat-label>\r\n                                    <mat-label class=\"view\" *ngIf=\"modelObj.days.includes('2')\">\r\n                                        {{'TrainingMonday' | translate }}, </mat-label>\r\n                                    <mat-label class=\"view\" *ngIf=\"modelObj.days.includes('3')\">\r\n                                        {{'TrainingTuesday' | translate }}, </mat-label>\r\n                                    <mat-label class=\"view\" *ngIf=\"modelObj.days.includes('4')\">\r\n                                        {{'TrainingWednesday' | translate }}, </mat-label>\r\n                                    <mat-label class=\"view\" *ngIf=\"modelObj.days.includes('5')\">\r\n                                        {{'TrainingThursday' | translate }}, </mat-label>\r\n                                    <mat-label class=\"view\" *ngIf=\"modelObj.days.includes('6')\">\r\n                                        {{'TrainingFriday' | translate }}, </mat-label>\r\n                                    <mat-label class=\"view\" *ngIf=\"modelObj.days.includes('7')\">\r\n                                        {{'TrainingSaturday' | translate }}, </mat-label>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-12\">\r\n                                    <mat-label class=\"font-weight-bold\">{{'TrainingIsOnline' | translate }}:\r\n                                    </mat-label>\r\n                                    <mat-label class=\"view\" *ngIf=\"modelObj.IsOnline\">{{'TrainingOnline' | translate }}\r\n                                    </mat-label>\r\n                                    <mat-label class=\"view\" *ngIf=\"!modelObj.IsOnline\">\r\n                                        {{'TrainingOffline' | translate }}</mat-label>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                    <div class=\"modal-footer\">\r\n                        <button type=\"button\" class=\"btn color-bg-02 btn-sm white-text\"\r\n                            (click)=\"modal.close('Close click')\">{{'GenericClose' | translate }}</button>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </ng-template>\r\n    </div>\r\n    <div>\r\n        <ng-template role=\"dialog\" #contentExamTemplate let-modal class=\"modal fade\">\r\n            <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n                <div class=\"modal-content\">\r\n                    <div class=\"modal-header color-bg-01 white-text text-center\">\r\n\r\n                        <h6 class=\"modal-title\">\r\n                            {{'HeaderExamTemplates' | translate }}\r\n                        </h6>\r\n                    </div>\r\n                    <div class=\"modal-body pt-0\">\r\n\r\n                        <form novalidate (ngSubmit)=\"SaveExamTemplate(modelForm)\" #modelForm=\"ngForm\">\r\n                            <div class=\"form-group \">\r\n                                <mat-form-field>\r\n                                    <mat-label>{{'HeaderExamTemplates' | translate }}</mat-label>\r\n                                    <mat-select id=\"modelExamTemplate\"\r\n                                        placeholder=\"{{'TrainingExamTemplateSelect' | translate }}\" required\r\n                                        [(ngModel)]=\"modelExamTemplate.SubEntityId\" name=\"modelExamTemplateVar\"\r\n                                        #modelExamTemplateVar=\"ngModel\" name=\"modelExamTemplate\"\r\n                                        [ngClass]=\"{'is-invalid': (modelExamTemplateVar.touched || modelExamTemplateVar.dirty) && !modelExamTemplateVar.valid }\">\r\n                                        <mat-option value=\"0\">{{'TrainingExamTemplateSelect' | translate }}</mat-option>\r\n                                        <mat-option *ngFor=\"let item of lstExamTemplate\" value=\"{{item._id}}\">\r\n                                            {{item.Name}}</mat-option>\r\n                                    </mat-select>\r\n                                    <mat-error *ngIf=\"modelExamTemplateVar.errors?.required\">\r\n                                        {{'TrainingExamTemplateSelectError' | translate }}\r\n                                    </mat-error>\r\n                                </mat-form-field>\r\n                            </div>\r\n                            <div class=\"form-group pull-right md-form\">\r\n                                <button class=\"btn color-bg-01 btn-sm white-text btnSave\" type=\"submit\"\r\n                                    [disabled]=\"!modelForm.valid\">{{'GenericSave' | translate }}</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                    <div class=\"modal-footer\">\r\n\r\n                        <button type=\"button\" class=\"btn color-bg-02 btn-sm white-text\"\r\n                            (click)=\"modal.close('Close click')\">{{'GenericClose' | translate }}</button>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </ng-template>\r\n    </div>\r\n</section>","import { NgModule } from '@angular/core';\r\nimport { SharedModule } from '../common/sharedmodule.module';\r\nimport { RouterModule } from '@angular/router';\r\nimport { TrainingListComponent } from './training-list/training-list.component';\r\nimport { TraineeListComponent } from './trainee-list/trainee-list.component';\r\nimport { AttendanceComponent } from './attendance/attendance.component';\r\nimport { MyTrainingsComponent } from './my-trainings/my-trainings.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TrainingListComponent,\r\n    TraineeListComponent,\r\n    AttendanceComponent,\r\n    MyTrainingsComponent\r\n  ],\r\n  imports: [\r\n    SharedModule,\r\n   \r\n    RouterModule.forChild([\r\n      { path: 'Training/List', component: TrainingListComponent},\r\n      { path: 'Training/Trainees/:Id', component: TraineeListComponent},\r\n      { path: 'Training/Attendance/:Id', component: AttendanceComponent}\r\n    ])\r\n  ]\r\n})\r\nexport class TrainingModule { }\r\n","; import { Component, OnInit } from '@angular/core';\nimport { TranslateList } from 'src/app/interface/Response/TranslateList.classl';\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\nimport { ServiceTranslateList } from 'src/app/services/translate-list.service';\nimport { TranslateType } from 'src/app/Enum/TranslateType.enum';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Constants } from 'src/app/constants';\nimport { ModelTranslateList } from 'src/app/interface/Model/ModelTranslateList.class';\n\n@Component({\n  selector: 'app-translate-list',\n  templateUrl: './translate-list.component.html',\n  styleUrls: ['./translate-list.component.css']\n})\nexport class TranslateListComponent extends baseComponent implements OnInit {\n\n  lstData: TranslateList;\n  modelObj: ModelTranslateList = new ModelTranslateList();\n  title: string;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private BLServiceTranslate: ServiceTranslateList,\n    BLServiceShowMessage: ServiceShowMessage,\n    BLTranslate: TranslateService,\n    BLServiceLoginUser: ServiceLoginUser) {\n    super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\n  }\n\n  ngOnInit(): void {\n    \n    const paramType = this.route.snapshot.paramMap.get('Type');\n    const paramId = this.route.snapshot.paramMap.get('Id');\n    if (paramId) {\n      this.modelObj.Id = paramId\n    }\n    if (paramType) {\n      this.modelObj.Type = +paramType;\n      this.loadData();\n      this.loadTitle();\n    }\n  }\n  loadTitle() {\n    switch (this.modelObj.Type) {\n      case TranslateType.City:\n        this.BLTranslate.get(\"GenericCity\").subscribe(res => { this.title = res; });\n        break;\n      case TranslateType.Area:\n        this.BLTranslate.get(\"TrainingArea\").subscribe(res => { this.title = res; });\n        break;\n      case TranslateType.TrainingCategory:\n        this.BLTranslate.get(\"GenericTrainingCategory\").subscribe(res => { this.title = res; });\n        break;\n      case TranslateType.TrainingType:\n        this.BLTranslate.get(\"GenericTrainingType\").subscribe(res => { this.title = res; });\n        break;\n      case TranslateType.Courses:\n        this.BLTranslate.get(\"CoursesTitle\").subscribe(res => { this.title = res; });\n        break;\n    }\n  }\n  private loadData(): void {\n    this.BLServiceTranslate.ListTranslationByType(this.modelObj).subscribe({\n      next: lst => {\n        this.lstData = lst;\n      },\n      error: err => this.message.Error(err)\n    });\n  }\n  modelSaveBtn() {\n    this.BLServiceTranslate.SaveListTranslation(this.lstData).subscribe({\n      next: response => {\n        this.message.Success(this.msgSavedSuccessfully);\n        this.BLServiceShowMessage.sendMessage(this.message);\n        this.OnRedrirectBack();\n      },\n      error: err => this.message.Error(err)\n    });\n  }\n  OnRedrirectBack() {\n    switch (this.modelObj.Type) {\n      case TranslateType.City:\n        this.router.navigate(['/DataManagement/City']);\n        break;\n      case TranslateType.Area:\n        this.router.navigate(['/DataManagement/Area/' + this.modelObj.Id]);\n        break;\n      case TranslateType.TrainingCategory:\n        this.router.navigate(['/DataManagement/TrainingCategory']);\n        break;\n      case TranslateType.TrainingType:\n        this.router.navigate(['/DataManagement/TrainingType']);\n        break;\n      case TranslateType.Courses:\n        this.router.navigate(['/DataManagement/Course/' + this.modelObj.Id]);\n        break;\n    }\n  }\n}\n","<section class=\"my-5\">\n  <div class=\"container\">\n    <div class='row'>\n      <h4 class=\"mb-4\">{{title }}</h4>\n    </div>\n    <div class=\"col-md-12\" *ngIf='lstData?.Data.length > 0'>\n      <div class='table-responsive'>\n        <table class='table'>\n          <thead>\n            <tr>\n              <th>English</th>\n              <th>عربى</th>\n              <th *ngIf=\"false\">Française</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor='let obj of lstData.Data; let i = index '>\n              <td>{{ obj.Name}}</td>\n              <td>\n                <input type=\"text\" id=\"Name2{{i}}\" [(ngModel)]=\"lstData.Data[i].Name2\" #modelName2Var=\"ngModel\"\n                  name=\"modelName2\">\n              </td>\n              <td *ngIf=\"false\">\n                <input type=\"text\" id=\"Name3{{i}}\" [(ngModel)]=\"lstData.Data[i].Name3\" #modelName3Var=\"ngModel\"\n                  name=\"modelName3\">\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class=\"form-group pull-right md-form\">\n        <button class=\"btn color-bg-grey btn-sm btn-default white-text\" type=\"submit\"\n          (click)=\"OnRedrirectBack()\">{{'GenericCancel' | translate }}</button>\n        <button class=\"btn color-bg-01 btn-sm white-text btnSave\" type=\"submit\"\n          (click)=\"modelSaveBtn()\">{{'GenericSave' | translate }}</button>\n      </div>\n    </div>\n    <div class=\"\" *ngIf=\"lstData?.Data.length  == 0\">\n      <div class=\"text-center bg-red noresult\">\n        <span class=\"font-italic\">{{'PageNoResult' | translate }} </span><span>&#9785;</span>\n      </div>\n    </div>\n  </div>\n</section>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nimport { AdminRouteGuard } from '../core/admin-route-guard';\r\n\r\nconst routes: Routes = [\r\n  // { path: 'admin', component: ManageProjectsComponent,\r\n  //     canActivate: [AdminRouteGuard] },\r\n  // { path: 'admin/manage-permissions/:projectId', component: ManagePermissionsComponent,\r\n  //     canActivate: [AdminRouteGuard] }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AdminRoutingModule { }\r\n\r\n// export const routedComponents = [ManageProjectsComponent];","import { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport {\r\n  MatButtonModule,\r\n  MatDialogModule,\r\n  MatFormFieldModule,\r\n  MatInputModule,\r\n  MatSelectModule,\r\n  MatTableModule,\r\n  MatToolbarModule,\r\n} from '@angular/material';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AdminRoutingModule } from './admin-routing.module';\r\nimport { CoreModule } from '../core/core.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    MatFormFieldModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatToolbarModule,\r\n    MatTableModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    AdminRoutingModule,\r\n    CoreModule\r\n  ],\r\n  exports: [],\r\n  declarations: [\r\n  \r\n  ],\r\n  providers: [],\r\n  entryComponents: [\r\n\r\n  ]\r\n})\r\nexport class AdminModule {}\r\n"," import { NgModule, MissingTranslationStrategy } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ContactUsComponent } from './home/contact-us.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { SigninRedirectCallbackComponent } from './home/signin-redirect-callback.component';\r\nimport { SignoutRedirectCallbackComponent } from './home/signout-redirect-callback.component';\r\nimport { UnauthorizedComponent } from './home/unauthorized.component';\r\nimport { ListComponent } from './Questions/list/list.component';\r\nimport { CreateComponent } from './Questions/create/create.component';\r\nimport { TakeExamComponent } from './Exam/take-exam/take-exam.component';\r\nimport { TermsComponent } from './home/terms/terms.component';\r\nimport { PolicyComponent } from './Home/policy/policy.component';\r\nimport { AboutComponent } from './Home/about/about.component';\r\nimport { ConfigTraineeComponent } from './config/config-trainee/config-trainee.component';\r\nimport { GenericsComponent } from './Certificates/generics/generics.component';\r\nimport { CategoryComponent } from './Certificates/category/category.component';\r\nimport { CertificateTrainingCenterComponent } from './Certificates/trainingcenter/trainingcenter.component';\r\nimport { MyTrainingsComponent } from './Training/my-trainings/my-trainings.component';\r\nimport { RegisterComponent } from './Request/register/register.component';\r\nimport { ConfigRequestRegisterComponent } from './config/config-request-register/config-request-register.component';\r\nimport { AboutEditComponent } from './Content/about-edit/about-edit.component';\r\nimport { AddTraineeComponent } from './common/add-trainee/add-trainee.component';\r\nimport { TrainerApprovalComponent } from './Certificates/trainer-approval/trainer-approval.component';\r\nimport { InfoEditComponent } from './Content/info-edit/info-edit.component';\r\nimport { PolicyEditComponent } from './Content/policy-edit/policy-edit.component';\r\nimport { TermEditComponent } from './Content/term-edit/term-edit.component';\r\nimport { TemplatesComponent } from './Exam/templates/templates.component';\r\nimport { TranslateListComponent } from './Translate/translate-list/translate-list.component';\r\nimport { TrainerCertificateComponent } from './Account/trainer-certificate/trainer-certificate.component';\r\nimport { SiteLogoComponent } from './Content/site-logo/site-logo.component';\r\nimport { PartnerLogoComponent } from './Content/partner-logo/partner-logo.component';\r\nimport { TraineeRouteGuard } from './core/admin-route-guard';\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: HomeComponent, data:{PageName:\"home\"} },\r\n    { path: 'home/:msg/:isSuccess', component: HomeComponent, data:{PageName:\"home\"} },\r\n    { path: 'RequestRegister', component: RegisterComponent , data:{PageName:\"home\"}},\r\n    { path: 'Translate/:Type/:Id', component: TranslateListComponent },\r\n    { path: 'MyTraining', component: MyTrainingsComponent },\r\n    { path: 'MyProfile', component: AddTraineeComponent },\r\n    { path: 'TrainerCertificate/:Id', component: TrainerCertificateComponent },\r\n    { path: 'MyTraining/:Id', component: MyTrainingsComponent },\r\n    { path: 'Trainee/Register', component: AddTraineeComponent, data:{PageName:\"home\", PageType:\"register\"} },\r\n    { path: 'Trainee/Create/:IsCreate/:TraineeId/:TrainingId', component: AddTraineeComponent },\r\n    { path: 'Content/PortalLogo', component: SiteLogoComponent },\r\n    { path: 'Content/PartnerLogo', component: PartnerLogoComponent },\r\n    { path: 'About/Edit', component: AboutEditComponent },\r\n    { path: 'Term/Edit', component: TermEditComponent },\r\n    { path: 'Policy/Edit', component: PolicyEditComponent },\r\n    { path: 'Info/Edit', component: InfoEditComponent },\r\n    { path: 'About', component: AboutComponent , data:{PageName:\"home\"}},\r\n    { path: 'Questions/List', component: ListComponent },\r\n    { path: 'Questions/Create/:Id', component: CreateComponent },\r\n    { path: 'Exam/Templates', component: TemplatesComponent },\r\n    { path: 'Exam/List', component: TakeExamComponent },\r\n    { path: 'Exam/TakeExam/:Id', component: TakeExamComponent },\r\n    { path: 'contact-us', component: ContactUsComponent, data:{PageName:\"home\"} },\r\n    { path: 'Terms', component: TermsComponent, data:{PageName:\"home\"} },\r\n    { path: 'Policy', component: PolicyComponent, data:{PageName:\"home\"} },\r\n    { path: 'Certificate/TranierApproval', component: TrainerApprovalComponent },\r\n    { path: 'Certificate/Generics', component: GenericsComponent },\r\n    { path: 'Certificate/Category', component: CategoryComponent },\r\n    { path: 'Certificate/TrainingCenter', component: CertificateTrainingCenterComponent },\r\n    { path: 'ConfigTrainee', component:ConfigTraineeComponent},\r\n    { path: 'ConfigRequestRegister', component:ConfigRequestRegisterComponent},\r\n    { path: 'signin-callback', component: SigninRedirectCallbackComponent },\r\n    { path: 'signout-callback', component: SignoutRedirectCallbackComponent },\r\n    { path: 'unauthorized', component: UnauthorizedComponent },\r\n    \r\n  \r\n    \r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","<link rel=\"stylesheet\" href=\"/assets/css/custom.css\" *ngIf=\"cssExt != 'ar'\"/>\r\n<link rel=\"stylesheet\" href=\"/assets/css/style.css\" *ngIf=\"cssExt != 'ar'\"/> \r\n\r\n<link rel=\"stylesheet\" href=\"/assets/css/customAR.css\" *ngIf=\"cssExt == 'ar'\"/>\r\n<link rel=\"stylesheet\" href=\"/assets/css/styleAR.css\" *ngIf=\"cssExt == 'ar'\"/> \r\n\r\n\r\n<div class=\"fullscreen\" *ngIf=\"IsAppear\">\r\n\r\n</div>\r\n<app-header></app-header>\r\n<nav>\r\n    <!-- <mat-toolbar color=\"primary\">\r\n        <a href=\"/\">\r\n            <span>\r\n                <img src=\"/assets/images/Globo_logo.png\" alt=\"Globomantics\" title=\"Globomantics\" class=\"globo-logo\">\r\n            </span>\r\n        </a>\r\n        <span class=\"navbar-fill\">\r\n            <div *ngIf=\"isLoggedIn\">\r\n                <button *ngIf=\"isAdmin\" mat-button routerLink=\"/DataManagement/TrainingType\">Training Type</button>\r\n                <button *ngIf=\"isAdmin\" mat-button routerLink=\"/DataManagement/TrainingCategory\">Training\r\n                    Category</button>\r\n                <button *ngIf=\"isAdmin\" mat-button routerLink=\"/DataManagement/City\">City</button>\r\n                <button *ngIf=\"isAdmin\" mat-button routerLink=\"/DataManagement/NGOType\">NGO Type</button>\r\n                <button *ngIf=\"isAdmin || isPartner\" mat-button routerLink=\"/EntityManagement/Partner\">Partner</button>\r\n                <button *ngIf=\"isAdmin || isPartner\" mat-button routerLink=\"/EntityManagement/SubPartner\">Sub\r\n                    Partner</button>\r\n                <button *ngIf=\"isAdmin || isPartner\" mat-button routerLink=\"/Account/Account\">Accounts</button>\r\n                <button mat-button routerLink=\"/Test/Test\">Test</button>\r\n            </div>\r\n        </span>\r\n        <span>\r\n            \r\n        </span>\r\n    </mat-toolbar> -->\r\n</nav>\r\n<main>\r\n   \r\n    <div  *ngIf=\"isLoggedInMYadd\"> \r\n        <div *ngIf=\"!isLoggedIn && !isCurrentPageHome\" class=\"ScreenLock bubbleContainer\">\r\n            <div class=\"messageBubble ssfLocationPopup\">\r\n                <div class=\"messageContainer\">\r\n                    <p>{{'SessionExpored' | translate }}</p>\r\n                    <p>{{'LoginFirst' | translate }}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    <router-outlet></router-outlet>\r\n</main>\r\n\r\n<app-footer></app-footer>\r\n\r\n","import { AfterViewChecked, Component, OnInit } from '@angular/core';\r\nimport { AuthService } from './core/auth-service.component';\r\nimport { ServiceShowMessage } from './services/show-message.service';\r\nimport { EnumShowMessage } from './interface/Model/ModelShowMessage.class';\r\nimport { ServiceLoginUser } from './services/loginuser.service';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { filter, map, mergeMap } from 'rxjs/operators';\r\nimport { ActivatedRoute, Router, NavigationEnd } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TryCatchStmt } from '@angular/compiler';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: []\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n  msgClass: string = '';\r\n  msgText: string = '';\r\n\r\n  userName: string;\r\n  userRole: string;\r\n  isLoggedIn = false;\r\n  isAdmin: boolean = false;\r\n  isPartner: boolean = false;\r\n  isCurrentPageHome: boolean = false;\r\n  IsAppear:boolean = true;\r\n  isLoggedInMYadd:boolean=false\r\n\r\n  lang: string = 'ar';\r\n  cssExt: string = '';\r\n\r\n  constructor(private _authService: AuthService,\r\n    private BLServiceShowMessage: ServiceShowMessage,\r\n    private BLServiceLoginUser: ServiceLoginUser,\r\n    BLTranslate: TranslateService,\r\n    private _snackBar: MatSnackBar,\r\n    private router: Router, private route: ActivatedRoute) {\r\n\r\n    var url = localStorage.getItem('URL');\r\n    if (url && url != null && url != \"null\") {\r\n      localStorage.setItem('URL', null);\r\n      this.router.navigate([this.router.url]);\r\n    }\r\n\r\n    this._authService.CheckLogin();\r\n    this.lang = localStorage.getItem('lang') ? localStorage.getItem('lang') : \"ar\";\r\n    if (this.lang == 'ar')\r\n      this.cssExt = 'ar'\r\n    else\r\n      this.cssExt = '';\r\n\r\n    this.BLServiceShowMessage.msgChanged.subscribe(msg => {\r\n      this.msgText = msg.message;\r\n      this.msgClass = msg.type == EnumShowMessage.Success ? 'snackbar-success' : 'snackbar-error';\r\n      this._snackBar.open(this.msgText, null, {\r\n        duration: 3000,\r\n        panelClass: [this.msgClass]\r\n      });\r\n    });\r\n    this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n      map(() => this.route),\r\n      map(route => {\r\n        while (route.firstChild) route = route.firstChild\r\n        return route\r\n      }),\r\n      filter(route => route.outlet === 'primary'),\r\n      mergeMap(route => route.data)\r\n    ).subscribe(data => {\r\n      this.isCurrentPageHome = data.PageName === 'home';\r\n    })\r\n\r\n     this.InitData();  \r\n    //  this._authService.loginChanged.subscribe(loggedIn => {\r\n    //    this.isLoggedIn = loggedIn;\r\n    //  });\r\n    //  this._authService.authContextChanged.subscribe(obj => {\r\n    //   this.AuthContext = obj;\r\n    // });\r\n    this.BLServiceLoginUser.UserRoleChanged.subscribe(obj => {\r\n      this.userRole = obj;\r\n    });\r\n    this.BLServiceLoginUser.UserNameChanged.subscribe(obj => {\r\n      this.userName = obj;\r\n    });\r\n    this.BLServiceLoginUser.UserIsAdminChanged.subscribe(obj => {\r\n      this.isAdmin = obj;\r\n    });\r\n    this.BLServiceLoginUser.UserIsPartnerChanged.subscribe(obj => {\r\n      this.isPartner = obj;\r\n    });\r\n  }\r\n\r\n  async InitData() {\r\n    var GetIsLoggedInFunction = () => {\r\n      var self = this;\r\n        return new Promise((resolve, reject) => {\r\n            self.BLServiceLoginUser.UserIsLoggedInChanged.subscribe(obj => {\r\n              resolve(obj);\r\n            });  \r\n            setTimeout(() => \r\n            {\r\n                this.IsAppear = false;\r\n            },\r\n            2000);\r\n          //resolve(self.BLServiceLoginUser.isLoggedIn);  \r\n        });\r\n     \r\n    }\r\n    var GetIsHomeFunction = () => {\r\n      var self = this;\r\n      return new Promise((resolve) => {\r\n        self.router.events.pipe(\r\n          filter(event => event instanceof NavigationEnd),\r\n          map(() => this.route),\r\n          map(route => {\r\n            while (route.firstChild) route = route.firstChild\r\n            return route\r\n          }),\r\n          filter(route => route.outlet === 'primary'),\r\n          mergeMap(route => route.data)\r\n        ).subscribe(data => {\r\n          resolve(data.PageName);\r\n        });\r\n\r\n      });\r\n    }\r\n\r\n\r\n\r\n    var Islogged = await GetIsLoggedInFunction();\r\n   // var HomeVal = await GetIsHomeFunction();\r\n    //console.log(HomeVal);\r\n    this.isLoggedIn = <any>Islogged;\r\n    //this.isCurrentPageHome = HomeVal === 'home';\r\n  }\r\n  ngAfterContentInit()\t\r\n  {\r\n    setTimeout(() => {\r\n      this.isLoggedInMYadd = true;\r\n    }, 7000);\r\n  }\r\n  ngOnInit() {\r\n    this.BLServiceLoginUser.UserIsLoggedInChanged.subscribe(obj => {\r\n      this.isLoggedIn = obj;\r\n    });\r\n  }\r\n  \r\n  //  isAdmin() {\r\n  //    //return this.isLoggedIn && this._authService.authContext && this._authService.authContext.isAdmin;\r\n  //    this.isAdmin\r\n  //  }\r\n\r\n}\r\n","import { HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatSnackBarModule, MatMenuModule, MatToolbarModule, MatButtonModule, MatTableModule, MatInputModule, MatSelectModule, MatFormFieldModule, MatIconModule, MatRadioModule, MatCheckboxModule, MatExpansionModule, MatDialogModule } from '@angular/material';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AdminModule } from './admin/admin.module';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { CoreModule } from './core/core.module';\r\nimport { ContactUsComponent } from './home/contact-us.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { SigninRedirectCallbackComponent } from './home/signin-redirect-callback.component';\r\nimport { SignoutRedirectCallbackComponent } from './home/signout-redirect-callback.component';\r\nimport { UnauthorizedComponent } from './home/unauthorized.component';\r\nimport { DataManagementModule } from './DataManagement/data-management.module';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { EntityManagementModule } from './EntityManagement/entity-management.module';\r\nimport { AccountModule } from './Account/account.module';\r\nimport { TestModule } from './ztest/test/test.module';\r\nimport { HeaderComponent } from './common/header/header.component';\r\nimport { FooterComponent } from './common/footer/footer.component';\r\nimport { TrainingModule } from './Training/training.module';\r\nimport { ListComponent } from './Questions/list/list.component';\r\nimport { CreateComponent } from './Questions/create/create.component';\r\nimport { TakeExamComponent } from './Exam/take-exam/take-exam.component';\r\nimport { CountdownModule } from 'ngx-countdown';\r\nimport { TermsComponent } from './home/terms/terms.component';\r\nimport { PolicyComponent } from './Home/policy/policy.component';\r\nimport { AboutComponent } from './Home/about/about.component';\r\nimport { ConfigTraineeComponent } from './config/config-trainee/config-trainee.component';\r\nimport { SharedModule } from './common/sharedmodule.module';\r\nimport { CreateFormComponent } from './common/ConfigForms/AdminConfig/create-form/create-form.component';\r\nimport { DynamicFieldDirective } from './common/ConfigForms/components/dynamic-field/dynamic-field.directive';\r\nimport { DynamicFormComponent } from './common/ConfigForms/components/dynamic-form/dynamic-form.component';\r\nimport { GenericsComponent } from './Certificates/generics/generics.component';\r\nimport { CategoryComponent } from './Certificates/category/category.component';\r\nimport { CertificateTrainingCenterComponent } from './Certificates/trainingcenter/trainingcenter.component';\r\nimport { RegisterComponent } from './Request/register/register.component';\r\nimport { ConfigRequestRegisterComponent } from './config/config-request-register/config-request-register.component';\r\nimport { AboutEditComponent } from './Content/about-edit/about-edit.component';\r\nimport { TrainerApprovalComponent } from './Certificates/trainer-approval/trainer-approval.component';\r\n\r\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { TermEditComponent } from './Content/term-edit/term-edit.component';\r\nimport { PolicyEditComponent } from './Content/policy-edit/policy-edit.component';\r\nimport { InfoEditComponent } from './Content/info-edit/info-edit.component';\r\nimport { TemplatesComponent } from './Exam/templates/templates.component';\r\nimport { TranslateListComponent } from './Translate/translate-list/translate-list.component';\nimport { SiteLogoComponent } from './Content/site-logo/site-logo.component';\nimport { PartnerLogoComponent } from './Content/partner-logo/partner-logo.component';\nimport { VerifyComponent } from './Certificates/verify/verify.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    ContactUsComponent,\r\n    SigninRedirectCallbackComponent,\r\n    SignoutRedirectCallbackComponent,\r\n    UnauthorizedComponent,\r\n    HeaderComponent,\r\n    FooterComponent,\r\n    ListComponent,\r\n    CreateComponent,\r\n    TakeExamComponent,\r\n    TermsComponent,\r\n    PolicyComponent,\r\n    AboutComponent,\r\n    ConfigTraineeComponent,\r\n    GenericsComponent,\r\n    CategoryComponent,\r\n    CertificateTrainingCenterComponent,\r\n    RegisterComponent,\r\n    ConfigRequestRegisterComponent,\r\n    AboutEditComponent,\r\n    TrainerApprovalComponent,\r\n    TermEditComponent,\r\n    PolicyEditComponent,\r\n    InfoEditComponent,\r\n    TemplatesComponent,\r\n    TranslateListComponent,\r\n    SiteLogoComponent,\r\n    PartnerLogoComponent,\r\n    VerifyComponent,\r\n  ],\r\n  imports: [\r\n    SharedModule,\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    MatSnackBarModule,\r\n    MatMenuModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatTableModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatFormFieldModule,\r\n    MatIconModule,\r\n    MatRadioModule,\r\n    MatCheckboxModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    AdminModule,\r\n    CoreModule,\r\n    AppRoutingModule,\r\n    NgbModule,\r\n    DataManagementModule,\r\n    EntityManagementModule,\r\n    AccountModule,\r\n    TrainingModule,\r\n    TestModule,\r\n    CountdownModule,\r\n    MatButtonModule,\r\n    MatDialogModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatTableModule,\r\n    MatToolbarModule\r\n  ],\r\n  providers: [\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [\r\n    //AddEditMilestoneDialogComponent\r\n    HomeComponent\r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class AppModule { }\r\n\r\n","import { Component, OnInit, ViewChild, AfterViewChecked, Input } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormArray, MaxLengthValidator } from '@angular/forms';\r\nimport { DynamicFormComponent } from '../../components/dynamic-form/dynamic-form.component';\r\nimport { FieldConfig, Validator } from '../../field.interface';\r\nimport { ServiceConfigForm } from 'src/app/services/config-form.service';\r\nimport { ModelConfigForm, ModelFieldConfig } from 'src/app/interface/Model/ModelConfigForm.class';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { ConfigForm } from 'src/app/Enum/ConfigForm.enum';\r\nimport { ConfirmationDialogService } from 'src/app/common/confirmation-dialog/confirmation-dialog.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-create-form',\r\n  templateUrl: './create-form.component.html',\r\n  styleUrls: ['./create-form.component.css']\r\n})\r\nexport class CreateFormComponent extends baseComponent implements OnInit {\r\n\r\n  @ViewChild(DynamicFormComponent) form: DynamicFormComponent;\r\n  regConfig: FieldConfig[] = [\r\n    {\r\n      type: \"button\",\r\n      label: \"Save\",\r\n      order: 100,\r\n      IsRequired: false\r\n    }\r\n  ];\r\n\r\n  @Input() pageTitle: string = 'Config Form Fields';\r\n  @Input() formType: ConfigForm = 0;\r\n\r\n  adminForm: FormGroup;\r\n  get FormInputs(): FormArray {\r\n    return <FormArray>this.adminForm.get('FormInputs');\r\n  }\r\n  get options(): FormArray {\r\n    return <FormArray>this.adminForm.get('options');\r\n  }\r\n\r\n  constructor(private fb: FormBuilder,\r\n    protected BLService: ServiceConfigForm,\r\n    private confirmationDialogService: ConfirmationDialogService,\r\n    BLServiceShowMessage: ServiceShowMessage,\r\n    BLCompanyLoginUser: ServiceLoginUser, BLTranslate: TranslateService,) {\r\n    super(BLServiceShowMessage, BLCompanyLoginUser, BLTranslate);\r\n  }\r\n  InitDynamicForm() {\r\n    this.BLService.GetByType(this.formType).subscribe({\r\n      next: lst => {\r\n        this.regConfig = <FieldConfig[]>[];\r\n        if (lst.length > 0) {\r\n          this.FormInputs.removeAt(0);\r\n        }\r\n\r\n        lst.forEach(item => {\r\n\r\n          var obj = new FieldConfig();\r\n\r\n          obj.inputType = item.inputType;\r\n          obj.label = item.label;\r\n          obj.name = item.name;\r\n          obj.options = item.options;\r\n          obj.order = item.order;\r\n          obj.type = item.type;\r\n          obj.IsRequired = item.IsRequired;\r\n          if (obj.IsRequired)\r\n            obj.validations.push(new Validator(item.label));\r\n\r\n          this.regConfig.push(obj);\r\n\r\n          var ctl = this.fb.group({\r\n            Order: [item.order, [Validators.required, Validators.max(100), Validators.min(0)]],\r\n            Label: [item.label, [Validators.required, Validators.maxLength(50)]],\r\n            Name: [item.name, [Validators.required, Validators.maxLength(50)]],\r\n            Type: [item.type, [Validators.required]],\r\n            InputType: [item.inputType],\r\n            options: this.fb.array([]),\r\n            IsRequired: item.IsRequired,\r\n          });\r\n          var opt = <FormArray>ctl.controls[\"options\"];\r\n          item.options.forEach(obj => {\r\n            var yy = obj[\"option\"];\r\n            var xx = this.buildoptions(yy);\r\n            opt.push(xx)\r\n          });\r\n          this.FormInputs.push(ctl);\r\n        });\r\n        this.form.fields = this.regConfig;\r\n        this.form.createControl();\r\n\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n\r\n  }\r\n  ngOnInit() {\r\n    this.adminForm = this.fb.group({\r\n      FormInputs: this.fb.array([this.buildFormInputs()])\r\n    });\r\n    this.InitDynamicForm();\r\n  }\r\n\r\n  addFormInputs() {\r\n    this.ConvertToForm();\r\n    this.FormInputs.push(this.buildFormInputs());\r\n  }\r\n  removeFormInputs(idx) {\r\n    this.confirmationDialogService.confirm(this.msgsetRemove)\r\n      .then((confirmed) => {\r\n        if (!confirmed)\r\n          return;\r\n        if (this.FormInputs.controls.length > 1) {\r\n          this.FormInputs.removeAt(idx);\r\n        }\r\n        this.ConvertToForm();\r\n      });\r\n  }\r\n\r\n  buildFormInputs() {\r\n    return this.fb.group({\r\n      Order: ['', [Validators.required, Validators.max(100), Validators.min(0)]],\r\n      Label: ['', [Validators.required, Validators.maxLength(50)]],\r\n      Name: ['', [Validators.required, Validators.maxLength(50)]],\r\n      Type: ['', [Validators.required]],\r\n      InputType: ['text'],\r\n      options: this.fb.array([]),\r\n      IsRequired: true,\r\n    });\r\n  }\r\n  onTypeChange(obj) {\r\n    if (obj.get('Type').value == 'select' || obj.get('Type').value == 'selectmulti') {\r\n      if (obj.get('options').controls.length == 0) {\r\n        obj.get('options').push(this.buildoptions());\r\n      }\r\n    }\r\n  }\r\n  buildoptions(value: string = '') {\r\n    return this.fb.group({\r\n      option: [value, [Validators.required]]\r\n    });\r\n  }\r\n  addOption(idx: number) {\r\n    //this.options.push(this.buildoptions());\r\n    const control = <FormArray>this.adminForm.get(['FormInputs', idx, 'options']);\r\n    control.push(this.buildoptions());\r\n  }\r\n  getoptions(idx: number) {\r\n    const opt = <FormArray>this.adminForm.get(['FormInputs', idx, 'options']);\r\n    return opt?.controls;\r\n  }\r\n  ConvertToForm() {\r\n\r\n    this.regConfig = <FieldConfig[]>[];\r\n    // [{\r\n    //   type: \"button\",\r\n    //   label: \"Save\",\r\n    //   order: 100\r\n    // }];\r\n    var frm = <FormArray>this.adminForm.get(['FormInputs']);\r\n\r\n    frm.controls.forEach(element => {\r\n      var ctl = new FieldConfig();\r\n\r\n      ctl.order = element.get('Order').value;\r\n      ctl.name = element.get('Name').value;\r\n      ctl.label = element.get('Label').value;\r\n      ctl.type = element.get('Type').value;\r\n      ctl.inputType = element.get('InputType').value;\r\n      ctl.IsRequired = element.get('IsRequired').value;\r\n\r\n      if (ctl.type == 'select' || ctl.type == 'selectmulti')\r\n        ctl.options = element.get('options').value;\r\n\r\n\r\n      ctl.validations.push(new Validator(ctl.label));\r\n\r\n      this.regConfig.push(ctl);\r\n    });\r\n\r\n    if (this.regConfig.length > 1) {\r\n      this.regConfig = this.regConfig.sort((obj1, obj2) => {\r\n        if (obj1.order > obj2.order) {\r\n          return 1;\r\n        }\r\n\r\n        if (obj1.order < obj2.order) {\r\n          return -1;\r\n        }\r\n\r\n        return 0;\r\n      });\r\n    }\r\n    this.form.fields = this.regConfig;\r\n    this.form.createControl();\r\n  }\r\n  Save(adminForm) {\r\n    this.ConvertToForm();\r\n    if (!adminForm.valid)\r\n      return;\r\n    debugger;\r\n    var model = new ModelConfigForm();\r\n    model.FormType = this.formType;\r\n    model.Form = <ModelFieldConfig[]>[];\r\n    this.regConfig.forEach(item => {\r\n\r\n      var obj = new ModelFieldConfig();\r\n\r\n      obj.inputType = item.inputType;\r\n      obj.label = item.label;\r\n      obj.name = item.name;\r\n      obj.options = item.options;\r\n      obj.order = item.order;\r\n      obj.type = item.type;\r\n      obj.validations = true;\r\n      obj.IsRequired = item.IsRequired;\r\n\r\n      model.Form.push(obj);\r\n    });\r\n    this.BLService.Update(model).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.msgSavedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n}\r\n","<section class=\"mt-50 shadow-sm p-  bg-white rounded\">\r\n  <div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12 col-lg-12 mb25\">\r\n        <h4 class=\"fz20\">\r\n          {{'ConfigFormFields' | translate }}\r\n        </h4>\r\n      </div>\r\n      <br>\r\n      <div class=\"col-lg-6 col-xl-6\">\r\n        <form novalidate [formGroup]=\"adminForm\">\r\n          <div class=\"col-xl-12 mb5\">\r\n            <button (click)=\"addFormInputs()\" class=\"btn btn-primary \" [disabled]=\"!adminForm.valid\">{{'ConfigAddFormInput' | translate }}</button>\r\n            <button (click)=\"ConvertToForm()\" class=\"btn btn-success pull-right\"\r\n              [disabled]=\"!adminForm.valid\">{{'ConfigPreview' | translate }}</button>\r\n          </div>\r\n          <div formArrayName=\"FormInputs\" *ngFor=\"let obj of FormInputs?.controls; let k = index;\" class=\"col-xl-12\">\r\n            <div [formGroupName]=\"k\" class=\"formAdminGroup\">\r\n              <mat-accordion>\r\n                <mat-expansion-panel [expanded]=\"true\">\r\n                  <mat-expansion-panel-header>\r\n                    <mat-panel-title>\r\n                      {{'ConfigOrder' | translate }}: {{obj.get('Order')?.value}} - {{'ConfigLabel' | translate }}: {{obj.get('Label')?.value}}\r\n                    </mat-panel-title>\r\n                    <mat-panel-description>\r\n                      {{'GenericName' | translate }}: {{obj.get('Name')?.value}}\r\n                    </mat-panel-description>\r\n                  </mat-expansion-panel-header>\r\n\r\n                  <div>\r\n                    <mat-form-field class=\"example-full-width\">\r\n                      <mat-label>{{'ConfigOrder' | translate }}</mat-label>\r\n                      <input matInput type=\"number\" pattern=\"^[1-9][0-9]?$|^100$\" formControlName=\"Order\" placeholder=\"{{'ConfigEnterOrder' | translate }}\" value=\"\">\r\n                      <mat-error *ngIf=\"obj.get('Order')?.errors?.required\">{{'ConfigEnterOrder' | translate }}</mat-error>\r\n                      <mat-error *ngIf=\"obj.get('Order')?.errors?.max || obj.get('Order')?.errors?.min\">{{'ConfigOrderError' | translate }}</mat-error>\r\n                        <mat-error *ngIf=\"obj.get('Order')?.errors?.pattern\">{{'ConfigOrderError1' | translate }}</mat-error>\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <br>\r\n                  <div>\r\n                    <mat-form-field class=\"example-full-width\">\r\n                      <mat-label>{{'ConfigLabel' | translate }}</mat-label>\r\n                      <input matInput formControlName=\"Label\" placeholder=\"{{'ConfigEnterLabel' | translate }}\" value=\"\">\r\n                      <mat-error *ngIf=\"obj.get('Label')?.errors?.required\">{{'ConfigEnterLabel' | translate }}</mat-error>\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <br>\r\n                  <div>\r\n                    <mat-form-field class=\"example-full-width\">\r\n                      <mat-label>{{'GenericName' | translate }}</mat-label>\r\n                      <input matInput formControlName=\"Name\" placeholder=\"{{'ConfigEnterName' | translate }}\"\r\n                        oninput=\"this.value = this.value.replace(' ','')\">\r\n                      <mat-error *ngIf=\"obj.get('Name')?.errors?.required\">{{'GenericEnterName' | translate }}</mat-error>\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <br>\r\n                  <div>\r\n                    <mat-form-field>\r\n                      <mat-label>{{'ConfigType' | translate }}</mat-label>\r\n                      <mat-select formControlName=\"Type\" (selectionChange)=\"onTypeChange(obj)\">\r\n                        <mat-option [value]=\"'input'\">{{'ConfigTextBox' | translate }}</mat-option>\r\n                        <mat-option [value]=\"'select'\">{{'ConfigDropdown' | translate }}</mat-option>\r\n                         <!--<mat-option [value]=\"'selectmulti'\">Dropdown Multiple Select</mat-option>\r\n                        <mat-option [value]=\"'checkbox'\">Check Box</mat-option>\r\n                        <mat-option [value]=\"'radiobutton'\">Radio button</mat-option>\r\n                        <mat-option [value]=\"'date'\">Date Picker</mat-option> -->\r\n                      </mat-select>\r\n                      <mat-error *ngIf=\"obj.get('Type')?.errors?.required\">{{'ConfigTypeError' | translate }}</mat-error>\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <br>\r\n                  <div *ngIf=\"obj.get('Type').value == 'input'\">\r\n                    <mat-form-field>\r\n                      <mat-label>{{'ConfigInputType' | translate }}</mat-label>\r\n                      <mat-select formControlName=\"InputType\">\r\n                        <mat-option [value]=\"'text'\">{{'ConfigText' | translate }}</mat-option>\r\n                        <mat-option [value]=\"'number'\">{{'ConfigNumbers' | translate }}</mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <div *ngIf=\"obj.get('Type').value == 'select' || obj.get('Type').value == 'selectmulti'\">\r\n                    <div>\r\n                      <button class=\"btn color-bg-01 btn-sm white-text\" (click)=\"addOption(k)\">{{'ConfigAdd' | translate }}</button>\r\n                    </div>\r\n                    <div formArrayName=\"options\" *ngFor=\"let item of getoptions(k); let i = index;\">\r\n                      <div [formGroupName]=\"i\">\r\n                        <mat-form-field class=\"example-full-width\">\r\n                          <mat-label>{{'ConfigOption' | translate }}</mat-label>\r\n                          <input  matInput formControlName=\"option\" placeholder=\"{{'ConfigEnterOption' | translate }}\">\r\n                        \r\n                        </mat-form-field>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <br>\r\n                  <div>\r\n                    <mat-checkbox formControlName=\"IsRequired\">is Required</mat-checkbox> \r\n                    <button *ngIf=\" FormInputs?.controls.length > 1\" (click)=\"removeFormInputs(k)\"\r\n                      class=\"btn btn-danger pull-right\">{{'ConfigRemove' | translate }}</button>\r\n                  </div>\r\n                </mat-expansion-panel>\r\n              </mat-accordion>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-xl-12 mt5\">\r\n            <button (click)=\"addFormInputs()\" class=\"btn btn-primary \" [disabled]=\"!adminForm.valid\">{{'ConfigAddFormInput' | translate }}</button>\r\n            <button (click)=\"ConvertToForm()\" class=\"btn btn-success pull-right\"\r\n              [disabled]=\"!adminForm.valid\">{{'ConfigPreview' | translate }}</button>\r\n          </div>\r\n          <!-- <div>\r\n            {{adminForm.value | json}}\r\n          </div>-->\r\n        </form>\r\n      </div>\r\n      <div class=\"col-lg-6 col-xl-6\">\r\n        <div class=\"mb5\">\r\n          <h4>{{'ConfigPreviewform' | translate }}</h4>\r\n        </div>\r\n        <div class=\"formAdminView\">\r\n          <!-- <dynamic-form [fields]=\"regConfig\"> -->\r\n          <dynamic-form>\r\n          </dynamic-form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n<section class=\" shadow-sm p-3 mb-5 bg-white rounded\">\r\n  <div class=\"container\">\r\n    <div class=\"row align-items-center\">\r\n      <button class=\"btn color-bg-02 btn-sm white-text btnsave\" (click)=\"Save(adminForm)\"\r\n        [disabled]=\"!adminForm.valid\">{{'GenericSave' | translate }} </button>\r\n    </div>\r\n  </div>\r\n</section>","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { FieldConfig } from \"../../field.interface\";\r\n@Component({\r\n  selector: \"app-select\",\r\n  template: `\r\n<mat-form-field class=\"demo-full-width margin-top\" [formGroup]=\"group\">\r\n<mat-select placeholder=\"{{field.label}} *\" [formControlName]=\"field.name\" multiple>\r\n<mat-option *ngFor=\"let item of field.options\" [value]=\"item.option\">{{item.option}}</mat-option>\r\n</mat-select>\r\n<ng-container *ngFor=\"let validation of field.validations;\" ngProjectAs=\"mat-error\">\r\n<mat-error *ngIf=\"group.get(field.name).errors?.required\">Please select {{field.label}}.</mat-error>\r\n</ng-container>\r\n</mat-form-field>\r\n`,\r\n  styles: []\r\n})\r\nexport class SelectMultiComponent implements OnInit {\r\n  field: FieldConfig;\r\n  group: FormGroup;\r\n  constructor() {}\r\n  ngOnInit() {}\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { FieldConfig } from \"../../field.interface\";\r\n@Component({\r\n  selector: \"app-button\",\r\n  template: `\r\n<div class=\"demo-full-width margin-top\" [formGroup]=\"group\">\r\n<button type=\"submit\" [disabled]=\"!group.valid\" mat-raised-button color=\"primary\">{{field.label}}</button>\r\n</div>\r\n`,\r\n  styles: []\r\n})\r\nexport class ButtonComponent implements OnInit {\r\n  field: FieldConfig;\r\n  group: FormGroup;\r\n  constructor() {}\r\n  ngOnInit() {}\r\n}\r\n","import {\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  Directive,\r\n  Input,\r\n  OnInit,\r\n  ViewContainerRef\r\n} from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { FieldConfig } from \"../../field.interface\";\r\nimport { InputComponent } from \"../input/input.component\";\r\nimport { ButtonComponent } from \"../button/button.component\";\r\nimport { SelectComponent } from \"../select/select.component\";\r\n\r\nimport { SelectMultiComponent } from '../SelectMulti/selectmulti.component';\r\n\r\nconst componentMapper = {\r\n  input: InputComponent,\r\n  button: ButtonComponent,\r\n  select: SelectComponent,\r\n  selectmulti: SelectMultiComponent};\r\n@Directive({\r\n  selector: \"[dynamicField]\"\r\n})\r\nexport class DynamicFieldDirective implements OnInit {\r\n  @Input() field: FieldConfig;\r\n  @Input() group: FormGroup;\r\n  componentRef: any;\r\n  constructor(\r\n    private resolver: ComponentFactoryResolver,\r\n    private container: ViewContainerRef\r\n  ) {}\r\n  ngOnInit() {\r\n    const factory = this.resolver.resolveComponentFactory(\r\n      componentMapper[this.field.type]\r\n    );\r\n    this.componentRef = this.container.createComponent(factory);\r\n    this.componentRef.instance.field = this.field;\r\n    this.componentRef.instance.group = this.group;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  Output,\r\n  ChangeDetectorRef\r\n} from \"@angular/core\";\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  FormControl\r\n} from \"@angular/forms\";\r\nimport { FieldConfig, Validator } from \"../../field.interface\";\r\n\r\n@Component({\r\n  exportAs: \"dynamicForm\",\r\n  selector: \"dynamic-form\",\r\n  template: `\r\n <form class=\"dynamic-form\" [formGroup]=\"form\" (submit)=\"onSubmit($event)\"> \r\n    <ng-container *ngFor=\"let field of fields;\" dynamicField [field]=\"field\" [group]=\"form\" >\r\n    </ng-container>\r\n  </form> \r\n  `,\r\n  styles: []\r\n})\r\nexport class DynamicFormComponent implements OnInit {\r\n  @Input() fields: FieldConfig[] = [];\r\n\r\n  @Output() submit: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  form: FormGroup;\r\n\r\n  get valid() {\r\n    return this.form.valid;\r\n  }\r\n\r\n  get value() {\r\n    return this.form.value;\r\n  }\r\n \r\n  constructor(private fb: FormBuilder,\r\n    private ref: ChangeDetectorRef) { }\r\n\r\n  ngOnInit() {\r\n    this.createControl();\r\n  }\r\n\r\n  onSubmit(event: Event) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    if (this.form.valid) {\r\n      this.submit.emit(this.form.value);\r\n    } else {\r\n      this.validateAllFormFields(this.form);\r\n    }\r\n  }\r\n\r\n  createControl() {\r\n    const group = this.fb.group({});\r\n    this.fields.forEach(field => {\r\n      if (field.type === \"button\") return;\r\n      const control = this.fb.control(\r\n        field.value,\r\n        this.bindValidations(field.validations || [])\r\n      );\r\n      group.addControl(field.name, control);\r\n    });\r\n    this.form = group;\r\n  }\r\n\r\n  bindValidations(validations: any) {\r\n    if (validations.length > 0) {\r\n      const validList = [];\r\n      validations.forEach(valid => {\r\n        validList.push(valid.validator);\r\n      });\r\n      return Validators.compose(validList);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  validateAllFormFields(formGroup: FormGroup) {\r\n    Object.keys(formGroup.controls).forEach(field => {\r\n      const control = formGroup.get(field);\r\n      control.markAsTouched({ onlySelf: true });\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { FieldConfig } from \"../../field.interface\";\r\n\r\n@Component({\r\n  selector: \"app-input\",\r\n  template: `\r\n<mat-form-field class=\"demo-full-width\" [formGroup]=\"group\">\r\n<input matInput [formControlName]=\"field.name\" [id]=\"field.name\" [name]=\"field.name\" placeholder=\"{{field.IsRequired ? field.label + ' *' : field.label}}\" [type]=\"field.inputType\">\r\n<ng-container *ngFor=\"let validation of field.validations;\" ngProjectAs=\"mat-error\">\r\n<mat-error *ngIf=\"group.get(field.name)?.errors?.required\">{{'ConfigPleaseenter' | translate }}  {{field.label}}.</mat-error>\r\n</ng-container>\r\n</mat-form-field>\r\n`,\r\n  styles: []\r\n})\r\nexport class InputComponent implements OnInit {\r\n  field: FieldConfig;\r\n  group: FormGroup;\r\n  constructor() {}\r\n  ngOnInit() {}\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { FieldConfig } from \"../../field.interface\";\r\n@Component({\r\n  selector: \"app-select\",\r\n  template: `\r\n<mat-form-field class=\"demo-full-width margin-top\" [formGroup]=\"group\">\r\n<mat-select placeholder=\"{{field.IsRequired ? field.label + ' *' : field.label}}\" [formControlName]=\"field.name\" >\r\n<mat-option *ngFor=\"let item of field.options\" [value]=\"item.option\">{{item.option}}</mat-option>\r\n</mat-select>\r\n<ng-container *ngFor=\"let validation of field.validations;\" ngProjectAs=\"mat-error\">\r\n<mat-error *ngIf=\"group.get(field.name).errors?.required\">{{'ConfigPleaseselect' | translate }}  {{field.label}}.</mat-error>\r\n</ng-container>\r\n</mat-form-field>\r\n`,\r\n  styles: []\r\n})\r\nexport class SelectComponent implements OnInit {\r\n  field: FieldConfig;\r\n  group: FormGroup;\r\n  constructor() {}\r\n  ngOnInit() {}\r\n}\r\n","import { Validators } from \"@angular/forms\";\r\n\r\nexport class Validator {\r\n  constructor(strName:string)\r\n  {\r\n    this.name = strName;\r\n    this.validator = Validators.required;\r\n    this.message = \"Please enter \" + strName + \".\";\r\n  }\r\n  name: string;\r\n  validator: Validators;\r\n  message: string;\r\n}\r\nexport class FieldConfig {\r\n  constructor(){\r\n    this.validations = <Validator[]>[];\r\n  }\r\n  order?: number;\r\n  label?: string;\r\n  name?: string;\r\n  inputType?: string;\r\n  options?: options[];\r\n  collections?: any;\r\n  type: string;\r\n  value?: any;\r\n  IsRequired:boolean;\r\n  validations?: Validator[];\r\n  \r\n}\r\nexport class options{\r\n  option: string;\r\n}\r\n","import { Component, OnInit, Output, Input, EventEmitter } from '@angular/core';\r\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead/public_api';\r\n\r\n@Component({\r\n  selector: 'cust-auto-compelet-list-generic',\r\n  templateUrl: './auto-compelet-list-generic.component.html',\r\n  styleUrls: ['./auto-compelet-list-generic.component.scss']\r\n})\r\nexport class AutoCompeletListGenericComponent implements OnInit {\r\n \r\n  @Output() OnSelectedItem : EventEmitter<string> = new EventEmitter<string>();\r\n  @Input() lstTrainingCenters: any[];\r\n\r\n  search: string;\r\n  noResult: boolean = false;\r\n  errorMessage: string;\r\n  selectedOption: any;\r\n  typeaheadLoading: boolean;\r\n  constructor() { }\r\n  ngOnInit(){}\r\n  onSelect(event: TypeaheadMatch): void {\r\n    this.selectedOption = event.item.Id;\r\n    this.OnSelectedItem.emit(event.item.Id);\r\n  }\r\n  changeTypeaheadLoading(e: boolean): void {\r\n    this.typeaheadLoading = e;\r\n  }\r\n  typeaheadNoResults(event: boolean): void {\r\n    this.noResult = event;\r\n  }\r\n\r\n}\r\n","<div class=\"form-group\">\r\n    <input [(ngModel)]=\"search\" typeaheadOptionField=\"Name\" [typeahead]=\"lstTrainingCenters\"\r\n        [typeaheadItemTemplate]=\"customItemTemplate\" class=\"form-control\" placeholder=\"{{'FromsControlSearch' | translate }}\"\r\n        [typeaheadMinLength]=\"3\" [isAnimated]=\"true\" (typeaheadOnSelect)=\"onSelect($event)\" (typeaheadNoResults)=\"typeaheadNoResults($event)\"\r\n        (typeaheadLoading)=\"changeTypeaheadLoading($event)\">\r\n\r\n    <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"errorMessage\">\r\n        {{ errorMessage }}\r\n    </div>\r\n    <ng-template #customItemTemplate let-model=\"item\">\r\n        <span>{{model.Name}}</span>\r\n    </ng-template>\r\n    <div *ngIf=\"typeaheadLoading\">\r\n        <app-atom-spinner [animationDuration]=\"1000\" [size]=\"60\" [color]=\"'#ff1d5e'\"></app-atom-spinner>\r\n    </div>\r\n    <div class=\"alert alert-danger\" *ngIf=\"noResult\">{{'PageNoResult' | translate }}</div>\r\n</div>\r\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead/public_api';\r\nimport { tap, switchMap } from 'rxjs/operators';\r\nimport { noop, of, Observable, Observer } from 'rxjs';\r\nimport { ServiceEntityManagement } from 'src/app/services/entitymanagement.service';\r\nimport { cEntityPartnerItem } from 'src/app/interface/Response/EntityPartner.class';\r\n\r\n@Component({\r\n  selector: 'cust-search-partner-entity',\r\n  templateUrl: './search-partner-entity.component.html',\r\n  styleUrls: ['./search-partner-entity.component.css']\r\n})\r\nexport class SearchPartnerEntityComponent implements OnInit {\r\n\r\n \r\n  @Output() OnSelectedPartner : EventEmitter<string> = new EventEmitter<string>();\r\n  \r\n  noResult: boolean = false;\r\n  search: string;\r\n  suggestions$: Observable<cEntityPartnerItem[]>;\r\n  errorMessage: string;\r\n  selectedOption: any;\r\n  typeaheadLoading: boolean;\r\n  constructor(private BLServiceEntity: ServiceEntityManagement) { }\r\n  ngOnInit(): void {\r\n    this.suggestions$ = new Observable((observer: Observer<string>) => {\r\n      observer.next(this.search);\r\n    }).pipe(\r\n      switchMap((query: string) => {\r\n        if (query) {\r\n          return this.BLServiceEntity.getEntityPartnerListActive(query).pipe(\r\n            tap(() => noop, err => {\r\n              // in case of http error\r\n              this.errorMessage = err && err.message || 'Something goes wrong';\r\n            }));\r\n        }\r\n\r\n        return of([]);\r\n      })\r\n    );\r\n  }\r\n  typeaheadNoResults(event: boolean): void {\r\n    this.noResult = event;\r\n  }\r\n  onSelect(event: TypeaheadMatch): void {\r\n    this.selectedOption = event.item.Id;\r\n    this.OnSelectedPartner.emit(event.item.Id);\r\n  }\r\n  changeTypeaheadLoading(e: boolean): void {\r\n    this.typeaheadLoading = e;\r\n  }\r\n\r\n\r\n\r\n}\r\n","<div class=\"form-group\">\r\n    <input [(ngModel)]=\"search\" typeaheadOptionField=\"Name\" [typeahead]=\"suggestions$\" [typeaheadAsync]=\"true\"\r\n      [typeaheadItemTemplate]=\"customItemTemplate\" class=\"form-control\"\r\n      placeholder=\"{{'FromsControlSearch' | translate }}\" [typeaheadMinLength]=\"3\" [isAnimated]=\"true\"\r\n      (typeaheadOnSelect)=\"onSelect($event)\" (typeaheadLoading)=\"changeTypeaheadLoading($event)\"\r\n      (typeaheadNoResults)=\"typeaheadNoResults($event)\">\r\n  \r\n    <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"errorMessage\">\r\n      {{ errorMessage }}\r\n    </div>\r\n    <ng-template #customItemTemplate let-model=\"item\">\r\n      <span>{{model.Name}}</span>\r\n    </ng-template>\r\n    <div *ngIf=\"typeaheadLoading\">\r\n      <app-atom-spinner [animationDuration]=\"1000\" [size]=\"60\" [color]=\"'#ff1d5e'\"></app-atom-spinner>\r\n    </div>\r\n    <div class=\"alert alert-danger\" *ngIf=\"noResult\">{{'PageNoResult' | translate }}</div>\r\n  </div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead/public_api';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { noop, Observable, Observer, of } from 'rxjs';\r\nimport { cTraineeItem } from 'src/app/interface/Response/Trainee.class';\r\nimport { ServiceTrainee } from 'src/app/services/trainee.service';\r\n\r\n@Component({\r\n  selector: 'cust-search-trainee',\r\n  templateUrl: './search-trainee.component.html',\r\n  styleUrls: ['./search-trainee.component.css']\r\n})\r\nexport class SearchTraineeComponent implements OnInit {\r\n  @Output() OnSelectedTrainee: EventEmitter<string> = new EventEmitter<string>();\r\n  noResult: boolean = false;\r\n  search: string;\r\n  suggestions$: Observable<string[]>;\r\n  errorMessage: string;\r\n  selectedOption: any;\r\n  typeaheadLoading: boolean;\r\n  constructor(private BLServiceTrainee: ServiceTrainee) { }\r\n  ngOnInit(): void {\r\n    this.suggestions$ = new Observable((observer: Observer<string>) => {\r\n      observer.next(this.search);\r\n    }).pipe(\r\n      switchMap((query: string) => {\r\n        if (query) {\r\n          return this.BLServiceTrainee.ListSearch(query).pipe(\r\n            map((items: cTraineeItem[]) => {\r\n                return items.map((item: cTraineeItem) => (\r\n                  { Name: item.Name + \"<\" + item.Email + \">\" + item.Mobile + \" - \" + item.NationalId,\r\n                Id:item.Id }))\r\n              }),\r\n            tap(() => noop, err => {\r\n              // in case of http error\r\n              this.errorMessage = err && err.message || 'Something goes wrong';\r\n            }));\r\n            // .forEach((items: cTraineeItem[]) => {\r\n              \r\n            //   return items.map((item: cTraineeItem) => (\r\n            //     { Name: item.Name + \"<\" + item.Email + \">\" + item.Mobile + \" - \" + item.NationalId }))\r\n            // });\r\n        }\r\n\r\n        return of([]);\r\n      })\r\n    );\r\n  }\r\n  typeaheadNoResults(event: boolean): void {\r\n    this.noResult = event;\r\n  }\r\n  onSelect(event: TypeaheadMatch): void {\r\n    this.selectedOption = event.item.Id;\r\n    this.OnSelectedTrainee.emit(event.item.Id);\r\n  }\r\n  changeTypeaheadLoading(e: boolean): void {\r\n    this.typeaheadLoading = e;\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"form-group\">\r\n    <input [(ngModel)]=\"search\" typeaheadOptionField=\"Name\" [typeahead]=\"suggestions$\" [typeaheadAsync]=\"true\"\r\n      [typeaheadItemTemplate]=\"customItemTemplate\" class=\"form-control\" placeholder=\"{{'FromsControlSearchTrainee' | translate }}\"\r\n      [typeaheadMinLength]=\"3\" [isAnimated]=\"true\" (typeaheadOnSelect)=\"onSelect($event)\" (typeaheadNoResults)=\"typeaheadNoResults($event)\"\r\n      (typeaheadLoading)=\"changeTypeaheadLoading($event)\">\r\n  \r\n    <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"errorMessage\">\r\n      {{ errorMessage }}\r\n    </div>\r\n    \r\n    <ng-template #customItemTemplate let-model=\"item\">\r\n      <span>{{model.Name}}</span>\r\n    </ng-template>\r\n  \r\n    <div *ngIf=\"typeaheadLoading\">\r\n      <app-atom-spinner [animationDuration]=\"1000\" [size]=\"60\" [color]=\"'#ff1d5e'\"></app-atom-spinner>\r\n    </div>\r\n    <div class=\"alert alert-danger\" *ngIf=\"noResult\">{{'PageNoResult' | translate }}</div>\r\n  </div>\r\n  ","<!-- <input *ngIf=\"obj?.IsActive && IsEdit\" type=\"button\" class=\"btn btn-primary\" value=\"{{'GenericEdit' | translate }}\"\r\n    (click)=\"openBackDropCustomClass(content,obj)\">\r\n\r\n<input *ngIf=\"IsCreate\" type=\"button\" class=\"pull-right btn color-bg-01 white-text\" value=\"{{'GenericCreateNew' | translate }}\"\r\n    (click)=\"createBtn(content)\">\r\n<ng-template role=\"dialog\" #content let-modal class=\"modal fade\"> -->\r\n<section class=\"my-5\">\r\n    <div class=\"container\">\r\n        <div class='row'>\r\n            <h4 class=\"mb-4\" *ngIf=\"modelIsCreate\">{{'GenericCreate' | translate}}</h4>\r\n            <h4 class=\"mb-4\" *ngIf=\"!modelIsCreate\">{{'GenericEditing' | translate}}: {{modelNameEdited}}</h4>\r\n        </div>\r\n        <div class='row'>\r\n            <div class=\"modal-body pt-0\">\r\n                <form novalidate (ngSubmit)=\"modelSaveBtn(modelForm)\" #modelForm=\"ngForm\">\r\n                    <div class=\"form-group \">\r\n                        <mat-form-field class=\"example-full-width\">\r\n                            <mat-label>{{'GenericName' | translate }}</mat-label>\r\n                            <input matInput id=\"modelNameId\" type=\"text\" placeholder=\"{{'GenericRequiredName' | translate }}\" required\r\n                                [(ngModel)]=\"modelObj.Name\" #modelNameVar=\"ngModel\" name=\"modelName\"\r\n                                [ngClass]=\"{'is-invalid': (modelNameVar.touched || modelNameVar.dirty) && !modelNameVar.valid }\" />\r\n                            <mat-error *ngIf=\"modelNameVar.errors?.required\">{{'TraineeNameError' | translate }}\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"form-group \">\r\n                        <mat-form-field class=\"example-full-width\">\r\n                            <mat-label>{{'GenericEmail' | translate }}</mat-label>\r\n                            <input matInput oninput=\"this.value = this.value.toLowerCase()\" id=\"modelEmailId\"\r\n                                type=\"email\" placeholder=\"{{'GenericRequiredEmail' | translate }}\" [pattern]=\"emailPattern\" required\r\n                                disabled=\"{{!modelIsCreate}}\" [(ngModel)]=\"modelObj.Email\" #modelEmailVar=\"ngModel\"\r\n                                name=\"modelEmail\"\r\n                                [ngClass]=\"{'is-invalid': (modelEmailVar.touched || modelEmailVar.dirty) && !modelEmailVar.valid }\" />\r\n                            <mat-error *ngIf=\"modelEmailVar.errors?.required\">{{'TraineeEmailError' | translate }}\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"modelEmailVar.errors?.pattern\">{{'GenericEnterEmailValid' | translate }}\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"form-group \">\r\n                        <mat-label class=\"mr-2 ml-2\">{{'GenericType' | translate }} *</mat-label>\r\n                        <mat-radio-group id=\"modelIdTypeId\" [(ngModel)]=\"modelObj.IdType\" color=\"primary\"\r\n                            [required]=\"true\" #modelIdTypeVar=\"ngModel\" name=\"modelIdType\"\r\n                            [ngClass]=\"{'is-invalid': (modelIdTypeVar.touched || modelIdTypeVar.dirty) && !modelIdTypeVar.valid }\">\r\n                            <mat-radio-button class=\"mr-2 ml-2\" [value]=\"1\" color=\"primary\">{{'GenericNationalID' | translate }}\r\n                            </mat-radio-button>\r\n                            <mat-radio-button class=\"mr-2 ml-2\" [value]=\"2\" color=\"primary\">{{'GenericPassport' | translate }}\r\n                            </mat-radio-button>\r\n                        </mat-radio-group>\r\n                        <!-- </mat-form-field> -->\r\n                    </div>\r\n                    <div class=\"form-group \" *ngIf=\" modelObj.IdType == 1\">\r\n                        <mat-form-field class=\"example-full-width\">\r\n                            <mat-label>{{'GenericId' | translate }}</mat-label>\r\n                            <input matInput id=\"modelNationalIdId\" type=\"text\" placeholder=\"{{'TraineeIdRequired' | translate }}\"\r\n                                required disabled=\"{{!modelIsCreate && !IsAdmin}}\" [(ngModel)]=\"modelObj.NationalId\"\r\n                                #modelNationalIdVar=\"ngModel\" name=\"modelNationalId\" maxlength=\"14\" minlength=\"14\"\r\n                                [ngClass]=\"{'is-invalid': (modelNationalIdVar.touched || modelNationalIdVar.dirty) && !modelNationalIdVar.valid }\" />\r\n                            <mat-error *ngIf=\"modelNationalIdVar.errors?.required\">{{'TraineeIdError' | translate }}</mat-error>\r\n                            <div *ngIf=\"(modelNationalIdVar.errors?.maxlength || modelNationalIdVar.errors?.mminlength) && modelObj.IdType == 1\"> \r\n                                National Id must be 14 characters long.\r\n                           </div> \r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"form-group \" *ngIf=\" modelObj.IdType == 2\">\r\n                        <mat-form-field class=\"example-full-width\">\r\n                            <mat-label>{{'GenericId' | translate }}</mat-label>\r\n                            <input matInput id=\"modelNationalIdId\" type=\"text\" placeholder=\"{{'TraineeIdRequired' | translate }}\"\r\n                                required disabled=\"{{!modelIsCreate && !IsAdmin}}\" [(ngModel)]=\"modelObj.NationalId\"\r\n                                #modelNationalIdVar=\"ngModel\" name=\"modelNationalId\" \r\n                                [ngClass]=\"{'is-invalid': (modelNationalIdVar.touched || modelNationalIdVar.dirty) && !modelNationalIdVar.valid }\" />\r\n                            <mat-error *ngIf=\"modelNationalIdVar.errors?.required\">{{'TraineeIdError' | translate }}</mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"form-group \">\r\n                        <mat-form-field class=\"example-full-width\">\r\n                            <mat-label>{{'GenericMobile' | translate }}</mat-label>\r\n                            <input matInput id=\"modelMobileId\" type=\"number\" placeholder=\"{{'TraineeMobileRequired' | translate }}\" required\r\n                                number [(ngModel)]=\"modelObj.Mobile\" #modelMobileVar=\"ngModel\" name=\"modelMobile\"\r\n                                [ngClass]=\"{'is-invalid': (modelMobileVar.touched || modelMobileVar.dirty) && !modelMobileVar.valid }\" />\r\n                            <mat-error *ngIf=\"modelMobileVar.errors?.required\">{{'TraineeMobileError' | translate }}\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"form-group \">\r\n                        <mat-form-field class=\"example-full-width\">\r\n                            <mat-label>{{'TraineeDOB' | translate }}</mat-label>\r\n                            <input matInput [owlDateTime]=\"dt1\" [max]=\"todayDate\" required\r\n                                id=\"modelDOBId\" type=\"text\" placeholder=\"{{'TraineeDOBReuqired' | translate }}\"\r\n                                required [(ngModel)]=\"modelObj.DOB\" #modelDOBVar=\"ngModel\"\r\n                                name=\"modelDOB\" \r\n                                [ngClass]=\"{'is-invalid': (modelDOBVar.touched || modelDOBVar.dirty) && !modelDOBVar.valid }\" />\r\n                            <mat-error *ngIf=\"modelDOBVar.errors?.required\">{{'TraineeDOBError' | translate }}\r\n                            </mat-error>\r\n                            <mat-icon matSuffix [owlDateTimeTrigger]=\"dt1\"><i class=\"fa fa-calendar\"></i></mat-icon>\r\n                        </mat-form-field>\r\n                        <owl-date-time #dt1 [pickerType]=\"'calendar'\"></owl-date-time>\r\n                    </div>\r\n                    <div class=\"form-group \">\r\n                        <!-- <mat-form-field class=\"example-full-width\"> -->\r\n                        <mat-label class=\"mr-2 ml-2\">{{'TraineeGender' | translate }} *</mat-label>\r\n                        <mat-radio-group id=\"modelGenderId\" [(ngModel)]=\"modelObj.Gender\" color=\"primary\"\r\n                            [required]=\"true\" #modelGenderVar=\"ngModel\" name=\"modelGender\"\r\n                            [ngClass]=\"{'is-invalid': (modelGenderVar.touched || modelGenderVar.dirty) && !modelGenderVar.valid }\">\r\n                            <mat-radio-button class=\"mr-2 ml-2\" [value]=\"1\" color=\"primary\">{{'TraineeMale' | translate }}\r\n                            </mat-radio-button>\r\n                            <mat-radio-button class=\"mr-2 ml-2\" [value]=\"2\" color=\"primary\">{{'TraineeFemale' | translate }}\r\n                            </mat-radio-button>\r\n                        </mat-radio-group>\r\n                        <!-- </mat-form-field> -->\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <dynamic-form [fields]=\"regConfig\"></dynamic-form>\r\n                    </div>\r\n                    <div class=\"form-group pull-right md-form\">\r\n                        <button class=\"btn color-bg-grey btn-sm btn-default white-text\" type=\"submit\" (click)=\"OnRedrirectBack()\">Cancel</button>\r\n                        <button class=\"btn color-bg-01 btn-sm white-text\" type=\"submit\"\r\n                            [disabled]=\"!(modelForm.valid && form?.valid) || isClicked\">{{'GenericSave' | translate }} <i class=\"fa fa-spinner fa-spin\"\r\n                                *ngIf=\"isClicked\"></i></button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n<!-- </ng-template> -->","import { Component, OnInit, AfterViewInit, Input, Output, EventEmitter, ViewChild } from '@angular/core';\r\nimport { cTraineeItem } from 'src/app/interface/Response/Trainee.class';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ModelTrainee } from 'src/app/interface/Model/ModelTrainee.class';\r\nimport { ServiceTrainee } from 'src/app/services/trainee.service';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { DynamicFormComponent } from '../ConfigForms/components/dynamic-form/dynamic-form.component';\r\nimport { FieldConfig, Validator } from '../ConfigForms/field.interface';\r\nimport { ConfigForm } from 'src/app/Enum/ConfigForm.enum';\r\nimport { ActivatedRoute, Router, NavigationEnd } from '@angular/router';\r\nimport { ServiceMisc } from 'src/app/services/misc.service';\r\nimport { filter, map, mergeMap } from 'rxjs/operators';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'cust-add-trainee',\r\n  templateUrl: './add-trainee.component.html',\r\n  styleUrls: ['./add-trainee.component.css']\r\n})\r\nexport class AddTraineeComponent extends baseComponent implements AfterViewInit, OnInit {\r\n  IsCreate: boolean = false;\r\n  IsEdit: boolean = false;\r\n  IsModelTemplate: boolean = false;\r\n  obj: cTraineeItem;\r\n  TrainingId: string = \"\";\r\n  modelTraineeId: string = \"\";\r\n  isPageRegister: boolean = false;\r\n  //@Output() Reload: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n  emailPattern = \"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\";\r\n  modelIsCreate: boolean = true;\r\n  isClicked: boolean = false;\r\n  modelNameEdited: string = '';\r\n  modelObj: cTraineeItem = new cTraineeItem();\r\n  IsLoggedInTrainee:boolean = false;\r\n\r\n  @ViewChild(DynamicFormComponent) form: DynamicFormComponent;\r\n  regConfig: FieldConfig[] = [];\r\n\r\n  constructor(private modalService: NgbModal,\r\n    private router: Router,\r\n    private BLServiceMisc: ServiceMisc,\r\n    private BLServiceTrainee: ServiceTrainee,\r\n    private route: ActivatedRoute,\r\n    BLServiceShowMessage: ServiceShowMessage,\r\n    BLServiceLoginUser: ServiceLoginUser, BLTranslate: TranslateService,) {\r\n    super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\r\n    console.log(this.router.url);\r\n    this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n      map(() => this.route),\r\n      map(route => {\r\n        while (route.firstChild) route = route.firstChild\r\n        return route\r\n      }),\r\n      filter(route => route.outlet === 'primary'),\r\n      mergeMap(route => route.data)\r\n    ).subscribe(data => {\r\n      this.isPageRegister = data.PageType === 'register';\r\n    })\r\n  }\r\n\r\n   async ngOnInit() {\r\n    // var GetRoleFunction =  () => {\r\n    //   var self = this;\r\n    //   return new Promise((resolve) => {\r\n    //     self.BLServiceLoginUser.UserIsTraineeChanged.subscribe(obj => {\r\n    //       resolve(obj);\r\n    //     });\r\n    //   });\r\n    // }\r\n    // \r\n    var IsTrainee = this.router.url.toLocaleLowerCase() === \"/myprofile\";\r\n    \r\n    this.IsLoggedInTrainee = <any>IsTrainee;\r\n    \r\n    this.InitData();\r\n    this.createBtn();\r\n  }\r\n  ngAfterViewInit(): void {\r\n    this.InitDynamicForm();\r\n  }\r\n\r\n  InitData() {\r\n    if (this.IsLoggedInTrainee) {\r\n      this.IsCreate = false;\r\n      this.IsEdit = true;\r\n\r\n      this.BLServiceTrainee.getMyProfile().subscribe({\r\n        next: response => {\r\n          this.modelObj = response;\r\n          this.openBackDropCustomClass(this.modelObj);\r\n          this.InitDynamicForm();\r\n        },\r\n        error: err => {\r\n          this.message.Error(err)\r\n        }\r\n      });\r\n    }\r\n    else {\r\n      //{ path: 'Trainee/Create/:IsCreate/:TraineeId/:TrainingId', component: AddTraineeComponent },\r\n      const paramCreate = this.route.snapshot.paramMap.get('IsCreate');\r\n      if (paramCreate) {\r\n        this.IsCreate = paramCreate == \"1\";\r\n        this.IsEdit = paramCreate == \"0\";\r\n\r\n        if (this.IsCreate) {\r\n          this.createBtn();\r\n        }\r\n      }\r\n      const paramTraineeId = this.route.snapshot.paramMap.get('TraineeId');\r\n      if (paramTraineeId && paramTraineeId != \"0\" && !this.isPageRegister) {\r\n        this.modelTraineeId = paramTraineeId;\r\n        //Load trainee Data\r\n        this.BLServiceTrainee.getGetByid(this.modelTraineeId).subscribe({\r\n          next: response => {\r\n            this.modelObj = response;\r\n            this.openBackDropCustomClass(this.modelObj);\r\n            this.InitDynamicForm();\r\n          },\r\n          error: err => {\r\n            this.message.Error(err)\r\n          }\r\n        });\r\n      }\r\n      const paramTrainingId = this.route.snapshot.paramMap.get('TrainingId');\r\n      if (paramTrainingId && paramTrainingId != \"0\" && !this.isPageRegister) {\r\n        this.TrainingId = paramTrainingId;\r\n      }\r\n    }\r\n  }\r\n  InitDynamicForm() {\r\n    this.BLServiceMisc.GetByType(ConfigForm.Trainee).subscribe({\r\n      next: lst => {\r\n        this.regConfig = <FieldConfig[]>[];\r\n        lst.forEach(item => {\r\n\r\n          var obj = new FieldConfig();\r\n\r\n          obj.inputType = item.inputType;\r\n          obj.label = item.label;\r\n          obj.name = item.name;\r\n          obj.options = item.options;\r\n          obj.order = item.order;\r\n          obj.type = item.type;\r\n          obj.IsRequired = item.IsRequired;\r\n          if (obj.IsRequired)\r\n            obj.validations.push(new Validator(item.label));\r\n          if (this.modelObj.data)\r\n            obj.value = this.modelObj.data[item.name];\r\n\r\n          this.regConfig.push(obj);\r\n        });\r\n        this.form.fields = this.regConfig;\r\n        this.form.createControl();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n\r\n  }\r\n  createBtn(): void {\r\n\r\n    this.modelObj = new cTraineeItem;\r\n    this.modelIsCreate = true;\r\n    this.isClicked = false;\r\n    this.modelNameEdited = \"\";\r\n    //this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  modelSaveBtn(modelForm: NgForm): void {\r\n\r\n    if (!modelForm.valid)\r\n      return;\r\n\r\n    this.isClicked = true;\r\n    var model = new ModelTrainee();\r\n    model.Id = this.modelObj.Id;\r\n    model.Name = this.modelObj.Name;\r\n    model.NationalId = this.modelObj.NationalId;\r\n    model.Gender = this.modelObj.Gender.toString();\r\n    model.IdType = this.modelObj.IdType.toString();\r\n    model.Mobile = this.modelObj.Mobile;\r\n    model.Email = this.modelObj.Email;\r\n    model.DOB = this.modelObj.DOB;\r\n    model.data = this.form.value;\r\n\r\n    if (this.IsLoggedInTrainee) {\r\n      this.BLServiceTrainee.updateMyProfile(model).subscribe({\r\n        next: response => {\r\n          this.message.Success(this.msgSavedSuccessfully);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          //this.Reload.emit(true);\r\n          this.isClicked = false;\r\n        },\r\n        error: err => {\r\n          this.message.Error(err);\r\n          this.isClicked = false;\r\n        }\r\n      });\r\n    }\r\n    else {\r\n      if (this.modelIsCreate) {\r\n        model.TrainingId = this.TrainingId;\r\n        this.BLServiceTrainee.create(model).subscribe({\r\n          next: response => {\r\n            this.message.Success(this.msgSavedSuccessfully);\r\n            this.BLServiceShowMessage.sendMessage(this.message);\r\n            //this.Reload.emit(true);\r\n            this.isClicked = false;\r\n            this.OnRedrirectBack();\r\n          },\r\n          error: err => {\r\n            this.message.Error(err)\r\n            this.isClicked = false;\r\n          }\r\n        });\r\n      }\r\n      else {\r\n        this.BLServiceTrainee.update(model).subscribe({\r\n          next: response => {\r\n            this.message.Success(this.msgSavedSuccessfully);\r\n            this.BLServiceShowMessage.sendMessage(this.message);\r\n            //this.Reload.emit(true);\r\n            this.isClicked = false;\r\n            this.OnRedrirectBack();\r\n          },\r\n          error: err => {\r\n            this.message.Error(err);\r\n            this.isClicked = false;\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n  openBackDropCustomClass(obj: cTraineeItem) {\r\n\r\n    this.modelObj = obj;\r\n    this.modelIsCreate = false;\r\n    this.isClicked = false;\r\n    this.modelNameEdited = obj.Name;\r\n    //this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  OnRedrirectBack() {\r\n    if (this.isPageRegister) {\r\n      this.router.navigate(['/']);\r\n    }\r\n    else if (this.TrainingId != \"\") {\r\n      this.router.navigate(['/Training/Trainees/' + this.TrainingId]);\r\n    }\r\n    else {\r\n      this.router.navigate(['/Account/Trainee']);\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, Inject } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-confirmation-dialog',\r\n  templateUrl: './confirmation-dialog.component.html',\r\n  styleUrls: ['./confirmation-dialog.component.css']\r\n})\r\nexport class ConfirmationDialogComponent implements OnInit {\r\n\r\n\r\n  @Input() title: string;\r\n  @Input() message: string;\r\n  @Input() btnOkText: string;\r\n  @Input() btnCancelText: string;\r\n  \r\n  //constructor(public dialogRef: MatDialogRef<ConfirmationDialogComponent>) {}\r\n  constructor(private dialogRef: NgbActiveModal) { }\r\n\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public decline() {\r\n    this.dialogRef.close(false);\r\n  }\r\n\r\n   accept() {\r\n     this.dialogRef.close(true);\r\n  }\r\n\r\n  public dismiss() {\r\n    this.dialogRef.dismiss();\r\n  }\r\n}\r\n","<div class=\"\">\r\n    <div class=\"confirmMessage text-center\">\r\n        <p><i class=\"fa fa-info-circle\"></i> </p>\r\n        <h5 class=\"txt-color-red\">{{'ConfigMSGAlert' | translate }}</h5>\r\n        {{ message }}\r\n\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"accept()\">{{'ConfigMSGbtnOkText' | translate }}</button>\r\n        <button type=\"button\" class=\"btn btn-danger\" (click)=\"decline()\">{{'ConfigMSGbtnCancelText' | translate }}</button>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { ConfirmationDialogComponent } from './confirmation-dialog.component';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Component, Inject } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfirmationDialogService {\r\n\r\n  msgsetDeactivate: string;\r\n  msgsetActivate: string;\r\n  strOk:string;\r\n  strCancel:string\r\n  //constructor(private modalService: MatDialog) { }\r\n  constructor(private modalService: NgbModal,\r\n    private BLTranslate: TranslateService) {\r\n      this.BLTranslate.get(\"msgsetDeactivate\").subscribe(res => { this.msgsetDeactivate = res; });\r\n      this.BLTranslate.get(\"msgsetActivate\").subscribe(res => { this.msgsetActivate = res; });\r\n      this.BLTranslate.get(\"ConfigMSGbtnOkText\").subscribe(res => { this.strOk = res; });\r\n      this.BLTranslate.get(\"ConfigMSGbtnCancelText\").subscribe(res => { this.strCancel = res; });\r\n    }\r\n\r\n  public confirm(\r\n    // title: string,\r\n    message: string ,\r\n    btnOkText: string = this.strOk,\r\n    btnCancelText: string = this.strCancel,\r\n    dialogSize: 'sm'|'lg' = 'lg'): Promise<boolean> {\r\n    const modalRef = this.modalService.open(ConfirmationDialogComponent);\r\n    //modalRef.componentInstance.title = title;\r\n    modalRef.componentInstance.message = message;\r\n    modalRef.componentInstance.btnOkText = btnOkText;\r\n    modalRef.componentInstance.btnCancelText = btnCancelText;\r\n\r\n    return modalRef.result;\r\n  }\r\n\r\n  public confirmActivation(\r\n    // title: string,\r\n    message: string = this.msgsetActivate,\r\n    btnOkText: string = this.strOk,\r\n    btnCancelText: string = this.strCancel,\r\n    dialogSize: 'sm'|'lg' = 'lg'): Promise<boolean> {\r\n    const modalRef = this.modalService.open(ConfirmationDialogComponent);\r\n    //modalRef.componentInstance.title = title;\r\n    modalRef.componentInstance.message = message;\r\n    modalRef.componentInstance.btnOkText = btnOkText;\r\n    modalRef.componentInstance.btnCancelText = btnCancelText;\r\n\r\n    return modalRef.result;\r\n  }\r\n  \r\n  public confirmDeactivation(\r\n    // title: string,\r\n    message: string = this.msgsetDeactivate,\r\n    btnOkText: string = this.strOk,\r\n    btnCancelText: string = this.strCancel,\r\n    dialogSize: 'sm'|'lg' = 'lg'): Promise<boolean> {\r\n    const modalRef = this.modalService.open(ConfirmationDialogComponent);\r\n    //modalRef.componentInstance.title = title;\r\n    modalRef.componentInstance.message = message;\r\n    modalRef.componentInstance.btnOkText = btnOkText;\r\n    modalRef.componentInstance.btnCancelText = btnCancelText;\r\n\r\n    return modalRef.result;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Constants } from 'src/app/constants';\r\nimport { cLogoPartnerItem } from 'src/app/interface/Response/LogoPartner.class';\r\nimport { ServiceMisc } from 'src/app/services/misc.service';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n  lstLogoPartner:cLogoPartnerItem[];\r\n  FilesURL: string = Constants.FilesURL;\r\n  \r\n  constructor(private BLService: ServiceMisc) { }\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n  loadData() {\r\n\r\n    this.BLService.getLogoPartnerListActive().subscribe({\r\n      next: lst => {\r\n        this.lstLogoPartner = lst;\r\n      }\r\n    });\r\n  }\r\n}\r\n","<!-- #Footer -->\r\n\r\n<footer>\r\n\r\n    <div class=\"footer-top vert-cent\">\r\n\r\n        <div class=\"container-fluid\">\r\n\r\n            <div class=\"row py-3 d-flex align-items-center\">\r\n                <div class=\"col-md-10 col-lg-10 customer-logos slider\">\r\n                    <div class=\"col-md-12\" *ngIf=\"lstLogoPartner?.length > 0\">\r\n                        <div *ngFor=\"let item of lstLogoPartner\" class=\"slide\">\r\n                            <img *ngIf=\"item.WebsiteURL == ''\" src=\"{{FilesURL + item.ImagePath}}\">\r\n                            <a *ngIf=\"item.WebsiteURL != ''\" href=\"{{item.WebsiteURL}}\" target=\"_blank\">\r\n                                <img src=\"{{FilesURL + item.ImagePath}}\">\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-2 col-lg-2 text-center text-md-right\">\r\n                    <a href=\"https://www.facebook.com/TawarWaghayar\" target=\"_blank\" class=\"fb-ic\"><i\r\n                            class=\"fab fa-facebook-f ml-4\"></i></a>\r\n                    <a href=\"https://twitter.com/CitizenshipMSEg\" target=\"_blank\" class=\"tw-ic\"><i\r\n                            class=\"fab fa-twitter ml-4\"></i></a>\r\n                    <!-- <a href=\"javascript:void(0)\" target=\"_blank\" class=\"gplus-ic\"><i\r\n                            class=\"fab fa-google-plus-g ml-4\"></i></a>\r\n                    <a href=\"javascript:void(0)\" target=\"_blank\" class=\"li-ic\"><i\r\n                            class=\"fab fa-linkedin-in ml-4\"></i></a>\r\n                    <a href=\"javascript:void(0)\" target=\"_blank\" class=\"ins-ic\"><i\r\n                            class=\"fab fa-instagram ml-4\"></i></a> -->\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"footer-links\">\r\n        <div class=\"container-fluid\">\r\n            <div class=\"row py-4 d-flex\">\r\n\r\n                <div class=\"col-md-6 col-lg-6 col-xs-6 text-md-left mb-md-0 mb-3\">\r\n                    <img src=\"/assets/img/main/logo-load.jpg\" class=\"img-fluid mb-3 \" alt=\"\" />\r\n                    <div class=\"w-100\"></div>\r\n                    <img src=\"/assets/img/test-img/MoYouth.png\" class=\"img-fluid mx-2\" alt=\"\" />\r\n                    <img src=\"/assets/img/test-img/Microsoft.png\" class=\"img-fluid mx-2\" alt=\"\" />\r\n                    <img src=\"/assets/img/test-img/cef.png\" class=\"img-fluid mx-2\" alt=\"\" />\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-lg-3 col-xs-6 text-md-left mb-md-0 mb-3\">\r\n                    <h6 class=\"mb-4\">{{'FooterUsefulLinks' | translate }}</h6>\r\n                    <p><a routerLink=\"/Terms\">{{'FooterTerms' | translate }}</a></p>\r\n                    <p><a routerLink=\"/Policy\">{{'FooterPolicy' | translate }}</a></p>\r\n                    <!-- <p><a routerLink=\"/About\">About Us</a></p> -->\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-lg-3 text-md-left mb-md-0\">\r\n                    <h6 class=\"mb-4\">{{'FooterContact' | translate }}</h6>\r\n                    <p class=\"cont\"><i class=\"fal fa-home mr-3\"></i><a target=\"_blank\"\r\n                            href=\"https://www.facebook.com/MicrosoftEgyptCitizenship\">\r\n                            {{'FooterAddress1' | translate }}</a></p>\r\n                    <p>{{'FooterAddress2' | translate }}</p>\r\n                    <p>{{'FooterAddress3' | translate }}</p>\r\n                    <p class=\"cont\"><i class=\"fal fa-envelope mr-3\"></i><a\r\n                            href=\"mailto:info@getonlineegypt.com\">info@getonlineegypt.com</a></p>\r\n                    <p class=\"cont\"><i class=\"fal fa-phone mr-3\"></i><a href=\"tel:+20235393333\">+2 02 3539 3333</a> /\r\n                        <a href=\"tel:+20235390303\">+2 02 3539 0303</a>\r\n                    </p>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"footer-copyright text-center py-4\">\r\n        <div class=\"container-fluid\">\r\n            ©\r\n            <script>document.write(new Date().getFullYear());</script> TawarWeGhayar.com | Developed By <a\r\n                href=\"http://www.nrg-it.com/\" target=\"_blank\"> nrg-it.com</a>\r\n        </div>\r\n    </div>\r\n\r\n</footer>\r\n<!-- #Footer End -->","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { tap, switchMap, map } from 'rxjs/operators';\r\nimport { of, noop, Observer, Observable } from 'rxjs';\r\nimport { ServiceUserProfile } from 'src/app/services/userprofile.service';\r\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead/typeahead-match.class';\r\nimport { cUserProfileItem } from 'src/app/interface/Response/UserProfile.class';\r\n\r\n@Component({\r\n  selector: 'cust-search-partner',\r\n  templateUrl: './search-partner.component.html',\r\n  styleUrls: ['./search-partner.component.scss']\r\n})\r\nexport class SearchPartnerComponent implements OnInit {\r\n  @Output() OnSelectedPartner : EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  noResult: boolean = false;\r\n  search: string;\r\n  suggestions$: Observable<cUserProfileItem[]>;\r\n  errorMessage: string;\r\n  selectedOption: any;\r\n  typeaheadLoading: boolean;\r\n  constructor(private BLServiceUserProfile: ServiceUserProfile) { }\r\n  ngOnInit(): void {\r\n    this.suggestions$ = new Observable((observer: Observer<string>) => {\r\n      observer.next(this.search);\r\n    }).pipe(\r\n      switchMap((query: string) => {\r\n        if (query) {\r\n          return this.BLServiceUserProfile.GetPartnerSearch(query).pipe(\r\n            tap(() => noop, err => {\r\n              // in case of http error\r\n              this.errorMessage = err && err.message || 'Something goes wrong';\r\n            }));\r\n        }\r\n\r\n        return of([]);\r\n      })\r\n    );\r\n  }\r\n  typeaheadNoResults(event: boolean): void {\r\n    this.noResult = event;\r\n  }\r\n  onSelect(event: TypeaheadMatch): void {\r\n    this.selectedOption = event.item.Id;\r\n    this.OnSelectedPartner.emit(event.item.Id);\r\n  }\r\n  changeTypeaheadLoading(e: boolean): void {\r\n    this.typeaheadLoading = e;\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"form-group\">\r\n  <input [(ngModel)]=\"search\" typeaheadOptionField=\"Name\" [typeahead]=\"suggestions$\" [typeaheadAsync]=\"true\"\r\n    [typeaheadItemTemplate]=\"customItemTemplate\" class=\"form-control\" placeholder=\"{{'FromsControlSearch' | translate }}\"\r\n    [typeaheadMinLength]=\"3\" [isAnimated]=\"true\" (typeaheadOnSelect)=\"onSelect($event)\" (typeaheadNoResults)=\"typeaheadNoResults($event)\"\r\n    (typeaheadLoading)=\"changeTypeaheadLoading($event)\">\r\n\r\n  <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"errorMessage\">\r\n    {{ errorMessage }}\r\n  </div>\r\n  \r\n  <ng-template #customItemTemplate let-model=\"item\">\r\n    <span>{{model.Name}}</span>\r\n  </ng-template>\r\n\r\n  <div *ngIf=\"typeaheadLoading\">\r\n    <app-atom-spinner [animationDuration]=\"1000\" [size]=\"60\" [color]=\"'#ff1d5e'\"></app-atom-spinner>\r\n  </div>\r\n  <div class=\"alert alert-danger\" *ngIf=\"noResult\">{{'PageNoResult' | translate }}</div>\r\n</div>\r\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { Observable, noop, Observer, of } from 'rxjs';\r\nimport { ServiceEntityManagement } from 'src/app/services/entitymanagement.service';\r\nimport { switchMap, tap } from 'rxjs/operators';\r\nimport { cEntityPartnerItem } from 'src/app/interface/Response/EntityPartner.class';\r\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead/public_api';\r\nimport { cEntitySubPartnerItem } from 'src/app/interface/Response/EntitySubPartner.class';\r\n\r\n@Component({\r\n  selector: 'cust-search-sub-partner-entity',\r\n  templateUrl: './search-sub-partner-entity.component.html',\r\n  styleUrls: ['./search-sub-partner-entity.component.scss']\r\n})\r\nexport class SearchSubPartnerEntityComponent implements OnInit {\r\n\r\n  @Output() OnSelectedPartner : EventEmitter<string> = new EventEmitter<string>();\r\n  \r\n  noResult: boolean = false;\r\n  search: string;\r\n  suggestions$: Observable<cEntitySubPartnerItem[]>;\r\n  errorMessage: string;\r\n  selectedOption: any;\r\n  typeaheadLoading: boolean;\r\n  constructor(private BLServiceEntityManagement: ServiceEntityManagement) { }\r\n  ngOnInit(): void {\r\n    this.suggestions$ = new Observable((observer: Observer<string>) => {\r\n      observer.next(this.search);\r\n    }).pipe(\r\n      switchMap((query: string) => {\r\n        if (query) {\r\n          return this.BLServiceEntityManagement.getEntitySubPartnerListActive(query).pipe(\r\n            tap(() => noop, err => {\r\n              // in case of http error\r\n              this.errorMessage = err && err.message || 'Something goes wrong';\r\n            }));\r\n        }\r\n\r\n        return of([]);\r\n      })\r\n    );\r\n  }\r\n  typeaheadNoResults(event: boolean): void {\r\n    this.noResult = event;\r\n  }\r\n  onSelect(event: TypeaheadMatch): void {\r\n    this.selectedOption = event.item.Id;\r\n    this.OnSelectedPartner.emit(event.item.Id);\r\n  }\r\n  changeTypeaheadLoading(e: boolean): void {\r\n    this.typeaheadLoading = e;\r\n  }\r\n\r\n\r\n\r\n}\r\n","<div class=\"form-group\">\r\n    <input [(ngModel)]=\"search\" typeaheadOptionField=\"Name\" [typeahead]=\"suggestions$\" [typeaheadAsync]=\"true\"\r\n      [typeaheadItemTemplate]=\"customItemTemplate\" class=\"form-control\" placeholder=\"{{'FromsControlSearch' | translate }}\"\r\n      [typeaheadMinLength]=\"3\" [isAnimated]=\"true\" (typeaheadOnSelect)=\"onSelect($event)\" (typeaheadNoResults)=\"typeaheadNoResults($event)\"\r\n      (typeaheadLoading)=\"changeTypeaheadLoading($event)\">\r\n  \r\n    <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"errorMessage\">\r\n      {{ errorMessage }}\r\n    </div>\r\n    <ng-template #customItemTemplate let-model=\"item\">\r\n      <span>{{model.Name}}</span>\r\n    </ng-template>\r\n    <div *ngIf=\"typeaheadLoading\">\r\n      <app-atom-spinner [animationDuration]=\"1000\" [size]=\"60\" [color]=\"'#ff1d5e'\"></app-atom-spinner>\r\n    </div>\r\n    <div class=\"alert alert-danger\" *ngIf=\"noResult\">{{'PageNoResult' | translate }}</div>\r\n  </div>\r\n  ","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\r\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead/public_api';\r\nimport { switchMap, tap } from 'rxjs/operators';\r\nimport { noop, Observable, Observer, of } from 'rxjs';\r\nimport { ServiceUserProfile } from 'src/app/services/userprofile.service';\r\nimport { cUserProfileItem } from 'src/app/interface/Response/UserProfile.class';\r\n\r\n@Component({\r\n  selector: 'cust-search-sub-partner',\r\n  templateUrl: './search-sub-partner.component.html',\r\n  styleUrls: ['./search-sub-partner.component.scss']\r\n})\r\nexport class SearchSubPartnerComponent implements OnInit {\r\n\r\n  @Output() OnSelectedPartner : EventEmitter<string> = new EventEmitter<string>();\r\n  \r\n  noResult: boolean = false;\r\n  search: string;\r\n  suggestions$: Observable<cUserProfileItem[]>;\r\n  errorMessage: string;\r\n  selectedOption: any;\r\n  typeaheadLoading: boolean;\r\n  constructor(private BLServiceUserProfile: ServiceUserProfile) { }\r\n  ngOnInit(): void {\r\n    this.suggestions$ = new Observable((observer: Observer<string>) => {\r\n      observer.next(this.search);\r\n    }).pipe(\r\n      switchMap((query: string) => {\r\n        if (query) {\r\n          return this.BLServiceUserProfile.GetSubPartnerSearch(query).pipe(\r\n            tap(() => noop, err => {\r\n              // in case of http error\r\n              this.errorMessage = err && err.message || 'Something goes wrong';\r\n            }));\r\n        }\r\n\r\n        return of([]);\r\n      })\r\n    );\r\n  }\r\n  typeaheadNoResults(event: boolean): void {\r\n    this.noResult = event;\r\n  }\r\n  onSelect(event: TypeaheadMatch): void {\r\n    this.selectedOption = event.item.Id;\r\n    this.OnSelectedPartner.emit(event.item.Id);\r\n  }\r\n  changeTypeaheadLoading(e: boolean): void {\r\n    this.typeaheadLoading = e;\r\n  }\r\n\r\n\r\n\r\n}\r\n","<div class=\"form-group\">\r\n  <!-- <pre class=\"card card-block card-header\">Model: {{ search | json }}</pre>\r\n    <pre class=\"card card-block card-header mb-3\">Selected option: {{selectedOption | json}}</pre> -->\r\n  <input [(ngModel)]=\"search\" typeaheadOptionField=\"Name\" [typeahead]=\"suggestions$\" [typeaheadAsync]=\"true\"\r\n    [typeaheadItemTemplate]=\"customItemTemplate\" class=\"form-control\"\r\n    placeholder=\"{{'FromsControlSearch' | translate }}\" [typeaheadMinLength]=\"3\" [isAnimated]=\"true\"\r\n    (typeaheadOnSelect)=\"onSelect($event)\" (typeaheadLoading)=\"changeTypeaheadLoading($event)\"\r\n    (typeaheadNoResults)=\"typeaheadNoResults($event)\">\r\n\r\n  <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"errorMessage\">\r\n    {{ errorMessage }}\r\n  </div>\r\n  <ng-template #customItemTemplate let-model=\"item\">\r\n    <span>{{model.Name}}</span>\r\n  </ng-template>\r\n  <div *ngIf=\"typeaheadLoading\">\r\n    <app-atom-spinner [animationDuration]=\"1000\" [size]=\"60\" [color]=\"'#ff1d5e'\"></app-atom-spinner>\r\n  </div>\r\n  <div class=\"alert alert-danger\" *ngIf=\"noResult\">{{'PageNoResult' | translate }}</div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from 'src/app/core/auth-service.component';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ServiceMisc } from 'src/app/services/misc.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Constants } from 'src/app/constants';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  isLoggedIn = false;\r\n  userName: string;\r\n  userRole: string;\r\n  isAdmin: boolean = false;\r\n  isPartner: boolean = false;\r\n  isSubPartner: boolean = false;\r\n  IsTrainee: boolean = false;\r\n  IsTrainer: Boolean;\r\n  \r\n  lang: string = 'ar';\r\n  PathFiles:string = Constants.FilesURL;\r\n\r\n  constructor(private _authService: AuthService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    public BLServiceMisc: ServiceMisc,\r\n    public translate: TranslateService,\r\n    private BLServiceLoginUser: ServiceLoginUser,\r\n    BLTranslate: TranslateService,) {\r\n    translate.addLangs(['en', 'ar']);\r\n\r\n    if (localStorage.getItem('lang'))\r\n      this.lang = localStorage.getItem('lang');\r\n\r\n    translate.setDefaultLang(this.lang ? this.lang : \"ar\");\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.userName = this.BLServiceLoginUser.userName;\r\n    this.BLServiceLoginUser.UserNameChanged.subscribe(obj => {\r\n      this.userName = obj;\r\n    });\r\n\r\n    this.isLoggedIn = this.BLServiceLoginUser.isLoggedIn;\r\n    this.BLServiceLoginUser.UserIsLoggedInChanged.subscribe(obj => {\r\n      this.isLoggedIn = obj;\r\n    });\r\n\r\n    this.userRole = this.BLServiceLoginUser.userRole;\r\n    this.BLServiceLoginUser.UserRoleChanged.subscribe(obj => {\r\n      this.userRole = obj;\r\n    });\r\n\r\n    this.isAdmin = this.BLServiceLoginUser.IsAdmin;\r\n    this.BLServiceLoginUser.UserIsAdminChanged.subscribe(obj => {\r\n      this.isAdmin = obj;\r\n    });\r\n\r\n    this.isPartner = this.BLServiceLoginUser.IsPartner;\r\n    this.BLServiceLoginUser.UserIsPartnerChanged.subscribe(obj => {\r\n      this.isPartner = obj;\r\n    });\r\n    this.isSubPartner = this.BLServiceLoginUser.IsSubPartner;\r\n    this.BLServiceLoginUser.UserIsSubPartnerChanged.subscribe(obj => {\r\n      this.isSubPartner = obj;\r\n    });\r\n\r\n    this.IsTrainer = this.BLServiceLoginUser.IsTrainer;\r\n    this.BLServiceLoginUser.UserIsTrainerChanged.subscribe(obj => {\r\n      this.IsTrainer = obj;\r\n    });\r\n\r\n    this.IsTrainee = this.BLServiceLoginUser.IsTrainee;\r\n    this.BLServiceLoginUser.UserIsTraineeChanged.subscribe(obj => {\r\n      this.IsTrainee = obj;\r\n    });\r\n  }\r\n  login() {\r\n    this._authService.login();\r\n  }\r\n\r\n  logout() {\r\n    this._authService.logout();\r\n  }\r\n  switchLang(lang: string) {\r\n    this.translate.use(lang);\r\n\r\n    localStorage.setItem('lang', lang);\r\n    localStorage.setItem('URL', this.router.url);\r\n    window.location.reload();\r\n  }\r\n}\r\n","<header>\r\n    <nav class=\"navbar navbar-expand-lg header-top\">\r\n        <a class=\"navbar-brand\" href=\"/\">\r\n            <!-- <img src=\"/assets/img/main/logo.png\" class=\"logo-header\" alt=\"\" /> -->\r\n            <img src=\"{{PathFiles}}Logo/logo.png\" class=\"logo-header\" alt=\"\" />\r\n        </a>\r\n        <!-- <div class=\"container-fluid\">\r\n            isLoggedIn: {{isLoggedIn}}<br>\r\n            userName: {{userName}}<br>\r\n            userRole: {{userRole}}<br>\r\n            IsAdmin:{{isAdmin}}\r\n        </div>  -->\r\n        <button class=\"navbar-toggler header-menu-mob\" type=\"button\" data-toggle=\"offcanvas\">\r\n            <span class=\"fal fa-bars\"></span>\r\n        </button>\r\n\r\n        <button class=\"navbar-toggler header-top-mob\" type=\"button\" data-toggle=\"collapse\" data-target=\"#header-top\"\r\n            aria-controls=\"header-top\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span class=\"fal fa-ellipsis-v\"></span>\r\n        </button>\r\n\r\n        <div class=\"collapse navbar-collapse\" id=\"header-top\">\r\n            <ul class=\"navbar-nav ulMargianAuto\">\r\n\r\n                <!-- <li class=\"nav-item\">\r\n                    <a class=\"nav-link\" data-toggle=\"modal\" data-target=\"#SearchForm\"><i class=\"fal fa-search\"></i></a>\r\n                </li> -->\r\n\r\n                <li class=\"nav-item dropdown\">\r\n                    <a class=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\r\n                        aria-expanded=\"true\">\r\n                        <i class=\"fas fa-bars\"></i>\r\n                        <!-- <img src=\"/assets/img/main/user-01.jpg\" alt=\"\" /> -->\r\n                    </a>\r\n                    <div class=\"dropdown-menu dropdown-menu-right\">\r\n                        <a *ngIf=\"!isLoggedIn\" class=\"dropdown-item\" (click)=\"login()\"><i\r\n                                class=\"fal fa-unlock-alt\"></i>{{'HeaderSignIn' | translate }}</a>\r\n                        <a *ngIf=\"isLoggedIn\" class=\"dropdown-item\">{{userName}}</a>\r\n                        <a *ngIf=\"isLoggedIn\" class=\"dropdown-item\" (click)=\"logout()\"><i\r\n                                class=\"fal fa-lock-alt\"></i>{{'HeaderSignout' | translate }}</a>\r\n                    </div>\r\n                </li>\r\n\r\n                <li class=\"nav-item dropdown\">\r\n                    <a class=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\r\n                        aria-expanded=\"true\">\r\n                        <div class=\"flag-top-menu flag-icon-gb\" *ngIf=\"lang == 'en' \"></div>\r\n                        <div class=\"flag-top-menu flag-icon-eg\" *ngIf=\"lang == 'ar'\"></div>\r\n                    </a>\r\n                    <div class=\"dropdown-menu dropdown-menu-right\">\r\n                        <a class=\"dropdown-item\" (click)=\"switchLang('en')\">\r\n                            <div class=\"flag-top-menu flag-icon-gb\"></div>English\r\n                        </a>\r\n                        <a class=\"dropdown-item ar-lang\" (click)=\"switchLang('ar')\">\r\n                            <div class=\"flag-top-menu flag-icon-eg\"></div>عربى\r\n                        </a>\r\n                    </div>\r\n                </li>\r\n\r\n            </ul>\r\n        </div>\r\n\r\n    </nav>\r\n\r\n    <nav class=\"navbar navbar-expand-lg header-menu\">\r\n\r\n        <div class=\"navbar-collapse offcanvas-collapse\" id=\"header-menu\">\r\n            <ul class=\"navbar-nav urMargianAuto\">\r\n\r\n                <li class=\"nav-item\">\r\n                    <a class=\"nav-link\" href=\"/\" style=\"font-size: 25px;\"><i class=\"fas fa-home\"></i></a>\r\n                </li>\r\n                <li class=\"nav-item dropdown\" *ngIf=\"isAdmin\">\r\n                    <a class=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\r\n                        aria-expanded=\"true\">{{'HeaderDataManagement' | translate }}</a>\r\n                    <div class=\"dropdown-menu\">\r\n                        <a class=\"dropdown-item\" *ngIf=\"isAdmin\" routerLink=\"/DataManagement/City\">{{'GenericCity' |\r\n                            translate }}</a>\r\n                        <!-- <a class=\"dropdown-item\" *ngIf=\"isAdmin\" routerLink=\"/DataManagement/NGOType\">{{'GenericNGOType' | translate }}</a> -->\r\n                        <a class=\"dropdown-item\" *ngIf=\"isAdmin\"\r\n                            routerLink=\"/DataManagement/TrainingType\">{{'GenericTrainingType' | translate }}</a>\r\n                        <a class=\"dropdown-item\" *ngIf=\"isAdmin\"\r\n                            routerLink=\"/DataManagement/TrainingCategory\">{{'GenericTrainingCategory' | translate }}</a>\r\n                        <a class=\"dropdown-item\" *ngIf=\"isAdmin\" routerLink=\"/Questions/List\">{{'HeaderQuestions' |\r\n                            translate }}</a>\r\n                        <a class=\"dropdown-item\" *ngIf=\"isAdmin\" routerLink=\"/Exam/Templates\">{{'HeaderExamTemplates' |\r\n                            translate }}</a>\r\n                    </div>\r\n                </li>\r\n                <li class=\"nav-item dropdown\" *ngIf=\"isAdmin || isPartner\">\r\n                    <a class=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\r\n                        aria-expanded=\"true\">{{'HeaderEntityManagement' | translate }}</a>\r\n                    <div class=\"dropdown-menu\">\r\n                        <a class=\"dropdown-item\" *ngIf=\"isAdmin\"\r\n                            routerLink=\"/EntityManagement/Partner\">{{'GenericPartner' | translate }}</a>\r\n                        <a class=\"dropdown-item\" *ngIf=\"isAdmin || isPartner\"\r\n                            routerLink=\"/EntityManagement/SubPartner\">{{'GenericSubPartner' | translate }}</a>\r\n                        <a class=\"dropdown-item\" *ngIf=\"isAdmin \"\r\n                            routerLink=\"/EntityManagement/PartnerReports\">{{'HeaderPartnerReports' | translate }}</a>\r\n                    </div>\r\n                </li>\r\n                <li class=\"nav-item dropdown\" *ngIf=\"isAdmin \">\r\n                    <a class=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\r\n                        aria-expanded=\"true\">{{'HeaderConfigForm' | translate }} </a>\r\n                    <div class=\"dropdown-menu\">\r\n                        <a class=\"dropdown-item\" *ngIf=\"isAdmin\"\r\n                            routerLink=\"/ConfigRequestRegister\">{{'ConfigRequestRegisterationForm' | translate }} </a>\r\n                        <a class=\"dropdown-item\" *ngIf=\"isAdmin\"\r\n                            routerLink=\"/ConfigTrainee\">{{'ConfigTraineeRegisterationForm' | translate }} </a>\r\n                    </div>\r\n                </li>\r\n                <li class=\"nav-item dropdown\" *ngIf=\"isAdmin \">\r\n                    <a class=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\r\n                        aria-expanded=\"true\">{{'HeaderManage' | translate }}</a>\r\n                    <div class=\"dropdown-menu\">\r\n                        <a class=\"dropdown-item\" *ngIf=\"isAdmin\" routerLink=\"/About/Edit\">{{'HeaderAboutEdit' |\r\n                            translate }}</a>\r\n                        <a class=\"dropdown-item\" *ngIf=\"isAdmin\" routerLink=\"/Term/Edit\">{{'HeaderTermConditionEdit' |\r\n                            translate }}</a>\r\n                        <a class=\"dropdown-item\" *ngIf=\"isAdmin\" routerLink=\"/Policy/Edit\">{{'HeaderPolicyEdit' |\r\n                            translate }}</a>\r\n                        <a class=\"dropdown-item\" *ngIf=\"isAdmin\" routerLink=\"/Info/Edit\">{{'HeaderHomepageInfoEdit' |\r\n                            translate }}</a>\r\n                        <a class=\"dropdown-item\" *ngIf=\"isAdmin\"\r\n                            routerLink=\"/Content/PortalLogo\">{{'HeaderHomepagePortalLogo' | translate }}</a>\r\n                        <a class=\"dropdown-item\" *ngIf=\"isAdmin\"\r\n                            routerLink=\"/Content/PartnerLogo\">{{'HeaderHomepagePartnerLogo' | translate }}</a>\r\n                    </div>\r\n                </li>\r\n                <li class=\"nav-item dropdown\" *ngIf=\"isAdmin \">\r\n                    <a class=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\r\n                        aria-expanded=\"true\">{{'HeaderCertificate' | translate }}</a>\r\n                    <div class=\"dropdown-menu\">\r\n                        <a class=\"dropdown-item\" *ngIf=\"isAdmin\" routerLink=\"/Certificate/Generics\">{{'HeaderGenerics' |\r\n                            translate }}</a>\r\n                        <a class=\"dropdown-item\" *ngIf=\"isAdmin\" routerLink=\"/Certificate/Category\">{{'GenericPartner' |\r\n                            translate }}</a>\r\n                        <a class=\"dropdown-item\" *ngIf=\"isAdmin\"\r\n                            routerLink=\"/Certificate/TrainingCenter\">{{'GenericTrainingCenter' | translate }}</a>\r\n                        <a class=\"dropdown-item\" *ngIf=\"isAdmin\"\r\n                            routerLink=\"/Certificate/TranierApproval\">{{'GenericTrainerApproval' | translate }} </a>\r\n                    </div>\r\n                </li>\r\n                <li class=\"nav-item\" *ngIf=\"!isLoggedIn\">\r\n                    <a class=\"nav-link\" href=\"\" routerLink=\"/Trainee/Register\">{{'HeaderRegisterTrainee' | translate\r\n                        }}</a>\r\n                </li>\r\n                <li class=\"nav-item\" *ngIf=\"!isLoggedIn\">\r\n                    <a class=\"nav-link\" href=\"\" routerLink=\"/RequestRegister\">{{'HeaderRegisterTrainer' | translate\r\n                        }}</a>\r\n                </li>\r\n                <li class=\"nav-item\" *ngIf=\"!isLoggedIn\">\r\n                    <a class=\"nav-link\" href=\"\" routerLink=\"/RequestRegister\">{{'HeaderRegisterCenter' | translate\r\n                        }}</a>\r\n                </li>\r\n                <li class=\"nav-item\" *ngIf=\"isLoggedIn\">\r\n                    <a class=\"nav-link\" *ngIf=\"isAdmin|| isPartner || isSubPartner\" href=\"\"\r\n                        routerLink=\"/Account/Account\">{{'HeaderAccounts' | translate }}</a>\r\n                </li>\r\n                <li class=\"nav-item\" *ngIf=\"isLoggedIn  && (isAdmin || IsTrainer)\">\r\n                    <a class=\"nav-link\" href=\"\" routerLink=\"/Account/Trainee\">{{'GenericTrainee' | translate }}</a>\r\n                </li>\r\n                <li class=\"nav-item\" *ngIf=\"isLoggedIn\">\r\n                    <a class=\"nav-link\" href=\"\" routerLink=\"/Training/List\">{{'HeaderTraining' | translate }}</a>\r\n                </li>\r\n\r\n                <li class=\"nav-item\" *ngIf=\"isLoggedIn && IsTrainee\">\r\n                    <a class=\"nav-link\" href=\"\" routerLink=\"/MyTraining\">{{'HeaderMyTraining' | translate }}</a>\r\n                </li>\r\n                <li class=\"nav-item\" *ngIf=\"isLoggedIn && IsTrainee\">\r\n                    <a class=\"nav-link\" href=\"\" routerLink=\"/MyProfile\">{{'HeaderMyProfile' | translate }}</a>\r\n                </li>\r\n                <li class=\"nav-item\" *ngIf=\"isLoggedIn && IsTrainer\">\r\n                    <a class=\"nav-link\" href=\"\" routerLink=\"/TrainerCertificate/0\">{{'HeaderMyCertificates' | translate}}</a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n\r\n    </nav>\r\n\r\n</header>\r\n<!-- #Header End -->","import { Component, OnInit, EventEmitter, Input, Output } from '@angular/core';\r\nimport { Page } from '../../../pagination/page';\r\n\r\n//https://keepgrowing.in/angular/handle-server-side-sorting-in-an-angular-application/\r\n@Component({\r\n  selector: 'app-custom-pagination',\r\n  templateUrl: './custom-pagination.component.html',\r\n  styleUrls: ['./custom-pagination.component.scss']\r\n})\r\nexport class CustomPaginationComponent implements OnInit {\r\n  @Input() page: Page<any>;\r\n  @Output() nextPageEvent = new EventEmitter();\r\n  @Output() previousPageEvent = new EventEmitter();\r\n  @Output() loadPageCurrentEvent = new EventEmitter();\r\n  \r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  nextPage(): void {\r\n    this.nextPageEvent.emit(null);\r\n  }\r\n\r\n  previousPage(): void {\r\n    this.previousPageEvent.emit(null);\r\n  }\r\n  loadPageCurrent(PageCurrent:number): void {\r\n    //TODO::Fix this error. work fine in runtime\r\n    this.page.pageable.pageCurrent = PageCurrent;\r\n    this.loadPageCurrentEvent.emit(null);\r\n  }\r\n}\r\n","<div class=\"\" *ngIf=\"page.totalElements == 0\">\r\n  <div class=\"text-center bg-red noresult\">\r\n    <span class=\"font-italic\">{{'PageNoResult' | translate }} </span><span>&#9785;</span>\r\n  </div>\r\n</div>\r\n<div *ngIf=\"page && page.totalElements > 0\" class=\"card-actions align-items-center justify-content-end\">\r\n  <a class=\"btn btn-outline\" [ngClass]=\"{'disabled': page.pageable.IsFirst }\" (click)=\"previousPage()\">\r\n    {{'PagePrevious' | translate }}\r\n  </a>\r\n  <li *ngFor=\"let indexItem of page.pageable.PageDisplayList\" class=\"btn btn-outline\"\r\n    [ngClass]=\"{'disabled pageActive': page.pageable.pageCurrent == indexItem }\" (click)=\"loadPageCurrent(indexItem)\">\r\n    <i>{{indexItem}}</i>\r\n  </li>\r\n  <li class=\"btn btn-outline\" [ngClass]=\"{'disabled': page.pageable.IsLast }\" (click)=\"nextPage()\">\r\n    {{'PageNext' | translate }}\r\n  </li>\r\n</div>","//import  { Sort } from './sort';\r\nimport  { Pageable } from './pageable';\r\n\r\nexport class Page<T> {\r\n  content: Array<T>;\r\n  pageable: Pageable;\r\n  \r\n  private _totalElements: number;\r\n  public get totalElements(): number {\r\n    return this._totalElements;\r\n  }\r\n  public set totalElements(value: number) {\r\n    \r\n    this._totalElements = value;\r\n    this.pageable.PageTotalCount = Math.ceil((this.totalElements/this.pageable.pageSize))\r\n    this.pageable.PageTotalCount = this.pageable.PageTotalCount == 0 ? 1 : this.pageable.PageTotalCount;\r\n  }\r\n  \r\n  public constructor() {\r\n    this.pageable = new Pageable();\r\n  }\r\n}\r\n","import { Constants } from 'src/app/constants';\r\n\r\nexport class Pageable {\r\n  \r\n  PageDisplayCount: number = 5;\r\n  PageDisplayList: Array<number>;\r\n  IsFirst: boolean = true;\r\n  IsLast: boolean = false;\r\n\r\n  private _pageSize: number;\r\n  public get pageSize(): number {\r\n    return this._pageSize;\r\n  }\r\n  public set pageSize(value: number) {\r\n    this._pageSize = value;\r\n  }\r\n\r\n  private _PageTotalCount: number = -1;\r\n  public get PageTotalCount(): number {\r\n    return this._PageTotalCount;\r\n  }\r\n  public set PageTotalCount(value: number) {\r\n    this._PageTotalCount = value;\r\n    this.CalculateLastFirst();\r\n    this.calculateDisplayPage();\r\n  }\r\n\r\n  private _pageCurrent: number;\r\n  public get pageCurrent(): number {\r\n    return this._pageCurrent;\r\n  }\r\n  public set pageCurrent(value: number) {\r\n    if(value <= 0 )\r\n      value = 1;\r\n    \r\n    if(value > this.PageTotalCount && this.PageTotalCount != -1)\r\n      value = this.PageTotalCount;\r\n\r\n    this._pageCurrent = value;\r\n    this.CalculateLastFirst();\r\n    this.calculateDisplayPage();\r\n  }\r\n  private CalculateLastFirst(){\r\n    if(this._pageCurrent == 1)\r\n      this.IsFirst = true;\r\n    else\r\n      this.IsFirst = false;\r\n    \r\n    if(this._pageCurrent == this.PageTotalCount && this.PageTotalCount != -1)\r\n      this.IsLast = true;\r\n    else\r\n      this.IsLast = false;\r\n\r\n    if(this.PageTotalCount == -1)\r\n    {\r\n      this.PageTotalCount = 1;\r\n      this.IsLast = true;\r\n      this.IsFirst = true;\r\n    }\r\n  }\r\n  private calculateDisplayPage()\r\n  {\r\n    \r\n    this.PageDisplayList = [];\r\n    let indexStart = this.pageCurrent - this.PageDisplayCount;\r\n    let indexEnd   = this.pageCurrent + this.PageDisplayCount;\r\n    \r\n    // if(this.pageSize == 1 && this.pageCurrent == 1)\r\n    // {\r\n    //   this.PageDisplayList.push(1);\r\n    //   return;\r\n    // }\r\n    if(indexStart <= 0)\r\n      indexStart = 1;\r\n    if(indexEnd > this.PageTotalCount)\r\n      indexEnd = this.PageTotalCount;\r\n\r\n      for(let i=indexStart;i<=indexEnd;i++)\r\n      {\r\n        this.PageDisplayList.push(i);\r\n      }\r\n  }\r\n\r\n  public constructor() {\r\n    this.pageSize = Constants.PAGE_SIZE;\r\n    this.pageCurrent = Constants.PAGE_FIRST_NUMBER;\r\n    this.PageDisplayCount = Constants.PAGE_Display_Count;\r\n    //this.calculateDisplayPage();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Page } from '../../pagination/page';\r\nimport { Pageable } from '../../pagination/pageable';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CustomPaginationService {\r\n\r\n  constructor() { }\r\n\r\n  public getNextPage(page: Page<any>): Pageable {\r\n    if(!page.pageable.IsLast) {\r\n      page.pageable.pageCurrent = page.pageable.pageCurrent+1;\r\n    }\r\n    return page.pageable;\r\n  }\r\n\r\n  public getPreviousPage(page: Page<any>): Pageable {\r\n    if(!page.pageable.IsFirst) {\r\n      page.pageable.pageCurrent = page.pageable.pageCurrent-1;\r\n    }\r\n    return page.pageable;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatButtonModule, MatTableModule, MatInputModule, MatSelectModule, MatFormFieldModule, MatIconModule, MatRadioModule, MatCheckboxModule, MAT_LABEL_GLOBAL_OPTIONS, MatMenuModule, MatMenu, MatTabsModule, MatTooltipModule, MatAutocompleteModule, MatSlideToggleModule, MatExpansionModule } from '@angular/material';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { TypeaheadModule } from 'ngx-bootstrap/typeahead';\r\nimport { AtomSpinnerModule } from 'angular-epic-spinners';\r\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime';\r\n//import { OwlTooltipModule } from 'owl-ng';\r\n\r\nimport { CustomPaginationComponent } from './pagination/components/custom-pagination/custom-pagination.component';\r\nimport { SearchPartnerComponent } from './formcontrols/search-partner/search-partner.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { SearchSubPartnerComponent } from './formcontrols/search-sub-partner/search-sub-partner.component';\r\nimport { SearchSubPartnerEntityComponent } from './formcontrols/search-sub-partner-entity/search-sub-partner-entity.component';\r\nimport { AutoCompeletListGenericComponent } from './FormControls/auto-compelet-list-generic/auto-compelet-list-generic.component';\r\nimport { SearchPartnerEntityComponent } from './FormControls/search-partner-entity/search-partner-entity.component';\r\nimport { AddTraineeComponent } from './add-trainee/add-trainee.component';\r\nimport { SearchTraineeComponent } from './FormControls/search-trainee/search-trainee.component';\r\nimport { CreateFormComponent } from './ConfigForms/AdminConfig/create-form/create-form.component';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { ConfirmationDialogComponent } from './confirmation-dialog/confirmation-dialog.component';\r\nimport { InputComponent } from './ConfigForms/components/input/input.component';\r\nimport { ButtonComponent } from './ConfigForms/components/button/button.component';\r\nimport { SelectComponent } from './ConfigForms/components/select/select.component';\r\nimport { SelectMultiComponent } from './ConfigForms/components/SelectMulti/selectmulti.component';\r\nimport { DynamicFieldDirective } from './ConfigForms/components/dynamic-field/dynamic-field.directive';\r\nimport { DynamicFormComponent } from './ConfigForms/components/dynamic-form/dynamic-form.component';\r\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { AngularEditorModule } from '@kolkov/angular-editor';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CustomPaginationComponent,\r\n    SearchPartnerComponent,\r\n    SearchPartnerEntityComponent,\r\n    SearchSubPartnerComponent,\r\n    SearchSubPartnerEntityComponent,\r\n    AutoCompeletListGenericComponent,\r\n    AddTraineeComponent,\r\n    SearchTraineeComponent,\r\n    CreateFormComponent,\r\n    ConfirmationDialogComponent,\r\n    InputComponent,\r\n    ButtonComponent,\r\n    SelectComponent,\r\n    SelectMultiComponent,\r\n    DynamicFieldDirective,\r\n    DynamicFormComponent,\r\n  ],\r\n  imports: [\r\n    OwlDateTimeModule, \r\n    OwlNativeDateTimeModule,\r\n    BrowserModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    AtomSpinnerModule,\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule,\r\n    MatButtonModule,\r\n    MatTableModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatFormFieldModule,\r\n    MatTooltipModule,\r\n    MatTabsModule,\r\n    MatIconModule,\r\n    MatMenuModule,\r\n    MatRadioModule,\r\n    MatCheckboxModule,\r\n    MatExpansionModule,\r\n    MatAutocompleteModule,\r\n    AngularEditorModule,\r\n    TypeaheadModule.forRoot(),\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: httpTranslateLoader,\r\n        deps: [HttpClient]\r\n      }\r\n    })\r\n  ],\r\n  exports: [\r\n    AutoCompeletListGenericComponent,\r\n    CustomPaginationComponent,\r\n    SearchPartnerComponent,\r\n    SearchPartnerEntityComponent,\r\n    SearchSubPartnerComponent,\r\n    SearchSubPartnerEntityComponent,\r\n    SearchTraineeComponent,\r\n    AddTraineeComponent,\r\n    CommonModule,\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    MatButtonModule,\r\n    MatTableModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatFormFieldModule,\r\n    MatTooltipModule,\r\n    MatTabsModule,\r\n    MatIconModule,\r\n    MatMenuModule,\r\n    MatRadioModule,\r\n    MatCheckboxModule,\r\n    ReactiveFormsModule,\r\n    MatAutocompleteModule,\r\n    MatMenuModule,\r\n    MatSlideToggleModule,\r\n    AtomSpinnerModule,\r\n    TypeaheadModule,\r\n    OwlDateTimeModule, \r\n    OwlNativeDateTimeModule,\r\n    BrowserAnimationsModule,\r\n    CreateFormComponent,\r\n    DynamicFieldDirective,\r\n    DynamicFormComponent,\r\n    MatExpansionModule,\r\n    TranslateModule,\r\n    AngularEditorModule\r\n  ],\r\n  providers: [\r\n    // { provide: MAT_LABEL_GLOBAL_OPTIONS, useValue: { float: 'auto' } }\r\n  ]\r\n})\r\nexport class SharedModule { }\r\n// AOT compilation support\r\nexport function httpTranslateLoader(http: HttpClient) {\r\n  return new TranslateHttpLoader(http);\r\n}","import { Component, OnInit } from '@angular/core';\nimport { ConfigForm } from 'src/app/Enum/ConfigForm.enum';\n\n@Component({\n  selector: 'app-config-request-register',\n  templateUrl: './config-request-register.component.html',\n  styleUrls: ['./config-request-register.component.css']\n})\nexport class ConfigRequestRegisterComponent implements OnInit {\n  pageTitle: string = \"Config Request Registeration\";\n  formType: ConfigForm = ConfigForm.RequestRegister;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section class=\"my-5\">\n    <div class=\"container\">\n        <div class='row'>\n            <h4 class=\"mb-4\">{{'ConfigRequestRegisteration' | translate }}</h4>\n        </div>\n        <div class=\"row\">\n            <app-create-form [pageTitle]=\"'ConfigRequestRegisterationForm' | translate \" [formType]=\"formType\"></app-create-form>\n        </div>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { ConfigForm } from 'src/app/Enum/ConfigForm.enum';\n\n@Component({\n  selector: 'app-config-trainee',\n  templateUrl: './config-trainee.component.html',\n  styleUrls: ['./config-trainee.component.css']\n})\nexport class ConfigTraineeComponent implements OnInit {\n  pageTitle: string = \"Config Trainee\";\n  formType: ConfigForm = ConfigForm.Trainee;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section class=\"my-5\">\n    <div class=\"container\">\n        <div class='row'>\n            <h4 class=\"mb-4\">{{'ConfigTrainee' | translate }}</h4>\n        </div>\n        <div class=\"row\">\n            <app-create-form [pageTitle]=\"'ConfigTraineeRegisterationForm'| translate \" [formType]=\"formType\"></app-create-form>\n        </div>\n    </div>\n</section>","\r\nexport class Constants {\r\n\tstatic readonly clientId = 'spa-Tadrebat-client';\r\n\r\n\tstatic readonly clientRoot = 'http://www.ms-training.digisummits.com/';\r\n\tstatic readonly apiRoot = 'http://api.ms-training.digisummits.com/';\r\n\tstatic readonly stsAuthority = 'http://sts.ms-training.digisummits.com/';\r\n\tstatic readonly FilesURL = 'http://files.ms-training.digisummits.com/';\r\n\r\n\r\n\tstatic readonly EXAM_TIMER = 30;\r\n\tstatic readonly PAGE_SIZE = 3;\r\n\tstatic readonly PAGE_FIRST_NUMBER = 1;\r\n\tstatic readonly PAGE_Display_Count = 5;\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { Constants } from '../constants';\r\nimport { UserProfile } from '../model/user-profile';\r\nimport { CoreModule } from './core.module';\r\n\r\n@Injectable()\r\nexport class AccountService {\r\n    userProfile: UserProfile;\r\n    constructor(private _httpClient: HttpClient) { }\r\n      \r\n    getAllUsers(): Observable<UserProfile[]> {\r\n        return this._httpClient.get<UserProfile[]>(Constants.apiRoot + 'Account/Users');\r\n    }\r\n\r\n    createUserProfile(userProfile: UserProfile) {\r\n        return this._httpClient.post(`${Constants.apiRoot}Account/Profile`, userProfile);\r\n    }\r\n\r\n    updateUserProfile(userProfile: UserProfile) {\r\n        return this._httpClient.put(`${Constants.apiRoot}Account/Profile/${userProfile.id}`, userProfile);\r\n    }\r\n\r\n    register(userInfo: any) {\r\n        return this._httpClient.post(`${Constants.apiRoot}Account/Register`, userInfo);\r\n\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot } from '@angular/router';\r\nimport { AuthService } from './auth-service.component';\r\n\r\n@Injectable()\r\nexport class AdminRouteGuard implements CanActivate {\r\n    constructor(private _authService: AuthService) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n\r\n        return !!this._authService.authContext &&\r\n            this._authService.authContext.isAdmin;\r\n    }\r\n}\r\n@Injectable()\r\nexport class AdminPartnerRouteGuard implements CanActivate {\r\n    constructor(private _authService: AuthService) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        return (!!this._authService.authContext &&\r\n            (this._authService.authContext.isAdmin\r\n                || this._authService.authContext.isPartner));\r\n    }\r\n}\r\n@Injectable()\r\nexport class AdminPartnerSubPartnerRouteGuard implements CanActivate {\r\n    constructor(private _authService: AuthService) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        return (!!this._authService.authContext &&\r\n            (this._authService.authContext.isAdmin\r\n                || this._authService.authContext.isPartner\r\n                || this._authService.authContext.isSubPartner));\r\n    }\r\n}\r\n@Injectable()\r\nexport class TraineeRouteGuard implements CanActivate {\r\n    constructor(private _authService: AuthService) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        return (!!this._authService.authContext &&\r\n            this._authService.authContext.isTrainee);\r\n    }\r\n}","import { HttpEvent, HttpHandler, HttpHeaders, HttpInterceptor, HttpRequest, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { from, Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { Constants } from '../constants';\r\nimport { AuthService } from './auth-service.component';\r\nimport { Utils } from './utils';\r\nimport { ShowMessage } from '../interface/Model/ModelShowMessage.class';\r\nimport { ServiceShowMessage } from '../services/show-message.service';\r\n\r\n@Injectable()\r\nexport class AuthInterceptorService implements HttpInterceptor {\r\n  message: ShowMessage = new ShowMessage();\r\n\r\n  constructor(private _authService: AuthService,\r\n    private _router: Router,\r\n    private BLServiceShowMessage: ServiceShowMessage) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    if (req.url.startsWith(Constants.apiRoot) && req.url.toLowerCase().indexOf(\"misc\") == -1) {\r\n      return from(this._authService.getAccessToken().then(token => {\r\n        var lang = \"en\";\r\n        if (localStorage.getItem('lang'))\r\n          lang = localStorage.getItem('lang');\r\n\r\n        const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`).set(\"currentLang\", lang);\r\n        const authReq = req.clone({ headers });\r\n        return next.handle(authReq).pipe(tap(_ => { }, error => {\r\n          var respError = error as HttpErrorResponse;\r\n          if (respError && (respError.status === 401 || respError.status === 403)) {\r\n            this._router.navigate(['/unauthorized']);\r\n          }\r\n          if (respError && (respError.status === 400)) {\r\n            var msg = Utils.formatError(respError);\r\n            this.message.Error(msg);\r\n            this.BLServiceShowMessage.sendMessage(this.message);\r\n          }\r\n        })).toPromise();\r\n      }));\r\n    }\r\n    else {\r\n      return next.handle(req);\r\n    }\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { UserManager, User } from 'oidc-client';\r\nimport { Constants } from '../constants';\r\nimport { Subject } from 'rxjs';\r\nimport { CoreModule } from './core.module';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AuthContext } from '../model/auth-context';\r\nimport * as Oidc from 'oidc-client';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n  private _userManager: UserManager;\r\n  private _user: User;\r\n  private _loginChangedSubject = new Subject<boolean>();\r\n  private _authContextSubject = new Subject<AuthContext>();\r\n  loginChanged = this._loginChangedSubject.asObservable();\r\n  authContextChanged = this._authContextSubject.asObservable();\r\n\r\n  authContext: AuthContext;\r\n\r\n  constructor(private _httpClient: HttpClient) {\r\n    const stsSettings = {\r\n      authority: Constants.stsAuthority,\r\n      client_id: Constants.clientId,\r\n      redirect_uri: `${Constants.clientRoot}signin-callback`,\r\n      scope: 'openid profile projects-api',\r\n      response_type: 'code',\r\n      post_logout_redirect_uri: `${Constants.clientRoot}signout-callback`,\r\n      automaticSilentRenew: true,\r\n      //silent_redirect_uri: `${Constants.clientRoot}core/silent-callback/silent-callback.component.html`\r\n      silent_redirect_uri: `${Constants.clientRoot}assets/silent-callback.html`\r\n    };\r\n    this._userManager = new UserManager(stsSettings);\r\n    this._userManager.startSilentRenew();\r\n    this._userManager.events.addAccessTokenExpired(_ => {\r\n      this._loginChangedSubject.next(false);\r\n    });\r\n    this._userManager.events.addUserLoaded(user => {\r\n      if (this._user !== user) {\r\n        this._user = user;\r\n        this.loadSecurityContext();\r\n        this._loginChangedSubject.next(!!user && !user.expired);\r\n      }\r\n    });\r\n\r\n  }\r\n  CheckLogin() {\r\n    this._userManager.signinSilent();\r\n  }\r\n  login() {\r\n    return this._userManager.signinRedirect();\r\n  }\r\n\r\n  isLoggedIn(): Promise<boolean> {\r\n    return this._userManager.getUser().then(user => {\r\n      const userCurrent = !!user && !user.expired;\r\n      if (this._user !== user) {\r\n        this._loginChangedSubject.next(userCurrent);\r\n      }\r\n      if (userCurrent && !this.authContext) {\r\n\r\n        this.loadSecurityContext();\r\n      }\r\n      this._user = user;\r\n      return userCurrent;\r\n    });\r\n  }\r\n\r\n  completeLogin() {\r\n\r\n    return this._userManager.signinRedirectCallback().then(user => {\r\n      this._user = user;\r\n      this._loginChangedSubject.next(!!user && !user.expired);\r\n      return user;\r\n    });\r\n  }\r\n  logout() {\r\n    this._userManager.signoutRedirect();\r\n  }\r\n\r\n  completeLogout() {\r\n    this._user = null;\r\n    this._loginChangedSubject.next(false);\r\n    return this._userManager.signoutRedirectCallback();\r\n  }\r\n\r\n  getAccessToken() {\r\n    return this._userManager.getUser().then(user => {\r\n      if (!!user && !user.expired) {\r\n        return user.access_token;\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    });\r\n  }\r\n\r\n  loadSecurityContext() {\r\n    this._httpClient\r\n      .get<AuthContext>(`${Constants.apiRoot}Account/AuthContext`)\r\n      .subscribe(\r\n        context => {\r\n\r\n          this.authContext = new AuthContext();\r\n          this.authContext.claims = context.claims;\r\n          this.authContext.userProfile = context.userProfile;\r\n          this._authContextSubject.next(this.authContext);\r\n        },\r\n        error => {}//console.error(error)\r\n      );\r\n  }\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { AuthInterceptorService } from './auth-interceptor.service';\r\nimport { AuthService } from './auth-service.component';\r\nimport { AccountService } from './account.service';\r\nimport { ProjectService } from './project.service';\r\nimport { AdminRouteGuard } from './admin-route-guard';\r\n\r\n@NgModule({\r\n    imports: [],\r\n    exports: [],\r\n    declarations: [],\r\n    providers: [\r\n        AuthService,\r\n        AccountService,\r\n        ProjectService,\r\n        AdminRouteGuard,\r\n        { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptorService, multi: true }\r\n    ],\r\n})\r\nexport class CoreModule { }\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, from } from 'rxjs';\r\nimport { Constants } from '../constants';\r\nimport { Milestone } from '../model/milestone';\r\nimport { MilestoneStatus } from '../model/milestone-status';\r\nimport { Project } from '../model/project';\r\nimport { UserPermission } from '../model/user-permission';\r\nimport { UserProfile } from '../model/user-profile';\r\nimport { CoreModule } from './core.module';\r\nimport { AuthService } from './auth-service.component';\r\n\r\n\r\n@Injectable()\r\nexport class ProjectService {\r\n    constructor(private _httpClient: HttpClient,\r\n                private _authService: AuthService) { }\r\n    \r\n    getProjects(): Observable<Project[]> {\r\n        return from(this._authService.getAccessToken().then(token => {\r\n            const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\r\n            return this._httpClient.get<Project[]>(Constants.apiRoot + 'Projects/GetProjects', {headers: headers}).toPromise();\r\n        }));\r\n    }\r\n\r\n    getProject(projectId: number): Observable<Project> {\r\n        return this._httpClient.get<Project>(Constants.apiRoot + 'Projects/' + projectId);\r\n    }\r\n\r\n    getProjectUsers(projectId: number): Observable<UserProfile[]> {\r\n        return this._httpClient.get<UserProfile[]>(Constants.apiRoot + 'Projects/' + projectId + '/Users');\r\n    }\r\n\r\n    addProject(project: Project): Observable<Project> {\r\n        return this._httpClient.post<Project>(Constants.apiRoot + 'Projects', project);\r\n    }\r\n\r\n    deleteProject(project: Project): Observable<object> {\r\n        return this._httpClient.delete(Constants.apiRoot + 'Projects/' + project.id);\r\n    }\r\n\r\n    addUserPermission(userPermission: UserPermission) {\r\n        return this._httpClient.post(Constants.apiRoot + 'UserPermissions', userPermission);\r\n    }\r\n\r\n    removeUserPermission(userId: string, projectId: number) {\r\n        return this._httpClient.delete(`${Constants.apiRoot}UserPermissions/?userId=${userId}&projectId=${projectId}`);\r\n    }\r\n\r\n    updateUserPermission(userPermission) {\r\n        return this._httpClient.put(`${Constants.apiRoot}UserPermissions`, userPermission);\r\n    }\r\n\r\n    getMilestones(projectId: number): Observable<Milestone[]> {\r\n        return this._httpClient.get<Milestone[]>(Constants.apiRoot + 'Milestone');\r\n    }\r\n\r\n    getMilestoneStatuses() {\r\n        return this._httpClient.get<MilestoneStatus[]>(`${Constants.apiRoot}Projects/MilestoneStatuses`);\r\n    }\r\n\r\n    addMilestone(milestone: Milestone) {\r\n        return this._httpClient.post(`${Constants.apiRoot}Projects/Milestones`, milestone);\r\n    }\r\n\r\n    deleteMilestone(id: number) {\r\n        return this._httpClient.delete(`${Constants.apiRoot}Projects/Milestones/${id}`);\r\n    }\r\n\r\n    updateMilestone(milestone: Milestone) {\r\n        return this._httpClient.put(`${Constants.apiRoot}Projects/Milestones/${milestone.id}`, milestone);\r\n    }\r\n}","import { HttpErrorResponse } from \"@angular/common/http\";\r\nimport { ShowMessage } from '../interface/Model/ModelShowMessage.class';\r\nimport { ServiceShowMessage } from '../services/show-message.service';\r\n\r\nexport class Utils {\r\n\r\n  public static formatError(error: HttpErrorResponse): string {\r\n    if (error.error instanceof ErrorEvent) {\r\n      // A client-side or network error occurred. Handle it accordingly.\r\n      return 'An error occurred: ' + error.error.message;\r\n    } else {\r\n      // The backend returned an unsuccessful response code.\r\n      // The response body may contain clues as to what went wrong,\r\n      let msg = \"Unknown error\";\r\n      if (error.error && typeof error.error === 'string') {\r\n        msg = <string>error.error;\r\n      }\r\n      else if (error.message) {\r\n        msg = error.message;\r\n      }\r\n      console.log(`Backend returned code ${error.status}, ${error.error}`);\r\n\r\n      return ` ${error.error}`;\r\n    }\r\n  };\r\n\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-contactus',\r\n    templateUrl: 'contact-us.component.html'\r\n})\r\n\r\nexport class ContactUsComponent implements OnInit {\r\n    constructor() { }\r\n\r\n    ngOnInit() { }\r\n    \r\n}","<div>Contact Us</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ServiceShowMessage } from '../services/show-message.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ShowMessage } from '../interface/Model/ModelShowMessage.class';\r\nimport { ModelContentData } from '../interface/Model/ModelContentData.class';\r\nimport { EnumContentData } from '../Enum/ContentData.enum';\r\nimport { ServiceContentData } from '../services/content-data.service';\r\nimport { ServiceMisc } from '../services/misc.service';\r\nimport { StatsCount } from '../interface/Response/StatsCount.class';\r\n\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: 'home.component.html'\r\n})\r\n\r\nexport class HomeComponent implements OnInit {\r\n  \r\n  msgShow: ShowMessage = new ShowMessage();\r\n  modelAboutData: ModelContentData = new ModelContentData();\r\n  modelInfoData: ModelContentData = new ModelContentData();\r\n  objStats: StatsCount = new StatsCount();\r\n\r\n  constructor(private route: ActivatedRoute,\r\n    private BLServiceMisc: ServiceMisc,\r\n    private BLServiceMessage: ServiceShowMessage) { }\r\n\r\n  ngOnInit() {\r\n    const msgRedirect = this.route.snapshot.paramMap.get('msg');\r\n    const msgIsSuccess = this.route.snapshot.paramMap.get('isSuccess');\r\n    if (msgRedirect) {\r\n      var isSuccess = false;\r\n      if (msgIsSuccess)\r\n        isSuccess = msgIsSuccess.toLowerCase() == \"true\" ? true : false;\r\n\r\n      this.msgShow.Send(msgRedirect, isSuccess);\r\n      this.BLServiceMessage.sendMessage(this.msgShow);\r\n    }\r\n    this.loadData();\r\n  }\r\n  loadData() {\r\n    this.BLServiceMisc.ContentDataOneGetByTypeId(EnumContentData.About).subscribe({\r\n      next: obj => {\r\n        this.modelAboutData = obj;\r\n      },\r\n      error: err => this.msgShow.Error(err)\r\n    });\r\n    this.BLServiceMisc.ContentDataOneGetByTypeId(EnumContentData.Info).subscribe({\r\n      next: obj => {\r\n        this.modelInfoData = obj;\r\n      },\r\n      error: err => this.msgShow.Error(err)\r\n    });\r\n    this.BLServiceMisc.GetStats().subscribe({\r\n      next: obj => {\r\n        this.objStats = obj;\r\n      },\r\n      error: err => this.msgShow.Error(err)\r\n    });\r\n  }\r\n}","<section class=\"homeslide mb-5\">\r\n    <div id=\"slideshow\" class=\"carousel slide carousel-fade\" data-ride=\"carousel\">\r\n        <ol class=\"carousel-indicators\">\r\n            <li data-target=\"#slideshow\" data-slide-to=\"0\" class=\"active\"></li>\r\n            <li data-target=\"#slideshow\" data-slide-to=\"1\"></li>\r\n            <li data-target=\"#slideshow\" data-slide-to=\"2\"></li>\r\n        </ol>\r\n        <div class=\"carousel-inner\">\r\n            <div class=\"carousel-item active\">\r\n                <div class=\"slideshow\" style=\"background-image: url(assets/img/test-img/slideshow-01.jpg)\"></div>\r\n                <img src=\"assets/img/test-img/slideshow-01.jpg\" class=\"img-fluid d-none\" alt=\"\" />\r\n                <div class=\"carousel-caption\">\r\n                    <p class=\"p-pre-wrap\">{{modelInfoData.Data}}</p>\r\n                </div>\r\n            </div>\r\n            <!-- <div class=\"carousel-item\">\r\n                <div class=\"slideshow\" style=\"background-image: url(assets/img/test-img/slideshow-02.jpg)\"></div>\r\n                <img src=\"assets/img/test-img/slideshow-02.jpg\" class=\"img-fluid d-none\" alt=\"\" />\r\n                <div class=\"carousel-caption\">\r\n                    <p class=\"p-pre-wrap\">Lorem ipsum dolor sit amet, sectetu adip scing varius interdum incid unt quis,\r\n                        libero aenean mturpis.\r\n                        Maecenas hendrerit masa laoreet iaculipede mnisl ulamcorper. Tellus er sodales enim, in\r\n                        tincidunt mauris in odio. Massa ac laoreet iaculipede nisl ullamcorpermassa, ac consectetuer\r\n                        feipsum eget pede. Proin nunc, Donec massa, Nulla pulvinar, nisl ac convallis nonummy.</p>\r\n                </div>\r\n            </div>\r\n            <div class=\"carousel-item\">\r\n                <div class=\"slideshow\" style=\"background-image: url(assets/img/test-img/slideshow-03.jpg)\"></div>\r\n                <img src=\"assets/img/test-img/slideshow-03.jpg\" class=\"img-fluid d-none\" alt=\"\" />\r\n                <div class=\"carousel-caption\">\r\n                    <p class=\"p-pre-wrap\">Lorem ipsum dolor sit amet, sectetu adip scing varius interdum incid unt quis,\r\n                        libero aenean mturpis.\r\n                        Maecenas hendrerit masa laoreet iaculipede mnisl ulamcorper. Tellus er sodales enim, in\r\n                        tincidunt mauris in odio. Massa ac laoreet iaculipede nisl ullamcorpermassa, ac consectetuer\r\n                        feipsum eget pede. Proin nunc, Donec massa, Nulla pulvinar, nisl ac convallis nonummy.</p>\r\n                </div>\r\n            </div> -->\r\n        </div>\r\n        <a class=\"carousel-control-prev\" href=\"#slideshow\" role=\"button\" data-slide=\"prev\">\r\n            <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n            <span class=\"sr-only\">Previous</span>\r\n        </a>\r\n        <a class=\"carousel-control-next\" href=\"#slideshow\" role=\"button\" data-slide=\"next\">\r\n            <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n            <span class=\"sr-only\">Next</span>\r\n        </a>\r\n    </div>\r\n</section>\r\n\r\n\r\n\r\n<section class=\"mb-5\" *ngIf=\"modelAboutData\">\r\n    <div class=\"container\">\r\n        <h1 class=\"mb-3 pt-5 text-center in-tit\">{{modelAboutData.Name}}</h1>\r\n        <p class=\"w-75 mx-auto text-center p-pre-wrap\">{{modelAboutData.Data}}</p>\r\n    </div>\r\n</section>\r\n\r\n\r\n<section class=\"mb-1 pt-5 border-top border-bottom\">\r\n    <div class=\"container-fluid text-center\">\r\n\r\n        <div class=\"counter-one\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xs-12 col-sm-6 col-md-4 mb-5\">\r\n                    <div class=\"counter-one\">\r\n                        <div class=\"counter-content\" data-count=\"97\">\r\n                            <h1 class=\"counter-number mb-4\">{{objStats.TraineeCount}}</h1>\r\n                            <h5>{{'GenericTrainee' | translate }}</h5>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-xs-12 col-sm-6 col-md-4 mb-5\">\r\n                    <div class=\"counter-one\">\r\n                        <div class=\"counter-content\" data-count=\"169\">\r\n                            <h1 class=\"counter-number mb-4\">{{objStats.TrainingCount}}</h1>\r\n                            <h5>{{'HeaderTraining' | translate }}</h5>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-xs-12 col-sm-6 col-md-4 mb-5\">\r\n                    <div class=\"counter-one\">\r\n                        <div class=\"counter-content\" data-count=\"30\">\r\n                            <h1 class=\"counter-number mb-4\">{{objStats.TrainerCount}}</h1>\r\n                            <h5>{{'GenericTrainer' | translate }}</h5>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</section>\r\n\r\n<!-- \r\n<section class=\"mb-5 py-3\">\r\n    <div class=\"container-fluid\">\r\n        <h4 class=\"mb-3 pt-5 text-center\">Our Services</h4>\r\n        <div class=\"row\">\r\n\r\n            <div class=\"col-xl-4 col-md-6\">\r\n                <div class=\"card\">\r\n                    <a href=\"javascript:void(0)\">\r\n                        <div class=\"card-header-img\" style=\"background-image: url(assets/img/test-img/img-01.jpg)\"></div>\r\n                        <img src=\"assets/img/test-img/img-01.jpg\" class=\"img-fluid d-none\" alt=\"\" />\r\n                    </a>\r\n                    <div class=\"card-body pt-0\">\r\n                        <a href=\"javascript:void(0)\">\r\n                            <h5 class=\"card-title color-text-01 my-2\">Service 01</h5>\r\n                        </a>\r\n                        <p class=\"p-pre-wrap max-text\">Lorem ipsum dolor sit amet, sectetu adip scing varius interdum\r\n                            incid unt quis, libero aenean mturpis. masa laoreet iaculipede mnisl ulamcorper. Tellus er\r\n                            sodales enim, in tincidunt mauris in odio. Massa ac laoreet iaculipede nisl\r\n                            ullamcorpermassa, ac consectetuer feipsum eget pede. Proin nunc, Donec massa, Nulla\r\n                            pulvinar, nisl ac convallis nonummy.</p>\r\n                    </div>\r\n                    <div class=\"card-footer\">\r\n                        <ul class=\"footer-det\">\r\n                            <li><a href=\"javascript:void(0)\" class=\"btn color-bg-02 btn-sm white-text\">More</a></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"col-xl-4 col-md-6\">\r\n                <div class=\"card\">\r\n                    <a href=\"javascript:void(0)\">\r\n                        <div class=\"card-header-img\" style=\"background-image: url(assets/img/test-img/img-02.jpg)\"></div>\r\n                        <img src=\"assets/img/test-img/img-15.jpg\" class=\"img-fluid d-none\" alt=\"\" />\r\n                    </a>\r\n                    <div class=\"card-body pt-0\">\r\n                        <a href=\"javascript:void(0)\">\r\n                            <h5 class=\"card-title color-text-01 my-2\">Service 02</h5>\r\n                        </a>\r\n                        <p class=\"p-pre-wrap max-text\">Lorem ipsum dolor sit amet, sectetu adip scing varius interdum\r\n                            incid unt quis, libero aenean mturpis. masa laoreet iaculipede mnisl ulamcorper. Tellus er\r\n                            sodales enim, in tincidunt mauris in odio. Massa ac laoreet iaculipede nisl\r\n                            ullamcorpermassa, ac consectetuer feipsum eget pede. Proin nunc, Donec massa, Nulla\r\n                            pulvinar, nisl ac convallis nonummy.</p>\r\n                    </div>\r\n                    <div class=\"card-footer\">\r\n                        <ul class=\"footer-det\">\r\n                            <li><a href=\"javascript:void(0)\" class=\"btn color-bg-02 btn-sm white-text\">More</a></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"col-xl-4 col-md-6\">\r\n                <div class=\"card\">\r\n                    <a href=\"javascript:void(0)\">\r\n                        <div class=\"card-header-img\" style=\"background-image: url(assets/img/test-img/img-03.jpg)\"></div>\r\n                        <img src=\"assets/img/test-img/img-09.jpg\" class=\"img-fluid d-none\" alt=\"\" />\r\n                    </a>\r\n                    <div class=\"card-body pt-0\">\r\n                        <a href=\"javascript:void(0)\">\r\n                            <h5 class=\"card-title color-text-01 my-2\">Service 03</h5>\r\n                        </a>\r\n                        <p class=\"p-pre-wrap max-text\">Lorem ipsum dolor sit amet, sectetu adip scing varius interdum\r\n                            incid unt quis, libero aenean mturpis. masa laoreet iaculipede mnisl ulamcorper. Tellus er\r\n                            sodales enim, in tincidunt mauris in odio. Massa ac laoreet iaculipede nisl\r\n                            ullamcorpermassa, ac consectetuer feipsum eget pede. Proin nunc, Donec massa, Nulla\r\n                            pulvinar, nisl ac convallis nonummy.</p>\r\n                    </div>\r\n                    <div class=\"card-footer\">\r\n                        <ul class=\"footer-det\">\r\n                            <li><a href=\"javascript:void(0)\" class=\"btn color-bg-02 btn-sm white-text\">More</a></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</section>\r\n\r\n\r\n\r\n<section class=\"py-5\" data-stellar-background-ratio=\"0.5\">\r\n    <div class=\"home-art-bg\" style=\"background-image: url(assets/img/test-img/slideshow-04.jpg)\">\r\n        <div class=\"mask\"></div>\r\n        <div class=\"container-fluid text-mob-center\">\r\n            <div class=\"row\">\r\n\r\n                <div class=\"col-md-6 parallax-text\">\r\n                    <h1 class=\"mt-5\"><span>Ahmed Mahmoud</span> Trainer of The Month</h1>\r\n                    <p class=\"mt-5 p-pre-wrap\">Lorem ipsum dolor sit amet, sectetu adip scing varius interdum incid unt\r\n                        quis, libero aenean mturpis.\r\n                        Maecenas hendrerit masa laoreet iaculipede mnisl ulamcorper. Tellus er sodales enim, in\r\n                        tincidunt mauris in odio. Massa ac laoreet iaculipede nisl ullamcorpermassa, ac consectetuer\r\n                        feipsum eget pede. Proin nunc, Donec massa, Nulla pulvinar, nisl ac convallis nonummy.</p>\r\n                </div>\r\n\r\n                <div class=\"col-md-6\">\r\n                    <div class=\"icons-circle-img-02\" style=\"background-image: url(assets/img/test-img/img-17.jpg)\"></div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</section>\r\n\r\n\r\n\r\n<section class=\"mb-5\">\r\n    <div class=\"container-fluid\">\r\n        <h4 class=\"mb-3 text-center\">{{'GenericTrainingCenter' | translate }}s</h4>\r\n        <div class=\"row slider autoplay\">\r\n\r\n            <div class=\"col-xl-4 col-xxl-3 col-md-6\">\r\n                <div class=\"card card-theme-02\">\r\n                    <a href=\"javascript:void(0)\">\r\n                        <div class=\"card-header-img\" style=\"background-image: url(assets/img/test-img/img-04.jpg)\"></div>\r\n                        <img src=\"assets/img/test-img/img-01.jpg\" class=\"img-fluid d-none\" alt=\"\" />\r\n                    </a>\r\n                    <div class=\"card-body pt-0\">\r\n                        <a href=\"javascript:void(0)\">\r\n                            <h5 class=\"card-title color-text-01 my-2\">{{'GenericTrainingCenter' | translate }} 01</h5>\r\n                        </a>\r\n                        <p class=\"card-dest mb-2\"><i\r\n                                class=\"far fa-map-marker-alt color-text-02 mr-2\"></i><strong>Destination:</strong> Cairo\r\n                        </p>\r\n                        <p class=\"p-pre-wrap max-text\">Lorem ipsum dolor sit amet, sectetu adip scing varius interdum\r\n                            incid unt quis, libero aenean mturpis. masa laoreet iaculipede mnisl ulamcorper. Tellus er\r\n                            sodales enim, in tincidunt mauris in odio. Massa ac laoreet iaculipede nisl\r\n                            ullamcorpermassa, ac consectetuer feipsum eget pede. Proin nunc, Donec massa, Nulla\r\n                            pulvinar, nisl ac convallis nonummy.</p>\r\n                    </div>\r\n                    <div class=\"card-footer\">\r\n                        <ul class=\"footer-det\">\r\n                            <li><a href=\"javascript:void(0)\" class=\"btn color-bg-02 btn-sm white-text\">More</a></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"col-xl-4 col-xxl-3 col-md-6\">\r\n                <div class=\"card card-theme-02\">\r\n                    <a href=\"javascript:void(0)\">\r\n                        <div class=\"card-header-img\" style=\"background-image: url(assets/img/test-img/img-05.jpg)\"></div>\r\n                        <img src=\"assets/img/test-img/img-02.jpg\" class=\"img-fluid d-none\" alt=\"\" />\r\n                    </a>\r\n                    <div class=\"card-body pt-0\">\r\n                        <a href=\"javascript:void(0)\">\r\n                            <h5 class=\"card-title color-text-01 my-2\">{{'GenericTrainingCenter' | translate }} 02</h5>\r\n                        </a>\r\n                        <p class=\"card-dest mb-2\"><i\r\n                                class=\"far fa-map-marker-alt color-text-02 mr-2\"></i><strong>Destination:</strong>\r\n                            Alexandria</p>\r\n                        <p class=\"p-pre-wrap max-text\">Lorem ipsum dolor sit amet, sectetu adip scing varius interdum\r\n                            incid unt quis, libero aenean mturpis. masa laoreet iaculipede mnisl ulamcorper. Tellus er\r\n                            sodales enim, in tincidunt mauris in odio. Massa ac laoreet iaculipede nisl\r\n                            ullamcorpermassa, ac consectetuer feipsum eget pede. Proin nunc, Donec massa, Nulla\r\n                            pulvinar, nisl ac convallis nonummy.</p>\r\n                    </div>\r\n                    <div class=\"card-footer\">\r\n                        <ul class=\"footer-det\">\r\n                            <li><a href=\"javascript:void(0)\" class=\"btn color-bg-02 btn-sm white-text\">More</a></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"col-xl-4 col-xxl-3 col-md-6\">\r\n                <div class=\"card card-theme-02\">\r\n                    <a href=\"javascript:void(0)\">\r\n                        <div class=\"card-header-img\" style=\"background-image: url(assets/img/test-img/img-06.jpg)\"></div>\r\n                        <img src=\"assets/img/test-img/img-03.jpg\" class=\"img-fluid d-none\" alt=\"\" />\r\n                    </a>\r\n                    <div class=\"card-body pt-0\">\r\n                        <a href=\"javascript:void(0)\">\r\n                            <h5 class=\"card-title color-text-01 my-2\">{{'GenericTrainingCenter' | translate }} 03</h5>\r\n                        </a>\r\n                        <p class=\"card-dest mb-2\"><i\r\n                                class=\"far fa-map-marker-alt color-text-02 mr-2\"></i><strong>Destination:</strong> Aswan\r\n                        </p>\r\n                        <p class=\"p-pre-wrap max-text\">Lorem ipsum dolor sit amet, sectetu adip scing varius interdum\r\n                            incid unt quis, libero aenean mturpis. masa laoreet iaculipede mnisl ulamcorper. Tellus er\r\n                            sodales enim, in tincidunt mauris in odio. Massa ac laoreet iaculipede nisl\r\n                            ullamcorpermassa, ac consectetuer feipsum eget pede. Proin nunc, Donec massa, Nulla\r\n                            pulvinar, nisl ac convallis nonummy.</p>\r\n                    </div>\r\n                    <div class=\"card-footer\">\r\n                        <ul class=\"footer-det\">\r\n                            <li><a href=\"javascript:void(0)\" class=\"btn color-bg-02 btn-sm white-text\">More</a></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"col-xl-4 col-xxl-3 col-md-6\">\r\n                <div class=\"card card-theme-02\">\r\n                    <a href=\"javascript:void(0)\">\r\n                        <div class=\"card-header-img\" style=\"background-image: url(assets/img/test-img/img-07.jpg)\"></div>\r\n                        <img src=\"assets/img/test-img/img-04.jpg\" class=\"img-fluid d-none\" alt=\"\" />\r\n                    </a>\r\n                    <div class=\"card-body pt-0\">\r\n                        <a href=\"javascript:void(0)\">\r\n                            <h5 class=\"card-title color-text-01 my-2\">{{'GenericTrainingCenter' | translate }} 04</h5>\r\n                        </a>\r\n                        <p class=\"card-dest mb-2\"><i\r\n                                class=\"far fa-map-marker-alt color-text-02 mr-2\"></i><strong>Destination:</strong> Luxor\r\n                        </p>\r\n                        <p class=\"p-pre-wrap max-text\">Lorem ipsum dolor sit amet, sectetu adip scing varius interdum\r\n                            incid unt quis, libero aenean mturpis. masa laoreet iaculipede mnisl ulamcorper. Tellus er\r\n                            sodales enim, in tincidunt mauris in odio. Massa ac laoreet iaculipede nisl\r\n                            ullamcorpermassa, ac consectetuer feipsum eget pede. Proin nunc, Donec massa, Nulla\r\n                            pulvinar, nisl ac convallis nonummy.</p>\r\n                    </div>\r\n                    <div class=\"card-footer\">\r\n                        <ul class=\"footer-det\">\r\n                            <li><a href=\"javascript:void(0)\" class=\"btn color-bg-02 btn-sm white-text\">More</a></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"col-xl-4 col-xxl-3 col-md-6\">\r\n                <div class=\"card card-theme-02\">\r\n                    <a href=\"javascript:void(0)\">\r\n                        <div class=\"card-header-img\" style=\"background-image: url(assets/img/test-img/img-08.jpg)\"></div>\r\n                        <img src=\"assets/img/test-img/img-05.jpg\" class=\"img-fluid d-none\" alt=\"\" />\r\n                    </a>\r\n                    <div class=\"card-body pt-0\">\r\n                        <a href=\"javascript:void(0)\">\r\n                            <h5 class=\"card-title color-text-01 my-2\">{{'GenericTrainingCenter' | translate }} 05</h5>\r\n                        </a>\r\n                        <p class=\"card-dest mb-2\"><i\r\n                                class=\"far fa-map-marker-alt color-text-02 mr-2\"></i><strong>Destination:</strong>\r\n                            Hurghada</p>\r\n                        <p class=\"p-pre-wrap max-text\">Lorem ipsum dolor sit amet, sectetu adip scing varius interdum\r\n                            incid unt quis, libero aenean mturpis. masa laoreet iaculipede mnisl ulamcorper. Tellus er\r\n                            sodales enim, in tincidunt mauris in odio. Massa ac laoreet iaculipede nisl\r\n                            ullamcorpermassa, ac consectetuer feipsum eget pede. Proin nunc, Donec massa, Nulla\r\n                            pulvinar, nisl ac convallis nonummy.</p>\r\n                    </div>\r\n                    <div class=\"card-footer\">\r\n                        <ul class=\"footer-det\">\r\n                            <li><a href=\"javascript:void(0)\" class=\"btn color-bg-02 btn-sm white-text\">More</a></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"col-xl-4 col-xxl-3 col-md-6\">\r\n                <div class=\"card card-theme-02\">\r\n                    <a href=\"javascript:void(0)\">\r\n                        <div class=\"card-header-img\" style=\"background-image: url(assets/img/test-img/img-09.jpg)\"></div>\r\n                        <img src=\"assets/img/test-img/img-06.jpg\" class=\"img-fluid d-none\" alt=\"\" />\r\n                    </a>\r\n                    <div class=\"card-body pt-0\">\r\n                        <a href=\"javascript:void(0)\">\r\n                            <h5 class=\"card-title color-text-01 my-2\">{{'GenericTrainingCenter' | translate }} 06</h5>\r\n                        </a>\r\n                        <p class=\"card-dest mb-2\"><i\r\n                                class=\"far fa-map-marker-alt color-text-02 mr-2\"></i><strong>Destination:</strong> El\r\n                            Suez</p>\r\n                        <p class=\"p-pre-wrap max-text\">Lorem ipsum dolor sit amet, sectetu adip scing varius interdum\r\n                            incid unt quis, libero aenean mturpis. masa laoreet iaculipede mnisl ulamcorper. Tellus er\r\n                            sodales enim, in tincidunt mauris in odio. Massa ac laoreet iaculipede nisl\r\n                            ullamcorpermassa, ac consectetuer feipsum eget pede. Proin nunc, Donec massa, Nulla\r\n                            pulvinar, nisl ac convallis nonummy.</p>\r\n                    </div>\r\n                    <div class=\"card-footer\">\r\n                        <ul class=\"footer-det\">\r\n                            <li><a href=\"javascript:void(0)\" class=\"btn color-bg-02 btn-sm white-text\">More</a></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</section>\r\n\r\n\r\n\r\n<section class=\"\" data-stellar-background-ratio=\"0.5\">\r\n    <div class=\"home-art-bg\" style=\"background-image: url(assets/img/test-img/slideshow-05.jpg)\">\r\n        <img src=\"assets/img/test-img/slideshow-06.jpg\" class=\"img-fluid d-none\" alt=\"\" />\r\n        <div class=\"mask\"></div>\r\n        <div class=\"container-fluid\">\r\n            <div class=\"row\">\r\n\r\n                <div class=\"col-lg-3 col-md-6 mb-5 inf-lis\">\r\n                    <a href=\"javascript:void(0)\">\r\n                        <div class=\"icons-circle-img mb-1\" style=\"background-image: url(assets/img/test-img/img-10.jpg)\"></div>\r\n                        <img src=\"assets/img/test-img/img-07.jpg\" class=\"img-fluid d-none\" alt=\"\" />\r\n                    </a>\r\n                    <h5 class=\"my-2\">News &amp; Events 01</h5>\r\n                    <p class=\"p-pre-wrap max-text-02 mb-1\">Lorem ipsum dolor sit amet, sectetu adip scing varius\r\n                        interdum incid unt quis, libero aenean mturpis. Maecenas hendrerit masa laoreet iaculipede mnisl\r\n                        ulamcorper. Tellus er sodales enim, in tincidunt mauris in odio. Massa ac laoreet iaculipede\r\n                        nisl ullamcorpermassa, ac consectetuer feipsum eget pede. Proin nunc, Donec massa, Nulla\r\n                        pulvinar, nisl ac convallis nonummy.</p>\r\n                    <a href=\"javascript:void(0)\" class=\"link-color-04\">Read More<i\r\n                            class=\"fal fa-arrow-circle-right ml-2\"></i></a>\r\n                </div>\r\n\r\n                <div class=\"col-lg-3 col-md-6 mb-5 inf-lis\">\r\n                    <a href=\"javascript:void(0)\">\r\n                        <div class=\"icons-circle-img mb-1\" style=\"background-image: url(assets/img/test-img/img-11.jpg)\"></div>\r\n                        <img src=\"assets/img/test-img/img-08.jpg\" class=\"img-fluid d-none\" alt=\"\" />\r\n                    </a>\r\n                    <h5 class=\"my-2\">News &amp; Events 02</h5>\r\n                    <p class=\"p-pre-wrap max-text-02 mb-1\">Lorem ipsum dolor sit amet, sectetu adip scing varius\r\n                        interdum incid unt quis, libero aenean mturpis. Maecenas hendrerit masa laoreet iaculipede mnisl\r\n                        ulamcorper. Tellus er sodales enim, in tincidunt mauris in odio. Massa ac laoreet iaculipede\r\n                        nisl ullamcorpermassa, ac consectetuer feipsum eget pede. Proin nunc, Donec massa, Nulla\r\n                        pulvinar, nisl ac convallis nonummy.</p>\r\n                    <a href=\"javascript:void(0)\" class=\"link-color-04\">Read More<i\r\n                            class=\"fal fa-arrow-circle-right ml-2\"></i></a>\r\n                </div>\r\n\r\n                <div class=\"col-lg-3 col-md-6 mb-5 inf-lis\">\r\n                    <a href=\"javascript:void(0)\">\r\n                        <div class=\"icons-circle-img mb-1\" style=\"background-image: url(assets/img/test-img/img-12.jpg)\"></div>\r\n                        <img src=\"assets/img/test-img/img-09.jpg\" class=\"img-fluid d-none\" alt=\"\" />\r\n                    </a>\r\n                    <h5 class=\"my-2\">News &amp; Events 03</h5>\r\n                    <p class=\"p-pre-wrap max-text-02 mb-1\">Lorem ipsum dolor sit amet, sectetu adip scing varius\r\n                        interdum incid unt quis, libero aenean mturpis. Maecenas hendrerit masa laoreet iaculipede mnisl\r\n                        ulamcorper. Tellus er sodales enim, in tincidunt mauris in odio. Massa ac laoreet iaculipede\r\n                        nisl ullamcorpermassa, ac consectetuer feipsum eget pede. Proin nunc, Donec massa, Nulla\r\n                        pulvinar, nisl ac convallis nonummy.</p>\r\n                    <a href=\"javascript:void(0)\" class=\"link-color-04\">Read More<i\r\n                            class=\"fal fa-arrow-circle-right ml-2\"></i></a>\r\n                </div>\r\n\r\n                <div class=\"col-lg-3 col-md-6 mb-5 inf-lis\">\r\n                    <a href=\"javascript:void(0)\">\r\n                        <div class=\"icons-circle-img mb-1\" style=\"background-image: url(assets/img/test-img/img-13.jpg)\"></div>\r\n                        <img src=\"assets/img/test-img/img-10.jpg\" class=\"img-fluid d-none\" alt=\"\" />\r\n                    </a>\r\n                    <h5 class=\"my-2\">News &amp; Events 04</h5>\r\n                    <p class=\"p-pre-wrap max-text-02 mb-1\">Lorem ipsum dolor sit amet, sectetu adip scing varius\r\n                        interdum incid unt quis, libero aenean mturpis. Maecenas hendrerit masa laoreet iaculipede mnisl\r\n                        ulamcorper. Tellus er sodales enim, in tincidunt mauris in odio. Massa ac laoreet iaculipede\r\n                        nisl ullamcorpermassa, ac consectetuer feipsum eget pede. Proin nunc, Donec massa, Nulla\r\n                        pulvinar, nisl ac convallis nonummy.</p>\r\n                    <a href=\"javascript:void(0)\" class=\"link-color-04\">Read More<i\r\n                            class=\"fal fa-arrow-circle-right ml-2\"></i></a>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</section>\r\n\r\n\r\n\r\n<section class=\"pt-5 pb-5 gray-bg-01\">\r\n    <div class=\"container\">\r\n        <h4 class=\"mb-4 mt-3 text-center\">Latest Testimonials</h4>\r\n        <div class=\"row slider autoplay-02\">\r\n\r\n            <div class=\"col-xl-12 col-md-12 py-5 text-center\">\r\n                <i class=\"fal fa-quote-left\" style=\"font-size: 2rem; margin-right: 1rem;\"></i>\r\n                <img src=\"assets/img/test-img/img-14.jpg\" class=\"quote-img\" alt=\"\" />\r\n                <p class=\"p-pre-wrap\">Lorem ipsum dolor sit amet, sectetu adip scing varius interdum incid unt quis,\r\n                    libero aenean mturpis. Maecenas hendrerit masa laoreet iaculipede mnisl ulamcorper. Tellus er\r\n                    sodales enim, in tincidunt mauris in odio. Massa ac laoreet iaculipede nisl ullamcorpermassa, ac\r\n                    consectetuer feipsum eget pede. Proin nunc, Donec massa, Nulla pulvinar, nisl ac convallis nonummy.\r\n                </p>\r\n                <h6 class=\"mt-3\">Mr. Guest Name / Country</h6>\r\n                <i class=\"fal fa-quote-right\" style=\"font-size: 2rem; margin-left: 1rem;\"></i>\r\n            </div>\r\n\r\n            <div class=\"col-xl-12 col-md-12 py-5 text-center\">\r\n                <i class=\"fal fa-quote-left\" style=\"font-size: 2rem; margin-right: 1rem;\"></i>\r\n                <img src=\"assets/img/test-img/img-15.jpg\" class=\"quote-img\" alt=\"\" />\r\n                <p class=\"p-pre-wrap\">Lorem ipsum dolor sit amet, sectetu adip scing varius interdum incid unt quis,\r\n                    libero aenean mturpis.\r\n                    Maecenas hendrerit masa laoreet iaculipede mnisl ulamcorper. Tellus er sodales enim, in tincidunt\r\n                    mauris in odio. Massa ac laoreet iaculipede nisl ullamcorpermassa, ac consectetuer feipsum eget\r\n                    pede. Proin nunc, Donec massa, Nulla pulvinar, nisl ac convallis nonummy.</p>\r\n                <h6 class=\"mt-3\">Miss. Guest Name / Country</h6>\r\n                <i class=\"fal fa-quote-right\" style=\"font-size: 2rem; margin-left: 1rem;\"></i>\r\n            </div>\r\n\r\n            <div class=\"col-xl-12 col-md-12 py-5 text-center\">\r\n                <i class=\"fal fa-quote-left\" style=\"font-size: 2rem; margin-right: 1rem;\"></i>\r\n                <img src=\"assets/img/test-img/img-16.jpg\" class=\"quote-img\" alt=\"\" />\r\n                <p class=\"p-pre-wrap\">Lorem ipsum dolor sit amet, sectetu adip scing varius interdum incid unt quis,\r\n                    libero aenean mturpis.\r\n                    Maecenas hendrerit masa laoreet iaculipede mnisl ulamcorper. Tellus er sodales enim, in tincidunt\r\n                    mauris in odio. Massa ac laoreet iaculipede nisl ullamcorpermassa, ac consectetuer feipsum eget\r\n                    pede. Proin nunc, Donec massa, Nulla pulvinar, nisl ac convallis nonummy.</p>\r\n                <h6 class=\"mt-3\">Mrs. Guest Name / Country</h6>\r\n                <i class=\"fal fa-quote-right\" style=\"font-size: 2rem; margin-left: 1rem;\"></i>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</section> -->","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../core/auth-service.component';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-signin-callback',\r\n  template: `<div></div>`\r\n})\r\n\r\nexport class SigninRedirectCallbackComponent implements OnInit {\r\n  constructor(private _authService: AuthService,\r\n              private _router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this._authService.completeLogin().then(user => {\r\n      this._router.navigate(['/'], { replaceUrl: true });\r\n    })\r\n  }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../core/auth-service.component';\r\n\r\n@Component({\r\n  selector: 'app-signout-callback',\r\n  template: `<div></div>`\r\n})\r\n\r\nexport class SignoutRedirectCallbackComponent implements OnInit {\r\n  constructor(private _authService: AuthService,\r\n              private _router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this._authService.completeLogout().then(_ => {\r\n      this._router.navigate(['/'], { replaceUrl: true });\r\n    })\r\n  }\r\n}","import { Component, OnInit } from '@angular/core';\nimport { ModelContentData } from 'src/app/interface/Model/ModelContentData.class';\nimport { EnumContentData } from 'src/app/Enum/ContentData.enum';\nimport { ServiceMisc } from 'src/app/services/misc.service';\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\n\n@Component({\n  selector: 'app-terms',\n  templateUrl: './terms.component.html',\n  styleUrls: ['./terms.component.css']\n})\nexport class TermsComponent implements OnInit {\n\n  msgShow: ShowMessage = new ShowMessage();\n  modelData: ModelContentData = new ModelContentData();\n\n  constructor(private BLServiceMisc: ServiceMisc,\n    private BLServiceMessage: ServiceShowMessage) { \n\n  }\n\n  ngOnInit(): void {\n    this.BLServiceMisc.ContentDataOneGetByTypeId(EnumContentData.Terms).subscribe({\n      next: obj => {\n        this.modelData = obj;\n      },\n      error: err => this.msgShow.Error(err)\n    });\n  }\n\n}\n","<section class=\"my-5\">\n    <div class=\"container\">\n        <div class='row'>\n            <div class=\"editor\" [innerHTML]=\"modelData.Data\"></div>\n        </div>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../core/auth-service.component';\r\n\r\n@Component({\r\n  selector: 'app-unauthorized',\r\n  templateUrl: 'unauthorized.component.html'\r\n})\r\n\r\nexport class UnauthorizedComponent implements OnInit {\r\n  constructor(private _authService: AuthService) { }\r\n\r\n  ngOnInit() { }\r\n\r\n  logout() {\r\n    this._authService.logout();\r\n  }\r\n}","<div class=\"mat-title\" style=\"color: red; font-weight: bold\">I'm sorry but you have tried to access data or operations that you are not authorized for.</div>\r\n<a href=\"javascript:void(0)\" (click)=\"logout()\" class=\"mat-subheading-1\">Log out and log back in with another account.</a>\r\n","import { ModelPaging } from \"./ModelPaging.interface\"\r\n\r\nexport class ModelAccountSearch extends ModelPaging{\r\n    filterType: number;\r\n}","export class ModelArea\r\n{\r\n    Id: string;\r\n    CityId: string;\r\n    Name: string;\r\n}","export class ModelChangeEmail{\r\n    EmailOld:string;\r\n    EmailNew:string;\r\n}","import { ConfigForm } from 'src/app/Enum/ConfigForm.enum';\r\n\r\nexport class ModelConfigForm{\r\n\r\n    FormType: ConfigForm;\r\n    Form: ModelFieldConfig[];\r\n}\r\n\r\nexport class ModelFieldConfig {\r\n\r\n    order?: number;\r\n    label?: string;\r\n    name?: string;\r\n    inputType?: string;\r\n    options?: ModelOptions[];\r\n    collections?: any;\r\n    type: string;\r\n    value?: any;\r\n    validations?: boolean;\r\n    IsRequired:boolean;\r\n  }\r\n  export class ModelOptions{\r\n    option: string;\r\n  }\r\n  ","import { ConfigForm } from 'src/app/Enum/ConfigForm.enum';\r\n\r\nexport class ModelConfigFormGet{\r\n    type: ConfigForm;\r\n}","import { EnumContentData } from 'src/app/Enum/ContentData.enum';\r\n\r\nexport class ModelContentData {\r\n    _id:string;\r\n    Name:string;\r\n    Type:EnumContentData;\r\n    Data:string;\r\n}","export class ModelCourse\r\n{\r\n    Id: string;\r\n    TrainingCategoryId: string;\r\n    Name: string;\r\n}","export class ModelEntityMember{\r\n    EntityId: string;\r\n    UserId: string;\r\n}","export class ModelEntitySubEntityIds{\r\n    MainEntityId: string;\r\n    SubEntityId: string;\r\n}","export class ModelEntitySubPartner{\r\n    Id: string;\r\n    Name: string;\r\n    Phone:string;\r\n    PartnerIds:string[];\r\n    TrainingCenterIds:string[];\r\n}","export class ModelEntityTrainingCenter{\r\n    Id: string;\r\n    Name: string;\r\n    Phone:string;\r\n    PartnerId: string;\r\n}","export class ModelExamTempate{\r\n    Id: string;\r\n    Name:string;\r\n    Easy: number;\r\n    Medium: number;\r\n    Hard:number;\r\n}","import { ModelPaging } from './ModelPaging.interface';\r\n\r\nexport class ModelFilterQuestions extends ModelPaging{\r\n    TrainingCagtegoryId: string;\r\n    TrainingTypeId: string;\r\n}","import { ModelPaging } from './ModelPaging.interface';\r\n\r\nexport class ModelFilterTraining extends ModelPaging{\r\n    PartnerId: string;\r\n    SubPartnerId: string;\r\n    TrainingCategoryId:string;\r\n    TrainingTypeId: string;\r\n    TrainerId:string;\r\n} ","export class ModelId{\r\n    Id: string;\r\n}","import { LanguageType } from 'src/app/Enum/LanguageType.enum';\r\n\r\nexport class ModelLanguage{\r\n    Lang:LanguageType;\r\n}","export class ModelMyAssignedAccount{\r\n    UserId: string;\r\n    AccountId: string;\r\n    Type: number;\r\n}","export class ModelPaging{\r\n    CurrentPage: number = 1;\r\n    filterText: string = '';\r\n}","\r\nexport interface cQuestionList {\r\n    totalCount: number;\r\n    lstResult: cQuestionItem[];\r\n    pageSize: number;\r\n}\r\nexport class cQuestionItem {\r\n    Id: string;\r\n    Name: string;\r\n    IsActive: boolean;\r\n    Difficulty: number;\r\n    TrainingTypeId: string;\r\n    TrainingCategoryName:string;\r\n    TrainingCategoryId: string;\r\n    TrainingTypeName:string;\r\n    Answer: cAnswerItem[];\r\n\r\n}\r\nexport class cExamQuestionList {\r\n    questions: cQuestionItemTemplate[];\r\n    ExamId: string;\r\n}\r\nexport class cQuestionItemTemplate extends cQuestionItem{\r\n   \r\n    SelectedAnswer: string;\r\n\r\n}\r\nexport class cAnswerItem {\r\n    _id:string;\r\n    Name: string;\r\n    IsCorrectAnswer: boolean;\r\n}\r\n","import { ModelDynamic } from './ModelDynamic.class';\r\n\r\nexport class ModelRequestRegister{\r\n    Type:string;\r\n    PartnerName:string;\r\n    Name:string;\r\n    Email:string;\r\n    Phone:string;\r\n    Message:string;\r\n    data:ModelDynamic[];\r\n}","import { cAttendance } from '../Response/Training.class';\r\n\r\nexport class ModelSaveAttendnace{\r\n    trainingId: string;\r\n    Attendances:cAttendance;\r\n}","export class ShowMessage\r\n{\r\n    type : EnumShowMessage ;\r\n    message: string;\r\n    Error(msg : string):void{\r\n        this.type = EnumShowMessage.Error ;\r\n        this.message= msg;\r\n    }\r\n    Success(msg : string):void{\r\n        this.type = EnumShowMessage.Success;\r\n        this.message= msg;\r\n    }\r\n    Send(msg:string, isSucess:boolean)\r\n    {\r\n        this.type = isSucess? EnumShowMessage.Success : EnumShowMessage.Error;\r\n        this.message= msg;\r\n    }\r\n}\r\nexport enum EnumShowMessage\r\n{\r\n    Success = 1,\r\n    Error = 2\r\n}","import { ModelDynamic } from './ModelDynamic.class';\r\n\r\nexport class ModelTrainee{\r\n    Id: string;\r\n    Name:string;\r\n    Email:string;\r\n    Mobile:string;\r\n    NationalId:string;\r\n    Gender:string=\"1\";\r\n    IdType:string = \"1\"; //NationalID\r\n    DOB:Date;\r\n    TrainingId:string;\r\n    data:ModelDynamic[];\r\n}","export class ModelTraineeTraining{\r\n    TraineeId:string;\r\n    TrainingId:string;\r\n}","export class ModelTrainerCertificateApproval{\r\n    TrainerId: string;\r\n    PartnerId:string;\r\n    TrainingCategoryId: string;\r\n}","export class ModelTraining {\r\n    Id: string;\r\n    PartnerId: string;\r\n    SubPartnerId: string;\r\n    TrainingCenterId: string;\r\n    TrainerId: string;\r\n    Type:string;\r\n    TrainingTypeId: string;\r\n    TrainingCategoryId: string;\r\n    CityId: string;\r\n    AreaId: string;\r\n    StartDate: Date;\r\n    EndDate: Date;\r\n    days: string[];\r\n    IsOnline: boolean;\r\n}","export class ModelTrainingCategory\r\n{\r\n    Id: string;\r\n    Name: string;\r\n    TrainingTypeId: string;\r\n}","import { TranslateType } from 'src/app/Enum/TranslateType.enum';\r\n\r\nexport class ModelTranslateList{\r\n    Type:TranslateType;\r\n    Id:string;\r\n}","import { UserType } from 'src/app/Enum/UserType.enum';\r\n\r\nexport class ModelUserProfile {\r\n    Id: string;\r\n    Name: string;\r\n    Email: string;\r\n    Type: UserType;\r\n    CityId: string;\r\n    AreaId:string;\r\n    TrainerTrainingDetails: string;\r\n    TrainerStartDate: Date;\r\n    TrainerEndDate: Date;\r\n    SelectedPartnerEntityId: string[];\r\n    SelectedSubPartnerEntityId: string[];\r\n}","import { TranslateService } from '@ngx-translate/core';\r\n\r\nexport class UserTypeList {\r\n\r\n    private lst: UserTypeItem[] = [];\r\n    strAdmin: string;\r\n    strPartner: string;\r\n    strSubPartner: string;\r\n    strTrainer: string;\r\n\r\n    constructor(protected BLTranslate: TranslateService) {\r\n\r\n\r\n        this.BLTranslate.get(\"GenericAdmin\").subscribe(res => { this.strAdmin = res; });\r\n        this.BLTranslate.get(\"GenericPartner\").subscribe(res => { this.strPartner = res; });\r\n        this.BLTranslate.get(\"GenericSubPartner\").subscribe(res => { this.strSubPartner = res; });\r\n        this.BLTranslate.get(\"GenericTrainer\").subscribe(res => { this.strTrainer = res; });\r\n\r\n        this.lst.push(new UserTypeItem(1, this.strAdmin));\r\n        this.lst.push(new UserTypeItem(2, this.strPartner));\r\n        this.lst.push(new UserTypeItem(3, this.strSubPartner));\r\n        this.lst.push(new UserTypeItem(4, this.strTrainer));\r\n        //dthis.lst.push(new UserTypeItem(5,\"Trainee\"));\r\n    }\r\n    getAdminUserTypes(): UserTypeItem[] {\r\n        return this.lst.filter(x => x.Id >= 1);\r\n    }\r\n    getPartnerUserTypes(): UserTypeItem[] {\r\n        return this.lst.filter(x => x.Id > 2);\r\n    }\r\n    getSubPartnerUserTypes(): UserTypeItem[] {\r\n        return this.lst.filter(x => x.Id > 3);\r\n    }\r\n    getUserListByType(type: string): UserTypeItem[] {\r\n        switch (type.toLowerCase()) {\r\n            case \"admin\": return this.getAdminUserTypes();\r\n            case \"partner\": return this.getPartnerUserTypes();\r\n            case \"subpartner\": return this.getSubPartnerUserTypes();\r\n            default: return new UserTypeItem[0];\r\n        }\r\n    }\r\n}\r\nexport class UserTypeItem {\r\n    constructor(id: number, name: string) {\r\n        this.Id = id;\r\n        this.Name = name;\r\n    }\r\n    Id: number;\r\n    Name: string;\r\n}","import { cArea } from './Area.class';\r\n\r\nexport class cCityList{\r\n    totalCount: number;\r\n    lstResult:cCityItem[] ;\r\n    pageSize: number;\r\n}\r\nexport class cCityItem{\r\n    Id: string;\r\n    Name: string;\r\n    IsActive: boolean;\r\n    Areas: cArea[];\r\n}","import { cUserProfileItem } from './UserProfile.class';\r\nimport { cEntityTrainingCenterItem } from './EntityTrainingCenter.class';\r\n\r\nexport class cEntityPartnerList{\r\n    totalCount: number;\r\n    lstResult:cEntityPartnerItem[] ;\r\n    pageSize: number;\r\n}\r\nexport class cEntityPartnerItem{\r\n    Id: string;\r\n    Name: string;\r\n    IsActive: boolean;\r\n    Phone:string;\r\n    MinHours:number;\r\n    MaxHours:number;\r\n    Members : cUserProfileItem[];\r\n    TrainingCenters: cEntityTrainingCenterItem[];\r\n\r\n}","import { cEntityPartnerItem } from './EntityPartner.class';\r\nimport { cEntityTrainingCenterItem } from './EntityTrainingCenter.class';\r\nimport { cUserProfileItem } from './UserProfile.class';\r\n\r\nexport class cEntitySubPartnerList{\r\n    totalCount: number;\r\n    lstResult:cEntitySubPartnerItem[] ;\r\n    pageSize: number;\r\n}\r\nexport class cEntitySubPartnerItem{\r\n    Id: string;\r\n    Name: string;\r\n    IsActive: boolean;\r\n    Phone:string;\r\n    Partners:cEntityPartnerItem[];\r\n    TrainingCenters:cEntityTrainingCenterItem[];\r\n    MemberSubPartners: cUserProfileItem[];\r\n}","\r\nexport class cLogoPartnerList{\r\n    totalCount: number;\r\n    lstResult:cLogoPartnerItem[] ;\r\n    pageSize: number;\r\n}\r\nexport class cLogoPartnerItem{\r\n    _id: string;\r\n    IsActive: boolean;\r\n    WebsiteURL:string;\r\n    ImagePath:string;\r\n}","\r\nexport interface cNGOTypeList{\r\n    totalCount: number;\r\n    lstResult:cNGOTypeItem[] ;\r\n    pageSize: number;\r\n}\r\nexport class cNGOTypeItem{\r\n    Id: string;\r\n    Name: string;\r\n    IsActive: boolean;\r\n}","export class StatsCount{\r\n    TraineeCount:string;\r\n    TrainerCount:string;\r\n    TrainingCount:string;\r\n}","import { ModelDynamic } from '../Model/ModelDynamic.class';\r\n\r\nexport class cTraineeList{\r\n    totalCount: number;\r\n    lstResult:cTraineeItem[] ;\r\n    pageSize: number;\r\n}\r\nexport class cTraineeItem{\r\n    \r\n    Id: string;\r\n    Name: string;\r\n    IsActive: boolean;\r\n    Email:string;\r\n    Mobile:string;\r\n    NationalId:string;\r\n    Gender:number =1;\r\n    IdType:number = 1; //NationalID\r\n    DOB:Date;\r\n    data:ModelDynamic[];\r\n}\r\nexport class cTraineeItemInfo extends cTraineeItem{\r\n    IsApproved:boolean;\r\n}","import { cTraineeItem, cTraineeItemInfo } from './Trainee.class';\r\n\r\nexport class cTrainingList {\r\n    totalCount: number;\r\n    lstResult: cTrainingItem[];\r\n    pageSize: number;\r\n}\r\nexport class cTrainingItem {\r\n    Id: string;\r\n    PartnerId: ItemDetails;\r\n    SubPartnerId: ItemDetails;\r\n    TrainingCenterId: ItemDetails;\r\n    TrainerId: string;\r\n    TrainerDetails: ItemDetails;\r\n    TrainerCount:number;\r\n    TrainingTypeId: ItemDetails;\r\n    TrainingCategoryId: ItemDetails;\r\n    CityId: string;\r\n    AreaId: string;\r\n    StartDate: Date;\r\n    EndDate: Date;\r\n    days: string[];\r\n    CanEdit: boolean;\r\n    IsAdminApproved: boolean;\r\n    IsConfirm1: boolean;\r\n    IsConfirm2: boolean;\r\n    Trainees: cTraineeItemInfo[];\r\n    Sessions: cSessionItem[];\r\n    Attendances:cAttendance[];\r\n    Type:number;\r\n    ExamTemplateId:string;\r\n    IsOnline:boolean;\r\n}\r\nexport class ItemDetails {\r\n    Id: string;\r\n    Name: string;\r\n}\r\nexport class cSessionItem {\r\n    Id: string;\r\n    Name: string;\r\n    Day: Date;\r\n    IsAttendanceFilled: boolean;\r\n}\r\nexport class cAttendance\r\n{\r\n    SessionId:string;\r\n    Attendances:cAttendanceTrainee[];\r\n}\r\nexport class cAttendanceTrainee\r\n{\r\n    TraineeId:string;\r\n    IsAttendant:boolean;\r\n}","import { ICourse } from './Course.interface';\r\nimport { cTrainingTypeItem } from './TrainingType.class';\r\n\r\nexport interface ITrainingCategory{\r\n    totalCount: number;\r\n    lstResult:ITrainingCategoryItem[] ;\r\n    pageSize: number;\r\n}\r\nexport class ITrainingCategoryItem{\r\n    Id: string;\r\n    Name: string;\r\n    IsActive: boolean; \r\n    TrainingType: cTrainingTypeItem;\r\n    Course: ICourse[];\r\n}","\r\nexport interface cTrainingTypeList{\r\n    totalCount: number;\r\n    lstResult:cTrainingTypeItem[] ;\r\n    pageSize: number;\r\n}\r\nexport class cTrainingTypeItem{\r\n    Id: string;\r\n    Name: string;\r\n    IsActive: boolean;\r\n}","import { UserType } from 'src/app/Enum/UserType.enum';\r\nimport { UserProfile } from 'src/app/model/user-profile';\r\n\r\nexport class cUserProfileList {\r\n    totalCount: number;\r\n    lstResult: cUserProfileItem[];\r\n    pageSize: number;\r\n}\r\nexport class cUserProfileItem {\r\n    Id: string;\r\n    Name: string;\r\n    IsActive: boolean;\r\n    Email: string;\r\n    Type: string;\r\n    CityId: string;\r\n    AreaId: string;\r\n    TrainerTrainingDetails: string;\r\n    TrainerStartDate: Date;\r\n    TrainerEndDate: Date;\r\n    MyPartnerListIds: cEntityObj[];\r\n    MySubPartnerListIds: cEntityObj[];\r\n}\r\n\r\nexport class cEntityObj {\r\n    Id: string;\r\n    Name: string;\r\n}\r\n\r\nexport class cUserProfileTrainerCertificateList {\r\n    totalCount: number;\r\n    lstResult: cUserProfileTrainerCertificateItem[];\r\n    pageSize: number;\r\n}\r\n\r\n\r\nexport class cUserProfileTrainerCertificateItem {\r\n    TrainerId: string;\r\n    TrainerName: string;\r\n    PartnerId: string;\r\n    PartnerName: string;\r\n    TrainingCategoryId: string;\r\n    TrainingCategoryName: string;\r\n    TrainingTypeId: string;\r\n    TrainingTypeName: string;\r\n    ExamCount: number;\r\n    CertificatePath:string;\r\n}\r\nexport class cUserProfileTrainerCertificateItemWithProfile {\r\n    TrainerName: string;\r\n    lstResult: cUserProfileTrainerCertificateItem[];\r\n}","import { ServiceShowMessage } from '../services/show-message.service';\r\nimport { ShowMessage } from './Model/ModelShowMessage.class';\r\nimport { ServiceLoginUser } from '../services/loginuser.service';\r\nimport { Constants } from '../constants';\r\nimport { AngularEditorConfig } from '@kolkov/angular-editor';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport * as fileSaver from 'file-saver';\r\n\r\nexport class baseComponent {\r\n    message: ShowMessage = new ShowMessage();\r\n    userRole: string;\r\n    IsAdmin: Boolean;\r\n    IsPartner: Boolean;\r\n    IsSubPartner: Boolean;\r\n    IsTrainer: Boolean;\r\n    IsTrainee: Boolean;\r\n    emailPattern = \"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\";\r\n    todayDate = new Date();\r\n    FilesURL: string = Constants.FilesURL;\r\n\r\n    msgGenericError: string;\r\n    msgSavedSuccessfully: string;\r\n    msgDeactivatedSuccessfully: string;\r\n    msgActivatedSuccessfully: string;\r\n    msgsetDeactivate: string;\r\n    msgsetActivate: string;\r\n    msgsetDeleted: string;\r\n    msgDeletedSuccessfully: string;\r\n    msgUpdatedsuccessfully: string;\r\n    msgsetRemove: string;\r\n    CertificatePDFOnly: string;\r\n    CertificateSelectFileError: string;\r\n\r\n    textEditorConfig: AngularEditorConfig = {\r\n        editable: true,\r\n        spellcheck: true,\r\n        minHeight: '5rem',\r\n        translate: 'yes',\r\n        defaultParagraphSeparator: 'p',\r\n        defaultFontName: 'Arial',\r\n        toolbarHiddenButtons: [\r\n            ['insertImage',\r\n                'insertVideo',\r\n                'toggleEditorMode',\r\n                'link',\r\n                'unlink',\r\n                'backgroundColor',\r\n                'justifyLeft',\r\n                'justifyCenter',\r\n                'justifyRight',\r\n                'justifyFull'\r\n            ]\r\n        ]\r\n    };\r\n\r\n    constructor(\r\n        protected BLServiceShowMessage: ServiceShowMessage,\r\n        protected BLServiceLoginUser: ServiceLoginUser,\r\n        protected BLTranslate: TranslateService) {\r\n        this.Init();\r\n    }\r\n    Init() {\r\n        this.BLTranslate.get(\"msgSavedSuccessfully\").subscribe(res => { this.msgSavedSuccessfully = res; });\r\n        this.BLTranslate.get(\"msgDeactivatedSuccessfully\").subscribe(res => { this.msgDeactivatedSuccessfully = res; });\r\n        this.BLTranslate.get(\"msgActivatedSuccessfully\").subscribe(res => { this.msgActivatedSuccessfully = res; });\r\n        this.BLTranslate.get(\"msgsetDeactivate\").subscribe(res => { this.msgsetDeactivate = res; });\r\n        this.BLTranslate.get(\"msgsetActivate\").subscribe(res => { this.msgsetActivate = res; });\r\n        this.BLTranslate.get(\"msgDeletedSuccessfully\").subscribe(res => { this.msgDeletedSuccessfully = res; });\r\n        this.BLTranslate.get(\"msgsetDeleted\").subscribe(res => { this.msgsetDeleted = res; });\r\n        this.BLTranslate.get(\"msgUpdatedsuccessfully\").subscribe(res => { this.msgUpdatedsuccessfully = res; });\r\n        this.BLTranslate.get(\"msgsetRemove\").subscribe(res => { this.msgsetRemove = res; });\r\n        this.BLTranslate.get(\"CertificatePDFOnly\").subscribe(res => { this.CertificatePDFOnly = res; });\r\n        this.BLTranslate.get(\"CertificateSelectFileError\").subscribe(res => { this.CertificateSelectFileError = res; });\r\n        this.BLTranslate.get(\"GenericError\").subscribe(res => { this.msgGenericError = res; });\r\n\r\n        this.userRole = this.BLServiceLoginUser.userRole;\r\n        this.BLServiceLoginUser.UserRoleChanged.subscribe(obj => {\r\n            this.userRole = obj;\r\n        });\r\n\r\n        this.IsAdmin = this.BLServiceLoginUser.IsAdmin;\r\n        this.BLServiceLoginUser.UserIsAdminChanged.subscribe(obj => {\r\n            this.IsAdmin = obj;\r\n        });\r\n\r\n        this.IsPartner = this.BLServiceLoginUser.IsPartner;\r\n        this.BLServiceLoginUser.UserIsPartnerChanged.subscribe(obj => {\r\n            this.IsPartner = obj;\r\n        });\r\n\r\n        this.IsSubPartner = this.BLServiceLoginUser.IsSubPartner;\r\n        this.BLServiceLoginUser.UserIsSubPartnerChanged.subscribe(obj => {\r\n            this.IsSubPartner = obj;\r\n        });\r\n\r\n        this.IsTrainer = this.BLServiceLoginUser.IsTrainer;\r\n        this.BLServiceLoginUser.UserIsTrainerChanged.subscribe(obj => {\r\n            this.IsTrainer = obj;\r\n        });\r\n\r\n        this.IsTrainee = this.BLServiceLoginUser.IsTrainee;\r\n        this.BLServiceLoginUser.UserIsTraineeChanged.subscribe(obj => {\r\n            this.IsTrainee = obj;\r\n        });\r\n    }\r\n    compareDate(date1: Date, date2: Date): number {\r\n        // With Date object we can compare dates them using the >, <, <= or >=.\r\n        // The ==, !=, ===, and !== operators require to use date.getTime(),\r\n        // so we need to create a new instance of Date with 'new Date()'\r\n        let d1 = new Date(new Date(date1).getFullYear(), new Date(date1).getMonth(), new Date(date1).getDate());\r\n        let d2 = new Date(new Date(date2).getFullYear(), new Date(date2).getMonth(), new Date(date2).getDate());\r\n\r\n        // Check if the dates are equal\r\n        let same = d1.getTime() === d2.getTime();\r\n        if (same) return 0;\r\n\r\n        // Check if the first is greater than second\r\n        if (d1 > d2) return 1;\r\n\r\n        // Check if the first is less than second\r\n        if (d1 < d2) return -1;\r\n    }\r\n    compareDateAttendanceTraining(date1: Date, date2: Date): number {\r\n        // With Date object we can compare dates them using the >, <, <= or >=.\r\n        // The ==, !=, ===, and !== operators require to use date.getTime(),\r\n        // so we need to create a new instance of Date with 'new Date()'\r\n        let d1 = new Date(new Date(date1).getFullYear(), new Date(date1).getMonth(), new Date(date1).getDate());\r\n        let d2 = new Date(new Date(date2).getFullYear(), new Date(date2).getMonth(), new Date(date2).getDate(), 12, 0, 0);\r\n\r\n        // Check if the dates are equal\r\n        let same = d1.getTime() === d2.getTime();\r\n        if (same) return 0;\r\n\r\n        // Check if the first is greater than second\r\n        if (d1 > d2) return 1;\r\n\r\n        // Check if the first is less than second\r\n        if (d1 < d2) return -1;\r\n    }\r\n    CompareTwoDates(dateFrom, dateTo) {\r\n        if (dateFrom && dateTo) {\r\n\r\n            var d1 = Date.parse(dateTo);\r\n            var d2 = Date.parse(dateFrom);\r\n\r\n            if (d1 > d2) {\r\n                return true;\r\n            }\r\n            return false\r\n        }\r\n    }\r\n    downloadFile(data: any) {\r\n        \r\n\r\n        window.open(Constants.FilesURL + data);\r\n    }\r\n}","export class cfAutoComplete\r\n{\r\n    constructor(id, name)\r\n    {\r\n        this.Id = id;\r\n        this.Name = name;\r\n    }\r\n    Id:string;\r\n    Name: string;\r\n}","import { UserProfile } from './user-profile';\r\nimport { SimpleClaim } from './simple-claim';\r\n\r\nexport class AuthContext {\r\n  claims: SimpleClaim[];\r\n  userProfile: UserProfile;\r\n  get getUserProfile(){\r\n    if(!!this.userProfile)\r\n    {\r\n      return this.userProfile;\r\n    }\r\n    return  null;\r\n  }\r\n  get userRole(){\r\n    if(!!this.claims && !!this.claims.find(c => c.Type === 'role'))\r\n    {\r\n      return this.claims.find(c => c.Type === 'role').Value;\r\n    }\r\n    return  \"\";\r\n  }\r\n  get userName(){\r\n    if(!!this.userProfile)\r\n    {\r\n      return this.userProfile.FullName;\r\n    }\r\n    return  \"\";\r\n  }\r\n  get isAdmin() {\r\n    return !!this.claims && !!this.claims.find(c =>\r\n      c.Type === 'role' && c.Value.toLowerCase() === 'admin');\r\n  }\r\n  get isPartner(){\r\n    return !!this.claims && !!this.claims.find(c =>\r\n      c.Type === 'role' && c.Value.toLowerCase() === 'partner');\r\n  }\r\n  get isSubPartner(){\r\n    return !!this.claims && !!this.claims.find(c =>\r\n      c.Type === 'role' && c.Value.toLowerCase() === 'subpartner');\r\n  }\r\n  get isTrainer(){\r\n    return !!this.claims && !!this.claims.find(c =>\r\n      c.Type === 'role' && c.Value.toLowerCase() === 'trainer');\r\n  }\r\n  get isTrainee(){\r\n    return !!this.claims && !!this.claims.find(c =>\r\n      c.Type === 'role' && c.Value.toLowerCase() === 'trainee');\r\n  }\r\n}","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Constants } from '../constants';\r\nimport { tap, catchError } from 'rxjs/operators';\r\nimport { ModelId } from '../interface/Model/ModelId.interface';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { ModelPaging } from '../interface/Model/ModelPaging.interface';\r\n\r\nexport class ServiceGeneric<T, W, Z> {\r\n    protected apiURL = Constants.apiRoot\r\n    \r\n    constructor(ControllerName: string,\r\n        protected httpClient: HttpClient) {\r\n        this.apiURL += ControllerName;\r\n    }\r\n    getGetByid(Id: string): Observable<T> {\r\n        var model = new ModelId();\r\n        model.Id = Id;\r\n        return this.httpClient.post<T>(this.apiURL + 'GetById', model).pipe(\r\n            //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n            catchError(this.handleError)\r\n        );\r\n    }\r\n    getListActive(): Observable<T[]> {\r\n        return this.httpClient.get<T[]>(this.apiURL + 'ListActive').pipe(\r\n            //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n            catchError(this.handleError)\r\n        );\r\n    }\r\n    getAll(currentPage: number, filterText: string): Observable<W> {\r\n\r\n        var model = new ModelPaging()\r\n        model.CurrentPage = currentPage;\r\n        model.filterText = filterText;\r\n        return this.httpClient.post<W>(this.apiURL + 'ListAll', model).pipe(\r\n            //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n            catchError(this.handleError)\r\n        );\r\n    }\r\n    setActivate(Id: string): Observable<boolean> {\r\n        var model = new ModelId();\r\n        model.Id = Id;\r\n        return this.httpClient.post<boolean>(this.apiURL + 'Activate', model).pipe(\r\n            //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n            catchError(this.handleError)\r\n        );\r\n    }\r\n    setDeactivate(Id: string): Observable<boolean> {\r\n        var model = new ModelId();\r\n        model.Id = Id;\r\n        return this.httpClient.post<boolean>(this.apiURL + 'Deactivate', model).pipe(\r\n            //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n            catchError(this.handleError)\r\n        );\r\n    }\r\n    \r\n    update(model: Z): Observable<boolean> {\r\n        return this.httpClient.post<boolean>(this.apiURL + 'Update', model).pipe(\r\n            //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n            catchError(this.handleError)\r\n        );\r\n    }\r\n    create(model: Z): Observable<boolean> {\r\n        return this.httpClient.post<boolean>(this.apiURL + 'Create', model).pipe(\r\n            //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n            catchError(this.handleError)\r\n        );\r\n    }\r\n    \r\n    //   memberAddEntityPartner(PartnerId: string, UserId: string):Observable<boolean>{\r\n    //     var model = new ModelEntityMember();\r\n    //     model.EntityId = PartnerId;\r\n    //     model.UserId = UserId;\r\n    //     return this.httpClient.post<boolean>(this.apiURL + 'EntityPartnerAddMember',model).pipe(\r\n    //         //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n    //         catchError(this.handleError)\r\n    //       );\r\n    //   }\r\n    //   memberRemoveEntityPartner(PartnerId: string, UserId: string):Observable<boolean>{\r\n    //     var model = new ModelEntityMember();\r\n    //     model.EntityId = PartnerId;\r\n    //     model.UserId = UserId;\r\n    //     return this.httpClient.post<boolean>(this.apiURL + 'EntityPartnerRemoveMember',model).pipe(\r\n    //         //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n    //         catchError(this.handleError)\r\n    //       );\r\n    //   }\r\n    //#endregion\r\n    protected handleError(err: HttpErrorResponse) {\r\n        // in a real world app, we may send the server to some remote logging infrastructure\r\n        // instead of just logging it to the console\r\n        let errorMessage = '';\r\n        if (err.error instanceof ErrorEvent) {\r\n            // A client-side or network error occurred. Handle it accordingly.\r\n            errorMessage = `An error occurred: ${err.error.message}`;\r\n        } else {\r\n            // The backend returned an unsuccessful response code.\r\n            // The response body may contain clues as to what went wrong,\r\n            errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\r\n        }\r\n        //console.error(errorMessage);\r\n        return throwError(errorMessage);\r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport { Constants } from '../constants';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { cQuestionItem, cQuestionList } from '../interface/Model/ModelQuestions.class';\nimport { ModelId } from '../interface/Model/ModelId.interface';\nimport { tap, catchError } from 'rxjs/operators';\nimport { ModelPaging } from '../interface/Model/ModelPaging.interface';\nimport { ModelFilterQuestions } from '../interface/Model/ModelFilterQuestions.class';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServiceQuestion {\n\n  private apiURL = Constants.apiRoot + 'Question/'\n\n  constructor(private httpClient: HttpClient) { }\n  //#region Question\n  getQuestionGetByid(Id: string): Observable<cQuestionItem> {\n    var model = new ModelId();\n    model.Id = Id;\n    return this.httpClient.post<cQuestionItem>(this.apiURL + 'QuestionGetById', model).pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  getQuestionListActive(model: ModelFilterQuestions): Observable<cQuestionItem[]> {\n    return this.httpClient.post<cQuestionItem[]>(this.apiURL + 'getQuestionListActive', model).pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  getQuestionAll(model: ModelFilterQuestions): Observable<cQuestionList> {\n\n    return this.httpClient.post<cQuestionList>(this.apiURL + 'QuestionListAll', model).pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  setQuestionActivate(Id: string): Observable<boolean> {\n    var model = new ModelId();\n    model.Id = Id;\n    return this.httpClient.post<boolean>(this.apiURL + 'QuestionActivate', model).pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  setQuestionDeactivate(Id: string): Observable<boolean> {\n    var model = new ModelId();\n    model.Id = Id;\n    return this.httpClient.post<boolean>(this.apiURL + 'QuestionDeactivate', model).pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  updateQuestion(model): Observable<boolean> {\n    return this.httpClient.post<boolean>(this.apiURL + 'QuestionUpdate', model).pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  createQuestion(model): Observable<boolean> {\n    return this.httpClient.post<boolean>(this.apiURL + 'QuestionCreate', model).pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  private handleError(err: HttpErrorResponse) {\n    // in a real world app, we may send the server to some remote logging infrastructure\n    // instead of just logging it to the console\n    let errorMessage = '';\n    if (err.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      errorMessage = `An error occurred: ${err.error.message}`;\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\n    }\n    //console.error(errorMessage);\n    return throwError(errorMessage);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { Constants } from '../constants';\r\nimport { HttpClient, HttpErrorResponse, HttpEventType } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { cExamQuestionList, cQuestionItemTemplate } from '../interface/Model/ModelQuestions.class';\r\nimport { ModelId } from '../interface/Model/ModelId.interface';\r\nimport { tap, catchError } from 'rxjs/operators';\r\nimport { ModelPaging } from '../interface/Model/ModelPaging.interface';\r\nimport { ResponseFileUpload } from '../interface/Model/ModelUploadFile.class';\r\nimport { cCertificateList } from '../interface/Response/Certificate.class';\r\nimport { cTrainingTypeList } from '../interface/Response/TrainingType.class';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServiceCertificate {\r\n\r\n  private apiURL = Constants.apiRoot + 'Certificate/'\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n  CertificateListAllByTrainingCenterId(currentPage: number, filterText: string): Observable<cCertificateList> {\r\n    var model = new ModelPaging()\r\n    model.CurrentPage = currentPage;\r\n    model.filterText = filterText;\r\n    return this.httpClient.post<cCertificateList>(this.apiURL + 'CertificateListAllByTrainingCenterId', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  CertificateActivate(Id: string):Observable<boolean>{\r\n    var model = new ModelId();\r\n    model.Id = Id;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'CertificateActivate',model).pipe(\r\n        //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n  CertificateDeActivate(Id: string):Observable<boolean>{\r\n    var model = new ModelId();\r\n    model.Id = Id;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'CertificateDeActivate',model).pipe(\r\n        //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n  CertificateListAllByPartnerId(currentPage: number, filterText: string): Observable<cCertificateList> {\r\n    var model = new ModelPaging()\r\n    model.CurrentPage = currentPage;\r\n    model.filterText = filterText;\r\n    return this.httpClient.post<cCertificateList>(this.apiURL + 'CertificateListAllByPartnerId', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  CertificateListAllGenericByPartnerId(currentPage: number, filterText: string): Observable<cCertificateList> {\r\n    var model = new ModelPaging()\r\n    model.CurrentPage = currentPage;\r\n    model.filterText = filterText;\r\n    return this.httpClient.post<cCertificateList>(this.apiURL + 'CertificateListAllGenericByPartnerId', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  CertificateListAllSystemGeneric(): Observable<cCertificateList> {\r\n    return this.httpClient.get<cCertificateList>(this.apiURL + 'CertificateListAllSystemGeneric').pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  uploadFile(fileToUpload: File, fileType: number, partnerId?: string): Observable<ResponseFileUpload> {\r\n    const formData = new FormData();\r\n    formData.append('file', fileToUpload, fileToUpload.name);\r\n\r\n    if (partnerId) {\r\n      return this.httpClient.post<ResponseFileUpload>(this.apiURL + 'UploadSystemGenericFile?fileType=' + fileType + '&partnerId=' + partnerId, formData).pipe(\r\n        //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n        catchError(this.handleError)\r\n      );\r\n    }\r\n    else {\r\n      return this.httpClient.post<ResponseFileUpload>(this.apiURL + 'UploadSystemGenericFile?fileType=' + fileType, formData).pipe(\r\n        //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n        catchError(this.handleError)\r\n      );\r\n\r\n    }\r\n  }\r\n\r\n  uploadCategoryCertificateFile(fileToUpload: File, fileType: number, partnerId: string, trainingTypeId: string, trainingCategoryId: string): Observable<ResponseFileUpload> {\r\n    const formData = new FormData();\r\n    formData.append('file', fileToUpload, fileToUpload.name);\r\n\r\n    return this.httpClient.post<ResponseFileUpload>(this.apiURL + 'UploadCertificateCategoryFile?fileType=' + fileType + '&partnerId=' + partnerId + '&trainingTypeId=' + trainingTypeId + '&trainingCategoryId=' + trainingCategoryId, formData).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  uploadTrainingCenterCertificateFile(fileToUpload: File, fileType: number, partnerId: string, trainingCenterId: string, trainingTypeId: string, trainingCategoryId: string): Observable<ResponseFileUpload> {\r\n    const formData = new FormData();\r\n    formData.append('file', fileToUpload, fileToUpload.name);\r\n\r\n    return this.httpClient.post<ResponseFileUpload>(this.apiURL + 'UploadCertificateTrainingCenterFile?fileType=' + fileType + '&partnerId=' + partnerId + '&trainingCenterId=' + trainingCenterId + '&trainingTypeId=' + trainingTypeId + '&trainingCategoryId=' + trainingCategoryId, formData).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  private handleError(err: HttpErrorResponse) {\r\n    // in a real world app, we may send the server to some remote logging infrastructure\r\n    // instead of just logging it to the console\r\n    let errorMessage = '';\r\n    if (err.error instanceof ErrorEvent) {\r\n      // A client-side or network error occurred. Handle it accordingly.\r\n      errorMessage = `An error occurred: ${err.error.message}`;\r\n    } else {\r\n      // The backend returned an unsuccessful response code.\r\n      // The response body may contain clues as to what went wrong,\r\n      errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\r\n    }\r\n    //console.error(errorMessage);\r\n    return throwError(errorMessage);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Constants } from '../constants';\r\nimport { ModelConfigForm } from '../interface/Model/ModelConfigForm.class';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { tap, catchError } from 'rxjs/operators';\r\nimport { ConfigForm } from '../Enum/ConfigForm.enum';\r\nimport { FieldConfig, Validator } from '../common/ConfigForms/field.interface';\r\nimport { ModelConfigFormGet } from '../interface/Model/ModelConfigFormGet.class';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServiceConfigForm {\r\n  \r\n  protected apiURL = Constants.apiRoot;\r\n\r\n  constructor(protected httpClient: HttpClient) {\r\n    this.apiURL += \"ConfigForm/\";\r\n  }\r\n  GetByType(type: ConfigForm): Observable<FieldConfig[]> {\r\n    var model = new ModelConfigFormGet();\r\n    model.type = type;\r\n    return this.httpClient.post<FieldConfig[]>(this.apiURL + 'GetByType', model).pipe(\r\n      tap(data => {\r\n        \r\n        //console.log('All: ' + JSON.stringify(data));\r\n      }),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  Update(model: ModelConfigForm): Observable<boolean> {\r\n    return this.httpClient.post<boolean>(this.apiURL + 'Update', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  protected handleError(err: HttpErrorResponse) {\r\n    // in a real world app, we may send the server to some remote logging infrastructure\r\n    // instead of just logging it to the console\r\n    let errorMessage = '';\r\n    if (err.error instanceof ErrorEvent) {\r\n        // A client-side or network error occurred. Handle it accordingly.\r\n        errorMessage = `An error occurred: ${err.error.message}`;\r\n    } else {\r\n        // The backend returned an unsuccessful response code.\r\n        // The response body may contain clues as to what went wrong,\r\n        errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\r\n    }\r\n    //console.error(errorMessage);\r\n    return throwError(errorMessage);\r\n}\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Constants } from '../constants';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { cContentDataItem, cContentDataList } from '../interface/Response/ContentData.class';\nimport { ModelId } from '../interface/Model/ModelId.interface';\nimport { tap, catchError } from 'rxjs/operators';\nimport { ModelPaging } from '../interface/Model/ModelPaging.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServiceContentData {\n\n  private apiURL = Constants.apiRoot + 'ContentData/'\n\n  constructor(private httpClient: HttpClient) { }\n  ContentDataOneGetByTypeId(type): Observable<cContentDataItem> {\n    var model = new ModelId();\n    model.Id = <string>type;\n    return this.httpClient.post<cContentDataItem>(this.apiURL + 'ContentDataOneGetByTypeId', model).pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  getContentDataGetByid(Id: string): Observable<cContentDataItem> {\n    var model = new ModelId();\n    model.Id = Id;\n    return this.httpClient.post<cContentDataItem>(this.apiURL + 'ContentDataGetById', model).pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  getContentDataListActive(): Observable<cContentDataItem[]> {\n    return this.httpClient.get<cContentDataItem[]>(this.apiURL + 'ContentDataListActive').pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  getContentDataAll(currentPage: number, filterText: string): Observable<cContentDataList> {\n\n    var model = new ModelPaging()\n    model.CurrentPage = currentPage;\n    model.filterText = filterText;\n    return this.httpClient.post<cContentDataList>(this.apiURL + 'ContentDataListAll', model).pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  setContentDataActivate(Id: string): Observable<boolean> {\n    var model = new ModelId();\n    model.Id = Id;\n    return this.httpClient.post<boolean>(this.apiURL + 'ContentDataActivate', model).pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  setContentDataDeactivate(Id: string): Observable<boolean> {\n    var model = new ModelId();\n    model.Id = Id;\n    return this.httpClient.post<boolean>(this.apiURL + 'ContentDataDeactivate', model).pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  updateContentData(model): Observable<boolean> {\n    return this.httpClient.post<boolean>(this.apiURL + 'ContentDataUpdate', model).pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  createContentData(model): Observable<boolean> {\n    return this.httpClient.post<boolean>(this.apiURL + 'ContentDataCreate', model).pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  updateSiteLogo(fileToUpload: File): Observable<boolean> {\n    const formData = new FormData();\n    formData.append('file', fileToUpload, fileToUpload.name);\n    return this.httpClient.post<boolean>(this.apiURL + 'updateSiteLogo', formData).pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  private handleError(err: HttpErrorResponse) {\n    // in a real world app, we may send the server to some remote logging infrastructure\n    // instead of just logging it to the console\n    let errorMessage = '';\n    if (err.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      errorMessage = `An error occurred: ${err.error.message}`;\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\n    }\n    //console.error(errorMessage);\n    return throwError(errorMessage);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse, HttpParams } from '@angular/common/http';\r\nimport { Observable,throwError } from 'rxjs';\r\nimport { tap, catchError, map } from 'rxjs/operators';\r\nimport { ITrainingCategory,ITrainingCategoryItem } from '../interface/Response/TrainingCategory.interface';\r\nimport { Constants } from '../constants';\r\nimport { ModelPaging } from '../interface/Model/ModelPaging.interface';\r\nimport { ModelId } from '../interface/Model/ModelId.interface';\r\nimport { ModelCourse } from '../interface/Model/ModelCourse.class';\r\nimport { cNGOTypeItem, cNGOTypeList } from '../interface/Response/NGOType.class';\r\nimport { cCityItem, cCityList } from '../interface/Response/City.class';\r\nimport { ModelArea } from '../interface/Model/ModelArea.class';\r\nimport { cTrainingTypeItem, cTrainingTypeList } from '../interface/Response/TrainingType.class';\r\nimport { ModelTrainingCategory } from '../interface/Model/ModelTrainingCategory.class';\r\n\r\n\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class ServiceDataManagement {\r\n    private apiURL = Constants.apiRoot + 'DataManagement/'\r\n    \r\n    constructor(private httpClient: HttpClient) { }\r\n    //#region TrainingType\r\n    getTrainingTypeGetByid(Id: string):Observable<cTrainingTypeItem>{\r\n      var model = new ModelId();\r\n      model.Id = Id;\r\n      return this.httpClient.post<cTrainingTypeItem>(this.apiURL + 'TrainingTypeGetById',model).pipe(\r\n          //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)\r\n        );\r\n    }\r\n    getTrainingTypeListActive():Observable<cTrainingTypeItem[]>{\r\n      return this.httpClient.get<cTrainingTypeItem[]>(this.apiURL + 'TrainingTypeListActive').pipe(\r\n          //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)\r\n        );\r\n    }\r\n    getTrainingTypeAll(currentPage: number, filterText: string):Observable<cTrainingTypeList>{\r\n      \r\n        var model = new ModelPaging()\r\n        model.CurrentPage = currentPage;\r\n        model.filterText = filterText;\r\n        return this.httpClient.post<cTrainingTypeList>(this.apiURL + 'TrainingTypeListAll',model).pipe(\r\n            //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n            catchError(this.handleError)\r\n          );\r\n    }\r\n    setTrainingTypeActivate(Id: string):Observable<boolean>{\r\n      var model = new ModelId();\r\n      model.Id = Id;\r\n      return this.httpClient.post<boolean>(this.apiURL + 'TrainingTypeActivate',model).pipe(\r\n          //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)\r\n        );\r\n    }\r\n    setTrainingTypeDeactivate(Id: string):Observable<boolean>{\r\n      var model = new ModelId();\r\n      model.Id = Id;\r\n      return this.httpClient.post<boolean>(this.apiURL + 'TrainingTypeDeactivate',model).pipe(\r\n          //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)\r\n        );\r\n    }\r\n    updateTrainingType(Id: string, Name:string):Observable<boolean>{\r\n      var model = new cTrainingTypeItem();\r\n      model.Id = Id;\r\n      model.Name = Name;\r\n      return this.httpClient.post<boolean>(this.apiURL + 'TrainingTypeUpdate',model).pipe(\r\n          //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)\r\n        );\r\n    }\r\n    createTrainingType(Name:string):Observable<boolean>{\r\n      var model = new cTrainingTypeItem();\r\n      model.Name = Name;\r\n      return this.httpClient.post<boolean>(this.apiURL + 'TrainingTypeCreate',model).pipe(\r\n          //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)\r\n        );\r\n    }\r\n    //#endregion\r\n    //#region TrainingCategory\r\n    getTrainingCategoryGetByid(Id: string):Observable<ITrainingCategoryItem>{\r\n      var model = new ModelId();\r\n      model.Id = Id;\r\n      return this.httpClient.post<ITrainingCategoryItem>(this.apiURL + 'TrainingCategoryGetById',model).pipe(\r\n          //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)\r\n        );\r\n    }\r\n    getTrainingCategoryAll(currentPage: number, filterText: string):Observable<ITrainingCategory>{\r\n      \r\n        var model = new ModelPaging()\r\n        model.CurrentPage = currentPage;\r\n        model.filterText = filterText;\r\n        return this.httpClient.post<ITrainingCategory>(this.apiURL + 'TrainingCategoryListAll',model).pipe(\r\n            //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n            catchError(this.handleError)\r\n          );\r\n    }\r\n    getTrainingCategoryListByTrainingType(TrainingTypeId: string):Observable<ITrainingCategoryItem[]>{\r\n      var model = new ModelId()\r\n      model.Id = TrainingTypeId;\r\n      return this.httpClient.post<ITrainingCategoryItem[]>(this.apiURL + 'TrainingCategoryListByTrainingType',model).pipe(\r\n          //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)\r\n        );\r\n  }\r\n    setTrainingCategoryActivate(Id: string):Observable<boolean>{\r\n      var model = new ModelId();\r\n      model.Id = Id;\r\n      return this.httpClient.post<boolean>(this.apiURL + 'TrainingCategoryActivate',model).pipe(\r\n          //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)\r\n        );\r\n    }\r\n    setTrainingCategoryDeactivate(Id: string):Observable<boolean>{\r\n      var model = new ModelId();\r\n      model.Id = Id;\r\n      return this.httpClient.post<boolean>(this.apiURL + 'TrainingCategoryDeactivate',model).pipe(\r\n          //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)\r\n        );\r\n    }\r\n    updateTrainingCategory(Id: string, Name:string, TrainingTypeId:string):Observable<boolean>{\r\n      var model = new ModelTrainingCategory();\r\n      model.Id = Id;\r\n      model.Name = Name;\r\n      model.TrainingTypeId = TrainingTypeId;\r\n      return this.httpClient.post<boolean>(this.apiURL + 'TrainingCategoryUpdate',model).pipe(\r\n          //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)\r\n        );\r\n    }\r\n    createTrainingCategory(Name:string, TrainingTypeId:string):Observable<boolean>{\r\n      var model = new ModelTrainingCategory();\r\n      model.Name = Name;\r\n      model.TrainingTypeId = TrainingTypeId;\r\n      return this.httpClient.post<boolean>(this.apiURL + 'TrainingCategoryCreate',model).pipe(\r\n          //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)\r\n        );\r\n    }\r\n    //#endregion\r\n    //#region Course\r\n    setCourseActivate(TrainingCategoryId: string,Id: string):Observable<boolean>{\r\n      var model = new ModelCourse();\r\n      model.Id = Id;\r\n      model.TrainingCategoryId = TrainingCategoryId;\r\n      return this.httpClient.post<boolean>(this.apiURL + 'CourseActivate',model).pipe(\r\n          //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)\r\n        );\r\n    }\r\n    setCourseDeactivate(TrainingCategoryId: string,Id: string):Observable<boolean>{\r\n      var model = new ModelCourse();\r\n      model.Id = Id;\r\n      model.TrainingCategoryId = TrainingCategoryId;\r\n      return this.httpClient.post<boolean>(this.apiURL + 'CourseDeactivate',model).pipe(\r\n          //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)\r\n        );\r\n    }\r\n    createCourse(Id: string, Name:string):Observable<boolean>{\r\n      var model = new ModelCourse();\r\n      model.TrainingCategoryId = Id;\r\n      model.Name = Name;\r\n      return this.httpClient.post<boolean>(this.apiURL + 'CourseCreate',model).pipe(\r\n          //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)\r\n        );\r\n    }\r\n    updateCourse(TrainingCategoryId: string, Id: string, Name:string):Observable<boolean>{\r\n      var model = new ModelCourse();\r\n      model.Id = Id;\r\n      model.Name = Name;\r\n      model.TrainingCategoryId = TrainingCategoryId;\r\n      return this.httpClient.post<boolean>(this.apiURL + 'CourseUpdate',model).pipe(\r\n          //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)\r\n        );\r\n    }\r\n    //#endregion\r\n    //#region NGOType\r\n    getNGOTypeGetByid(Id: string):Observable<cNGOTypeItem>{\r\n      var model = new ModelId();\r\n      model.Id = Id;\r\n      return this.httpClient.post<cNGOTypeItem>(this.apiURL + 'NGOTypeGetById',model).pipe(\r\n          //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)\r\n        );\r\n    }\r\n    getNGOTypeAll(currentPage: number, filterText: string):Observable<cNGOTypeList>{\r\n      \r\n        var model = new ModelPaging()\r\n        model.CurrentPage = currentPage;\r\n        model.filterText = filterText;\r\n        return this.httpClient.post<cNGOTypeList>(this.apiURL + 'NGOTypeListAll',model).pipe(\r\n            //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n            catchError(this.handleError)\r\n          );\r\n    }\r\n    setNGOTypeActivate(Id: string):Observable<boolean>{\r\n      var model = new ModelId();\r\n      model.Id = Id;\r\n      return this.httpClient.post<boolean>(this.apiURL + 'NGOTypeActivate',model).pipe(\r\n          //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)\r\n        );\r\n    }\r\n    setNGOTypeDeactivate(Id: string):Observable<boolean>{\r\n      var model = new ModelId();\r\n      model.Id = Id;\r\n      return this.httpClient.post<boolean>(this.apiURL + 'NGOTypeDeactivate',model).pipe(\r\n          //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)\r\n        );\r\n    }\r\n    updateNGOType(Id: string, Name:string):Observable<boolean>{\r\n      var model = new cNGOTypeItem();\r\n      model.Id = Id;\r\n      model.Name = Name;\r\n      return this.httpClient.post<boolean>(this.apiURL + 'NGOTypeUpdate',model).pipe(\r\n          //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)\r\n        );\r\n    }\r\n    createNGOType(Name:string):Observable<boolean>{\r\n      var model = new cNGOTypeItem();\r\n      model.Name = Name;\r\n      return this.httpClient.post<boolean>(this.apiURL + 'NGOTypeCreate',model).pipe(\r\n          //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)\r\n        );\r\n    }\r\n    //#endregion\r\n    //#region City\r\n    getCityGetByid(Id: string):Observable<cCityItem>{\r\n      var model = new ModelId();\r\n      model.Id = Id;\r\n      return this.httpClient.post<cCityItem>(this.apiURL + 'CityGetById',model).pipe(\r\n          //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)\r\n        );\r\n    }\r\n    getCityListActive():Observable<cCityItem[]>{\r\n      return this.httpClient.get<cCityItem[]>(this.apiURL + 'CityListActive').pipe(\r\n          //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)\r\n        );\r\n    }\r\n    getCityAll(currentPage: number, filterText: string):Observable<cCityList>{\r\n      \r\n        var model = new ModelPaging()\r\n        model.CurrentPage = currentPage;\r\n        model.filterText = filterText;\r\n        return this.httpClient.post<cCityList>(this.apiURL + 'CityListAll',model).pipe(\r\n            //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n            catchError(this.handleError)\r\n          );\r\n    }\r\n    setCityActivate(Id: string):Observable<boolean>{\r\n      var model = new ModelId();\r\n      model.Id = Id;\r\n      return this.httpClient.post<boolean>(this.apiURL + 'CityActivate',model).pipe(\r\n          //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)\r\n        );\r\n    }\r\n    setCityDeactivate(Id: string):Observable<boolean>{\r\n      var model = new ModelId();\r\n      model.Id = Id;\r\n      return this.httpClient.post<boolean>(this.apiURL + 'CityDeactivate',model).pipe(\r\n          //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)\r\n        );\r\n    }\r\n    updateCity(Id: string, Name:string):Observable<boolean>{\r\n      var model = new cCityItem();\r\n      model.Id = Id;\r\n      model.Name = Name;\r\n      return this.httpClient.post<boolean>(this.apiURL + 'CityUpdate',model).pipe(\r\n          //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)\r\n        );\r\n    }\r\n    createCity(Name:string):Observable<boolean>{\r\n      var model = new cCityItem();\r\n      model.Name = Name;\r\n      return this.httpClient.post<boolean>(this.apiURL + 'CityCreate',model).pipe(\r\n          //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)\r\n        );\r\n    }\r\n    //#endregion\r\n    //#region Area\r\n    setAreaActivate(TrainingCategoryId: string,Id: string):Observable<boolean>{\r\n      var model = new ModelArea();\r\n      model.Id = Id;\r\n      model.CityId = TrainingCategoryId;\r\n      return this.httpClient.post<boolean>(this.apiURL + 'AreaActivate',model).pipe(\r\n          //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)\r\n        );\r\n    }\r\n    setAreaDeactivate(CityId: string,Id: string):Observable<boolean>{\r\n      var model = new ModelArea();\r\n      model.Id = Id;\r\n      model.CityId = CityId;\r\n      return this.httpClient.post<boolean>(this.apiURL + 'AreaDeactivate',model).pipe(\r\n          //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)\r\n        );\r\n    }\r\n    createArea(Id: string, Name:string):Observable<boolean>{\r\n      var model = new ModelArea();\r\n      model.CityId = Id;\r\n      model.Name = Name;\r\n      return this.httpClient.post<boolean>(this.apiURL + 'AreaCreate',model).pipe(\r\n          //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)\r\n        );\r\n    }\r\n    updateArea(CityId: string, Id: string, Name:string):Observable<boolean>{\r\n      var model = new ModelArea();\r\n      model.Id = Id;\r\n      model.Name = Name;\r\n      model.CityId = CityId;\r\n      return this.httpClient.post<boolean>(this.apiURL + 'AreaUpdate',model).pipe(\r\n          //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)\r\n        );\r\n    }\r\n    //#endregion\r\n    \r\n    private handleError(err: HttpErrorResponse) {\r\n        // in a real world app, we may send the server to some remote logging infrastructure\r\n        // instead of just logging it to the console\r\n        let errorMessage = '';\r\n        if (err.error instanceof ErrorEvent) {\r\n          // A client-side or network error occurred. Handle it accordingly.\r\n          errorMessage = `An error occurred: ${err.error.message}`;\r\n        } else {\r\n          // The backend returned an unsuccessful response code.\r\n          // The response body may contain clues as to what went wrong,\r\n          errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\r\n        }\r\n        //console.error(errorMessage);\r\n        return throwError(errorMessage);\r\n      }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Constants } from '../constants';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { ModelId } from '../interface/Model/ModelId.interface';\r\nimport { cEntityPartnerItem, cEntityPartnerList } from '../interface/Response/EntityPartner.class';\r\nimport { ModelPaging } from '../interface/Model/ModelPaging.interface';\r\nimport { cEntityTrainingCenterItem, cEntityTrainingCenterList } from '../interface/Response/EntityTrainingCenter.class';\r\nimport { ModelEntityTrainingCenter } from '../interface/Model/ModelEntityTrainingCenter.class';\r\nimport { cEntitySubPartnerItem, cEntitySubPartnerList } from '../interface/Response/EntitySubPartner.class';\r\nimport { ModelEntitySubPartner } from '../interface/Model/ModelEntitySubPartner.class';\r\nimport { ModelEntityMember } from '../interface/Model/ModelEntityMember.class';\r\nimport { ModelEntitySubEntityIds } from '../interface/Model/ModelEntitySubEntityIds.class';\r\nimport { cEntityPartnerReportsItem, cEntityPartnerReportsList } from '../interface/Response/PartnerReports.class';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ServiceEntityManagement {\r\n  private apiURL = Constants.apiRoot + 'EntityManagement/'\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n  //#region EntityPartner\r\n  getEntityPartnerGetByid(Id: string): Observable<cEntityPartnerItem> {\r\n    var model = new ModelId();\r\n    model.Id = Id;\r\n    return this.httpClient.post<cEntityPartnerItem>(this.apiURL + 'EntityPartnerGetById', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  \r\n  getEntityPartnerListActive(query: string = \"\"): Observable<cEntityPartnerItem[]> {\r\n    return this.httpClient.post<cEntityPartnerItem[]>(this.apiURL + 'EntityPartnerListActive', query).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  EntityPartnerReportListAll(currentPage: number, filterText: string): Observable<cEntityPartnerReportsList> {\r\n    var model = new ModelPaging()\r\n    model.CurrentPage = currentPage;\r\n    model.filterText = filterText;\r\n    return this.httpClient.post<cEntityPartnerReportsList>(this.apiURL + 'EntityPartnerReportListAll', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  getEntityPartnerAll(currentPage: number, filterText: string): Observable<cEntityPartnerList> {\r\n    var model = new ModelPaging()\r\n    model.CurrentPage = currentPage;\r\n    model.filterText = filterText;\r\n    return this.httpClient.post<cEntityPartnerList>(this.apiURL + 'EntityPartnerListAll', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  getEntityPartnerGetMy(): Observable<cEntityPartnerItem[]> {\r\n    return this.httpClient.get<cEntityPartnerItem[]>(this.apiURL + 'EntityPartnerGetMy').pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  setEntityPartnerActivate(Id: string): Observable<boolean> {\r\n    var model = new ModelId();\r\n    model.Id = Id;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'EntityPartnerActivate', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  setEntityPartnerDeactivate(Id: string): Observable<boolean> {\r\n    var model = new ModelId();\r\n    model.Id = Id;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'EntityPartnerDeactivate', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  updateEntityPartner(model: cEntityPartnerItem): Observable<boolean> {\r\n    // var model = new cEntityPartnerItem();\r\n    // model.Id = Id;\r\n    // model.Name = Name;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'EntityPartnerUpdate', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  createEntityPartner(model: cEntityPartnerItem): Observable<boolean> {\r\n    return this.httpClient.post<boolean>(this.apiURL + 'EntityPartnerCreate', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  memberAddEntityPartner(PartnerId: string, UserId: string): Observable<boolean> {\r\n    var model = new ModelEntityMember();\r\n    model.EntityId = PartnerId;\r\n    model.UserId = UserId;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'EntityPartnerAddMember', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  memberRemoveEntityPartner(PartnerId: string, UserId: string): Observable<boolean> {\r\n    var model = new ModelEntityMember();\r\n    model.EntityId = PartnerId;\r\n    model.UserId = UserId;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'EntityPartnerRemoveMember', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  //#endregion\r\n  //#region EntitySubPartner\r\n  getEntitySubPartnerGetByid(Id: string): Observable<cEntitySubPartnerItem> {\r\n    var model = new ModelId();\r\n    model.Id = Id;\r\n    return this.httpClient.post<cEntitySubPartnerItem>(this.apiURL + 'EntitySubPartnerGetById', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  getEntitySubPartnerListActive(query: string = \"\", PartnerIds: string[] = null): Observable<cEntitySubPartnerItem[]> {\r\n    return this.httpClient.post<cEntitySubPartnerItem[]>(this.apiURL + 'EntitySubPartnerListActive', { \"query\": query, \"PartnerIds\": PartnerIds }).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  getEntitySubPartnerAll(currentPage: number, filterText: string): Observable<cEntitySubPartnerList> {\r\n\r\n    var model = new ModelPaging()\r\n    model.CurrentPage = currentPage;\r\n    model.filterText = filterText;\r\n    return this.httpClient.post<cEntitySubPartnerList>(this.apiURL + 'EntitySubPartnerListAll', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  getEntitySubPartnerGetMyByPartnerId(partnerId: string): Observable<cEntitySubPartnerItem[]> {\r\n    var model = new ModelId();\r\n    model.Id = partnerId;\r\n    return this.httpClient.post<cEntitySubPartnerItem[]>(this.apiURL + 'EntitySubPartnerGetMyByPartnerId', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  getEntitySubPartnerGetMy(): Observable<cEntitySubPartnerItem[]> {\r\n    return this.httpClient.get<cEntitySubPartnerItem[]>(this.apiURL + 'EntitySubPartnerGetMy').pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  setEntitySubPartnerActivate(Id: string): Observable<boolean> {\r\n    var model = new ModelId();\r\n    model.Id = Id;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'EntitySubPartnerActivate', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  setEntitySubPartnerDeactivate(Id: string): Observable<boolean> {\r\n    var model = new ModelId();\r\n    model.Id = Id;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'EntitySubPartnerDeactivate', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  updateEntitySubPartner(model: ModelEntitySubPartner): Observable<boolean> {\r\n    return this.httpClient.post<boolean>(this.apiURL + 'EntitySubPartnerUpdate', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  createEntitySubPartner(model: ModelEntitySubPartner): Observable<boolean> {\r\n    return this.httpClient.post<boolean>(this.apiURL + 'EntitySubPartnerCreate', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  memberAddEntitySubPartner(PartnerId: string, UserId: string): Observable<boolean> {\r\n    var model = new ModelEntityMember();\r\n    model.EntityId = PartnerId;\r\n    model.UserId = UserId;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'EntitySubPartnerAddMember', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  memberRemoveEntitySubPartner(PartnerId: string, UserId: string): Observable<boolean> {\r\n    var model = new ModelEntityMember();\r\n    model.EntityId = PartnerId;\r\n    model.UserId = UserId;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'EntitySubPartnerRemoveMember', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  AddPartnerEntityToEntitySubPartner(PartnerId: string, SubPartnerId: string): Observable<boolean> {\r\n    var model = new ModelEntityMember();\r\n    //UserId is Partner Id, EntityId Is subparnterId\r\n    model.EntityId = SubPartnerId;\r\n    model.UserId = PartnerId;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'EntitySubPartnerAddEntityPartner', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  RemovePartnerEntityToEntitySubPartner(PartnerId: string, SubPartnerId: string): Observable<boolean> {\r\n    var model = new ModelEntityMember();\r\n    //UserId is Partner Id, EntityId Is subparnterId\r\n    model.EntityId = SubPartnerId;\r\n    model.UserId = PartnerId;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'EntitySubPartnerRemoveEntityPartner', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  //#endregion\r\n  //#region EntityTrainingCenter\r\n  // getEntityTrainingCenterGetByid(Id: string):Observable<cEntityTrainingCenterItem>{\r\n  //   var model = new ModelId();\r\n  //   model.Id = Id;\r\n  //   return this.httpClient.post<cEntityTrainingCenterItem>(this.apiURL + 'EntityTrainingCenterGetById',model).pipe(\r\n  //       //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n  //       catchError(this.handleError)\r\n  //     );\r\n  // }\r\n  // getEntityTrainingCenterListActive():Observable<cEntityTrainingCenterItem[]>{\r\n  //     return this.httpClient.get<cEntityTrainingCenterItem[]>(this.apiURL + 'EntityTrainingCenterListActive').pipe(\r\n  //         //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n  //         catchError(this.handleError)\r\n  //       );\r\n  //   }\r\n  //   getEntityTrainingCenterAll(currentPage: number, filterText: string):Observable<cEntityTrainingCenterList>{\r\n\r\n  //       var model = new ModelPaging()\r\n  //       model.CurrentPage = currentPage;\r\n  //       model.filterText = filterText;\r\n  //       return this.httpClient.post<cEntityTrainingCenterList>(this.apiURL + 'EntityTrainingCenterListAll',model).pipe(\r\n  //           //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n  //           catchError(this.handleError)\r\n  //         );\r\n  //   }\r\n  setEntityTrainingCenterActivate(PartnerId: string, Id: string): Observable<boolean> {\r\n    var model = new ModelEntitySubEntityIds();\r\n    model.MainEntityId = PartnerId;\r\n    model.SubEntityId = Id;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'EntityTrainingCenterActivate', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  setEntityTrainingCenterDeactivate(PartnerId: string, Id: string): Observable<boolean> {\r\n    var model = new ModelEntitySubEntityIds();\r\n    model.MainEntityId = PartnerId;\r\n    model.SubEntityId = Id;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'EntityTrainingCenterDeactivate', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  updateEntityTrainingCenter(model: ModelEntityTrainingCenter): Observable<boolean> {\r\n    return this.httpClient.post<boolean>(this.apiURL + 'EntityTrainingCenterUpdate', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  createEntityTrainingCenter(model: ModelEntityTrainingCenter): Observable<boolean> {\r\n    return this.httpClient.post<boolean>(this.apiURL + 'EntityTrainingCenterCreate', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  AddEntityTrainingCenterToSubPartner(TrainginCenterId: string, SubPartnerId: string): Observable<boolean> {\r\n    var model = new ModelEntitySubEntityIds();\r\n    model.MainEntityId = TrainginCenterId;\r\n    model.SubEntityId = SubPartnerId;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'AddEntityTrainingCenterToSubPartner', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  RemoveEntityTrainingCenterToSubPartner(TrainginCenterId: string, SubPartnerId: string): Observable<boolean> {\r\n    var model = new ModelEntitySubEntityIds();\r\n    model.MainEntityId = TrainginCenterId;\r\n    model.SubEntityId = SubPartnerId;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'RemoveEntityTrainingCenterToSubPartner', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  AddEntityTrainingCenterToSubPartnerByPartnerID(PartnerId: string, SubPartnerId: string): Observable<boolean> {\r\n    var model = new ModelEntitySubEntityIds();\r\n    model.MainEntityId = PartnerId;\r\n    model.SubEntityId = SubPartnerId;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'AddEntityTrainingCenterToSubPartnerByPartnerID', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  RemoveEntityTrainingCenterToSubPartnerByPartnerID(PartnerId: string, SubPartnerId: string): Observable<boolean> {\r\n    var model = new ModelEntitySubEntityIds();\r\n    model.MainEntityId = PartnerId;\r\n    model.SubEntityId = SubPartnerId;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'RemoveEntityTrainingCenterToSubPartnerByPartnerID', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  //#endregion\r\n  private handleError(err: HttpErrorResponse) {\r\n    // in a real world app, we may send the server to some remote logging infrastructure\r\n    // instead of just logging it to the console\r\n    let errorMessage = '';\r\n    if (err.error instanceof ErrorEvent) {\r\n      // A client-side or network error occurred. Handle it accordingly.\r\n      errorMessage = `An error occurred: ${err.error.message}`;\r\n    } else {\r\n      // The backend returned an unsuccessful response code.\r\n      // The response body may contain clues as to what went wrong,\r\n      errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\r\n    }\r\n    //console.error(errorMessage);\r\n    return throwError(errorMessage);\r\n  }\r\n}","import { Injectable } from '@angular/core';\nimport { Constants } from '../constants';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { cExamTemplateItem, cExamTemplateList } from '../interface/Response/ExamTemplate.class';\nimport { ModelId } from '../interface/Model/ModelId.interface';\nimport { tap, catchError } from 'rxjs/operators';\nimport { ModelPaging } from '../interface/Model/ModelPaging.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServiceExamTemplate {\n\n  private apiURL = Constants.apiRoot + 'ExamTemplate/'\n\n  constructor(private httpClient: HttpClient) { }\n  //#region ExamTemplate\n  getExamTemplateGetByid(Id: string): Observable<cExamTemplateItem> {\n    var model = new ModelId();\n    model.Id = Id;\n    return this.httpClient.post<cExamTemplateItem>(this.apiURL + 'ExamTemplateGetById', model).pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  ExamTemplateListActive(): Observable<cExamTemplateItem[]> {\n    \n    return this.httpClient.get<cExamTemplateItem[]>(this.apiURL + 'ExamTemplateListActive').pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  getExamTemplateAll(currentPage: number, filterText: string): Observable<cExamTemplateList> {\n    var model = new ModelPaging()\n    model.CurrentPage = currentPage;\n    model.filterText = filterText;\n    \n    return this.httpClient.post<cExamTemplateList>(this.apiURL + 'ExamTemplateListAll', model).pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  setExamTemplateActivate(Id: string): Observable<boolean> {\n    var model = new ModelId();\n    model.Id = Id;\n    return this.httpClient.post<boolean>(this.apiURL + 'ExamTemplateActivate', model).pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  setExamTemplateDeactivate(Id: string): Observable<boolean> {\n    var model = new ModelId();\n    model.Id = Id;\n    return this.httpClient.post<boolean>(this.apiURL + 'ExamTemplateDeactivate', model).pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  updateExamTemplate(model): Observable<boolean> {\n    return this.httpClient.post<boolean>(this.apiURL + 'ExamTemplateUpdate', model).pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  createExamTemplate(model): Observable<boolean> {\n    return this.httpClient.post<boolean>(this.apiURL + 'ExamTemplateCreate', model).pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  private handleError(err: HttpErrorResponse) {\n    // in a real world app, we may send the server to some remote logging infrastructure\n    // instead of just logging it to the console\n    let errorMessage = '';\n    if (err.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      errorMessage = `An error occurred: ${err.error.message}`;\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\n    }\n    //console.error(errorMessage);\n    return throwError(errorMessage);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { Constants } from '../constants';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport {  cExamQuestionList, cQuestionItemTemplate } from '../interface/Model/ModelQuestions.class';\r\nimport { ModelId } from '../interface/Model/ModelId.interface';\r\nimport { tap, catchError } from 'rxjs/operators';\r\nimport { ModelPaging } from '../interface/Model/ModelPaging.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServiceExam {\r\n\r\n  private apiURL = Constants.apiRoot + 'Exam/'\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n  takeExam(Id: string): Observable<cExamQuestionList> {\r\n    var model = new ModelId();\r\n    model.Id = Id;\r\n    return this.httpClient.post<cExamQuestionList>(this.apiURL + 'TakeExam', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  SubmitExam(examId:string, questions:cQuestionItemTemplate[]){\r\n    var model = new cExamQuestionList();\r\n    model.questions = questions;\r\n    model.ExamId = examId;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'SubmitExam', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  private handleError(err: HttpErrorResponse) {\r\n    // in a real world app, we may send the server to some remote logging infrastructure\r\n    // instead of just logging it to the console\r\n    let errorMessage = '';\r\n    if (err.error instanceof ErrorEvent) {\r\n      // A client-side or network error occurred. Handle it accordingly.\r\n      errorMessage = `An error occurred: ${err.error.message}`;\r\n    } else {\r\n      // The backend returned an unsuccessful response code.\r\n      // The response body may contain clues as to what went wrong,\r\n      errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\r\n    }\r\n    //console.error(errorMessage);\r\n    return throwError(errorMessage);\r\n  }\r\n}\r\n","import { Injectable, OnInit } from '@angular/core';\r\nimport { AuthService } from '../core/auth-service.component';\r\nimport { UserProfile } from '../model/user-profile';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { AuthContext } from '../model/auth-context';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServiceLoginUser implements OnInit {\r\n  AuthContext: AuthContext;\r\n  isLoggedIn = false;\r\n  userName: string;\r\n  userRole: string;\r\n  IsAdmin: boolean;\r\n  IsPartner: boolean;\r\n  IsSubPartner: boolean;\r\n  IsTrainer: boolean;\r\n  IsTrainee: boolean;\r\n\r\n  private _userName = new Subject<string>();\r\n  UserNameChanged = this._userName.asObservable();\r\n\r\n  private _userRole = new Subject<string>();\r\n  UserRoleChanged = this._userRole.asObservable();\r\n\r\n  private _userIsLoggedIn = new Subject<boolean>();\r\n  UserIsLoggedInChanged = this._userIsLoggedIn.asObservable();\r\n\r\n  private _userIsAdmin = new Subject<boolean>();\r\n  UserIsAdminChanged = this._userIsAdmin.asObservable();\r\n\r\n  private _userIsPartner = new Subject<boolean>();\r\n  UserIsPartnerChanged = this._userIsPartner.asObservable();\r\n\r\n  private _userIsSubPartner = new Subject<boolean>();\r\n  UserIsSubPartnerChanged = this._userIsSubPartner.asObservable();\r\n\r\n  private _userIsTrainer = new Subject<boolean>();\r\n  UserIsTrainerChanged = this._userIsTrainer.asObservable();\r\n\r\n  private _userIsTrainee = new Subject<boolean>();\r\n  UserIsTraineeChanged = this._userIsTrainee.asObservable();\r\n\r\n  constructor(private _authService: AuthService) {\r\n    this._authService.loginChanged.subscribe(loggedIn => {\r\n      this.isLoggedIn = loggedIn;\r\n      this._userIsLoggedIn.next(loggedIn);\r\n    });\r\n    this._authService.authContextChanged.subscribe(obj => {\r\n      this.AuthContext = obj;\r\n      if (this.isLoggedIn && this.AuthContext) {\r\n        this.userName = obj.userProfile.FullName;\r\n        this.userRole = obj.userProfile.Role;\r\n        this.IsAdmin = obj.isAdmin;\r\n        this.IsPartner = obj.isPartner;\r\n        this.IsSubPartner = obj.isSubPartner;\r\n        this.IsTrainer = obj.isTrainer;\r\n        this.IsTrainee = obj.isTrainee;\r\n\r\n        this._userName.next(obj.userProfile.FullName);\r\n        this._userRole.next(obj.userProfile.Role);\r\n        this._userIsAdmin.next(obj.isAdmin);\r\n        this._userIsPartner.next(obj.isPartner);\r\n        this._userIsSubPartner.next(obj.isSubPartner);\r\n        this._userIsTrainer.next(obj.isTrainer);\r\n        this._userIsTrainee.next(obj.isTrainee);\r\n      }\r\n    });\r\n  }\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n}\r\n","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Constants } from '../constants';\nimport { ModelId } from '../interface/Model/ModelId.interface';\nimport { ModelPaging } from '../interface/Model/ModelPaging.interface';\nimport { cLogoPartnerItem, cLogoPartnerList } from '../interface/Response/LogoPartner.class';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServiceLogoPartner {\n\n  private apiURL = Constants.apiRoot + 'LogoPartner/'\n\n  constructor(private httpClient: HttpClient) { }\n  getLogoPartnerGetByid(Id: string): Observable<cLogoPartnerItem> {\n    var model = new ModelId();\n    model.Id = Id;\n    return this.httpClient.post<cLogoPartnerItem>(this.apiURL + 'LogoPartnerGetById', model).pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  getLogoPartnerListActive(): Observable<cLogoPartnerItem[]> {\n    return this.httpClient.get<cLogoPartnerItem[]>(this.apiURL + 'LogoPartnerListActive').pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  getLogoPartnerAll(currentPage: number, filterText: string): Observable<cLogoPartnerList> {\n\n    var model = new ModelPaging()\n    model.CurrentPage = currentPage;\n    model.filterText = filterText;\n    return this.httpClient.post<cLogoPartnerList>(this.apiURL + 'LogoPartnerListAll', model).pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  setLogoPartnerActivate(Id: string): Observable<boolean> {\n    var model = new ModelId();\n    model.Id = Id;\n    return this.httpClient.post<boolean>(this.apiURL + 'LogoPartnerActivate', model).pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  setLogoPartnerDeactivate(Id: string): Observable<boolean> {\n    var model = new ModelId();\n    model.Id = Id;\n    return this.httpClient.post<boolean>(this.apiURL + 'LogoPartnerDeactivate', model).pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  createLogoPartner(WebsiteURL: string, fileToUpload: File): Observable<boolean> {\n    const formData = new FormData();\n    formData.append('file', fileToUpload, fileToUpload.name);\n\n    return this.httpClient.post<boolean>(this.apiURL + 'LogoPartnerCreate?WebsiteURL=' + WebsiteURL , formData).pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  updateLogoPartner(Id: string, WebsiteURL: string, fileToUpload: File): Observable<boolean> {\n    const formData = new FormData();\n    formData.append('file', fileToUpload, fileToUpload.name);\n    return this.httpClient.post<boolean>(this.apiURL + 'LogoPartnerUpdate?WebsiteURL=' + WebsiteURL + \"&Id=\" + Id, formData).pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  private handleError(err: HttpErrorResponse) {\n    // in a real world app, we may send the server to some remote logging infrastructure\n    // instead of just logging it to the console\n    let errorMessage = '';\n    if (err.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      errorMessage = `An error occurred: ${err.error.message}`;\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\n    }\n    //console.error(errorMessage);\n    return throwError(errorMessage);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Constants } from '../constants';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { cQuestionItem } from '../interface/Model/ModelQuestions.class';\nimport { ModelId } from '../interface/Model/ModelId.interface';\nimport { tap, catchError } from 'rxjs/operators';\nimport { cContentDataItem } from '../interface/Response/ContentData.class';\nimport { cEntityPartnerItem } from '../interface/Response/EntityPartner.class';\nimport { ConfigForm } from '../Enum/ConfigForm.enum';\nimport { FieldConfig } from '../common/ConfigForms/field.interface';\nimport { ModelConfigFormGet } from '../interface/Model/ModelConfigFormGet.class';\nimport { StatsCount } from '../interface/Response/StatsCount.class';\nimport { ModelLanguage } from '../interface/Model/ModelLanguage.class';\nimport { LanguageType } from '../Enum/LanguageType.enum';\nimport { cLogoPartnerItem } from '../interface/Response/LogoPartner.class';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServiceMisc {\n\n  private apiURL = Constants.apiRoot + 'Misc/'\n\n  constructor(private httpClient: HttpClient) { }\n  SetLanguage(strLang: string): Observable<cQuestionItem> {\n    var model = new ModelLanguage()\n    switch (strLang){\n      case \"en\" : model.Lang = LanguageType.English;\n      break;\n      case \"ar\" : model.Lang = LanguageType.Arabic;\n      break;\n      case \"fr\" : model.Lang = LanguageType.French;\n      break;\n    }\n    return this.httpClient.post<cQuestionItem>(this.apiURL + 'SetLanguage', model).pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  RequestRegister(model): Observable<cQuestionItem> {\n    return this.httpClient.post<cQuestionItem>(this.apiURL + 'RequestRegister', model).pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  ContentDataOneGetByTypeId(type): Observable<cContentDataItem> {\n    var model = new ModelId();\n    model.Id = <string>type;\n    return this.httpClient.post<cContentDataItem>(this.apiURL + 'ContentDataOneGetByTypeId', model).pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  getEntityPartnerListAllActiveAnonymous(): Observable<cEntityPartnerItem[]> {\n    return this.httpClient.get<cEntityPartnerItem[]>(this.apiURL + 'EntityPartnerListAllActiveAnonymous').pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  GetByType(type: ConfigForm): Observable<FieldConfig[]> {\n    var model = new ModelConfigFormGet();\n    model.type = type;\n    return this.httpClient.post<FieldConfig[]>(this.apiURL + 'GetByType', model).pipe(\n      tap(data => {\n\n        //console.log('All: ' + JSON.stringify(data));\n      }),\n      catchError(this.handleError)\n    );\n  }\n  GetStats(): Observable<StatsCount> {\n    return this.httpClient.get<StatsCount>(this.apiURL + 'GetStats').pipe(\n      tap(data => {\n\n        //console.log('All: ' + JSON.stringify(data));\n      }),\n      catchError(this.handleError)\n    );\n  }\n  getLogoPartnerListActive(): Observable<cLogoPartnerItem[]> {\n    return this.httpClient.get<cLogoPartnerItem[]>(this.apiURL + 'LogoPartnerListActive').pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  private handleError(err: HttpErrorResponse) {\n    // in a real world app, we may send the server to some remote logging infrastructure\n    // instead of just logging it to the console\n    let errorMessage = '';\n    if (err.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      errorMessage = `An error occurred: ${err.error.message}`;\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\n    }\n    //console.error(errorMessage);\n    return throwError(errorMessage);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { ShowMessage } from '../interface/Model/ModelShowMessage.class';\r\nimport { Observable, Subject, observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServiceShowMessage {\r\n\r\n  constructor() { }\r\n  private _msgSubject = new Subject<ShowMessage>();\r\n\r\n  msgChanged = this._msgSubject.asObservable();\r\n  \r\n  sendMessage(message: ShowMessage) {\r\n      this._msgSubject.next(message);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ServiceGeneric } from './GenericService.service';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { cTraineeItem, cTraineeList } from '../interface/Response/Trainee.class';\r\nimport { ModelTrainee } from '../interface/Model/ModelTrainee.class';\r\nimport { ModelTraineeTraining } from '../interface/Model/ModelTraineeTraining.class';\r\nimport { Observable } from 'rxjs';\r\nimport { tap, catchError } from 'rxjs/operators';\r\nimport { ModelPaging } from '../interface/Model/ModelPaging.interface';\r\nimport { MyTraining } from '../interface/Response/MyTraining.class';\r\nimport { ModelId } from '../interface/Model/ModelId.interface';\r\nimport { ModelUserProfile } from '../interface/Model/ModelUserProfile.class';\r\nimport { ImportTrainee } from '../interface/Response/ImportTrainee.class';\r\n//import { saveAs } from 'file-saver/FileSaver';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServiceTrainee extends ServiceGeneric<cTraineeItem, cTraineeList, ModelTrainee> {\r\n  constructor(protected httpClient: HttpClient) {\r\n    super(\"Trainee/\", httpClient);\r\n  }\r\n  RemoveTraining(trainingId: string, traineeId: string): Observable<boolean> {\r\n    var model = new ModelTraineeTraining();\r\n    model.TraineeId = traineeId;\r\n    model.TrainingId = trainingId;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'RemoveTraining', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  AddTraining(trainingId: string, traineeId: string): Observable<boolean> {\r\n    var model = new ModelTraineeTraining();\r\n    model.TraineeId = traineeId;\r\n    model.TrainingId = trainingId;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'AddTraining', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  ListSearch(filterText: string): Observable<cTraineeItem[]> {\r\n    var model = new ModelPaging()\r\n    model.CurrentPage = 1;\r\n    model.filterText = filterText;\r\n    return this.httpClient.post<cTraineeItem[]>(this.apiURL + 'ListSearch', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  GetTraineeTraining(Id: string): Observable<MyTraining> {\r\n    var model = new ModelId()\r\n    model.Id = Id;\r\n    return this.httpClient.post<MyTraining>(this.apiURL + 'GetTraineeTraining', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  GetMyTraining(): Observable<MyTraining> {\r\n    return this.httpClient.get<MyTraining>(this.apiURL + 'GetMyTraining').pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  TraineeRegister(trainingId: string): Observable<boolean> {\r\n    var model = new ModelId();\r\n    model.Id = trainingId;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'TraineeRegister', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  ApproveTraineeRegister(model): Observable<boolean> {\r\n\r\n    return this.httpClient.post<boolean>(this.apiURL + 'ApproveTraineeRegister', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  ImportTrainee(fileToUpload: File, TrainingId: string): Observable<ImportTrainee> {\r\n    const formData = new FormData();\r\n    formData.append('file', fileToUpload, fileToUpload.name);\r\n    return this.httpClient.post<ImportTrainee>(this.apiURL + 'ImportTrainee?TrainingId=' + TrainingId, formData).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  DownloadTrainingCertificate(trainingId: string): Observable<string> {\r\n    var model = new ModelId();\r\n    model.Id = trainingId;\r\n    return this.httpClient.post<string>(this.apiURL + 'DownloadTrainingCertificate', model).pipe(\r\n      //tap(data => saveAs(data, \"CourseCertificates.zip\")),\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  ResendActivationLink(Email: string): Observable<boolean> {\r\n    var model = new ModelUserProfile();\r\n    model.Email = Email;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'ResendActivationLink', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  ResendPasswordLink(Email: string): Observable<boolean> {\r\n    var model = new ModelUserProfile();\r\n    model.Email = Email;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'ResendPasswordLink', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  getMyProfile(): Observable<cTraineeItem> {\r\n    return this.httpClient.get<cTraineeItem>(this.apiURL + 'getMyProfile').pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  updateMyProfile(model: ModelTrainee): Observable<boolean> {\r\n    return this.httpClient.post<boolean>(this.apiURL + 'updateMyProfile', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { cTrainingItem, cTrainingList, cAttendance } from '../interface/Response/Training.class';\r\nimport { ModelTraining } from '../interface/Model/ModelTraining.class';\r\nimport { ServiceGeneric } from './GenericService.service';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { tap, catchError } from 'rxjs/operators';\r\nimport { ModelFilterTraining } from '../interface/Model/ModelFilterTraining.class';\r\nimport { Observable } from 'rxjs';\r\nimport { ModelId } from '../interface/Model/ModelId.interface';\r\nimport { ModelTraineeTraining } from '../interface/Model/ModelTraineeTraining.class';\r\nimport { ModelSaveAttendnace } from '../interface/Model/ModelSaveAttendance.class';\r\nimport { ModelEntitySubEntityIds } from '../interface/Model/ModelEntitySubEntityIds.class';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServiceTraining extends ServiceGeneric<cTrainingItem, cTrainingList, ModelTraining> {\r\n  constructor(protected httpClient: HttpClient) {\r\n    super(\"Training/\", httpClient);\r\n  }\r\n  ExportTrainingTrainee(Id:string): Observable<Blob> {\r\n    var model = new ModelId();\r\n        model.Id = Id;\r\n    return this.httpClient.post<Blob>(this.apiURL + 'ExportTrainingTrainee', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  SaveExamTemplate(model: ModelEntitySubEntityIds): Observable<boolean> {\r\n    return this.httpClient.post<boolean>(this.apiURL + 'SaveExamTemplate', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  ExportTraining(model: ModelFilterTraining): Observable<Blob> {\r\n    return this.httpClient.post<Blob>(this.apiURL + 'ExportTraining', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  searchTraining(model: ModelFilterTraining): Observable<cTrainingList> {\r\n    return this.httpClient.post<cTrainingList>(this.apiURL + 'ListAll', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  SetAdminApproved(trainingId: string): Observable<cTrainingList> {\r\n    var model = new ModelId();\r\n    model.Id = trainingId;\r\n    return this.httpClient.post<cTrainingList>(this.apiURL + 'SetAdminApproved', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  SetConfirmed1(trainingId: string): Observable<cTrainingList> {\r\n    var model = new ModelId();\r\n    model.Id = trainingId;\r\n    return this.httpClient.post<cTrainingList>(this.apiURL + 'SetConfirmed1', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  SetConfirmed2(trainingId: string): Observable<cTrainingList> {\r\n    var model = new ModelId();\r\n    model.Id = trainingId;\r\n    return this.httpClient.post<cTrainingList>(this.apiURL + 'SetConfirmed2', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  SaveAttendnace(trainingId: string, att: cAttendance) {\r\n    var model = new ModelSaveAttendnace();\r\n    model.trainingId = trainingId;\r\n    model.Attendances = att;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'SaveAttendnace', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Constants } from '../constants';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { ModelTranslateList } from '../interface/Model/ModelTranslateList.class';\nimport { Observable, throwError } from 'rxjs';\nimport { TranslateList } from '../interface/Response/TranslateList.classl';\nimport { tap, catchError } from 'rxjs/operators';\nimport { TranslateType } from '../Enum/TranslateType.enum';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServiceTranslateList {\n\n  private apiURL = Constants.apiRoot + 'Translate/'\n\n  constructor(private httpClient: HttpClient) { }\n  \n  ListTranslationByType(model: ModelTranslateList): Observable<TranslateList> {\n    return this.httpClient.post<TranslateList>(this.apiURL + 'ListTranslationByType', model).pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  SaveListTranslation(model: TranslateList): Observable<TranslateList> {\n    return this.httpClient.post<TranslateList>(this.apiURL + 'SaveListTranslation', model).pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  private handleError(err: HttpErrorResponse) {\n    // in a real world app, we may send the server to some remote logging infrastructure\n    // instead of just logging it to the console\n    let errorMessage = '';\n    if (err.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      errorMessage = `An error occurred: ${err.error.message}`;\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\n    }\n    //console.error(errorMessage);\n    return throwError(errorMessage);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { ModelId } from '../interface/Model/ModelId.interface';\r\nimport { tap, catchError } from 'rxjs/operators';\r\nimport { cUserProfileItem, cUserProfileList, cUserProfileTrainerCertificateItem, cUserProfileTrainerCertificateItemWithProfile, cUserProfileTrainerCertificateList } from '../interface/Response/UserProfile.class';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { HttpErrorResponse, HttpClient } from '@angular/common/http';\r\nimport { Constants } from '../constants';\r\nimport { ModelPaging } from '../interface/Model/ModelPaging.interface';\r\nimport { ModelUserProfile } from '../interface/Model/ModelUserProfile.class';\r\nimport { ServiceGeneric } from './GenericService.service';\r\nimport { ModelAccountSearch } from '../interface/Model/ModelAccountSearch.class';\r\nimport { ModelMyAssignedAccount } from '../interface/Model/ModelMyAssignedAccount.class';\r\nimport { ModelTrainerCertificateApproval } from '../interface/Model/ModelTrainerCertificateApproval.class';\r\nimport { ModelChangeEmail } from '../interface/Model/ModelChangeEmail.class';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServiceUserProfile extends ServiceGeneric<cUserProfileItem, cUserProfileList, ModelUserProfile> {\r\n  constructor(protected httpClient: HttpClient) {\r\n    super(\"AccountManagement/\", httpClient);\r\n  }\r\n  getSearch(currentPage: number, filterText: string, filterType: string): Observable<cUserProfileList> {\r\n\r\n    var model = new ModelAccountSearch()\r\n    model.CurrentPage = currentPage;\r\n    model.filterText = filterText;\r\n    model.filterType = +filterType;\r\n\r\n    return this.httpClient.post<cUserProfileList>(this.apiURL + 'ListAll', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  GetTrainerCertificate(currentPage: number, filterText: string): Observable<cUserProfileTrainerCertificateList> {\r\n\r\n    var model = new ModelPaging()\r\n    model.CurrentPage = currentPage;\r\n    model.filterText = filterText;\r\n\r\n    return this.httpClient.post<cUserProfileTrainerCertificateList>(this.apiURL + 'GetTrainerCertificate', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  UpdateUserEmail(model: ModelChangeEmail): Observable<boolean> {\r\n\r\n    return this.httpClient.post<boolean>(this.apiURL + 'UpdateUserEmail', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  CertificateApprove(model: ModelTrainerCertificateApproval): Observable<boolean> {\r\n\r\n    return this.httpClient.post<boolean>(this.apiURL + 'CertificateApprove', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  GetMyTrainersBySubPartnerId(subPartnerId: string): Observable<cUserProfileItem[]> {\r\n    var model = new ModelId();\r\n    model.Id = subPartnerId;\r\n    return this.httpClient.post<cUserProfileItem[]>(this.apiURL + 'GetMyTrainersBySubPartnerId', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  GetMyTrainers(): Observable<cUserProfileItem[]> {\r\n    return this.httpClient.get<cUserProfileItem[]>(this.apiURL + 'GetMyTrainers').pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  GetPartnerSearch(filterText: string, currentPage: number = 1): Observable<cUserProfileItem[]> {\r\n    var model = new ModelPaging()\r\n    model.CurrentPage = currentPage;\r\n    model.filterText = filterText;\r\n    return this.httpClient.post<cUserProfileItem[]>(this.apiURL + 'GetPartnerSearch', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  GetSubPartnerSearch(filterText: string, currentPage: number = 1): Observable<cUserProfileItem[]> {\r\n    var model = new ModelPaging()\r\n    model.CurrentPage = currentPage;\r\n    model.filterText = filterText;\r\n    return this.httpClient.post<cUserProfileItem[]>(this.apiURL + 'GetSubPartnerSearch', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  AddAccountToMyAssignedToAccount(UserId: string, AccountId, type: number): Observable<boolean> {\r\n    var model = new ModelMyAssignedAccount()\r\n    model.UserId = UserId;\r\n    model.AccountId = AccountId;\r\n    model.Type = type;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'AddAccountToMyAssignedToAccount', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  RemoveAccountToMyAssignedToAccount(UserId: string, AccountId: string, type: number): Observable<boolean> {\r\n    var model = new ModelMyAssignedAccount()\r\n    model.UserId = UserId;\r\n    model.AccountId = AccountId;\r\n    model.Type = type;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'RemoveAccountToMyAssignedToAccount', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  ResendActivationLink(Email: string): Observable<boolean> {\r\n    var model = new ModelUserProfile();\r\n    model.Email = Email;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'ResendActivationLink', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  ResendPasswordLink(Email: string): Observable<boolean> {\r\n    var model = new ModelUserProfile();\r\n    model.Email = Email;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'ResendPasswordLink', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  MyTrainerCertificate(Id: string): Observable<cUserProfileTrainerCertificateItemWithProfile> {\r\n    var model = new ModelId();\r\n    model.Id = Id;\r\n    return this.httpClient.post<cUserProfileTrainerCertificateItemWithProfile>(this.apiURL + 'MyTrainerCertificate', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n}","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { cEntitySubPartnerItem } from 'src/app/interface/Response/EntitySubPartner.class';\r\nimport { cUserProfileItem } from 'src/app/interface/Response/UserProfile.class';\r\nimport { ServiceUserProfile } from 'src/app/services/userprofile.service';\r\nimport { ServiceEntityManagement } from 'src/app/services/entitymanagement.service';\r\nimport { cEntityPartnerItem } from 'src/app/interface/Response/EntityPartner.class';\r\nimport { DynamicFormComponent } from 'src/app/common/ConfigForms/components/dynamic-form/dynamic-form.component';\r\nimport { FieldConfig, Validator } from 'src/app/common/ConfigForms/field.interface';\r\nimport { ServiceConfigForm } from 'src/app/services/config-form.service';\r\nimport { ConfigForm } from 'src/app/Enum/ConfigForm.enum';\r\nimport { cTraineeItem } from 'src/app/interface/Response/Trainee.class';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-test',\r\n  templateUrl: './test.component.html',\r\n  styleUrls: ['./test.component.scss']\r\n})\r\nexport class TestComponent extends baseComponent implements OnInit {\r\n  modelObj: cTraineeItem = new cTraineeItem();\r\n@ViewChild(DynamicFormComponent) dyForm: DynamicFormComponent;\r\nregConfig: FieldConfig[] = [];\r\n\r\n  constructor(private BLServiceUserProfile:ServiceUserProfile,\r\n    private BLServiceConfigForm: ServiceConfigForm,\r\n        private BLserviceEntity:ServiceEntityManagement,\r\n        BLServiceShowMessage: ServiceShowMessage,\r\n        BLServiceLoginUser: ServiceLoginUser,BLTranslate: TranslateService,){\r\n          super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\r\n    }\r\n    \r\n  ngOnInit() {\r\n    this.InitDynamicForm();\r\n  }\r\n  InitDynamicForm() {\r\n    this.BLServiceConfigForm.GetByType(ConfigForm.Trainee).subscribe({\r\n      next: lst => {\r\n        this.regConfig = <FieldConfig[]>[];\r\n        lst.forEach(item => {\r\n\r\n          var obj = new FieldConfig();\r\n\r\n          obj.inputType = item.inputType;\r\n          obj.label = item.label;\r\n          obj.name = item.name;\r\n          obj.options = item.options;\r\n          obj.order = item.order;\r\n          obj.type = item.type;\r\n          obj.validations.push(new Validator(item.label));\r\n          if (this.modelObj.data)\r\n            obj.value = this.modelObj.data[item.name];\r\n\r\n          this.regConfig.push(obj);\r\n        });\r\n        this.dyForm.fields = this.regConfig;\r\n        this.dyForm .createControl();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n\r\n  }\r\n  loadData(){\r\n    \r\n  }\r\n}\r\n","<section class=\"my-5\">\r\n    <div class=\"container\" >\r\n    \r\n       <p>test works!</p>\r\n       <div class=\"row\">\r\n        <!-- <cust-add-trainee  [IsCreate]=\"true\" (Reload)=\"loadData()\"></cust-add-trainee> -->\r\n    </div>\r\n\r\n    </div>\r\n</section>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TestComponent } from './test.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { SharedModule } from 'src/app/common/sharedmodule.module';\r\n\r\n\r\n// RECOMMENDED\r\n\r\n// NOT RECOMMENDED (Angular 9 doesn't support this kind of import)\r\n//import { TypeaheadModule } from 'ngx-bootstrap';\r\n\r\n@NgModule({\r\n  declarations: [TestComponent],\r\n  imports: [\r\n    SharedModule,    \r\n    RouterModule.forChild([\r\n      { path: 'Test/Test', component: TestComponent}\r\n    ])\r\n  ],providers: [\r\n  ]\r\n})\r\nexport class TestModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}