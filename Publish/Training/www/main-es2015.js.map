{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/Account/account.module.ts","./src/app/Account/account/account.component.ts","./src/app/Account/account/account.component.html","./src/app/Account/trainee/trainee.component.ts","./src/app/Account/trainee/trainee.component.html","./src/app/Account/trainer-certificate/trainer-certificate.component.ts","./src/app/Account/trainer-certificate/trainer-certificate.component.html","./src/app/Certificates/category/category.component.ts","./src/app/Certificates/category/category.component.html","./src/app/Certificates/generics/generics.component.ts","./src/app/Certificates/generics/generics.component.html","./src/app/Certificates/trainer-approval/trainer-approval.component.ts","./src/app/Certificates/trainer-approval/trainer-approval.component.html","./src/app/Certificates/trainingcenter/trainingcenter.component.ts","./src/app/Certificates/trainingcenter/trainingcenter.component.html","./src/app/Certificates/verify/verify.component.ts","./src/app/Certificates/verify/verify.component.html","./src/app/Content/about-edit/about-edit.component.ts","./src/app/Content/about-edit/about-edit.component.html","./src/app/Content/info-edit/info-edit.component.ts","./src/app/Content/info-edit/info-edit.component.html","./src/app/Content/partner-logo/partner-logo.component.ts","./src/app/Content/partner-logo/partner-logo.component.html","./src/app/Content/policy-edit/policy-edit.component.ts","./src/app/Content/policy-edit/policy-edit.component.html","./src/app/Content/site-logo/site-logo.component.ts","./src/app/Content/site-logo/site-logo.component.html","./src/app/Content/term-edit/term-edit.component.ts","./src/app/Content/term-edit/term-edit.component.html","./src/app/DataManagement/Course/Course-list.component.ts","./src/app/DataManagement/Course/Course-list.component.html","./src/app/DataManagement/TrainingCategory/TrainingCategory-list.component.ts","./src/app/DataManagement/TrainingCategory/TrainingCategory-list.component.html","./src/app/DataManagement/area/area.component.ts","./src/app/DataManagement/area/area.component.html","./src/app/DataManagement/city/city.component.ts","./src/app/DataManagement/city/city.component.html","./src/app/DataManagement/data-management.module.ts","./src/app/DataManagement/ngotype/ngotype.component.ts","./src/app/DataManagement/ngotype/ngotype.component.html","./src/app/DataManagement/training-type/training-type.component.ts","./src/app/DataManagement/training-type/training-type.component.html","./src/app/EntityManagement/entity-management.module.ts","./src/app/EntityManagement/partner-reports/partner-reports.component.ts","./src/app/EntityManagement/partner-reports/partner-reports.component.html","./src/app/EntityManagement/partner/partner.component.ts","./src/app/EntityManagement/partner/partner.component.html","./src/app/EntityManagement/sub-partner/sub-partner.component.ts","./src/app/EntityManagement/sub-partner/sub-partner.component.html","./src/app/EntityManagement/training-center/training-center.component.ts","./src/app/EntityManagement/training-center/training-center.component.html","./src/app/Enum/CertificateType.enum.ts","./src/app/Enum/ConfigForm.enum.ts","./src/app/Enum/ContentData.enum.ts","./src/app/Enum/LanguageType.enum.ts","./src/app/Enum/TranslateType.enum.ts","./src/app/Enum/UserType.enum.ts","./src/app/Exam/take-exam/take-exam.component.ts","./src/app/Exam/take-exam/take-exam.component.html","./src/app/Exam/templates/templates.component.ts","./src/app/Exam/templates/templates.component.html","./src/app/Home/about/about.component.ts","./src/app/Home/about/about.component.html","./src/app/Home/policy/policy.component.ts","./src/app/Home/policy/policy.component.html","./src/app/Questions/create/create.component.ts","./src/app/Questions/create/create.component.html","./src/app/Questions/list/list.component.ts","./src/app/Questions/list/list.component.html","./src/app/Request/register/register.component.ts","./src/app/Request/register/register.component.html","./src/app/Training/attendance/attendance.component.ts","./src/app/Training/attendance/attendance.component.html","./src/app/Training/my-trainings/my-trainings.component.ts","./src/app/Training/my-trainings/my-trainings.component.html","./src/app/Training/trainee-list/trainee-list.component.ts","./src/app/Training/trainee-list/trainee-list.component.html","./src/app/Training/training-list/training-list.component.ts","./src/app/Training/training-list/training-list.component.html","./src/app/Training/training.module.ts","./src/app/Translate/translate-list/translate-list.component.ts","./src/app/Translate/translate-list/translate-list.component.html","./src/app/admin/admin-routing.module.ts","./src/app/admin/admin.module.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/common/ConfigForms/AdminConfig/create-form/create-form.component.ts","./src/app/common/ConfigForms/AdminConfig/create-form/create-form.component.html","./src/app/common/ConfigForms/components/SelectMulti/selectmulti.component.ts","./src/app/common/ConfigForms/components/button/button.component.ts","./src/app/common/ConfigForms/components/dynamic-field/dynamic-field.directive.ts","./src/app/common/ConfigForms/components/dynamic-form/dynamic-form.component.ts","./src/app/common/ConfigForms/components/input/input.component.ts","./src/app/common/ConfigForms/components/select/select.component.ts","./src/app/common/ConfigForms/field.interface.ts","./src/app/common/FormControls/auto-compelet-list-generic/auto-compelet-list-generic.component.ts","./src/app/common/FormControls/auto-compelet-list-generic/auto-compelet-list-generic.component.html","./src/app/common/FormControls/search-partner-entity/search-partner-entity.component.ts","./src/app/common/FormControls/search-partner-entity/search-partner-entity.component.html","./src/app/common/FormControls/search-trainee/search-trainee.component.ts","./src/app/common/FormControls/search-trainee/search-trainee.component.html","./src/app/common/add-trainee/add-trainee.component.ts","./src/app/common/add-trainee/add-trainee.component.html","./src/app/common/confirmation-dialog/confirmation-dialog.component.ts","./src/app/common/confirmation-dialog/confirmation-dialog.component.html","./src/app/common/confirmation-dialog/confirmation-dialog.service.ts","./src/app/common/footer/footer.component.ts","./src/app/common/footer/footer.component.html","./src/app/common/formcontrols/search-partner/search-partner.component.ts","./src/app/common/formcontrols/search-partner/search-partner.component.html","./src/app/common/formcontrols/search-sub-partner-entity/search-sub-partner-entity.component.ts","./src/app/common/formcontrols/search-sub-partner-entity/search-sub-partner-entity.component.html","./src/app/common/formcontrols/search-sub-partner/search-sub-partner.component.ts","./src/app/common/formcontrols/search-sub-partner/search-sub-partner.component.html","./src/app/common/header/header.component.ts","./src/app/common/header/header.component.html","./src/app/common/pagination/components/custom-pagination/custom-pagination.component.ts","./src/app/common/pagination/components/custom-pagination/custom-pagination.component.html","./src/app/common/pagination/page.ts","./src/app/common/pagination/pageable.ts","./src/app/common/pagination/services/custom-pagination.service.ts","./src/app/common/sharedmodule.module.ts","./src/app/config/config-request-register/config-request-register.component.ts","./src/app/config/config-request-register/config-request-register.component.html","./src/app/config/config-trainee/config-trainee.component.ts","./src/app/config/config-trainee/config-trainee.component.html","./src/app/constants.ts","./src/app/core/account.service.ts","./src/app/core/admin-route-guard.ts","./src/app/core/auth-interceptor.service.ts","./src/app/core/auth-service.component.ts","./src/app/core/core.module.ts","./src/app/core/project.service.ts","./src/app/core/utils.ts","./src/app/home/contact-us.component.ts","./src/app/home/contact-us.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/home/signin-redirect-callback.component.ts","./src/app/home/signout-redirect-callback.component.ts","./src/app/home/terms/terms.component.ts","./src/app/home/terms/terms.component.html","./src/app/home/unauthorized.component.ts","./src/app/home/unauthorized.component.html","./src/app/interface/Model/ModelAccountSearch.class.ts","./src/app/interface/Model/ModelArea.class.ts","./src/app/interface/Model/ModelChangeEmail.class.ts","./src/app/interface/Model/ModelConfigForm.class.ts","./src/app/interface/Model/ModelConfigFormGet.class.ts","./src/app/interface/Model/ModelContentData.class.ts","./src/app/interface/Model/ModelCourse.class.ts","./src/app/interface/Model/ModelEntityMember.class.ts","./src/app/interface/Model/ModelEntitySubEntityIds.class.ts","./src/app/interface/Model/ModelEntitySubPartner.class.ts","./src/app/interface/Model/ModelEntityTrainingCenter.class.ts","./src/app/interface/Model/ModelExamTemplate.class.ts","./src/app/interface/Model/ModelFilterQuestions.class.ts","./src/app/interface/Model/ModelFilterTraining.class.ts","./src/app/interface/Model/ModelId.interface.ts","./src/app/interface/Model/ModelLanguage.class.ts","./src/app/interface/Model/ModelMyAssignedAccount.class.ts","./src/app/interface/Model/ModelPaging.interface.ts","./src/app/interface/Model/ModelQuestions.class.ts","./src/app/interface/Model/ModelRequestRegister.class.ts","./src/app/interface/Model/ModelSaveAttendance.class.ts","./src/app/interface/Model/ModelShowMessage.class.ts","./src/app/interface/Model/ModelTrainee.class.ts","./src/app/interface/Model/ModelTraineeTraining.class.ts","./src/app/interface/Model/ModelTrainerCertificateApproval.class.ts","./src/app/interface/Model/ModelTraining.class.ts","./src/app/interface/Model/ModelTrainingCategory.class.ts","./src/app/interface/Model/ModelTranslateList.class.ts","./src/app/interface/Model/ModelUserProfile.class.ts","./src/app/interface/Model/ModelUserType.class.ts","./src/app/interface/Response/City.class.ts","./src/app/interface/Response/EntityPartner.class.ts","./src/app/interface/Response/EntitySubPartner.class.ts","./src/app/interface/Response/LogoPartner.class.ts","./src/app/interface/Response/NGOType.class.ts","./src/app/interface/Response/StatsCount.class.ts","./src/app/interface/Response/Trainee.class.ts","./src/app/interface/Response/Training.class.ts","./src/app/interface/Response/TrainingCategory.interface.ts","./src/app/interface/Response/TrainingType.class.ts","./src/app/interface/Response/UserProfile.class.ts","./src/app/interface/baseComponent.class.ts","./src/app/interface/forms/AutoComplete.class.ts","./src/app/model/auth-context.ts","./src/app/services/GenericService.service.ts","./src/app/services/Question.service.ts","./src/app/services/certificate.service.ts","./src/app/services/config-form.service.ts","./src/app/services/content-data.service.ts","./src/app/services/datamanagement.service.ts","./src/app/services/entitymanagement.service.ts","./src/app/services/exam-template.service.ts","./src/app/services/exam.service.ts","./src/app/services/loginuser.service.ts","./src/app/services/logo-partner.service.ts","./src/app/services/misc.service.ts","./src/app/services/show-message.service.ts","./src/app/services/trainee.service.ts","./src/app/services/training.service.ts","./src/app/services/translate-list.service.ts","./src/app/services/userprofile.service.ts","./src/app/ztest/test/test.component.ts","./src/app/ztest/test/test.component.html","./src/app/ztest/test/test.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { AccountComponent } from './account/account.component';\r\nimport { SharedModule } from 'src/app/common/sharedmodule.module';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AdminPartnerRouteGuard, AdminRouteGuard, AdminPartnerSubPartnerRouteGuard } from 'src/app/core/admin-route-guard';\r\nimport { TraineeComponent } from './trainee/trainee.component';\nimport { TrainerCertificateComponent } from './trainer-certificate/trainer-certificate.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AccountComponent,\r\n    TraineeComponent,\r\n    TrainerCertificateComponent\r\n  ],\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      { path: 'Account/Account', component: AccountComponent, canActivate: [AdminPartnerSubPartnerRouteGuard] },\r\n      { path: 'Account/Trainee', component: TraineeComponent }\r\n    ])\r\n  ],\r\n  providers:[\r\n    AdminRouteGuard,\r\n    AdminPartnerRouteGuard,\r\n    AdminPartnerSubPartnerRouteGuard\r\n  ]\r\n})\r\nexport class AccountModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { cUserProfileList, cUserProfileItem } from 'src/app/interface/Response/UserProfile.class';\r\nimport { Page } from 'src/app/common/pagination/page';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { CustomPaginationService } from 'src/app/common/pagination/services/custom-pagination.service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ServiceUserProfile } from 'src/app/services/userprofile.service';\r\nimport { NgForm, FormControl, Validators } from '@angular/forms';\r\nimport { ModelUserProfile } from 'src/app/interface/Model/ModelUserProfile.class';\r\nimport { UserTypeItem, UserTypeList } from 'src/app/interface/Model/ModelUserType.class';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { UserType } from 'src/app/Enum/UserType.enum';\r\nimport { ServiceEntityManagement } from 'src/app/services/entitymanagement.service';\r\nimport { cEntityPartnerItem } from 'src/app/interface/Response/EntityPartner.class';\r\nimport { cEntitySubPartnerItem } from 'src/app/interface/Response/EntitySubPartner.class';\r\nimport { cCityList, cCityItem } from 'src/app/interface/Response/City.class';\r\nimport { ServiceDataManagement } from 'src/app/services/datamanagement.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { cArea } from 'src/app/interface/Response/Area.class';\r\nimport { noop } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { ModelChangeEmail } from 'src/app/interface/Model/ModelChangeEmail.class';\r\n\r\n@Component({\r\n  selector: 'app-account',\r\n  templateUrl: './account.component.html',\r\n  styleUrls: ['./account.component.scss']\r\n})\r\nexport class AccountComponent extends baseComponent implements OnInit {\r\n  emailPattern = \"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\";\r\n  get EnumUserTypes() { return UserType };\r\n  pageTitle: string = 'User Accounts';\r\n  lstUserProfile: cUserProfileList;\r\n  lstUserType: UserTypeItem[];\r\n  filterType: string = \"0\";\r\n  filtertxt: string = '';\r\n  modelNameEdited: string = '';\r\n  modelObj: cUserProfileItem;\r\n  modelIsCreate: boolean = true;\r\n  page: Page<cUserProfileItem> = new Page();\r\n  lstPartners: cEntityPartnerItem[];\r\n  lstPartnersSelected: string[];\r\n  lstSubPartners: cEntitySubPartnerItem[];\r\n  lstSubPartnersSelected: string[];\r\n  lstCity: cCityItem[];\r\n  lstArea: cArea[];\r\n  isClicked = false;\r\n  IsDatesCorrect: boolean = true;\r\n  modelChangeEmail: ModelChangeEmail = new ModelChangeEmail();\r\n\r\n  AccountActivationLinkFailed: string;\r\n  AccountActivationLinkSuccess: string;\r\n  AccountPasswordSucess: string;\r\n  AccountPasswordFailed: string;\r\n\r\n  constructor(private BLServiceUserProfile: ServiceUserProfile,\r\n    private BLServiceEntityManagement: ServiceEntityManagement,\r\n    private BLServiceDataManagement: ServiceDataManagement,\r\n    private paginationService: CustomPaginationService,\r\n    private modalService: NgbModal,\r\n    private router: Router,\r\n    BLServiceShowMessage: ServiceShowMessage,\r\n    BLServiceLoginUser: ServiceLoginUser, BLTranslate: TranslateService,) {\r\n    super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\r\n    this.BLTranslate.get(\"AccountActivationLinkFailed\").subscribe(res => { this.AccountActivationLinkFailed = res; });\r\n    this.BLTranslate.get(\"AccountActivationLinkSuccess\").subscribe(res => { this.AccountActivationLinkSuccess = res; });\r\n    this.BLTranslate.get(\"AccountPasswordSucess\").subscribe(res => { this.AccountPasswordSucess = res; });\r\n    this.BLTranslate.get(\"AccountPasswordFailed\").subscribe(res => { this.AccountPasswordFailed = res; });\r\n\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n    this.lstUserType = new UserTypeList(this.BLTranslate).getUserListByType(this.userRole);\r\n    this.BLServiceDataManagement.getCityListActive().subscribe({\r\n      next: lst => {\r\n        this.lstCity = lst;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n    this.BLServiceEntityManagement.getEntityPartnerListActive(\"\").subscribe({\r\n      next: lst => {\r\n        this.lstPartners = lst;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  private loadData(): void {\r\n    this.BLServiceUserProfile.getSearch(this.page.pageable.pageCurrent, this.filtertxt, this.filterType).subscribe({\r\n      next: lst => {\r\n\r\n        this.lstUserProfile = lst;\r\n        this.page.pageable.pageSize = lst.pageSize;\r\n        this.page.totalElements = lst.totalCount;\r\n        this.page.content = lst.lstResult;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  public getNextPage(): void {\r\n    this.page.pageable = this.paginationService.getNextPage(this.page);\r\n    this.loadData();\r\n  }\r\n\r\n  public getPreviousPage(): void {\r\n    this.page.pageable = this.paginationService.getPreviousPage(this.page);\r\n    this.loadData();\r\n  }\r\n  public getloadPageCurrent(): void {\r\n    this.loadData();\r\n  }\r\n  ResendActivationLink(Email: string) {\r\n    this.BLServiceUserProfile.ResendActivationLink(Email).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.AccountActivationLinkSuccess);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        //this.loadData();\r\n      },\r\n      error: err => {\r\n        this.message.Error(this.AccountActivationLinkFailed);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n      }\r\n    });\r\n  }\r\n  ResendPasswordLink(Email: string) {\r\n    this.BLServiceUserProfile.ResendPasswordLink(Email).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.AccountPasswordSucess);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        //this.loadData();\r\n      },\r\n      error: err => {\r\n        this.message.Error(this.AccountPasswordFailed);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n      }\r\n    });\r\n  }\r\n  setActivate(Id: string): void {\r\n    if (!confirm(this.msgsetActivate))\r\n      return;\r\n    this.BLServiceUserProfile.setActivate(Id).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.msgActivatedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  setDeactivate(Id: string): void {\r\n    if (!confirm(this.msgsetDeactivate))\r\n      return;\r\n\r\n    this.BLServiceUserProfile.setDeactivate(Id).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.msgDeactivatedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  filterbtn(): void {\r\n    this.page.pageable.pageCurrent = 1;\r\n    this.loadData();\r\n  }\r\n  createBtn(content): void {\r\n    this.modelObj = new cUserProfileItem;\r\n    this.modelIsCreate = true;\r\n    this.isClicked = false;\r\n    this.modelNameEdited = \"\";\r\n    this.lstPartnersSelected = [];\r\n    this.lstSubPartnersSelected = [];\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  modelSaveBtn(modelForm: NgForm): void {\r\n    if (!modelForm.valid)\r\n      return;\r\n    this.isClicked = true;\r\n    var model = new ModelUserProfile();\r\n    model.Id = this.modelObj.Id;\r\n    model.Name = this.modelObj.Name;\r\n    model.Type = UserType[this.modelObj.Type]\r\n    model.Email = this.modelObj.Email;\r\n    model.CityId = this.modelObj.CityId;\r\n    model.AreaId = this.modelObj.AreaId;\r\n    model.TrainerTrainingDetails = this.modelObj.TrainerTrainingDetails;\r\n    model.TrainerStartDate = this.modelObj.TrainerStartDate;\r\n    model.TrainerEndDate = this.modelObj.TrainerEndDate;\r\n    model.SelectedPartnerEntityId = this.lstPartnersSelected;\r\n    model.SelectedSubPartnerEntityId = this.lstSubPartnersSelected;\r\n\r\n\r\n    if (this.modelIsCreate) {\r\n      this.BLServiceUserProfile.create(model).subscribe({\r\n        next: response => {\r\n          this.message.Success(this.msgSavedSuccessfully);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.isClicked = false;\r\n          this.modalService.dismissAll();\r\n        },\r\n        error: err => {\r\n          this.message.Error(err)\r\n          this.isClicked = false;\r\n        }\r\n      });\r\n    }\r\n    else {\r\n      this.BLServiceUserProfile.update(model).subscribe({\r\n        next: response => {\r\n          this.message.Success(this.msgSavedSuccessfully);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.isClicked = false;\r\n          this.modalService.dismissAll();\r\n        },\r\n        error: err => {\r\n          this.message.Error(err);\r\n          this.isClicked = false;\r\n        }\r\n      });\r\n    }\r\n  }\r\n  openBackDropCustomClass(content, obj: cUserProfileItem) {\r\n    this.modelObj = obj;\r\n\r\n    this.modelObj.TrainerStartDate.toString() == \"0001-01-01T00:00:00Z\" ? this.modelObj.TrainerStartDate = null : noop;\r\n    this.modelObj.TrainerEndDate.toString() == \"0001-01-01T00:00:00Z\" ? this.modelObj.TrainerEndDate = null : noop;\r\n\r\n    this.modelObj.Type = obj.Type.toString();\r\n    this.modelIsCreate = false;\r\n    this.isClicked = false;\r\n    this.modelNameEdited = obj.Name;\r\n    this.lstPartnersSelected = this.modelObj?.MyPartnerListIds?.map(({ Id }) => Id);\r\n    this.lstSubPartnersSelected = this.modelObj?.MySubPartnerListIds?.map(({ Id }) => Id);\r\n    this.PartnerChange(this.lstPartnersSelected);\r\n    this.CityChange(this.modelObj.CityId)\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  ConvertUserType(type: number) {\r\n    return UserType[type];\r\n  }\r\n  RemovePartner(PartnerId: string) {\r\n    if (!confirm(this.msgsetRemove))\r\n      return;\r\n    this.BLServiceEntityManagement.memberRemoveEntityPartner(PartnerId, this.modelObj.Id).subscribe({\r\n      next: lst => {\r\n        this.message.Success(this.msgSavedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.ReloadTheAccount(this.modelObj.Id);\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  OnSelectedPartner(PartnerId: string): void {\r\n\r\n    this.BLServiceEntityManagement.memberAddEntityPartner(PartnerId, this.modelObj.Id).subscribe({\r\n      next: lst => {\r\n        this.ReloadTheAccount(this.modelObj.Id);\r\n        this.message.Success(this.msgSavedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  RemoveSubPartner(PartnerId: string) {\r\n    if (!confirm(this.msgsetRemove))\r\n      return;\r\n    this.BLServiceEntityManagement.memberRemoveEntitySubPartner(PartnerId, this.modelObj.Id).subscribe({\r\n      next: lst => {\r\n        this.message.Success(this.msgSavedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.ReloadTheAccount(this.modelObj.Id);\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  OnSelectedSubPartner(PartnerId: string): void {\r\n\r\n    this.BLServiceEntityManagement.memberAddEntitySubPartner(PartnerId, this.modelObj.Id).subscribe({\r\n      next: lst => {\r\n        this.ReloadTheAccount(this.modelObj.Id);\r\n        this.message.Success(this.msgSavedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  ReloadTheAccount(UserId: string) {\r\n    this.BLServiceUserProfile.getGetByid(UserId).subscribe({\r\n      next: obj => {\r\n\r\n        this.modelObj = obj;\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  PartnerChange(obj: any) {\r\n\r\n    this.BLServiceEntityManagement.getEntitySubPartnerListActive(\"\", this.lstPartnersSelected).subscribe({\r\n      next: lst => {\r\n\r\n        this.lstSubPartners = lst;\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  CityChange(obj: any) {\r\n\r\n    if (obj != null) {\r\n      var city = this.lstCity?.find(item => item.Id == this.modelObj.CityId);\r\n      if (city) {\r\n        this.lstArea = city?.Areas.filter(a => a.IsActive == true).sort((x, y) => x.Name.localeCompare(y.Name));;\r\n      }\r\n    }\r\n  }\r\n  // filterAccounts(type: number, obj: cAssignedToAccount[]) {\r\n  //   return obj.filter(x => x.AccountType == type);\r\n  // }\r\n  onStartDateSelect(param) {\r\n    if ((this.modelObj.TrainerStartDate == null && this.modelObj.TrainerEndDate == null) ||\r\n      (this.modelObj.TrainerStartDate != null && this.modelObj.TrainerEndDate == null))\r\n      this.IsDatesCorrect = true;\r\n    else\r\n      this.IsDatesCorrect = this.CompareTwoDates(this.modelObj.TrainerStartDate, this.modelObj.TrainerEndDate);\r\n  }\r\n  onEndDateSelect(param) {\r\n\r\n    if ((this.modelObj.TrainerStartDate == null && this.modelObj.TrainerEndDate == null) ||\r\n      (this.modelObj.TrainerStartDate != null && this.modelObj.TrainerEndDate == null))\r\n      this.IsDatesCorrect = true;\r\n    else\r\n      this.IsDatesCorrect = this.CompareTwoDates(this.modelObj.TrainerStartDate, param);\r\n  }\r\n  Certificate(Id) {\r\n    // path: 'Trainee/Create/:IsCreate/:TraineeId/:TrainingId'\r\n    this.router.navigate(['/TrainerCertificate/' + Id]);\r\n  }\r\n  ChangeEmail(content, emailOld: string) {\r\n    this.modelChangeEmail = new ModelChangeEmail();\r\n    this.modelChangeEmail.EmailOld = emailOld;\r\n\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  ChangeEmailSave(modelForm: NgForm): void {\r\n    if (!modelForm.valid)\r\n      return;\r\n\r\n    this.BLServiceUserProfile.UpdateUserEmail(this.modelChangeEmail).subscribe({\r\n      next: lst => {\r\n        this.loadData();\r\n        this.message.Success(this.msgSavedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.modalService.dismissAll();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n}\r\n","<section class=\"my-5\">\r\n  <div class=\"container container-max\">\r\n    <div class='row'>\r\n      <h4 class=\"mb-4\">{{'pageTitleAccount' | translate }}</h4>\r\n    </div>\r\n    <div class='row'>\r\n      <div class=\"col-sm-6 md-form\">\r\n        <mat-form-field class=\"example-full-width\">\r\n          <mat-label>{{'AccountSearchAccount' | translate }}</mat-label>\r\n          <input type=\"text\" placeholder=\"{{'AccountTypePH' | translate }}\" matInput [(ngModel)]=\"filtertxt\">\r\n        </mat-form-field>\r\n      </div>\r\n      <div class=\"col-sm-6 md-form\">\r\n        <mat-form-field>\r\n          <mat-label>{{'AccountUserType' | translate }}</mat-label>\r\n          <mat-select id=\"filterTypeId\" placeholder=\"{{'AccountFilterType' | translate }}\" [(ngModel)]=\"filterType\"\r\n            name=\"filterTypeId\">\r\n            <mat-option value=\"0\">{{'AccountSelectType' | translate }}</mat-option>\r\n            <mat-option *ngFor=\"let item of lstUserType\" value=\"{{item.Id}}\">{{item.Name}}</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n        <input type=\"submit\" value=\"{{'GenericSearch' | translate }}\" class=\"btn color-bg-02 white-text\"\r\n          (click)=\"filterbtn()\">\r\n      </div>\r\n      <div class=\"col-sm-12 md-form pull-right\">\r\n        <input type=\"button\" class=\"pull-right btn color-bg-01 white-text\" value=\"{{'GenericCreateNew' | translate }}\"\r\n          (click)=\"createBtn(content)\">\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-12\">\r\n      <div class='table-responsive'>\r\n        <table class='table' *ngIf='page.content && page.content.length'>\r\n          <thead>\r\n            <tr>\r\n              <th>{{'GenericName' | translate }}</th>\r\n              <th>{{'GenericEmail' | translate }}</th>\r\n              <th>{{'GenericType' | translate }}</th>\r\n              <th>{{'GenericAction' | translate }}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor='let obj of page.content'>\r\n              <td>{{ obj.Name}}</td>\r\n              <td>{{ obj.Email}}</td>\r\n              <td>{{ ConvertUserType(obj.Type)}}</td>\r\n              <td>\r\n                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-primary\" value=\"{{'GenericEdit' | translate }}\"\r\n                  (click)=\"openBackDropCustomClass(content,obj)\">\r\n                <!-- <input\r\n                  *ngIf=\"obj.IsActive && (obj.Type == EnumUserTypes.Partner || obj.Type == EnumUserTypes.SubPartner || obj.Type == EnumUserTypes.Trainer)\"\r\n                  type=\"button\" class=\"btn btn-warning\" value=\"Assign Entity\"\r\n                  (click)=\"openBackDropCustomClass(contentEntity,obj)\"> -->\r\n                <!-- <input *ngIf=\"obj.IsActive && (obj.Type == EnumUserTypes.SubPartner)\" type=\"button\"\r\n                  class=\"btn btn-warning\" value=\"SubPartner Entity\"\r\n                  (click)=\"openBackDropCustomClass(contentSubPartner,obj)\"> -->\r\n                <input *ngIf=\"!obj.IsActive\" type=\"button\" class=\"btn btn-success\"\r\n                  value=\"{{'GenericActivate' | translate }}\" (click)=\"setActivate(obj.Id)\">\r\n                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-danger\"\r\n                  value=\"{{'GenericDeactivate' | translate }}\" (click)=\"setDeactivate(obj.Id)\">\r\n                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-warning\"\r\n                  value=\"{{'AccountResendLink' | translate }}\" (click)=\"ResendActivationLink(obj.Email)\">\r\n                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-success\"\r\n                  value=\"{{'AccountPasswordLink' | translate }}\" (click)=\"ResendPasswordLink(obj.Email)\">\r\n                <input *ngIf=\"obj.IsActive && obj.Type == EnumUserTypes.Trainer.toString()\" type=\"button\"\r\n                  class=\"btn btn-info\" value=\"{{'HeaderCertificate' | translate }}\" (click)=\"Certificate(obj.Id)\">\r\n                  <input *ngIf=\"obj.IsActive\" type=\"button\"\r\n                  class=\"btn btn-dark\" value=\"{{'ChangeEmail' | translate }}\" (click)=\"ChangeEmail(contentChangeEmail, obj.Email)\">\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <app-custom-pagination [page]=\"page\" (nextPageEvent)=\"getNextPage()\" (previousPageEvent)=\"getPreviousPage()\"\r\n        (loadPageCurrentEvent)=\"getloadPageCurrent()\">\r\n      </app-custom-pagination>\r\n    </div>\r\n    <div>\r\n      <ng-template role=\"dialog\" #content let-modal class=\"modal fade\">\r\n        <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header color-bg-01 white-text text-center\">\r\n\r\n              <h6 class=\"modal-title\">\r\n                {{(modelIsCreate ? 'GenericCreate'   : 'GenericEditing') | translate}} :\r\n                {{modelIsCreate? (\"GenericNew\" | translate) : modelNameEdited}}\r\n              </h6>\r\n            </div>\r\n            <div class=\"modal-body pt-0\">\r\n\r\n              <form novalidate (ngSubmit)=\"modelSaveBtn(modelForm)\" #modelForm=\"ngForm\">\r\n                <div class=\"form-group \">\r\n                  <mat-form-field class=\"example-full-width\">\r\n                    <mat-label>{{'GenericName' | translate }}</mat-label>\r\n                    <input matInput id=\"modelNameId\" type=\"text\" placeholder=\"{{'GenericRequiredName' | translate }}\"\r\n                      required [(ngModel)]=\"modelObj.Name\" #modelNameVar=\"ngModel\" name=\"modelName\"\r\n                      [ngClass]=\"{'is-invalid': (modelNameVar.touched || modelNameVar.dirty) && !modelNameVar.valid }\" />\r\n                    <mat-error *ngIf=\"modelNameVar.errors?.required\">{{'GenericEnterName' | translate }}</mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"form-group \">\r\n                  <mat-form-field class=\"example-full-width\">\r\n                    <mat-label>{{'GenericEmail' | translate }}</mat-label>\r\n                    <input matInput oninput=\"this.value = this.value.toLowerCase()\" id=\"modelEmailId\" type=\"email\"\r\n                      placeholder=\"{{'GenericRequiredEmail' | translate }}\" [pattern]=\"emailPattern\" required\r\n                      disabled=\"{{!modelIsCreate}}\" [(ngModel)]=\"modelObj.Email\" #modelEmailVar=\"ngModel\"\r\n                      name=\"modelEmail\"\r\n                      [ngClass]=\"{'is-invalid': (modelEmailVar.touched || modelEmailVar.dirty) && !modelEmailVar.valid }\" />\r\n                    <mat-error *ngIf=\"modelEmailVar.errors?.required\">{{'GenericEnterEmail' | translate }}</mat-error>\r\n                    <mat-error *ngIf=\"modelEmailVar.errors?.pattern\">{{'GenericEnterEmailValid' | translate }}\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"form-group \">\r\n                  <mat-form-field>\r\n                    <mat-label>{{'AccountUserType' | translate }}</mat-label>\r\n                    <mat-select id=\"modelTypeId\" placeholder=\"{{'GenericRequiredType' | translate }}\" required\r\n                      [(ngModel)]=\"modelObj.Type\" #modelTypeListVar=\"ngModel\" name=\"modelTypeList\"\r\n                      [value]=\"modelObj.Type\" disabled=\"{{!modelIsCreate}}\"\r\n                      [ngClass]=\"{'is-invalid': (modelTypeListVar.touched || modelTypeListVar.dirty) && !modelTypeListVar.valid}\">\r\n                      <mat-option value=\"\">{{'AccountSelectType' | translate }}</mat-option>\r\n                      <mat-option *ngFor=\"let item of lstUserType\" value=\"{{item.Id}}\">{{item.Name}}</mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"modelTypeListVar.errors?.required\">{{'AccountErrorTypeSelect' | translate }}\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"form-group \" *ngIf=\"(modelIsCreate && (modelObj.Type == EnumUserTypes.Partner.toString() ||\r\n                                                    modelObj.Type == EnumUserTypes.SubPartner.toString() ||\r\n                                                    modelObj.Type == EnumUserTypes.Trainer.toString()))\r\n                                                || (modelObj.Type == EnumUserTypes.Trainer.toString())\">\r\n                  <mat-form-field>\r\n                    <mat-label>{{'GenericPartnerEntity' | translate }}</mat-label>\r\n                    <mat-select multiple placeholder=\"{{'AccountSelectPartner' | translate }}\" required\r\n                      [(ngModel)]=\"lstPartnersSelected\" #modelMyPartnerListIds=\"ngModel\" name=\"MyPartnerListIds\"\r\n                      (selectionChange)=\"PartnerChange($event)\"\r\n                      [ngClass]=\"{'is-invalid': (modelMyPartnerListIds.touched || modelMyPartnerListIds.dirty) && !modelMyPartnerListIds.valid}\">\r\n                      <mat-option *ngFor=\"let obj of lstPartners\" [value]=\"obj.Id\">{{ obj.Name }}</mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"modelMyPartnerListIds.errors?.required\">{{'GenericEnterPartner' | translate }}\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"form-group \" *ngIf=\"(modelIsCreate && lstPartnersSelected?.length > 0 && (\r\n                                                    modelObj.Type == EnumUserTypes.SubPartner.toString() ||\r\n                                                    modelObj.Type == EnumUserTypes.Trainer.toString()))\r\n                                                  || (modelObj.Type == EnumUserTypes.Trainer.toString())\">\r\n                  <mat-form-field>\r\n                    <mat-label>{{'GenericSubPartnerEntity' | translate }}</mat-label>\r\n                    <mat-select multiple placeholder=\"{{'AccountSelectSubPartner' | translate }}\" required\r\n                      [(ngModel)]=\"lstSubPartnersSelected\" #modelMySubPartnerListIds=\"ngModel\"\r\n                      name=\"MySubPartnerListIds\"\r\n                      [ngClass]=\"{'is-invalid': (modelMySubPartnerListIds.touched || modelMySubPartnerListIds.dirty) && !modelMySubPartnerListIds.valid}\">\r\n                      <mat-option *ngFor=\"let obj of lstSubPartners\" [value]=\"obj.Id\">{{ obj.Name }}</mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"modelMySubPartnerListIds.errors?.required\">\r\n                      {{'AccountSelectSubError' | translate }}</mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"form-group \" *ngIf=\"modelObj.Type == EnumUserTypes.Trainer.toString()\">\r\n                  <mat-form-field>\r\n                    <mat-label>{{'GenericCity' | translate }}</mat-label>\r\n                    <mat-select placeholder=\"{{'AccountSelectCity' | translate }}\" required\r\n                      [(ngModel)]=\"modelObj.CityId\" #modelCityIds=\"ngModel\" name=\"CityIds\"\r\n                      (selectionChange)=\"CityChange($event)\"\r\n                      [ngClass]=\"{'is-invalid': (modelCityIds.touched || modelCityIds.dirty) && !modelCityIds.valid}\">\r\n                      <mat-option *ngFor=\"let obj of lstCity\" [value]=\"obj.Id\">{{ obj.Name }}</mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"modelCityIds.errors?.required\">{{'AccountSelectCityError' | translate }}\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"form-group \" *ngIf=\"modelObj.Type == EnumUserTypes.Trainer.toString()\">\r\n                  <mat-form-field>\r\n                    <mat-label>{{'AreaTitle' | translate }}</mat-label>\r\n                    <mat-select placeholder=\"{{'AccountSelectArea' | translate }}\" required\r\n                      [(ngModel)]=\"modelObj.AreaId\" #modelAreaIds=\"ngModel\" name=\"AreaIds\"\r\n                      [ngClass]=\"{'is-invalid': (modelAreaIds.touched || modelAreaIds.dirty) && !modelAreaIds.valid}\">\r\n                      <mat-option *ngFor=\"let obj of lstArea\" [value]=\"obj.Id\">{{ obj.Name }}</mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"modelAreaIds.errors?.required\">{{'TrainingAreaSelectError' | translate }}\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"form-group \" *ngIf=\"modelObj.Type == EnumUserTypes.Trainer.toString()\">\r\n                  <mat-form-field class=\"example-full-width\">\r\n                    <mat-label>{{'AccountTrainerDetails' | translate }}</mat-label>\r\n                    <input matInput id=\"modelTrainingDetailsId\" type=\"text\"\r\n                      placeholder=\"{{'AccountTrainerDetails' | translate }}\"\r\n                      [(ngModel)]=\"modelObj.TrainerTrainingDetails\" #modelTrainingDetailsVar=\"ngModel\"\r\n                      name=\"modelTrainingDetails\" />\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"form-group \" *ngIf=\"modelObj.Type == EnumUserTypes.Trainer.toString()\">\r\n                  <mat-form-field class=\"example-full-width\">\r\n                    <mat-label>{{'AccountTrainerStartDate' | translate }}</mat-label>\r\n                    <input matInput [owlDateTime]=\"dt1\" id=\"modelStartDateId\" type=\"text\"\r\n                      placeholder=\"{{'AccountTrainerStartDate' | translate }}\" [(ngModel)]=\"modelObj.TrainerStartDate\"\r\n                      #modelStartDateVar=\"ngModel\" (ngModelChange)=\"onStartDateSelect($event)\" name=\"modelStartDate\" />\r\n                    <mat-icon matSuffix [owlDateTimeTrigger]=\"dt1\"><i class=\"fa fa-calendar\"></i></mat-icon>\r\n                  </mat-form-field>\r\n                  <owl-date-time #dt1 [pickerType]=\"'calendar'\"></owl-date-time>\r\n                </div>\r\n                <div class=\"form-group \" *ngIf=\"modelObj.Type == EnumUserTypes.Trainer.toString()\">\r\n                  <mat-form-field class=\"example-full-width\">\r\n                    <mat-label>{{'AccountTrainerEndDate' | translate }}</mat-label>\r\n                    <input matInput [owlDateTime]=\"dt2\" id=\"modelEndDateId\" type=\"text\"\r\n                      placeholder=\"{{'AccountTrainerEndDate' | translate }}\" [(ngModel)]=\"modelObj.TrainerEndDate\"\r\n                      #modelEndDateVar=\"ngModel\" (ngModelChange)=\"onEndDateSelect($event)\" name=\"modelEndDate\" />\r\n                    <mat-icon matSuffix [owlDateTimeTrigger]=\"dt2\"><i class=\"fa fa-calendar\"></i></mat-icon>\r\n                  </mat-form-field>\r\n                  <owl-date-time #dt2 [pickerType]=\"'calendar'\"></owl-date-time>\r\n                  <mat-error class=\"MatError\" *ngIf=\"!IsDatesCorrect\">{{'TrainingDateError' | translate }}</mat-error>\r\n                </div>\r\n\r\n                <div class=\"form-group pull-right md-form\">\r\n                  <button class=\"btn color-bg-01 btn-sm white-text\" type=\"submit\"\r\n                    [disabled]=\"!modelForm.valid || isClicked || !IsDatesCorrect\">{{'GenericSave' | translate }} <i\r\n                      class=\"fa fa-spinner fa-spin\" *ngIf=\"isClicked\"></i></button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n\r\n              <button type=\"button\" class=\"btn color-bg-02 btn-sm white-text\"\r\n                (click)=\"modal.close('Close click')\">{{'GenericClose' | translate }}</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </ng-template>\r\n    </div>\r\n    <div>\r\n      <ng-template #contentEntity let-modal>\r\n        <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header color-bg-01 white-text text-center\">\r\n\r\n              <h6 class=\"modal-title\">\r\n                {{'AccountAssignEntity' | translate }}: {{modelNameEdited}}</h6>\r\n            </div>\r\n            <div class=\"modal-body pt-0\">\r\n              <mat-tab-group animationDuration=\"1000ms\">\r\n                <mat-tab label=\"{{'GenericPartnerEntity' | translate }}\"\r\n                  *ngIf=\"modelObj.Type == EnumUserTypes.Partner.toString() || modelObj.Type == EnumUserTypes.Trainer.toString()\">\r\n                  <div>\r\n                    <cust-search-partner-entity (OnSelectedPartner)='OnSelectedPartner($event)'>\r\n                    </cust-search-partner-entity>\r\n                  </div>\r\n                  <div>\r\n                    <table class='table' *ngIf='modelObj.MyPartnerListIds && modelObj.MyPartnerListIds.length'>\r\n                      <thead>\r\n                        <tr>\r\n                          <th>{{'GenericName' | translate }}</th>\r\n                          <th>{{'GenericAction' | translate }}</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        <tr *ngFor='let obj of modelObj.MyPartnerListIds'>\r\n                          <td>{{ obj.Name }}\r\n                          </td>\r\n                          <td>\r\n                            <input type=\"button\" class=\"btn btn-danger\" value=\"{{'GenericRemove' | translate }}\"\r\n                              (click)=\"RemovePartner(obj.Id)\">\r\n                          </td>\r\n                        </tr>\r\n\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </mat-tab>\r\n                <mat-tab label=\"{{'GenericSubPartnerEntity' | translate }}\"\r\n                  *ngIf=\"modelObj.Type == EnumUserTypes.SubPartner.toString() || modelObj.Type == EnumUserTypes.Trainer.toString()\">\r\n                  <div>\r\n                    <cust-search-sub-partner-entity (OnSelectedPartner)='OnSelectedSubPartner($event)'>\r\n                    </cust-search-sub-partner-entity>\r\n                  </div>\r\n                  <div>\r\n                    <table class='table' *ngIf='modelObj.MySubPartnerListIds && modelObj.MySubPartnerListIds.length'>\r\n                      <thead>\r\n                        <tr>\r\n                          <th>{{'GenericName' | translate }}</th>\r\n                          <th>{{'GenericAction' | translate }}</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        <tr *ngFor='let obj of modelObj.MySubPartnerListIds'>\r\n                          <td>{{ obj.Name }}\r\n                          </td>\r\n                          <td>\r\n                            <input type=\"button\" class=\"btn btn-danger\" value=\"{{'GenericRemove' | translate }}\"\r\n                              (click)=\"RemoveSubPartner(obj.Id)\">\r\n                          </td>\r\n                        </tr>\r\n\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </mat-tab>\r\n              </mat-tab-group>\r\n\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              <button type=\"button\" class=\"btn color-bg-02 btn-sm white-text\"\r\n                (click)=\"modal.close('Close click')\">{{'GenericClose' | translate }}</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </ng-template>\r\n    </div>\r\n    <div>\r\n      <ng-template #contentChangeEmail let-modal>\r\n        <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header color-bg-01 white-text text-center\">\r\n\r\n              <h6 class=\"modal-title\">\r\n                {{'ChangeEmail' | translate}} \r\n              </h6>\r\n            </div>\r\n            <div class=\"modal-body pt-0\">\r\n\r\n              <form novalidate (ngSubmit)=\"ChangeEmailSave(modelForm)\" #modelForm=\"ngForm\">\r\n                <div class=\"form-group \">\r\n                  \r\n                    <mat-label><b>{{'OldEmail' | translate }}</b>: </mat-label>\r\n                    <mat-label>{{modelChangeEmail.EmailOld}} </mat-label>\r\n                </div>\r\n                <div class=\"form-group \">\r\n                  <mat-form-field class=\"example-full-width\">\r\n                    <mat-label>{{'NewEmail' | translate }}</mat-label>\r\n                    <input matInput oninput=\"this.value = this.value.toLowerCase()\" id=\"modelEmailId\" type=\"email\"\r\n                      placeholder=\"{{'GenericRequiredEmail' | translate }}\" [pattern]=\"emailPattern\" required\r\n                      [(ngModel)]=\"modelChangeEmail.EmailNew\" #modelEmailVar=\"ngModel\"\r\n                      name=\"modelEmail\"\r\n                      [ngClass]=\"{'is-invalid': (modelEmailVar.touched || modelEmailVar.dirty) && !modelEmailVar.valid }\" />\r\n                    <mat-error *ngIf=\"modelEmailVar.errors?.required\">{{'GenericEnterEmail' | translate }}</mat-error>\r\n                    <mat-error *ngIf=\"modelEmailVar.errors?.pattern\">{{'GenericEnterEmailValid' | translate }}\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"form-group pull-right md-form\">\r\n                  <button class=\"btn color-bg-01 btn-sm white-text\" type=\"submit\"\r\n                    [disabled]=\"!modelForm.valid\">{{'GenericSave' | translate }}</button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n\r\n              <button type=\"button\" class=\"btn color-bg-02 btn-sm white-text\"\r\n                (click)=\"modal.close('Close click')\">{{'GenericClose' | translate }}</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </ng-template>\r\n    </div>\r\n  </div>\r\n</section>","import { Component, OnInit } from '@angular/core';\r\nimport { cTraineeItem, cTraineeList } from 'src/app/interface/Response/Trainee.class';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { Page } from 'src/app/common/pagination/page';\r\nimport { CustomPaginationService } from 'src/app/common/pagination/services/custom-pagination.service';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ModelTrainee } from 'src/app/interface/Model/ModelTrainee.class';\r\nimport { ServiceTrainee } from 'src/app/services/trainee.service';\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ServiceUserProfile } from 'src/app/services/userprofile.service';\r\nimport { ModelChangeEmail } from 'src/app/interface/Model/ModelChangeEmail.class';\r\n\r\n@Component({\r\n  selector: 'app-trainee',\r\n  templateUrl: './trainee.component.html',\r\n  styleUrls: ['./trainee.component.css']\r\n})\r\nexport class TraineeComponent extends baseComponent implements OnInit {\r\n\r\n\r\n  pageTitle: string = 'Trainee List';\r\n  lstTrainee: cTraineeList;\r\n  filterType: string = \"0\";\r\n  filtertxt: string = '';\r\n  modelChangeEmail: ModelChangeEmail = new ModelChangeEmail();\r\n\r\n\r\n  page: Page<cTraineeItem> = new Page();\r\n  AccountActivationLinkFailed:string;\r\n  AccountActivationLinkSuccess:string;\r\n  AccountPasswordSucess:string;\r\n  AccountPasswordFailed:string;\r\n\r\n  constructor(private BLServiceTrainee: ServiceTrainee,\r\n    private BLServiceUserProfile: ServiceUserProfile,\r\n    private paginationService: CustomPaginationService,\r\n    private router: Router,\r\n    private modalService: NgbModal,\r\n    BLServiceShowMessage: ServiceShowMessage,\r\n    BLServiceLoginUser: ServiceLoginUser,BLTranslate: TranslateService,) {\r\n    super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\r\n    this.BLTranslate.get(\"AccountActivationLinkFailed\").subscribe(res => { this.AccountActivationLinkFailed = res; });\r\n    this.BLTranslate.get(\"AccountActivationLinkSuccess\").subscribe(res => { this.AccountActivationLinkSuccess = res; });\r\n    this.BLTranslate.get(\"AccountPasswordSucess\").subscribe(res => { this.AccountPasswordSucess = res; });\r\n    this.BLTranslate.get(\"AccountPasswordFailed\").subscribe(res => { this.AccountPasswordFailed = res; });\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n  public loadData(): void {\r\n    this.BLServiceTrainee.getAll(this.page.pageable.pageCurrent, this.filtertxt).subscribe({\r\n      next: lst => {\r\n\r\n        this.lstTrainee = lst;\r\n        this.page.pageable.pageSize = lst.pageSize;\r\n        this.page.totalElements = lst.totalCount;\r\n        this.page.content = lst.lstResult;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  public getNextPage(): void {\r\n    this.page.pageable = this.paginationService.getNextPage(this.page);\r\n    this.loadData();\r\n  }\r\n\r\n  public getPreviousPage(): void {\r\n    this.page.pageable = this.paginationService.getPreviousPage(this.page);\r\n    this.loadData();\r\n  }\r\n  public getloadPageCurrent(): void {\r\n    this.loadData();\r\n  }\r\n  setActivate(Id: string): void {\r\n    if (!confirm(this.msgsetActivate))\r\n      return;\r\n    this.BLServiceTrainee.setActivate(Id).subscribe({\r\n      next: response => {\r\n        \r\n          this.message.Success(this.msgActivatedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  setDeactivate(Id: string): void {\r\n    if (!confirm(this.msgsetDeactivate))\r\n      return;\r\n\r\n    this.BLServiceTrainee.setDeactivate(Id).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.msgDeactivatedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  filterbtn(): void {\r\n    this.page.pageable.pageCurrent = 1;\r\n    this.loadData();\r\n  }\r\n  createBtn() {\r\n    // path: 'Trainee/Create/:IsCreate/:TraineeId/:TrainingId'\r\n    this.router.navigate(['/Trainee/Create/1/0/0']);\r\n  }\r\n  Edit(TraineeId) {\r\n    // path: 'Trainee/Create/:IsCreate/:TraineeId/:TrainingId'\r\n    this.router.navigate(['/Trainee/Create/0/' + TraineeId + '/0']);\r\n  }\r\n  Certificate(TraineeId) {\r\n    // path: 'Trainee/Create/:IsCreate/:TraineeId/:TrainingId'\r\n    this.router.navigate(['/MyTraining/' + TraineeId ]);\r\n  }\r\n  ResendActivationLink(Email: string){\r\n    this.BLServiceTrainee.ResendActivationLink(Email).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.AccountActivationLinkSuccess);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => {\r\n        this.message.Error(this.AccountActivationLinkFailed);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n    }\r\n    });\r\n  }\r\n  ResendPasswordLink(Email: string) {\r\n    this.BLServiceTrainee.ResendPasswordLink(Email).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.AccountPasswordSucess);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        //this.loadData();\r\n      },\r\n      error: err => {\r\n        this.message.Error(this.AccountPasswordFailed);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n      }\r\n    });\r\n  }\r\n  ChangeEmail(content, emailOld: string) {\r\n    this.modelChangeEmail = new ModelChangeEmail();\r\n    this.modelChangeEmail.EmailOld = emailOld;\r\n\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  ChangeEmailSave(modelForm: NgForm): void {\r\n    if (!modelForm.valid)\r\n      return;\r\n\r\n    this.BLServiceUserProfile.UpdateUserEmail(this.modelChangeEmail).subscribe({\r\n      next: lst => {\r\n        this.loadData();\r\n        this.message.Success(this.msgSavedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.modalService.dismissAll();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n}\r\n","<section class=\"my-5\">\r\n    <div class=\"container container-max\">\r\n        <div class='row'>\r\n            <h4 class=\"mb-4\">{{'TraineepageTitle' | translate }}</h4>\r\n        </div>\r\n        <div class='row'>\r\n            <div class=\"col-sm-8 md-form\">\r\n                <mat-form-field class=\"example-full-width\">\r\n                    <mat-label>{{'TraineeSearchAccount' | translate }}</mat-label>\r\n                    <input type=\"text\" placeholder=\"{{'TraineeSearchPH' | translate }}\" matInput\r\n                        [(ngModel)]=\"filtertxt\">\r\n                </mat-form-field>\r\n                <input type=\"submit\" value=\"{{'GenericSearch' | translate }}\" class=\"btn color-bg-02 white-text\"\r\n                    (click)=\"filterbtn()\">\r\n            </div>\r\n            <div class=\"col-sm-4 md-form pull-right\">\r\n                <input type=\"button\" class=\"pull-right btn color-bg-01 white-text\"\r\n                    value=\"{{'GenericCreateNew' | translate }}\" (click)=\"createBtn()\">\r\n                <!-- <cust-add-trainee  [IsCreate]=\"true\" (Reload)=\"loadData()\"></cust-add-trainee> -->\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-12\">\r\n            <div class='table-responsive'>\r\n                <table class='table' *ngIf='page.content && page.content.length'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>{{'GenericName' | translate }}</th>\r\n                            <th>{{'GenericEmail' | translate }}</th>\r\n                            <th>{{'GenericNationalID' | translate }}</th>\r\n                            <th>{{'GenericMobile' | translate }}</th>\r\n                            <th *ngIf=\"IsAdmin\">{{'GenericAction' | translate }}</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor='let obj of page.content'>\r\n                            <td>{{ obj.Name}}</td>\r\n                            <td>{{ obj.Email}}</td>\r\n                            <td>{{ obj.NationalId}}</td>\r\n                            <td>{{ obj.Mobile}}</td>\r\n                            <td *ngIf=\"IsAdmin\">\r\n                                <!-- <cust-add-trainee [obj]=\"obj\" [IsEdit]=\"true\"></cust-add-trainee> -->\r\n                                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-primary\"\r\n                                    value=\"{{'GenericEdit' | translate }}\" (click)=\"Edit(obj.Id)\">\r\n                                <input *ngIf=\"!obj.IsActive\" type=\"button\" class=\"btn btn-success\"\r\n                                    value=\"{{'GenericActivate' | translate }}\" (click)=\"setActivate(obj.Id)\">\r\n                                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-danger\"\r\n                                    value=\"{{'GenericDeactivate' | translate }}\" (click)=\"setDeactivate(obj.Id)\">\r\n                                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-warning\"\r\n                                    value=\"{{'AccountResendLink' | translate }}\"\r\n                                    (click)=\"ResendActivationLink(obj.Email)\">\r\n                                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-success\"\r\n                                    value=\"{{'AccountPasswordLink' | translate }}\"\r\n                                    (click)=\"ResendPasswordLink(obj.Email)\">\r\n                                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-info\" value=\"{{'HeaderCertificate' | translate }}\"\r\n                                    (click)=\"Certificate(obj.Id)\">\r\n                                    <input *ngIf=\"obj.IsActive\" type=\"button\"\r\n                                    class=\"btn btn-dark\" value=\"{{'ChangeEmail' | translate }}\" (click)=\"ChangeEmail(contentChangeEmail, obj.Email)\">\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <app-custom-pagination [page]=\"page\" (nextPageEvent)=\"getNextPage()\" (previousPageEvent)=\"getPreviousPage()\"\r\n                (loadPageCurrentEvent)=\"getloadPageCurrent()\">\r\n            </app-custom-pagination>\r\n        </div>\r\n    </div>\r\n    <div>\r\n        <ng-template #contentChangeEmail let-modal>\r\n          <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header color-bg-01 white-text text-center\">\r\n  \r\n                <h6 class=\"modal-title\">\r\n                  {{'ChangeEmail' | translate}} \r\n                </h6>\r\n              </div>\r\n              <div class=\"modal-body pt-0\">\r\n  \r\n                <form novalidate (ngSubmit)=\"ChangeEmailSave(modelForm)\" #modelForm=\"ngForm\">\r\n                  <div class=\"form-group \">\r\n                    \r\n                      <mat-label><b>{{'OldEmail' | translate }}</b>: </mat-label>\r\n                      <mat-label>{{modelChangeEmail.EmailOld}} </mat-label>\r\n                  </div>\r\n                  <div class=\"form-group \">\r\n                    <mat-form-field class=\"example-full-width\">\r\n                      <mat-label>{{'NewEmail' | translate }}</mat-label>\r\n                      <input matInput oninput=\"this.value = this.value.toLowerCase()\" id=\"modelEmailId\" type=\"email\"\r\n                        placeholder=\"{{'GenericRequiredEmail' | translate }}\" [pattern]=\"emailPattern\" required\r\n                        [(ngModel)]=\"modelChangeEmail.EmailNew\" #modelEmailVar=\"ngModel\"\r\n                        name=\"modelEmail\"\r\n                        [ngClass]=\"{'is-invalid': (modelEmailVar.touched || modelEmailVar.dirty) && !modelEmailVar.valid }\" />\r\n                      <mat-error *ngIf=\"modelEmailVar.errors?.required\">{{'GenericEnterEmail' | translate }}</mat-error>\r\n                      <mat-error *ngIf=\"modelEmailVar.errors?.pattern\">{{'GenericEnterEmailValid' | translate }}\r\n                      </mat-error>\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <div class=\"form-group pull-right md-form\">\r\n                    <button class=\"btn color-bg-01 btn-sm white-text\" type=\"submit\"\r\n                      [disabled]=\"!modelForm.valid \">{{'GenericSave' | translate }}</button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n  \r\n                <button type=\"button\" class=\"btn color-bg-02 btn-sm white-text\"\r\n                  (click)=\"modal.close('Close click')\">{{'GenericClose' | translate }}</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </ng-template>\r\n      </div>\r\n</section>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\nimport { cUserProfileTrainerCertificateItem, cUserProfileTrainerCertificateItemWithProfile } from 'src/app/interface/Response/UserProfile.class';\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\nimport { ServiceUserProfile } from 'src/app/services/userprofile.service';\n\n@Component({\n  selector: 'app-trainer-certificate',\n  templateUrl: './trainer-certificate.component.html',\n  styleUrls: ['./trainer-certificate.component.css']\n})\nexport class TrainerCertificateComponent extends baseComponent implements OnInit {\n  pageTitle: string = 'My Trainings';\n  lstData: cUserProfileTrainerCertificateItemWithProfile;\n  message: ShowMessage = new ShowMessage();\n  filtertxt: string = '';\n  modelName: string = '';\n  modelId: string = '0';\n  modelNameEdited: string = '';\n\n  constructor(private BLService: ServiceUserProfile,\n    private router: Router,\n    private route: ActivatedRoute,\n    BLServiceShowMessage: ServiceShowMessage,\n    BLServiceLoginUser: ServiceLoginUser, BLTranslate: TranslateService,) {\n    super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\n  }\n\n  ngOnInit(): void {\n    this.loadData();\n  }\n  private loadData(): void {\n    const param = this.route.snapshot.paramMap.get('Id');\n    if (param) {\n      this.modelId = param;\n    }\n    this.BLService.MyTrainerCertificate(this.modelId).subscribe({\n      next: lst => {\n        this.lstData = lst;\n      },\n      error: err => this.message.Error(err)\n    });\n  }\n}\n","<section class=\"my-5\">\n    <div class=\"container\">\n        <div class='row'>\n            <h4 class=\"mb-4\">{{'CertificateTrainer' | translate }} - {{lstData?.TrainerName}}</h4>\n        </div>\n        <div class=\"col-md-12\" *ngIf='lstData?.lstResult && lstData?.lstResult.length'>\n            <div class='table-responsive'>\n                <table class='table'>\n                    <thead>\n                        <tr>\n                            <th>{{'GenericPartner' | translate }}</th>\n                            <th>{{'GenericTrainingType' | translate }}</th>\n                            <th>{{'GenericTrainingCategory' | translate }}</th>\n                            <th>{{'GenericAction' | translate }}</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor='let obj of lstData?.lstResult'>\n                            <td>{{ obj.PartnerName}}</td>\n                            <td>{{ obj.TrainingTypeName}}</td>\n                            <td>{{ obj.TrainingCategoryName}}</td>\n                            <td>\n                                <a *ngIf=\"obj.CertificatePath != ''\" href=\"{{FilesURL + obj.CertificatePath}}\"\n                                    target=\"_blank\">{{'CertificateDownloadCertificate' | translate }}</a>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n        <div class=\"col-md-12\" *ngIf='lstData?.lstResult.length == 0'>\n            <div class=\"text-center bg-red noresult\">\n                <span class=\"font-italic\">{{'CertificateNoResults' | translate }} </span><span>&#9785;</span>\n            </div>\n        </div>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\r\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\r\nimport { cEntityPartnerItem } from 'src/app/interface/Response/EntityPartner.class';\r\nimport { ServiceCertificate } from 'src/app/services/certificate.service';\r\nimport { ServiceEntityManagement } from 'src/app/services/entitymanagement.service';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgForm } from '@angular/forms';\r\nimport { cTrainingTypeItem } from 'src/app/interface/Response/TrainingType.class';\r\nimport { ITrainingCategoryItem } from 'src/app/interface/Response/TrainingCategory.interface';\r\nimport { ServiceDataManagement } from 'src/app/services/datamanagement.service';\r\nimport { Constants } from 'src/app/constants';\r\nimport { Page } from 'src/app/common/pagination/page';\r\nimport { cCertificateItem, cCertificateList } from 'src/app/interface/Response/Certificate.class';\r\nimport { CustomPaginationService } from 'src/app/common/pagination/services/custom-pagination.service';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { CertificateType } from 'src/app/Enum/CertificateType.enum';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-category',\r\n  templateUrl: './category.component.html',\r\n  styleUrls: ['./category.component.css']\r\n})\r\nexport class CategoryComponent extends baseComponent implements OnInit {\r\n  message: ShowMessage = new ShowMessage();\r\n  public progress: number;\r\n  public modelName;\r\n  public isTraineeChecked: boolean = true;\r\n  public isTrainerChecked: boolean = false;\r\n  public lstPartners: cEntityPartnerItem[];\r\n  public lstPartnersSelected: any;\r\n  public partnerFileToUpload: File;\r\n  public selectedTrainingTypeId: string;\r\n  public selectedTrainingCategory: string;\r\n\r\n  lstTrainingTypes: cTrainingTypeItem[];\r\n  lstTrainingCategory: ITrainingCategoryItem[];\r\n  TrainingTypeId: string;\r\n\r\n  FilesURL: string = Constants.FilesURL;\r\n\r\n  page: Page<cCertificateItem> = new Page();\r\n  lstCertificate: cCertificateList;\r\n\r\n\r\n  constructor(private BLServiceCertificate: ServiceCertificate,\r\n    private BLServiceDataManagement: ServiceDataManagement,\r\n    private BLServiceEntityManagement: ServiceEntityManagement,\r\n    private paginationService: CustomPaginationService,\r\n    BLServiceShowMessage: ServiceShowMessage,\r\n    BLServiceLoginUser: ServiceLoginUser,BLTranslate: TranslateService,\r\n    private modalService: NgbModal) { super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate); }\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n    this.BLServiceDataManagement.getTrainingTypeListActive().subscribe({\r\n      next: lst => {\r\n        this.lstTrainingTypes = lst;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n    this.BLServiceEntityManagement.getEntityPartnerListActive(\"\").subscribe({\r\n      next: lst => {\r\n        this.lstPartners = lst;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  loadData() {\r\n\r\n    this.BLServiceCertificate.CertificateListAllByPartnerId(this.page.pageable.pageCurrent, \"\").subscribe({\r\n      next: lst => {\r\n        this.lstCertificate = lst;\r\n        this.page.pageable.pageSize = lst.pageSize;\r\n        this.page.totalElements = lst.totalCount;\r\n        this.page.content = lst.lstResult;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  public getNextPage(): void {\r\n    this.page.pageable = this.paginationService.getNextPage(this.page);\r\n    this.loadData();\r\n  }\r\n\r\n  public getPreviousPage(): void {\r\n    this.page.pageable = this.paginationService.getPreviousPage(this.page);\r\n    this.loadData();\r\n  }\r\n  public getloadPageCurrent(): void {\r\n    this.loadData();\r\n  }\r\n  createBtn(content): void {\r\n    this.modelName = \"Upload partner certificate for category\";\r\n    this.isTraineeChecked = true;\r\n    this.isTrainerChecked = false;\r\n    this.lstPartnersSelected = \"\";\r\n    this.selectedTrainingTypeId = \"\";\r\n    this.selectedTrainingCategory = \"\";\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n\r\n  onTrainingTypeSelect(event) {\r\n    this.selectedTrainingTypeId = event.value;\r\n    this.BLServiceDataManagement.getTrainingCategoryListByTrainingType(this.selectedTrainingTypeId).subscribe({\r\n      next: lst => {\r\n        this.lstTrainingCategory = lst;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n\r\n  PartnerChange(event) {\r\n  }\r\n\r\n  onPartnerFileTypeChange(e, fileType: string) {\r\n    if (e.target.value == \"on\") {\r\n      if (fileType == \"Trainee\") {\r\n        this.isTraineeChecked = true;\r\n        this.isTrainerChecked = false;\r\n      }\r\n      else {\r\n        this.isTraineeChecked = false;\r\n        this.isTrainerChecked = true;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  modelSaveBtn(modelForm: NgForm): void {\r\n    if (!modelForm.valid)\r\n      return;\r\n    \r\n\r\n    if (!this.partnerFileToUpload) {\r\n      this.message.Error(this.CertificateSelectFileError);\r\n      this.BLServiceShowMessage.sendMessage(this.message);\r\n      return;\r\n    }\r\n    var fileType = 2;\r\n    if (this.isTraineeChecked)\r\n      fileType = 2;\r\n    else if (this.isTrainerChecked)\r\n      fileType = 1;\r\n    this.BLServiceCertificate.uploadCategoryCertificateFile(this.partnerFileToUpload, fileType, this.lstPartnersSelected, this.selectedTrainingTypeId, this.selectedTrainingCategory).subscribe({\r\n      next: fileUploadResponse => {\r\n        this.message.Success(this.msgSavedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n        this.modalService.dismissAll();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n    /* this.BLServiceUserProfile.create(model).subscribe({\r\n       next: response => {\r\n         this.message.Success(this.msgSavedSuccessfully);\r\n         this.BLServiceShowMessage.sendMessage(this.message);\r\n         this.loadData();\r\n         this.isClicked = false;\r\n         this.modalService.dismissAll();\r\n       },\r\n       error: err => {this.message.Error(err)\r\n         this.isClicked = false;}\r\n     });*/\r\n\r\n\r\n  }\r\n  /**\r\n   * name\r\n   */\r\n  public OnParentFileChanged(files) {\r\n    this.partnerFileToUpload = <File>files[0];\r\n  }\r\n\r\n  public uploadFile = (files, fileType) => {\r\n    if (files.length === 0) {\r\n      return;\r\n    }\r\n    let fileToUpload = <File>files[0];\r\n    if (fileToUpload.type != \"application/pdf\") {\r\n      this.message.Error(this.CertificateSelectFileError);\r\n      this.BLServiceShowMessage.sendMessage(this.message);\r\n    } else {\r\n      this.BLServiceCertificate.uploadFile(fileToUpload, fileType).subscribe({\r\n        next: fileUploadResponse => {\r\n          this.loadData();\r\n          this.message.Success(this.msgSavedSuccessfully);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.modalService.dismissAll();\r\n        },\r\n\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n  }\r\n\r\n  public onTrainingCategorySelect(event) {\r\n    this.selectedTrainingCategory = event.value;\r\n  }\r\n  GetType(Type) {\r\n    return CertificateType[Type];\r\n  }\r\n  setActivate(Id: string): void {\r\n    if (!confirm(this.msgsetActivate))\r\n      return;\r\n\r\n    this.BLServiceCertificate.CertificateActivate(Id).subscribe({\r\n      next: response => {\r\n\r\n        this.message.Success(this.msgActivatedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  setDeactivate(Id: string): void {\r\n    if (!confirm(this.msgsetDeactivate))\r\n      return;\r\n\r\n    this.BLServiceCertificate.CertificateDeActivate(Id).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.msgDeactivatedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n}\r\n","<section class=\"my-5\">\r\n  <div class=\"container\">\r\n    <div class='row'>\r\n      <h4 class=\"mb-4\">{{'CertificateCategoryPageTitle' | translate }}</h4>\r\n    </div>\r\n    <div class='row'>\r\n      <div class=\"col-sm-12 md-form pull-right mb-3\">\r\n        <button type=\"button\" class=\"pull-right btn color-bg-01 white-text\" (click)=\"createBtn(content)\">{{'CertificateAdd' | translate }}</button>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-12\">\r\n      <div class='table-responsive'>\r\n        <table class='table' *ngIf='page.content && page.content.length'>\r\n          <thead>\r\n            <tr>\r\n              <th>{{'GenericPartner' | translate }}</th>\r\n              <th>{{'GenericTrainingType' | translate }}</th>\r\n              <th>{{'GenericTrainingCategory' | translate }}</th>\r\n              <th>{{'GenericType' | translate }}</th>\r\n              <th>{{'GenericAction' | translate }}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor='let obj of page.content'>\r\n              <td>{{ obj.PartnerName}}</td>\r\n              <td>{{ obj.TrainingTypeName}}</td>\r\n              <td>{{ obj.TrainingCategoryName}}</td>\r\n              <td>{{ GetType(obj.Type)}}</td>\r\n              <td>\r\n                <a class=\"mr-2\" href=\"{{obj.FileName}}\" target=\"_blank\">{{'CertificateDownloadCertificate' | translate }}</a>  \r\n                <input *ngIf=\"!obj.IsActive\" type=\"button\" class=\"btn btn-success\" value=\"{{'GenericActivate' | translate }}\"\r\n                (click)=\"setActivate(obj._id)\">\r\n                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-danger\" value=\"{{'GenericDeactivate' | translate }}\"\r\n                (click)=\"setDeactivate(obj._id)\">\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <app-custom-pagination [page]=\"page\" (nextPageEvent)=\"getNextPage()\" (previousPageEvent)=\"getPreviousPage()\"\r\n        (loadPageCurrentEvent)=\"getloadPageCurrent()\">\r\n      </app-custom-pagination>\r\n    </div>\r\n\r\n\r\n<div>\r\n  <ng-template #content let-modal>\r\n    <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header color-bg-01 white-text text-center\">\r\n          <h6 class=\"modal-title\">{{'CertificateUploadPartnerCertificate' | translate }}</h6>\r\n        </div>\r\n        <div class=\"modal-body pt-0\">\r\n          <form novalidate (ngSubmit)=\"modelSaveBtn(modelForm)\" #modelForm=\"ngForm\">\r\n            <div class=\"form-group \">\r\n              <span class=\"pr-3\">{{'CertificateFiletype' | translate }}:</span>\r\n              <input type=\"radio\" checked=\"true\" name=\"partnerFileType\" (change)=\"onPartnerFileTypeChange($event,'Trainee')\" class=\"mr-2\"/>{{'GenericTrainee' | translate }}\r\n              <input type=\"radio\" name=\"partnerFileType\" (change)=\"onPartnerFileTypeChange($event,'Trainer')\"  class=\"mr-2 ml-4\"/>{{'GenericTrainer' | translate }}\r\n            </div>\r\n            <div class=\"form-group \">\r\n              <mat-form-field>\r\n                <mat-label>{{'GenericPartnerEntity' | translate }}</mat-label>\r\n                <mat-select placeholder=\"{{'GenericSelectPartner' | translate }}\" required [(ngModel)]=\"lstPartnersSelected\"\r\n                  #modelMyPartnerListIds=\"ngModel\" name=\"lstPartnersSelected\"  >\r\n                  <mat-option *ngFor=\"let obj of lstPartners\" [value]=\"obj.Id\">{{ obj.Name }}</mat-option>\r\n                </mat-select>\r\n                <mat-error *ngIf=\"modelMyPartnerListIds.errors?.required\">{{'GenericEnterPartner' | translate }}</mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n            <div class=\"form-group \">\r\n              <mat-form-field>\r\n                <mat-label>{{'GenericTrainingType' | translate }}</mat-label>\r\n                <mat-select id=\"TrainingTypeId\" placeholder=\"{{'GenericSelectTrainingType' | translate }}\"  #modelTrainingTypeIds=\"ngModel\" required\r\n                  [(ngModel)]=\"selectedTrainingTypeId\" name=\"selectedTrainingTypeId\" (selectionChange)=\"onTrainingTypeSelect($event)\">\r\n                  <mat-option value=\"\">{{'GenericSelectTrainingType' | translate }}</mat-option>\r\n                  <mat-option *ngFor=\"let item of lstTrainingTypes\" value=\"{{item.Id}}\">\r\n                    {{item.Name}}</mat-option>\r\n                </mat-select>\r\n                <mat-error *ngIf=\"modelTrainingTypeIds.errors?.required\">{{'GenericSelectTrainingTypeError' | translate }}</mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <mat-form-field>\r\n                <mat-label>{{'GenericTrainingCategory' | translate }}</mat-label>\r\n                <mat-select id=\"filtertrainingCategory\" placeholder=\"{{'GenericSelectTrainingCategory' | translate }}\"  #modelTrainingCategoryIds=\"ngModel\" required\r\n                  (selectionChange)=\"onTrainingCategorySelect($event)\" name=\"selectedTrainingCategory\" [(ngModel)]=\"selectedTrainingCategory\">\r\n                  <mat-option value=\"\">{{'GenericSelectTrainingCategory' | translate }}</mat-option>\r\n                  <mat-option *ngFor=\"let item of lstTrainingCategory\" value=\"{{item.Id}}\">\r\n                    {{item.Name}}</mat-option>\r\n                </mat-select>\r\n                <mat-error *ngIf=\"modelTrainingCategoryIds.errors?.required\">{{'GenericSelectTrainingCategoryError' | translate }}</mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n            <div class=\"col-md-12\">\r\n              <span class=\"pr-3\">{{'CertificateUploadCertificate' | translate }}</span>\r\n              <input id=\"uploadPartnerCertificate\" name=\"uploadPartnerCertificate\" type=\"file\" #filePartner\r\n                placeholder=\"{{'CertificateChoosefile' | translate }}\" accept=\"application/pdf,\" (change)=\"OnParentFileChanged(filePartner.files)\"\r\n                style=\"display:none;\">\r\n              <button id=\"btuploadPartnerCertificate\" name=\"btuploadPartnerCertificate\" type=\"button\"\r\n                class=\"btn btn-success\" (click)=\"filePartner.click()\">{{'CertificateSelectFile' | translate }}</button>\r\n            </div>\r\n            <div class=\"form-group pull-right\">\r\n              <button class=\"btn color-bg-01 btn-sm white-text btnSave\" type=\"submit\"\r\n                [disabled]=\"!modelForm.valid\">{{'GenericSave' | translate }}</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n\r\n          <button type=\"button\" class=\"btn color-bg-02 btn-sm white-text\"\r\n            (click)=\"modal.close('Close click')\">{{'GenericClose' | translate }}</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </ng-template>\r\n</div>","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { HttpEventType, HttpClient } from '@angular/common/http';\r\nimport { ServiceCertificate } from 'src/app/services/certificate.service';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgForm } from '@angular/forms';\r\nimport { cEntityPartnerItem } from 'src/app/interface/Response/EntityPartner.class';\r\nimport { ServiceEntityManagement } from 'src/app/services/entitymanagement.service';\r\nimport { ModelCertificateUpload } from 'src/app/interface/Model/ModelCertificateUpload.class';\r\nimport { CertificateType } from 'src/app/Enum/CertificateType.enum';\r\nimport { cCertificateItem, cCertificateList } from 'src/app/interface/Response/Certificate.class';\r\nimport { Page } from 'src/app/common/pagination/page';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { CustomPaginationService } from 'src/app/common/pagination/services/custom-pagination.service';\r\nimport { ConfigForm } from 'src/app/Enum/ConfigForm.enum';\r\nimport { Constants } from 'src/app/constants';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-generics',\r\n  templateUrl: './generics.component.html',\r\n  styleUrls: ['./generics.component.css']\r\n})\r\nexport class GenericsComponent extends baseComponent implements OnInit {\r\n  message: ShowMessage = new ShowMessage();\r\n  public progress: number;\r\n  public modelName;\r\n  public isTraineeChecked: boolean = false;\r\n  public isTrainerChecked: boolean = false;\r\n  public lstPartners: cEntityPartnerItem[];\r\n  public lstPartnersSelected: any;\r\n  public partnerFileToUpload: File;\r\n  FilesURL: string = Constants.FilesURL;\r\n\r\n  page: Page<cCertificateItem> = new Page();\r\n  lstCertificate: cCertificateList;\r\n  lstSystemCertificate: cCertificateList;\r\n\r\n  @Output() public onUploadFinished = new EventEmitter();\r\n\r\n  constructor(private BLServiceCertificate: ServiceCertificate,\r\n    private BLServiceEntityManagement: ServiceEntityManagement,\r\n    private paginationService: CustomPaginationService,\r\n    BLServiceShowMessage: ServiceShowMessage,\r\n    BLServiceLoginUser: ServiceLoginUser,BLTranslate: TranslateService,\r\n    private http: HttpClient, private modalService: NgbModal) {\r\n    super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.BLServiceEntityManagement.getEntityPartnerListActive(\"\").subscribe({\r\n      next: lst => {\r\n        this.lstPartners = lst;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n    this.loadData();\r\n  }\r\n  loadData() {\r\n    this.BLServiceCertificate.CertificateListAllGenericByPartnerId(this.page.pageable.pageCurrent, \"\").subscribe({\r\n      next: lst => {\r\n        this.lstCertificate = lst;\r\n        this.page.pageable.pageSize = lst.pageSize;\r\n        this.page.totalElements = lst.totalCount;\r\n        this.page.content = lst.lstResult;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n    this.BLServiceCertificate.CertificateListAllSystemGeneric().subscribe({\r\n      next: lst => {\r\n        \r\n        this.lstSystemCertificate = lst;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  public getNextPage(): void {\r\n    this.page.pageable = this.paginationService.getNextPage(this.page);\r\n    this.loadData();\r\n  }\r\n\r\n  public getPreviousPage(): void {\r\n    this.page.pageable = this.paginationService.getPreviousPage(this.page);\r\n    this.loadData();\r\n  }\r\n  public getloadPageCurrent(): void {\r\n    this.loadData();\r\n  }\r\n  createBtn(content): void {\r\n    this.modelName = \"Upload partner certificate\";\r\n    this.isTraineeChecked = true;\r\n    this.isTrainerChecked = false;\r\n    this.lstPartnersSelected = \"\";\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n\r\n  onPartnerFileTypeChange(e, fileType: string) {\r\n    if (e.target.value == \"on\") {\r\n      if (fileType == \"Trainee\") {\r\n        this.isTraineeChecked = true;\r\n        this.isTrainerChecked = false;\r\n      }\r\n      else {\r\n        this.isTraineeChecked = false;\r\n        this.isTrainerChecked = true;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  modelSaveBtn(modelForm: NgForm): void {\r\n\r\n    if (!modelForm.valid)\r\n      return;\r\n\r\n    if (!this.partnerFileToUpload) {\r\n      this.message.Error(this.CertificateSelectFileError);\r\n      this.BLServiceShowMessage.sendMessage(this.message);\r\n      return;\r\n    }\r\n\r\n    var fileType = 0;\r\n    if (this.isTraineeChecked)\r\n      fileType = 2;\r\n    else\r\n      fileType = 1;\r\n\r\n    this.BLServiceCertificate.uploadFile(this.partnerFileToUpload, fileType, this.lstPartnersSelected).subscribe({\r\n      next: fileUploadResponse => {\r\n        this.loadData();\r\n        this.message.Success(this.msgSavedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.modalService.dismissAll();\r\n      },\r\n\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n\r\n  public OnParentFileChanged(files) {\r\n    this.partnerFileToUpload = <File>files[0];\r\n  }\r\n\r\n  public uploadFile = (files, fileType,event) => {\r\n\r\n    console.log(event);\r\n    this.OnParentFileChanged(files);\r\n    if (files.length === 0) {\r\n      return;\r\n    }\r\n\r\n    if (!this.partnerFileToUpload) {\r\n      this.message.Error(this.CertificateSelectFileError);\r\n      this.BLServiceShowMessage.sendMessage(this.message);\r\n      return;\r\n    }\r\n\r\n    let fileToUpload = <File>files[0];\r\n    console.log(fileToUpload);\r\n    \r\n    if (fileToUpload.type != \"application/pdf\") {\r\n      this.message.Error(this.CertificatePDFOnly);\r\n      this.BLServiceShowMessage.sendMessage(this.message);\r\n    } else {\r\n      this.BLServiceCertificate.uploadFile(fileToUpload, fileType).subscribe({\r\n        next: fileUploadResponse => {\r\n          this.message.Success(this.msgSavedSuccessfully);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n        },\r\n\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n  }\r\n  GetType(Type) {\r\n    return CertificateType[Type];\r\n  }\r\n  setActivate(Id: string): void {\r\n    if (!confirm(this.msgsetActivate))\r\n      return;\r\n\r\n    this.BLServiceCertificate.CertificateActivate(Id).subscribe({\r\n      next: response => {\r\n\r\n        this.message.Success(this.msgActivatedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  setDeactivate(Id: string): void {\r\n    if (!confirm(this.msgsetDeactivate))\r\n      return;\r\n\r\n    this.BLServiceCertificate.CertificateDeActivate(Id).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.msgDeactivatedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n}\r\n","<section class=\"my-5\">\r\n  <div class=\"container\">\r\n    <div class='row'>\r\n      <h4 class=\"mb-4\">{{'CertificateGenerics' | translate }}</h4>\r\n    </div>\r\n    <div class='row'>\r\n      <h6 class=\"mb-4\">{{'CertificateSysten' | translate }}</h6>\r\n    </div>\r\n    <div class='row'>\r\n      <div class=\"col-sm-6 md-form\">\r\n        <span class=\"pr-2\">{{'CertificateUploadTrainee' | translate }}</span>\r\n        <input id=\"uploadTrainee\" name=\"uploadTrainee\" type=\"file\" #fileTrainee placeholder=\"{{'CertificateChoosefile' | translate }}\"\r\n          accept=\"application/pdf\" (change)=\"uploadFile(fileTrainee.files,2,$event)\" style=\"display:none;\">\r\n        <button id=\"btnuploadTrainee\" name=\"btnuploadTrainee\" type=\"button\" class=\"btn btn-success\"\r\n          (click)=\"fileTrainee.click()\">{{'CertificateSelectFile' | translate }}</button>\r\n      </div>\r\n      <div class=\"col-sm-6 md-form pull-right\">\r\n        <span class=\"pr-2\">{{'CertificateUploadTrainer' | translate }}</span>\r\n        <input id=\"uploadTrainer\" name=\"uploadTrainer\" type=\"file\" #fileTrainer placeholder=\"{{'CertificateChoosefile' | translate }}\"\r\n          accept=\"application/pdf\" (change)=\"uploadFile(fileTrainer.files,1,$event)\" style=\"display:none;\">\r\n        <button id=\"btnuploadTrainer\" name=\"btnuploadTrainer\" type=\"button\" class=\"btn btn-success\"\r\n          (click)=\"fileTrainer.click()\">{{'CertificateSelectFile' | translate }}</button>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-12 mt-2\">\r\n      <div class='table-responsive'>\r\n        <table class='table' >\r\n          <thead>\r\n            <tr>\r\n              <th>{{'GenericType' | translate }}</th>\r\n              <th>{{'GenericAction' | translate }}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor='let cert of lstSystemCertificate?.lstResult'>\r\n              <td>{{ GetType(cert.Type)}}</td>\r\n              <td>\r\n                <a class=\"mr-2\" href=\"{{cert.FileName}}\" target=\"_blank\">{{'CertificateDownloadCertificate' | translate }}</a>  \r\n                <input *ngIf=\"!cert.IsActive\" type=\"button\" class=\"btn btn-success\" value=\"{{'GenericActivate' | translate }}\"\r\n                (click)=\"setActivate(cert._id)\">\r\n                <input *ngIf=\"cert.IsActive\" type=\"button\" class=\"btn btn-danger\" value=\"{{'GenericDeactivate' | translate }}\"\r\n                (click)=\"setDeactivate(cert._id)\">\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n    <div class='row'>\r\n      <hr class=\"w-100\" style=\"border-top: 4px solid rgba(0,0,0,.1);\">\r\n    </div>\r\n    <div class='row'>\r\n      <h6 class=\"mb-4\">{{'CertificatePartnerGeneric' | translate }}</h6>\r\n    </div>\r\n    <div class=\"row\" style=\"margin-bottom:15px;\">\r\n      <div class=\"col-sm-12 md-form pull-right mb-3\">\r\n        <button type=\"button\" class=\"pull-right btn color-bg-01 white-text\" (click)=\"createBtn(content)\">{{'CertificateAdd' | translate }}</button>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-12\">\r\n      <div class='table-responsive'>\r\n        <table class='table' *ngIf='page.content && page.content.length'>\r\n          <thead>\r\n            <tr>\r\n              <th>{{'GenericPartner' | translate }}</th>\r\n              <th>{{'GenericType' | translate }}</th>\r\n              <th>{{'GenericAction' | translate }}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor='let obj of page.content'>\r\n              <td>{{ obj.PartnerName}}</td>\r\n              <td>{{ GetType(obj.Type)}}</td>\r\n              <td>\r\n                <a class=\"mr-2\" href=\"{{ obj.FileName}}\" target=\"_blank\">{{'CertificateDownloadCertificate' | translate }}</a>  \r\n                <input *ngIf=\"!obj.IsActive\" type=\"button\" class=\"btn btn-success\" value=\"{{'GenericActivate' | translate }}\"\r\n                (click)=\"setActivate(obj._id)\">\r\n                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-danger\" value=\"{{'GenericDeactivate' | translate }}\"\r\n                (click)=\"setDeactivate(obj._id)\">\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <app-custom-pagination [page]=\"page\" (nextPageEvent)=\"getNextPage()\" (previousPageEvent)=\"getPreviousPage()\"\r\n        (loadPageCurrentEvent)=\"getloadPageCurrent()\">\r\n      </app-custom-pagination>\r\n    </div>\r\n  </div>\r\n</section>\r\n\r\n<div>\r\n  <ng-template #content let-modal>\r\n    <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header color-bg-01 white-text text-center\">\r\n          <h6 class=\"modal-title\">{{'CertificateUploadPartnerCertificate' | translate }}</h6>\r\n        </div>\r\n        <div class=\"modal-body pt-0\">\r\n          <form novalidate (ngSubmit)=\"modelSaveBtn(modelForm)\" #modelForm=\"ngForm\">\r\n            <div class=\"form-group \">\r\n              <span class=\"pr-3\">{{'CertificateFiletype' | translate }}:</span>\r\n              <input type=\"radio\" checked=\"true\" name=\"partnerFileType\" (change)=\"onPartnerFileTypeChange($event,'Trainee')\" class=\"mr-2\"/>{{'GenericTrainee' | translate }}\r\n              <input type=\"radio\" name=\"partnerFileType\" (change)=\"onPartnerFileTypeChange($event,'Trainer')\"  class=\"mr-2 ml-4\"/>{{'GenericTrainer' | translate }}\r\n            </div>\r\n            <div class=\"form-group \">\r\n              <mat-form-field>\r\n                <mat-label>{{'GenericPartnerEntity' | translate }}</mat-label>\r\n                <mat-select placeholder=\"{{'GenericSelectPartner' | translate }} \" required [(ngModel)]=\"lstPartnersSelected\"\r\n                  #modelMyPartnerListIds=\"ngModel\" name=\"MyPartnerListIds\">\r\n                  <mat-option *ngFor=\"let obj of lstPartners\" [value]=\"obj.Id\">{{ obj.Name }}</mat-option>\r\n                </mat-select>\r\n                <mat-error *ngIf=\"modelMyPartnerListIds.errors?.required\">{{'GenericEnterPartner' | translate }}</mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n            <div class=\"form-group \">\r\n              <span class=\"pr-2\">{{'CertificateUploadCertificate' | translate }}</span>\r\n              <input id=\"uploadPartnerCertificate\" name=\"uploadPartnerCertificate\" type=\"file\" #filePartner\r\n                placeholder=\"{{'CertificateChoosefile' | translate }}\" accept=\"application/pdf,\" (change)=\"OnParentFileChanged(filePartner.files)\"\r\n                style=\"display:none;\">\r\n              <button id=\"btuploadPartnerCertificate\" name=\"btuploadPartnerCertificate\" type=\"button\"\r\n                class=\"btn btn-success\" (click)=\"filePartner.click()\">{{'CertificateSelectFile' | translate }}</button>\r\n            </div>\r\n            <div class=\"form-group pull-right\">\r\n              <button class=\"btn color-bg-01 btn-sm white-text btnSave\" type=\"submit\"\r\n                \r\n                [disabled]=\"!modelForm.valid\">{{'GenericSave' | translate }}</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n\r\n          <button type=\"button\" class=\"btn color-bg-02 btn-sm white-text\"\r\n            (click)=\"modal.close('Close click')\">{{'GenericClose' | translate }}</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </ng-template>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\nimport { ServiceUserProfile } from 'src/app/services/userprofile.service';\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\nimport { Page } from 'src/app/common/pagination/page';\nimport { cUserProfileTrainerCertificateList, cUserProfileTrainerCertificateItem } from 'src/app/interface/Response/UserProfile.class';\nimport { CustomPaginationService } from 'src/app/common/pagination/services/custom-pagination.service';\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\nimport { ModelTrainerCertificateApproval } from 'src/app/interface/Model/ModelTrainerCertificateApproval.class';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-trainer-approval',\n  templateUrl: './trainer-approval.component.html',\n  styleUrls: ['./trainer-approval.component.css']\n})\nexport class TrainerApprovalComponent extends baseComponent implements OnInit {\n  message: ShowMessage = new ShowMessage();\n\n  page: Page<cUserProfileTrainerCertificateItem> = new Page();\n  lstCertificate: cUserProfileTrainerCertificateList;\n  msgApprovedSuccessfully:string;\n  msgsetApproved:string;\n\n  constructor(private BLServiceUserProfile: ServiceUserProfile,\n    private paginationService: CustomPaginationService,\n    BLServiceShowMessage: ServiceShowMessage,\n    BLServiceLoginUser: ServiceLoginUser, BLTranslate: TranslateService,) {\n    super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\n  }\n\n  ngOnInit() {\n    this.BLTranslate.get(\"msgApprovedSuccessfully\").subscribe(res => { this.msgApprovedSuccessfully = res; });\n    this.BLTranslate.get(\"msgsetApproved\").subscribe(res => { this.msgsetApproved = res; });\n   \n    this.loadData();\n  }\n  loadData() {\n\n    this.BLServiceUserProfile.GetTrainerCertificate(this.page.pageable.pageCurrent, \"\").subscribe({\n      next: lst => {\n        this.lstCertificate = lst;\n        this.page.pageable.pageSize = lst.pageSize;\n        this.page.totalElements = lst.totalCount;\n        this.page.content = lst.lstResult;\n      },\n      error: err => this.message.Error(err)\n    });\n  }\n  public getNextPage(): void {\n    this.page.pageable = this.paginationService.getNextPage(this.page);\n    this.loadData();\n  }\n\n  public getPreviousPage(): void {\n    this.page.pageable = this.paginationService.getPreviousPage(this.page);\n    this.loadData();\n  }\n  public getloadPageCurrent(): void {\n    this.loadData();\n  }\n\n  Approve(obj: cUserProfileTrainerCertificateItem): void {\n    if (!confirm(this.msgsetApproved))\n      return;\n\n    var model = new ModelTrainerCertificateApproval();\n    model.TrainerId = obj.TrainerId;\n    model.PartnerId = obj.PartnerId;\n    model.TrainingCategoryId = obj.TrainingCategoryId;\n\n    this.BLServiceUserProfile.CertificateApprove(model).subscribe({\n      next: response => {\n\n        this.message.Success(this.msgApprovedSuccessfully);\n        this.BLServiceShowMessage.sendMessage(this.message);\n        this.loadData();\n      },\n      error: err => this.message.Error(err)\n    });\n  }\n\n}\n","<section class=\"my-5\">\n    <div class=\"container\">\n      <div class='row'>\n        <h4 class=\"mb-4\">{{'CertificateCertificateApproval' | translate }} </h4>\n      </div>\n      <div class=\"col-md-12\">\n        <div class='table-responsive'>\n          <table class='table' *ngIf='page.content && page.content.length'>\n            <thead>\n              <tr>\n                <th>{{'GenericTrainer' | translate }}</th>\n                <th>{{'GenericPartner' | translate }}</th>\n                <th>{{'GenericTrainingType' | translate }}</th>\n                <th>{{'GenericTrainingCategory' | translate }}</th>\n                <th>{{'CertificateExamCount' | translate }}</th>\n                <th>{{'GenericAction' | translate }}</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor='let obj of page.content'>\n                <td>{{ obj.TrainerName}}</td>\n                <td>{{ obj.PartnerName}}</td>\n                <td>{{ obj.TrainingTypeName}}</td>\n                <td>{{ obj.TrainingCategoryName}}</td>\n                <td>{{obj.ExamCount}}</td>\n                <td>\n                  <input type=\"button\" class=\"btn btn-success\" value=\"{{'CertificateApprove' | translate }}\"\n                  (click)=\"Approve(obj)\">\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n      <div>\n        <app-custom-pagination [page]=\"page\" (nextPageEvent)=\"getNextPage()\" (previousPageEvent)=\"getPreviousPage()\"\n          (loadPageCurrentEvent)=\"getloadPageCurrent()\">\n        </app-custom-pagination>\n      </div>\n  \n  ","import { Component, OnInit } from '@angular/core';\r\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\r\nimport { cEntityPartnerItem } from 'src/app/interface/Response/EntityPartner.class';\r\nimport { ServiceCertificate } from 'src/app/services/certificate.service';\r\nimport { ServiceEntityManagement } from 'src/app/services/entitymanagement.service';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgForm } from '@angular/forms';\r\nimport { cTrainingTypeItem } from 'src/app/interface/Response/TrainingType.class';\r\nimport { ITrainingCategoryItem } from 'src/app/interface/Response/TrainingCategory.interface';\r\nimport { ServiceDataManagement } from 'src/app/services/datamanagement.service';\r\nimport { CustomPaginationService } from 'src/app/common/pagination/services/custom-pagination.service';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { Page } from 'src/app/common/pagination/page';\r\nimport { cCertificateItem, cCertificateList } from 'src/app/interface/Response/Certificate.class';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { CertificateType } from 'src/app/Enum/CertificateType.enum';\r\nimport { Constants } from 'src/app/constants';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-trainingcenter',\r\n  templateUrl: './trainingcenter.component.html',\r\n  styleUrls: ['./trainingcenter.component.css']\r\n})\r\nexport class CertificateTrainingCenterComponent extends baseComponent implements OnInit {\r\n  message: ShowMessage = new ShowMessage();\r\n  public progress: number;\r\n  public modelName;\r\n  public isTraineeChecked: boolean = true;\r\n  public isTrainerChecked: boolean = false;\r\n  public lstPartners: cEntityPartnerItem[];\r\n  public lstTrainingCenter: any;\r\n  public lstPartnersSelected: cEntityPartnerItem;\r\n  public partnerFileToUpload: File;\r\n  public selectPartnerId: string;\r\n  public selectedTrainingTypeId: string;\r\n  public selectedTrainingCategory: string;\r\n  public selectedTrainingCenter: string;\r\n  lstTrainingTypes: cTrainingTypeItem[];\r\n  lstTrainingCategory: ITrainingCategoryItem[];\r\n  TrainingTypeId: string;\r\n\r\n  FilesURL: string = Constants.FilesURL;\r\n  page: Page<cCertificateItem> = new Page();\r\n  lstCertificate: cCertificateList;\r\n\r\n  constructor(private BLServiceCertificate: ServiceCertificate,\r\n    private BLServiceDataManagement: ServiceDataManagement,\r\n    private BLServiceEntityManagement: ServiceEntityManagement,\r\n    private paginationService: CustomPaginationService,\r\n    BLServiceShowMessage: ServiceShowMessage,\r\n    BLServiceLoginUser: ServiceLoginUser,BLTranslate: TranslateService, private modalService: NgbModal) {\r\n    super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n    this.BLServiceDataManagement.getTrainingTypeListActive().subscribe({\r\n      next: lst => {\r\n        this.lstTrainingTypes = lst;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n    this.BLServiceEntityManagement.getEntityPartnerListActive(\"\").subscribe({\r\n      next: lst => {\r\n        this.lstPartners = lst;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  loadData() {\r\n\r\n    this.BLServiceCertificate.CertificateListAllByTrainingCenterId(this.page.pageable.pageCurrent, \"\").subscribe({\r\n      next: lst => {\r\n        this.lstCertificate = lst;\r\n        this.page.pageable.pageSize = lst.pageSize;\r\n        this.page.totalElements = lst.totalCount;\r\n        this.page.content = lst.lstResult;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  public getNextPage(): void {\r\n    this.page.pageable = this.paginationService.getNextPage(this.page);\r\n    this.loadData();\r\n  }\r\n\r\n  public getPreviousPage(): void {\r\n    this.page.pageable = this.paginationService.getPreviousPage(this.page);\r\n    this.loadData();\r\n  }\r\n  public getloadPageCurrent(): void {\r\n    this.loadData();\r\n  }\r\n  createBtn(content): void {\r\n    this.modelName = \"Upload partner certificate for category\";\r\n\r\n    this.isTraineeChecked = true;\r\n    this.isTrainerChecked = false;\r\n    this.selectPartnerId = \"\";\r\n    this.selectedTrainingCenter = \"\";\r\n    this.selectedTrainingTypeId = \"\";\r\n    this.selectedTrainingCategory = \"\";\r\n\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n\r\n  onTrainingTypeSelect(event) {\r\n    this.selectedTrainingTypeId = event.value;\r\n    this.BLServiceDataManagement.getTrainingCategoryListByTrainingType(this.selectedTrainingTypeId).subscribe({\r\n      next: lst => {\r\n        this.lstTrainingCategory = lst;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n\r\n  PartnerChange(event) {\r\n    var selectedPartner = this.lstPartners.find(item => item.Id == this.selectPartnerId);\r\n\r\n    var tc = selectedPartner.TrainingCenters;\r\n    this.lstTrainingCenter = tc.filter(a => a.IsActive == true);\r\n  }\r\n\r\n  onPartnerFileTypeChange(e, fileType: string) {\r\n    if (e.target.value == \"on\") {\r\n      if (fileType == \"Trainee\") {\r\n        this.isTraineeChecked = true;\r\n        this.isTrainerChecked = false;\r\n      }\r\n      else {\r\n        this.isTraineeChecked = false;\r\n        this.isTrainerChecked = true;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  modelSaveBtn(modelForm: NgForm): void {\r\n    if (!modelForm.valid)\r\n      return;\r\n\r\n    if (!this.partnerFileToUpload) {\r\n      this.message.Error(this.CertificateSelectFileError);\r\n      this.BLServiceShowMessage.sendMessage(this.message);\r\n      return;\r\n    }\r\n\r\n    var fileType = 2;\r\n    if (this.isTraineeChecked)\r\n      fileType = 2;\r\n    else\r\n      fileType = 1;\r\n    this.BLServiceCertificate.uploadTrainingCenterCertificateFile(this.partnerFileToUpload, fileType, this.selectPartnerId, this.selectedTrainingCenter, this.selectedTrainingTypeId, this.selectedTrainingCategory).subscribe({\r\n      next: fileUploadResponse => {\r\n        this.message.Success(this.msgSavedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n        this.modalService.dismissAll();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n    /* this.BLServiceUserProfile.create(model).subscribe({\r\n       next: response => {\r\n         this.message.Success(this.msgSavedSuccessfully);\r\n         this.BLServiceShowMessage.sendMessage(this.message);\r\n         this.loadData();\r\n         this.isClicked = false;\r\n         this.modalService.dismissAll();\r\n       },\r\n       error: err => {this.message.Error(err)\r\n         this.isClicked = false;}\r\n     });*/\r\n  }\r\n  /**\r\n   * name\r\n   */\r\n  public OnParentFileChanged(files) {\r\n    this.partnerFileToUpload = <File>files[0];\r\n  }\r\n\r\n  public uploadFile = (files, fileType) => {\r\n    if (files.length === 0) {\r\n      return;\r\n    }\r\n    let fileToUpload = <File>files[0];\r\n    if (fileToUpload.type != \"application/pdf\") {\r\n      this.message.Error(this.CertificatePDFOnly);\r\n      this.BLServiceShowMessage.sendMessage(this.message);\r\n    } else {\r\n      this.BLServiceCertificate.uploadFile(fileToUpload, fileType).subscribe({\r\n        next: fileUploadResponse => {\r\n          this.message.Success(this.msgSavedSuccessfully);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.modalService.dismissAll();\r\n        },\r\n\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n  }\r\n\r\n  public onTrainingCategorySelect(event) {\r\n    this.selectedTrainingCategory = event.value;\r\n  }\r\n\r\n  public onTrainingCenterSelect(event) {\r\n    this.selectedTrainingCenter = event.value;\r\n  }\r\n  GetType(Type) {\r\n    return CertificateType[Type];\r\n  }\r\n  setActivate(Id: string): void {\r\n    if (!confirm(this.msgsetActivate))\r\n      return;\r\n\r\n    this.BLServiceCertificate.CertificateActivate(Id).subscribe({\r\n      next: response => {\r\n\r\n        this.message.Success(this.msgActivatedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  setDeactivate(Id: string): void {\r\n    if (!confirm(this.msgsetDeactivate))\r\n      return;\r\n\r\n    this.BLServiceCertificate.CertificateDeActivate(Id).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.msgDeactivatedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n}\r\n","<section class=\"my-5\">\r\n  <div class=\"container\">\r\n    <div class='row'>\r\n      <h4 class=\"mb-4\">{{'CertificateTrainingCenter' | translate }}</h4>\r\n    </div>\r\n    <div class='row'>\r\n      <div class=\"col-sm-12 md-form pull-right mb-3\">\r\n        <button type=\"button\" class=\"pull-right btn color-bg-01 white-text\" (click)=\"createBtn(content)\">{{'CertificateAdd' | translate }}</button>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-12\">\r\n      <div class='table-responsive'>\r\n        <table class='table' *ngIf='page.content && page.content.length'>\r\n          <thead>\r\n            <tr>\r\n              <th>{{'GenericPartner' | translate }}</th>\r\n              <th>{{'GenericTrainingCenter' | translate }}</th>\r\n              <th>{{'GenericTrainingType' | translate }}</th>\r\n              <th>{{'GenericTrainingCategory' | translate }}</th>\r\n              <th>{{'GenericType' | translate }}</th>\r\n              <th>{{'GenericAction' | translate }}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor='let obj of page.content'>\r\n              <td>{{ obj.PartnerName}}</td>\r\n              <td>{{ obj.TrainingCenterName}}</td>\r\n              <td>{{ obj.TrainingTypeName}}</td>\r\n              <td>{{ obj.TrainingCategoryName}}</td>\r\n              <td>{{ GetType(obj.Type)}}</td>\r\n              <td>\r\n                <a class=\"mr-2\" href=\"{{ obj.FileName}}\" target=\"_blank\">{{'CertificateDownloadCertificate' | translate }}</a>  \r\n                <input *ngIf=\"!obj.IsActive\" type=\"button\" class=\"btn btn-success\" value=\"{{'GenericActivate' | translate }}\"\r\n                (click)=\"setActivate(obj._id)\">\r\n                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-danger\" value=\"{{'GenericDeactivate' | translate }}\"\r\n                (click)=\"setDeactivate(obj._id)\">\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <app-custom-pagination [page]=\"page\" (nextPageEvent)=\"getNextPage()\" (previousPageEvent)=\"getPreviousPage()\"\r\n        (loadPageCurrentEvent)=\"getloadPageCurrent()\">\r\n      </app-custom-pagination>\r\n    </div>\r\n  </div>\r\n</section>\r\n\r\n<div>\r\n  <ng-template #content let-modal>\r\n    <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header color-bg-01 white-text text-center\">\r\n          <h6 class=\"modal-title\">{{'CertificateUploadPartnerCertificate' | translate }}</h6>\r\n        </div>\r\n        <div class=\"modal-body pt-0\">\r\n          <form novalidate (ngSubmit)=\"modelSaveBtn(modelForm)\" #modelForm=\"ngForm\">\r\n            <div class=\"form-group \">\r\n              <span class=\"pr-3\">{{'CertificateFiletype' | translate }}:</span>\r\n              <input type=\"radio\" checked=\"true\" name=\"partnerFileType\" (change)=\"onPartnerFileTypeChange($event,'Trainee')\" class=\"mr-2\"/>{{'GenericTrainee' | translate }}\r\n              <!-- <input type=\"radio\" name=\"partnerFileType\" (change)=\"onPartnerFileTypeChange($event,'Trainer')\"  class=\"mr-2 ml-4\"/>{{'GenericTrainer' | translate }} -->\r\n            </div>\r\n            <div class=\"form-group \">\r\n              <mat-form-field>\r\n                <mat-label>{{'GenericPartnerEntity' | translate }}</mat-label>\r\n                <mat-select placeholder=\"{{'GenericSelectPartner' | translate }}\" required [(ngModel)]=\"selectPartnerId\"\r\n                  #modelMyPartnerListIds=\"ngModel\" name=\"selectPartnerId\" (selectionChange)=\"PartnerChange($event)\">\r\n                  <mat-option *ngFor=\"let obj of lstPartners\" [value]=\"obj.Id\">{{ obj.Name }}</mat-option>\r\n                </mat-select>\r\n                <mat-error *ngIf=\"modelMyPartnerListIds.errors?.required\">{{'GenericEnterPartner' | translate }}</mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"form-group \">\r\n              <mat-form-field>\r\n                <mat-label>{{'GenericTrainingCenter' | translate }}s</mat-label>\r\n                <mat-select id=\"TrainingCenterId\" placeholder=\"Select a TrainingCenterId\" required #modelMyTCListIds=\"ngModel\"\r\n                  [(ngModel)]=\"selectedTrainingCenter\" (selectionChange)=\"onTrainingCenterSelect($event)\"\r\n                  name=\"TrainingCenterId\">\r\n                  <mat-option value=\"\">Select a Training Center</mat-option>\r\n                  <mat-option *ngFor=\"let item of lstTrainingCenter\" value=\"{{item.Id}}\">\r\n                    {{item.Name}}</mat-option>\r\n                </mat-select>\r\n                <mat-error *ngIf=\"modelMyTCListIds.errors?.required\">Please choose a Training Center.</mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n            <div class=\"form-group \">\r\n              <mat-form-field>\r\n                <mat-label>{{'GenericTrainingType' | translate }}</mat-label>\r\n                <mat-select id=\"TrainingTypeId\" placeholder=\"{{'GenericSelectTrainingType' | translate }}\" #modelTrainingTypeIds=\"ngModel\"\r\n                  required [(ngModel)]=\"selectedTrainingTypeId\" name=\"selectedTrainingTypeId\"\r\n                  (selectionChange)=\"onTrainingTypeSelect($event)\">\r\n                  <mat-option value=\"\">{{'GenericSelectTrainingType' | translate }}</mat-option>\r\n                  <mat-option *ngFor=\"let item of lstTrainingTypes\" value=\"{{item.Id}}\">\r\n                    {{item.Name}}</mat-option>\r\n                </mat-select>\r\n                <mat-error *ngIf=\"modelTrainingTypeIds.errors?.required\">{{'GenericSelectTrainingTypeError' | translate }}</mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <mat-form-field>\r\n                <mat-label>{{'GenericTrainingCategory' | translate }}</mat-label>\r\n                <mat-select id=\"filtertrainingCategory\" placeholder=\"{{'GenericSelectTrainingCategory' | translate }}\"\r\n                  #modelTrainingCategoryIds=\"ngModel\" required (selectionChange)=\"onTrainingCategorySelect($event)\"\r\n                  name=\"selectedTrainingCategory\" [(ngModel)]=\"selectedTrainingCategory\">\r\n                  <mat-option value=\"\">{{'GenericSelectTrainingCategory' | translate }}</mat-option>\r\n                  <mat-option *ngFor=\"let item of lstTrainingCategory\" value=\"{{item.Id}}\">\r\n                    {{item.Name}}</mat-option>\r\n                </mat-select>\r\n                <mat-error *ngIf=\"modelTrainingCategoryIds.errors?.required\">{{'GenericSelectTrainingCategoryError' | translate }}\r\n                </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n            <div class=\"col-md-12\">\r\n              <span class=\"pr-3\">{{'CertificateUploadCertificate' | translate }}</span>\r\n              <input id=\"uploadPartnerCertificate\" name=\"uploadPartnerCertificate\" type=\"file\" #filePartner\r\n                placeholder=\"{{'CertificateChoosefile' | translate }}\" accept=\"application/pdf,\" (change)=\"OnParentFileChanged(filePartner.files)\"\r\n                style=\"display:none;\">\r\n              <button id=\"btuploadPartnerCertificate\" name=\"btuploadPartnerCertificate\" type=\"button\"\r\n                class=\"btn btn-success\" (click)=\"filePartner.click()\">{{'CertificateSelectFile' | translate }}</button>\r\n            </div>\r\n            <div class=\"form-group pull-right\">\r\n              <button class=\"btn color-bg-01 btn-sm white-text btnSave\" type=\"submit\"\r\n                \r\n                [disabled]=\"!modelForm.valid\">{{'GenericSave' | translate }}</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n\r\n          <button type=\"button\" class=\"btn color-bg-02 btn-sm white-text\"\r\n            (click)=\"modal.close('Close click')\">{{'GenericClose' | translate }}</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </ng-template>\r\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-verify',\n  templateUrl: './verify.component.html',\n  styleUrls: ['./verify.component.css']\n})\nexport class VerifyComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>verify works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { ModelContentData } from 'src/app/interface/Model/ModelContentData.class';\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\nimport { ServiceContentData } from 'src/app/services/content-data.service';\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\nimport { EnumContentData } from 'src/app/Enum/ContentData.enum';\nimport { NgForm } from '@angular/forms';\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-about-edit',\n  templateUrl: './about-edit.component.html',\n  styleUrls: ['./about-edit.component.css']\n})\nexport class AboutEditComponent extends baseComponent implements OnInit {\n\n  pageTitle: string = 'Editing About Section';\n  modelObj: ModelContentData = new ModelContentData();\n  message: ShowMessage = new ShowMessage();\n  \n  constructor(private BLService: ServiceContentData,\n    BLServiceShowMessage: ServiceShowMessage,\n    BLServiceLoginUser : ServiceLoginUser,BLTranslate: TranslateService,) { \n      super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\n    }\n\n  ngOnInit(): void {\n    this.loadData();\n  }\nloadData() {\n    this.BLService.ContentDataOneGetByTypeId(EnumContentData.About).subscribe({\n      next: obj => {\n        this.modelObj = obj;\n      },\n      error: err => this.message.Error(err)\n    });\n  }\n  modelSaveBtn(modelForm: NgForm): void {\n    if (!modelForm.valid)\n      return;\n\n      this.BLService.updateContentData(this.modelObj).subscribe({\n        next: response => {\n          this.message.Success(this.msgSavedSuccessfully);\n          this.BLServiceShowMessage.sendMessage(this.message);\n        },\n        error: err => this.message.Error(err)\n      });\n    }\n}\n","<section class=\"my-5\">\n    <div class=\"container\">\n        <div class='row'>\n            <h4 class=\"mb-4\">{{'ContentAboutTitle' | translate }}</h4>\n        </div>\n        <div class='row'>\n            <div class=\"modal-body pt-0\">\n                <form novalidate (ngSubmit)=\"modelSaveBtn(modelForm)\" #modelForm=\"ngForm\">\n                    <div class=\"col-md-8\">\n                        <div class=\"form-group \">\n                            <mat-form-field class=\"example-full-width\">\n                                <mat-label>{{'ContentTitle' | translate }}</mat-label>\n                                <input matInput id=\"modelNameId\" type=\"text\" placeholder=\"{{'ContentTitlePH' | translate }}\" required\n                                    [(ngModel)]=\"modelObj.Name\" #modelNameVar=\"ngModel\" name=\"modelName\"\n                                    [ngClass]=\"{'is-invalid': (modelNameVar.touched || modelNameVar.dirty) && !modelNameVar.valid }\" />\n                                <mat-error *ngIf=\"modelNameVar.errors?.required\">{{'ContentTitleError' | translate }}</mat-error>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"form-group \">\n                            <mat-form-field class=\"example-full-width\">\n                                <mat-label>{{'ContentData' | translate }}</mat-label>\n                                <textarea matInput id=\"modelDataId\" type=\"text\" placeholder=\"{{'ContentDataPH' | translate }}\" required\n                                    [(ngModel)]=\"modelObj.Data\" #modelDataVar=\"ngModel\" name=\"modelData\" rows=\"5\" cols=\"20\"\n                                    [ngClass]=\"{'is-invalid': (modelDataVar.touched || modelDataVar.dirty) && !modelDataVar.valid }\"></textarea>\n                                <mat-error *ngIf=\"modelDataVar.errors?.required\">{{'ContentDataError' | translate }}</mat-error>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"form-group pull-right md-form\">\n                            <button class=\"btn color-bg-01 btn-sm white-text btnSave\" type=\"submit\"\n                                (click)=\"modelSaveBtn(modelForm)\"\n                                [disabled]=\"!modelForm.valid\">{{'GenericSave' | translate }}</button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\nimport { ModelContentData } from 'src/app/interface/Model/ModelContentData.class';\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\nimport { ServiceContentData } from 'src/app/services/content-data.service';\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\nimport { EnumContentData } from 'src/app/Enum/ContentData.enum';\nimport { NgForm } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-info-edit',\n  templateUrl: './info-edit.component.html',\n  styleUrls: ['./info-edit.component.css']\n})\nexport class InfoEditComponent extends baseComponent implements OnInit {\n\n  pageTitle: string = 'Editing Homepage Info Section';\n  modelObj: ModelContentData = new ModelContentData();\n  message: ShowMessage = new ShowMessage();\n  \n  constructor(private BLService: ServiceContentData,\n    BLServiceShowMessage: ServiceShowMessage,\n    BLServiceLoginUser : ServiceLoginUser,BLTranslate: TranslateService,) { \n      super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\n    }\n\n  ngOnInit(): void {\n    this.loadData();\n  }\nloadData() {\n    this.BLService.ContentDataOneGetByTypeId(EnumContentData.Info).subscribe({\n      next: obj => {\n        this.modelObj = obj;\n      },\n      error: err => this.message.Error(err)\n    });\n  }\n  modelSaveBtn(modelForm: NgForm): void {\n    if (!modelForm.valid)\n      return;\n\n      this.BLService.updateContentData(this.modelObj).subscribe({\n        next: response => {\n          this.message.Success(this.msgSavedSuccessfully);\n          this.BLServiceShowMessage.sendMessage(this.message);\n        },\n        error: err => this.message.Error(err)\n      });\n    }\n}\n","<section class=\"my-5\">\n    <div class=\"container\">\n        <div class='row'>\n            <h4 class=\"mb-4\">{{'ContentInfoTitle' | translate }}</h4>\n        </div>\n        <div class='row'>\n            <div class=\"modal-body pt-0\">\n                <form novalidate (ngSubmit)=\"modelSaveBtn(modelForm)\" #modelForm=\"ngForm\">\n                    <div class=\"col-md-8\">\n                        <div class=\"form-group \">\n                            <mat-form-field class=\"example-full-width\">\n                                <mat-label>{{'ContentData' | translate }}</mat-label>\n                                <textarea matInput id=\"modelDataId\" type=\"text\" placeholder=\"{{'ContentDataPH' | translate }}\" required\n                                    [(ngModel)]=\"modelObj.Data\" #modelDataVar=\"ngModel\" name=\"modelData\" rows=\"5\" cols=\"20\"\n                                    [ngClass]=\"{'is-invalid': (modelDataVar.touched || modelDataVar.dirty) && !modelDataVar.valid }\"></textarea>\n                                <mat-error *ngIf=\"modelDataVar.errors?.required\">{{'ContentDataError' | translate }}</mat-error>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"form-group pull-right md-form\">\n                            <button class=\"btn color-bg-01 btn-sm white-text btnSave\" type=\"submit\"\n                                (click)=\"modelSaveBtn(modelForm)\"\n                                [disabled]=\"!modelForm.valid\">{{'GenericSave' | translate }}</button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Page } from 'src/app/common/pagination/page';\nimport { CustomPaginationService } from 'src/app/common/pagination/services/custom-pagination.service';\nimport { Constants } from 'src/app/constants';\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\nimport { cLogoPartnerItem, cLogoPartnerList } from 'src/app/interface/Response/LogoPartner.class';\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\nimport { ServiceLogoPartner } from 'src/app/services/logo-partner.service';\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\n\n@Component({\n  selector: 'app-partner-logo',\n  templateUrl: './partner-logo.component.html',\n  styleUrls: ['./partner-logo.component.css']\n})\nexport class PartnerLogoComponent extends baseComponent implements OnInit {\n  message: ShowMessage = new ShowMessage();\n\n  modelIsCreate: boolean;\n  modelObj: cLogoPartnerItem;\n  FileToUpload: File;\n\n  FilesURL: string = Constants.FilesURL;\n\n  page: Page<cLogoPartnerItem> = new Page();\n  lstLogoPartner: cLogoPartnerList;\n  LogoPartnerSelectFileError: string;\n\n  constructor(private BLService: ServiceLogoPartner,\n    private paginationService: CustomPaginationService,\n    BLServiceShowMessage: ServiceShowMessage,\n    BLServiceLoginUser: ServiceLoginUser, BLTranslate: TranslateService,\n    private modalService: NgbModal) { super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate); }\n\n  ngOnInit() {\n    this.loadData();\n  }\n  loadData() {\n\n    this.BLService.getLogoPartnerAll(this.page.pageable.pageCurrent, \"\").subscribe({\n      next: lst => {\n        this.lstLogoPartner = lst;\n        this.page.pageable.pageSize = lst.pageSize;\n        this.page.totalElements = lst.totalCount;\n        this.page.content = lst.lstResult;\n      },\n      error: err => this.message.Error(err)\n    });\n  }\n  public getNextPage(): void {\n    this.page.pageable = this.paginationService.getNextPage(this.page);\n    this.loadData();\n  }\n\n  public getPreviousPage(): void {\n    this.page.pageable = this.paginationService.getPreviousPage(this.page);\n    this.loadData();\n  }\n  public getloadPageCurrent(): void {\n    this.loadData();\n  }\n  createBtn(content): void {\n    this.modelIsCreate = true;\n    this.FileToUpload = null;\n    this.modelObj = new cLogoPartnerItem();\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\n  }\n  openBackDropCustomClass(content, obj: cLogoPartnerItem) {\n    this.modelIsCreate = false;\n    this.FileToUpload = null;\n    this.modelObj = obj;\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\n  }\n  modelSaveBtn(modelForm: NgForm): void {\n    if (!modelForm.valid)\n      return;\n    if (this.FileToUpload == null) {\n      return;\n    }\n\n    if (this.FileToUpload.type != \"image/png\"\n      && this.FileToUpload.type != \"image/jpg\"\n      && this.FileToUpload.type != \"image/jpeg\") {\n      this.message.Error(this.LogoPartnerSelectFileError);\n      this.BLServiceShowMessage.sendMessage(this.message);\n      return;\n    }\n    if (this.modelIsCreate) {\n      this.BLService.createLogoPartner(this.modelObj.WebsiteURL, this.FileToUpload).subscribe({\n        next: fileUploadResponse => {\n          this.message.Success(this.msgSavedSuccessfully);\n          this.BLServiceShowMessage.sendMessage(this.message);\n          this.loadData();\n          this.modalService.dismissAll();\n        },\n        error: err => this.message.Error(err)\n      });\n    } else {\n      this.BLService.updateLogoPartner(this.modelObj._id, this.modelObj.WebsiteURL, this.FileToUpload).subscribe({\n        next: fileUploadResponse => {\n          this.message.Success(this.msgSavedSuccessfully);\n          this.BLServiceShowMessage.sendMessage(this.message);\n          this.loadData();\n          this.modalService.dismissAll();\n        },\n        error: err => this.message.Error(err)\n      });\n    }\n  }\n  public OnFileChanged(files) {\n    this.FileToUpload = <File>files[0];\n  }\n\n  setActivate(Id: string): void {\n    if (!confirm(this.msgsetActivate))\n      return;\n\n    this.BLService.setLogoPartnerActivate(Id).subscribe({\n      next: response => {\n\n        this.message.Success(this.msgActivatedSuccessfully);\n        this.BLServiceShowMessage.sendMessage(this.message);\n        this.loadData();\n      },\n      error: err => this.message.Error(err)\n    });\n  }\n  setDeactivate(Id: string): void {\n    if (!confirm(this.msgsetDeactivate))\n      return;\n\n    this.BLService.setLogoPartnerDeactivate(Id).subscribe({\n      next: response => {\n        this.message.Success(this.msgDeactivatedSuccessfully);\n        this.BLServiceShowMessage.sendMessage(this.message);\n        this.loadData();\n      },\n      error: err => this.message.Error(err)\n    });\n  }\n}\n","<section class=\"my-5\">\n    <div class=\"container\">\n        <div class='row'>\n            <h4 class=\"mb-4\">{{'LogoPartnerTitle' | translate }}</h4>\n        </div>\n        <div class='row'>\n            <div class=\"col-sm-12 md-form pull-right mb-3\">\n                <button type=\"button\" class=\"pull-right btn color-bg-01 white-text\"\n                    (click)=\"createBtn(content)\">{{'GenericCreate' | translate }}</button>\n            </div>\n        </div>\n        <div class=\"col-md-12\">\n            <div class='table-responsive'>\n                <table class='table' *ngIf='page.content && page.content.length'>\n                    <thead>\n                        <tr>\n                            <th>{{'LogoPartnerLogo' | translate }}</th>\n                            <th>{{'LogoPartnerWebsite' | translate }}</th>\n                            <th>{{'GenericAction' | translate }}</th>\n                        </tr>\n                    </thead>\n                    <tbody class=\"slide\">\n                        <tr *ngFor='let obj of page.content' >\n                            <td><img src=\"{{FilesURL + obj.ImagePath}}\"></td>\n                            <td>{{ obj.WebsiteURL}}</td>\n                            <td class=\"align-middle\">\n                                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-primary\"\n                                    value=\"{{'GenericEdit' | translate }}\"\n                                    (click)=\"openBackDropCustomClass(content,obj)\">\n                                <input *ngIf=\"!obj.IsActive\" type=\"button\" class=\"btn btn-success\"\n                                    value=\"{{'GenericActivate' | translate }}\" (click)=\"setActivate(obj._id)\">\n                                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-danger\"\n                                    value=\"{{'GenericDeactivate' | translate }}\" (click)=\"setDeactivate(obj._id)\">\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n        <div>\n            <app-custom-pagination [page]=\"page\" (nextPageEvent)=\"getNextPage()\" (previousPageEvent)=\"getPreviousPage()\"\n                (loadPageCurrentEvent)=\"getloadPageCurrent()\">\n            </app-custom-pagination>\n        </div>\n\n\n        <div>\n            <ng-template #content let-modal>\n                <div class=\"modal-dialog modal-lg\" role=\"document\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header color-bg-01 white-text text-center\">\n                            <h6 class=\"modal-title\">{{'LogoPartnerAddTitle' | translate }}</h6>\n                        </div>\n                        <div class=\"modal-body pt-0\">\n                            <form novalidate (ngSubmit)=\"modelSaveBtn(modelForm)\" #modelForm=\"ngForm\">\n                                <div class=\"form-group \">\n                                    <mat-form-field>\n                                        <mat-label>{{'LogoPartnerWebsite' | translate }}</mat-label>\n                                        <input matInput id=\"modelNameId\" type=\"text\"\n                                            placeholder=\"{{'LogoPartnerWebsiteRequired' | translate }}\" \n                                            [(ngModel)]=\"modelObj.WebsiteURL\" #modelNameVar=\"ngModel\" name=\"modelName\"\n                                            [ngClass]=\"{'is-invalid': (modelNameVar.touched || modelNameVar.dirty) && !modelNameVar.valid }\" />\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-md-12\">\n                                    <span class=\"pr-3\">{{'LogoPartnerLogo' | translate }}</span>\n                                    <input id=\"uploadLogo\" name=\"uploadLogo\" type=\"file\" #filePartner\n                                        placeholder=\"{{'SiteUploadLogo' | translate }}\"\n                                        accept=\"image/png,image/jpeg,image/jpg,\"\n                                        (change)=\"OnFileChanged(filePartner.files)\" style=\"display:none;\">\n                                    <button id=\"btuploadLogo\" name=\"btuploadLogo\" type=\"button\" class=\"btn btn-success\"\n                                        (click)=\"filePartner.click()\">{{'CertificateSelectFile' | translate }}</button>\n                                </div>\n                                <div class=\"form-group pull-right\">\n                                    <button class=\"btn color-bg-01 btn-sm white-text btnSave\" type=\"submit\"\n                                        [disabled]=\"!modelForm.valid\">{{'GenericSave' | translate }}</button>\n                                </div>\n                            </form>\n                        </div>\n                        <div class=\"modal-footer\">\n\n                            <button type=\"button\" class=\"btn color-bg-02 btn-sm white-text\"\n                                (click)=\"modal.close('Close click')\">{{'GenericClose' | translate }}</button>\n                        </div>\n                    </div>\n                </div>\n            </ng-template>\n        </div>","import { Component, OnInit } from '@angular/core';\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\nimport { ModelContentData } from 'src/app/interface/Model/ModelContentData.class';\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\nimport { ServiceContentData } from 'src/app/services/content-data.service';\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\nimport { EnumContentData } from 'src/app/Enum/ContentData.enum';\nimport { NgForm } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-policy-edit',\n  templateUrl: './policy-edit.component.html',\n  styleUrls: ['./policy-edit.component.css']\n})\nexport class PolicyEditComponent extends baseComponent implements OnInit {\n\n  \n  pageTitle: string = 'Editing Policy Section';\n  modelObj: ModelContentData = new ModelContentData();\n  message: ShowMessage = new ShowMessage();\n  \n  constructor(private BLService: ServiceContentData,\n    BLServiceShowMessage: ServiceShowMessage,\n    BLServiceLoginUser : ServiceLoginUser,BLTranslate: TranslateService,) { \n      super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\n    }\n\n  ngOnInit(): void {\n    this.loadData();\n  }\nloadData() {\n    this.BLService.ContentDataOneGetByTypeId(EnumContentData.Policy).subscribe({\n      next: obj => {\n        this.modelObj = obj;\n      },\n      error: err => this.message.Error(err)\n    });\n  }\n  modelSaveBtn(modelForm: NgForm): void {\n    if (!modelForm.valid)\n      return;\n\n      this.BLService.updateContentData(this.modelObj).subscribe({\n        next: response => {\n          this.message.Success(this.msgSavedSuccessfully);\n          this.BLServiceShowMessage.sendMessage(this.message);\n        },\n        error: err => this.message.Error(err)\n      });\n    }\n\n}\n","<section class=\"my-5\">\n    <div class=\"container\">\n        <div class='row'>\n            <h4 class=\"mb-4\">{{'ContentPolicyTitle' | translate }}</h4>\n        </div>\n        <div class='row'>\n            <div class=\"modal-body pt-0\">\n                <form novalidate (ngSubmit)=\"modelSaveBtn(modelForm)\" #modelForm=\"ngForm\">\n                    <div class=\"col-md-8\">\n                        <div class=\"form-group \">\n                            <angular-editor class=\"editor\" [config]=\"textEditorConfig\" required\n                                #modelDescription=\"ngModel\" name=\"modelDescription\" rows=\"20\"\n                                [ngClass]=\"{'is-invalid': (modelDescription.touched || modelDescription.dirty) && !modelDescription.valid }\"\n                                [(ngModel)]=\"modelObj.Data\"></angular-editor>\n                            <div class=\"valError\" *ngIf=\"modelDescription.touched && modelDescription.errors?.required\">\n                                {{'ContentDataError' | translate }}</div>\n\n\n                        </div>\n\n                        <div class=\"form-group pull-right md-form\">\n                            <button class=\"btn color-bg-01 btn-sm white-text btnSave\" type=\"submit\"\n                                (click)=\"modelSaveBtn(modelForm)\"\n                                [disabled]=\"!modelForm.valid\">{{'GenericSave' | translate }}</button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</section>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\nimport { ServiceContentData } from 'src/app/services/content-data.service';\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\n\n@Component({\n  selector: 'app-site-logo',\n  templateUrl: './site-logo.component.html',\n  styleUrls: ['./site-logo.component.css']\n})\nexport class SiteLogoComponent extends baseComponent implements OnInit {\n\n  message: ShowMessage = new ShowMessage();\n  msgPngOnly: string;\n\n  @ViewChild('fileInput') fileInput: any;\n\n  constructor(private BLService: ServiceContentData,\n    BLServiceShowMessage: ServiceShowMessage,\n    BLServiceLoginUser: ServiceLoginUser, BLTranslate: TranslateService,) {\n    super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\n    this.BLTranslate.get(\"msgPngOnly\").subscribe(res => { this.msgPngOnly = res; });\n  }\n\n  ngOnInit(): void {\n\n  }\n  modelSaveBtn(files): void {\n    if (files.length === 0) {\n      return;\n    }\n    let fileToUpload = <File>files[0]; \n    if (fileToUpload.type != \"image/png\") {\n      this.message.Error(this.msgPngOnly);\n      this.BLServiceShowMessage.sendMessage(this.message);\n    } else {\n      this.BLService.updateSiteLogo(fileToUpload).subscribe({\n        next: response => {\n          this.fileInput.nativeElement.value = '';\n          this.message.Success(this.msgSavedSuccessfully);\n          this.BLServiceShowMessage.sendMessage(this.message);\n        },\n        error: err => {\n          this.fileInput.nativeElement.value = '';\n          this.message.Error(err);\n          this.BLServiceShowMessage.sendMessage(this.message);\n        }\n      });\n    }\n  }\n}\n","<section class=\"my-5\">\n    <div class=\"container\">\n        <div class='row'>\n            <h4 class=\"mb-4\">{{'ContentHeaderLogoTitle' | translate }}</h4>\n        </div>\n        <div class='row'>\n            <div class=\"modal-body pt-0\">\n                <form novalidate (ngSubmit)=\"modelSaveBtn(modelForm)\" #modelForm=\"ngForm\">\n                    <div class=\"col-md-8\">\n                        <div class='row'>\n                            <div class=\"col-sm-6 md-form\">\n                              <span class=\"pr-2\">{{'SiteUploadLogo' | translate }}</span>\n                              <input #fileInput id=\"uploadLogo\" name=\"uploadLogo\" type=\"file\" #fileLogo placeholder=\"{{'CertificateChoosefile' | translate }}\"\n                                accept=\"image/png\" (change)=\"modelSaveBtn(fileLogo.files)\" style=\"display:none;\">\n                              <button id=\"btnuploadLogo\" name=\"btnuploadLogo\" type=\"button\" class=\"btn btn-success\"\n                                (click)=\"fileLogo.click()\">{{'CertificateSelectFile' | translate }}</button>\n                                <br><mat-hint>{{msgPngOnly | translate}}</mat-hint>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { ModelContentData } from 'src/app/interface/Model/ModelContentData.class';\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\nimport { ServiceContentData } from 'src/app/services/content-data.service';\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\nimport { EnumContentData } from 'src/app/Enum/ContentData.enum';\nimport { NgForm } from '@angular/forms';\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-term-edit',\n  templateUrl: './term-edit.component.html',\n  styleUrls: ['./term-edit.component.css']\n})\nexport class TermEditComponent extends baseComponent implements OnInit {\n\n  \n  pageTitle: string = 'Editing Terms & Conditios Section';\n  modelObj: ModelContentData = new ModelContentData();\n  message: ShowMessage = new ShowMessage();\n  \n  constructor(private BLService: ServiceContentData,\n    BLServiceShowMessage: ServiceShowMessage,\n    BLServiceLoginUser : ServiceLoginUser,BLTranslate: TranslateService,) { \n      super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\n    }\n\n  ngOnInit(): void {\n    this.loadData();\n  }\nloadData() {\n    this.BLService.ContentDataOneGetByTypeId(EnumContentData.Terms).subscribe({\n      next: obj => {\n        this.modelObj = obj;\n      },\n      error: err => this.message.Error(err)\n    });\n  }\n  modelSaveBtn(modelForm: NgForm): void {\n    if (!modelForm.valid)\n      return;\n\n      this.BLService.updateContentData(this.modelObj).subscribe({\n        next: response => {\n          this.message.Success(this.msgSavedSuccessfully);\n          this.BLServiceShowMessage.sendMessage(this.message);\n        },\n        error: err => this.message.Error(err)\n      });\n    }\n\n}\n","<section class=\"my-5\">\n    <div class=\"container\">\n        <div class='row'>\n            <h4 class=\"mb-4\">{{'ContentTermsTitle' | translate }}</h4>\n        </div>\n        <div class='row'>\n            <div class=\"modal-body pt-0\">\n                <form novalidate (ngSubmit)=\"modelSaveBtn(modelForm)\" #modelForm=\"ngForm\">\n                    <div class=\"col-md-8\">\n                        <div class=\"form-group \">\n                            <angular-editor class=\"editor\" [config]=\"textEditorConfig\" required\n                                #modelDescription=\"ngModel\" name=\"modelDescription\" rows=\"20\"\n                                [ngClass]=\"{'is-invalid': (modelDescription.touched || modelDescription.dirty) && !modelDescription.valid }\"\n                                [(ngModel)]=\"modelObj.Data\"></angular-editor>\n                            <div class=\"valError\" *ngIf=\"modelDescription.touched && modelDescription.errors?.required\">\n                                {{'ContentDataError' | translate }}</div>\n\n\n                        </div>\n\n                        <div class=\"form-group pull-right md-form\">\n                            <button class=\"btn color-bg-01 btn-sm white-text btnSave\" type=\"submit\"\n                                (click)=\"modelSaveBtn(modelForm)\"\n                                [disabled]=\"!modelForm.valid\">{{'GenericSave' | translate }}</button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\r\nimport { ServiceDataManagement } from 'src/app/services/datamanagement.service';\r\nimport { ICourse } from 'src/app/interface/Response/Course.interface';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ITrainingCategoryItem } from 'src/app/interface/Response/TrainingCategory.interface';\r\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Constants } from 'src/app/constants';\r\nimport { Page } from 'src/app/common/pagination/page';\r\nimport { CustomPaginationService } from 'src/app/common/pagination/services/custom-pagination.service';\r\nimport { NgForm } from '@angular/forms';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TranslateType } from 'src/app/Enum/TranslateType.enum';\r\n\r\n@Component({\r\n  selector: 'app-Course-list',\r\n  templateUrl: './Course-list.component.html',\r\n  styleUrls: ['./Course-list.component.scss']\r\n})\r\nexport class CourseListComponent extends baseComponent implements OnInit {\r\n  objTrainingCategory: ITrainingCategoryItem = new ITrainingCategoryItem();\r\n  pageTitle: string = \"Courses\";\r\n  message: ShowMessage = new ShowMessage();\r\n  modelName: string = '';\r\n  modelId: string = '';\r\n  modelNameEdited: string = '';\r\n  ModelIsCreate: boolean = true;\r\n  page: Page<ICourse> = new Page();\r\n\r\n  filtertxt: string = '';\r\n \r\n  /////////////\r\n\r\n  \r\n  CourseId: string = '';\r\n  filterCourse: ICourse[] = [];\r\n  constructor(private BLServiceDataManagement: ServiceDataManagement,\r\n    private route: ActivatedRoute,\r\n    BLServiceShowMessage: ServiceShowMessage,\r\n    BLServiceLoginUser: ServiceLoginUser,BLTranslate: TranslateService,\r\n    private paginationService: CustomPaginationService,\r\n    private router: Router,\r\n    private modalService: NgbModal) {\r\n      super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\r\n  }\r\n  ngOnInit() {\r\n    const param = this.route.snapshot.paramMap.get('id');\r\n    if (param) {\r\n      this.CourseId = param;\r\n      this.page.pageable.pageSize = Constants.PAGE_SIZE;\r\n      this.loadData();\r\n    }\r\n  }\r\n  loadData() {\r\n    this.BLServiceDataManagement.getTrainingCategoryGetByid(this.CourseId).subscribe({\r\n      next: obj => {\r\n        this.objTrainingCategory = obj;\r\n        this.objTrainingCategory.Course = obj.Course.sort((a,b)=> b.Id.localeCompare(a.Id));\r\n        this.filterCourse = this.loadDataFilter();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  public getNextPage(): void {\r\n    this.page.pageable = this.paginationService.getNextPage(this.page);\r\n  }\r\n\r\n  public getPreviousPage(): void {\r\n    this.page.pageable = this.paginationService.getPreviousPage(this.page);\r\n  }\r\n  public getloadPageCurrent(): void {\r\n  }\r\n  loadDataFilter(): ICourse[] {\r\n    var lst = this.filtertxt == \"\" ? this.objTrainingCategory.Course : this.objTrainingCategory.Course.filter((item: ICourse) =>\r\n      item.Name.toLocaleLowerCase().indexOf(this.filtertxt.toLocaleLowerCase()) !== -1);\r\n\r\n    this.page.totalElements = lst.length;\r\n    this.page.content = lst;\r\n    this.page.pageable.pageCurrent = 1\r\n    return lst;\r\n  }\r\n  setActivate(Id: string): void {\r\n    if (!confirm(this.msgsetActivate))\r\n      return;\r\n\r\n    this.BLServiceDataManagement.setCourseActivate(this.objTrainingCategory.Id, Id).subscribe({\r\n      next: response => {\r\n        \r\n          this.message.Success(this.msgActivatedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  setDeactivate(Id: string): void {\r\n    if (!confirm(this.msgsetDeactivate))\r\n      return;\r\n\r\n    this.BLServiceDataManagement.setCourseDeactivate(this.objTrainingCategory.Id, Id).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.msgDeactivatedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  filterbtn(): void {\r\n    this.loadDataFilter();\r\n  }\r\n  createBtn(content): void {\r\n    this.modelId = this.objTrainingCategory.Id;\r\n    this.modelName = \"\";\r\n    this.modelNameEdited = \"\";\r\n    this.ModelIsCreate = true;\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  modelSaveBtn(modelForm: NgForm): void {\r\n    if (!modelForm.valid)\r\n      return;\r\n\r\n\r\n    if (this.ModelIsCreate) {\r\n      this.BLServiceDataManagement.createCourse(this.objTrainingCategory.Id, this.modelName).subscribe({\r\n        next: response => {\r\n          this.message.Success(this.msgSavedSuccessfully);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.modalService.dismissAll();\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n    else {\r\n      this.BLServiceDataManagement.updateCourse(this.objTrainingCategory.Id, this.modelId, this.modelName).subscribe({\r\n        next: response => {\r\n          this.message.Success(this.msgSavedSuccessfully);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.modalService.dismissAll();\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n  }\r\n  openBackDropCustomClass(content, Id: string, name: string) {\r\n    this.modelId = Id;\r\n    this.modelName = name;\r\n    this.modelNameEdited = name;\r\n    this.ModelIsCreate = false;\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  onBack(): void {\r\n    this.router.navigate(['/DataManagement/TrainingCategory']);\r\n  }\r\n  Translate(){\r\n    this.router.navigate(['/Translate/' + TranslateType.Courses + '/' + this.CourseId]);\r\n  }\r\n}\r\n","<section class=\"my-5\">\r\n  <div class=\"container\">\r\n    <div class='row'>\r\n      <h4 class=\"mb-4\">{{objTrainingCategory.Name}}  {{'GenericTrainingCategory' | translate }} -  {{'CoursesTitle' | translate }}</h4>\r\n     \r\n    </div>\r\n    <div class='row'>\r\n      <div class=\"col-sm-6 md-form\">\r\n        <mat-form-field class=\"example-full-width\">\r\n          <mat-label>{{'CoursesSearch' | translate }}</mat-label>\r\n          <input type=\"text\" placeholder=\"{{'CoursesType' | translate }} \" matInput [(ngModel)]=\"filtertxt\">\r\n        </mat-form-field>\r\n        <input type=\"submit\" value=\"{{'GenericSearch' | translate }}\"  class=\"btn color-bg-02 white-text\" (click)=\"filterbtn()\">\r\n      </div>\r\n      <div class=\"col-sm-6 md-form pull-right\">\r\n        <input type=\"button\" class=\"pull-right btn color-bg-01 white-text\" value=\"{{'GenericCreateNew' | translate }}\"\r\n          (click)=\"createBtn(content)\">\r\n          <input type=\"button\" class=\"pull-right btn color-bg-03 white-text\" value=\"{{'GenericTranslate' | translate }}\"\r\n          (click)=\"Translate()\">\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-12\">\r\n      <div class='table-responsive'>\r\n        <table class='table' *ngIf='filterCourse && filterCourse.length'>\r\n          <thead>\r\n            <tr>\r\n              <th>{{'GenericName' | translate }}</th>\r\n              <th>{{'GenericAction' | translate }}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor='let obj of page.content | slice: (page.pageable.pageCurrent-1) * page.pageable.pageSize : (page.pageable.pageCurrent-1) * page.pageable.pageSize + page.pageable.pageSize'>\r\n              <td>{{obj.Name}}</td>\r\n              <td>\r\n                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-primary\" value=\"{{'GenericEdit' | translate }}\"\r\n                  (click)=\"openBackDropCustomClass(content,obj.Id, obj.Name)\">\r\n                <input *ngIf=\"!obj.IsActive\" type=\"button\" class=\"btn btn-success\" value=\"{{'GenericActivate' | translate }}\"\r\n                  (click)=\"setActivate(obj.Id)\">\r\n                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-danger\" value=\"{{'GenericDeactivate' | translate }}\"\r\n                  (click)=\"setDeactivate(obj.Id)\">\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div>\r\n        <app-custom-pagination [page]=\"page\" (nextPageEvent)=\"getNextPage()\" (previousPageEvent)=\"getPreviousPage()\"\r\n        (loadPageCurrentEvent)=\"getloadPageCurrent()\">\r\n      </app-custom-pagination>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div>\r\n    <div class='card-footer'>\r\n      <button class='btn btn-outline-secondary' (click)='onBack()' style='width:80px'>\r\n        <i class='fa fa-chevron-left'></i> {{'GenericBack' | translate }}\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <div>\r\n    <ng-template role=\"dialog\" #content let-modal class=\"modal fade\">\r\n      <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header color-bg-01 white-text text-center\">\r\n\r\n            <h6 class=\"modal-title\">\r\n              {{(modelId == \"-1\" ? 'GenericCreate'   : 'GenericEditing') | translate}} : {{modelId == \"-1\" ? (\"GenericNew\" | translate) : modelNameEdited}}\r\n            </h6>\r\n          </div>\r\n          <!-- <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button> -->\r\n          <div class=\"modal-body pt-0\">\r\n\r\n            <form novalidate (ngSubmit)=\"modelSaveBtn(modelForm)\" #modelForm=\"ngForm\">\r\n              <div class=\"form-group \">\r\n                <mat-form-field class=\"example-full-width\">\r\n                  <mat-label>{{'CoursesName' | translate }}</mat-label>\r\n                  <input matInput id=\"modelNameId\" type=\"text\" placeholder=\"{{'GenericRequiredName' | translate }}\" required\r\n                    [(ngModel)]=\"modelName\" #modelNameVar=\"ngModel\" name=\"modelName\"\r\n                    [ngClass]=\"{'is-invalid': (modelNameVar.touched || modelNameVar.dirty) && !modelNameVar.valid }\" />\r\n                  <mat-error *ngIf=\"modelNameVar.errors?.required\">{{'CoursesError' | translate }}</mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"form-group pull-right md-form\">\r\n                <button class=\"btn color-bg-01 btn-sm white-text btnSave\" type=\"submit\"\r\n                  \r\n                  [disabled]=\"!modelForm.valid\">{{'GenericSave' | translate }}</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n\r\n            <button type=\"button\" class=\"btn color-bg-02 btn-sm white-text\"\r\n              (click)=\"modal.close('Close click')\">{{'GenericClose' | translate }}</button>\r\n          </div>\r\n\r\n\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n  </div>\r\n</section>","import { Component, OnInit } from '@angular/core';\r\nimport { ServiceDataManagement } from 'src/app/services/datamanagement.service';\r\nimport { ITrainingCategory, ITrainingCategoryItem } from 'src/app/interface/Response/TrainingCategory.interface';\r\nimport { CustomPaginationService } from 'src/app/common/pagination/services/custom-pagination.service';\r\nimport { Page } from 'src/app/common/pagination/page';\r\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Router } from '@angular/router';\r\nimport { cfAutoComplete } from 'src/app/interface/forms/AutoComplete.class';\r\nimport { NgForm } from '@angular/forms';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TranslateType } from 'src/app/Enum/TranslateType.enum';\r\n\r\n@Component({\r\n  templateUrl: './TrainingCategory-list.component.html',\r\n  styleUrls: ['./TrainingCategory-list.component.scss']\r\n})\r\nexport class TrainingCategoryListComponent extends baseComponent implements OnInit {\r\n  pageTitle: string = 'Training Category';\r\n  lstTrainingCategory: ITrainingCategory;\r\n  lstTrainingTypeoptions: cfAutoComplete[];\r\n  message: ShowMessage = new ShowMessage();\r\n  filtertxt: string = '';\r\n  modelName: string = '';\r\n  modelId: string = '';\r\n  modelNameEdited: string = '';\r\n  modelTrainingType: string;\r\n  page: Page<ITrainingCategoryItem> = new Page();\r\n  /////////////////\r\n\r\n  /////////////\r\n  constructor(private BLServiceDataManagement: ServiceDataManagement,\r\n    private paginationService: CustomPaginationService,\r\n    BLServiceShowMessage: ServiceShowMessage,\r\n    BLServiceLoginUser: ServiceLoginUser, BLTranslate: TranslateService,\r\n    private router: Router,\r\n    private modalService: NgbModal) { super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate); }\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n    this.BLServiceDataManagement.getTrainingTypeListActive().subscribe({\r\n      next: lst => {\r\n\r\n        this.lstTrainingTypeoptions = lst.map(opt => new cfAutoComplete(opt.Id, opt.Name));\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n\r\n  private loadData(): void {\r\n    this.BLServiceDataManagement.getTrainingCategoryAll(this.page.pageable.pageCurrent, this.filtertxt).subscribe({\r\n      next: lst => {\r\n        this.lstTrainingCategory = lst;\r\n        this.page.pageable.pageSize = lst.pageSize;\r\n        this.page.totalElements = lst.totalCount;\r\n        this.page.content = lst.lstResult;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  public getNextPage(): void {\r\n    this.page.pageable = this.paginationService.getNextPage(this.page);\r\n    this.loadData();\r\n  }\r\n\r\n  public getPreviousPage(): void {\r\n    this.page.pageable = this.paginationService.getPreviousPage(this.page);\r\n    this.loadData();\r\n  }\r\n  public getloadPageCurrent(): void {\r\n    this.loadData();\r\n  }\r\n  setActivate(Id: string): void {\r\n    if (!confirm(this.msgsetActivate))\r\n      return;\r\n\r\n    this.BLServiceDataManagement.setTrainingCategoryActivate(Id).subscribe({\r\n      next: response => {\r\n\r\n        this.message.Success(this.msgActivatedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  setDeactivate(Id: string): void {\r\n    if (!confirm(this.msgsetDeactivate))\r\n      return;\r\n\r\n    this.BLServiceDataManagement.setTrainingCategoryDeactivate(Id).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.msgDeactivatedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  filterbtn(): void {\r\n    this.page.pageable.pageCurrent = 1;\r\n    this.loadData();\r\n  }\r\n  createBtn(content): void {\r\n    this.modelId = \"-1\";\r\n    this.modelTrainingType = \"\";\r\n    this.modelName = \"\";\r\n    this.modelNameEdited = \"\";\r\n    this.modelTrainingType = \"\";\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  modelSaveBtn(modelForm: NgForm): void {\r\n    if (!modelForm.valid)\r\n      return;\r\n\r\n    const x = this.modelTrainingType;\r\n    if (this.modelId == \"-1\") {\r\n      this.BLServiceDataManagement.createTrainingCategory(this.modelName, this.modelTrainingType).subscribe({\r\n        next: response => {\r\n          this.message.Success(this.msgSavedSuccessfully);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.modalService.dismissAll();\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n    else {\r\n      this.BLServiceDataManagement.updateTrainingCategory(this.modelId, this.modelName, this.modelTrainingType).subscribe({\r\n        next: response => {\r\n          this.message.Success(this.msgSavedSuccessfully);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.modalService.dismissAll();\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n  }\r\n  openBackDropCustomClass(content, obj: ITrainingCategoryItem) {\r\n    this.modelId = obj.Id;\r\n    this.modelName = obj.Name;\r\n    this.modelNameEdited = obj.Name;\r\n    this.modelTrainingType = obj.TrainingType.Id;\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  Courses(Id: string) {\r\n    this.router.navigate(['/DataManagement/Course/' + Id]);\r\n  }\r\n  Translate() {\r\n    this.router.navigate(['/Translate/' + TranslateType.TrainingCategory + '/0']);\r\n  }\r\n}\r\n","<section class=\"my-5\">\r\n  <div class=\"container\">\r\n    <div class='row'>\r\n      <h4 class=\"mb-4\">{{'GenericTrainingCategory' | translate }}</h4>\r\n    </div>\r\n    <div class='row'>\r\n      <div class=\"col-sm-6 md-form\">\r\n        <mat-form-field class=\"example-full-width\">\r\n          <mat-label>{{'TrainingCategorySearch' | translate }}</mat-label>\r\n          <input type=\"text\" placeholder=\"{{'TrainingCategoryType' | translate }}\" matInput [(ngModel)]=\"filtertxt\">\r\n        </mat-form-field>\r\n        <input type=\"submit\" value=\"{{'GenericSearch' | translate }}\"  class=\"btn color-bg-02 white-text\" (click)=\"filterbtn()\">\r\n      </div>\r\n      <div class=\"col-sm-6 md-form pull-right\">\r\n        <input type=\"button\" class=\"pull-right btn color-bg-01 white-text\" value=\"{{'GenericCreateNew' | translate }}\"\r\n          (click)=\"createBtn(content)\">\r\n          <input type=\"button\" class=\"pull-right btn color-bg-03 white-text\" value=\"{{'GenericTranslate' | translate }}\"\r\n          (click)=\"Translate()\">\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-12\">\r\n      <div class='table-responsive'>\r\n        <table class='table' *ngIf='page.content && page.content.length'>\r\n          <thead>\r\n            <tr>\r\n              <th>{{'GenericName' | translate }}</th>\r\n              <th>{{'GenericTrainingType' | translate }}</th>\r\n              <th>{{'GenericAction' | translate }}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor='let obj of page.content'>\r\n              <td>{{ obj.Name}}</td>\r\n              <td>{{ obj.TrainingType?.Name}}</td>\r\n              <td>\r\n                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-primary\" value=\"{{'GenericEdit' | translate }}\"\r\n                  (click)=\"openBackDropCustomClass(content,obj)\">\r\n                <input *ngIf=\"!obj.IsActive\" type=\"button\" class=\"btn btn-success\" value=\"{{'GenericActivate' | translate }}\"\r\n                  (click)=\"setActivate(obj.Id)\">\r\n                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-danger\" value=\"{{'GenericDeactivate' | translate }}\"\r\n                  (click)=\"setDeactivate(obj.Id)\">\r\n                <input type=\"button\" class=\"btn btn-warning\" value=\"{{'CoursesTitle' | translate }}\" (click)=\"Courses(obj.Id)\">\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <app-custom-pagination [page]=\"page\" (nextPageEvent)=\"getNextPage()\" (previousPageEvent)=\"getPreviousPage()\"\r\n        (loadPageCurrentEvent)=\"getloadPageCurrent()\">\r\n      </app-custom-pagination>\r\n    </div>\r\n  </div>\r\n  <div>\r\n    <ng-template role=\"dialog\" #content let-modal class=\"modal fade\">\r\n      <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header color-bg-01 white-text text-center\">\r\n\r\n            <h6 class=\"modal-title\">{{(modelId == \"-1\" ? 'GenericCreate'   : 'GenericEditing') | translate}} : {{modelId == \"-1\" ? (\"GenericNew\" | translate) : modelNameEdited}}</h6>\r\n          </div>\r\n          <!-- <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button> -->\r\n          <div class=\"modal-body pt-0\">\r\n\r\n            <form novalidate (ngSubmit)=\"modelSaveBtn(modelForm)\" #modelForm=\"ngForm\">\r\n              <div class=\"form-group \">\r\n                <mat-form-field class=\"example-full-width\">\r\n                  <mat-label>{{'TrainingCategoryName' | translate }}</mat-label>\r\n                  <input matInput id=\"modelNameId\" type=\"text\" placeholder=\"{{'GenericRequiredName' | translate }}\" required\r\n                    [(ngModel)]=\"modelName\" #modelNameVar=\"ngModel\" name=\"modelName\"\r\n                    [ngClass]=\"{'is-invalid': (modelNameVar.touched || modelNameVar.dirty) && !modelNameVar.valid }\" />\r\n                  <mat-error *ngIf=\"modelNameVar.errors?.required\">{{'TrainingCategoryError1' | translate }}</mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"form-group \">\r\n                <mat-form-field>\r\n                  <mat-label>{{'GenericTrainingType' | translate }}</mat-label>\r\n                  <mat-select  required [(ngModel)]=\"modelTrainingType\" required\r\n                    placeholder=\"{{'GenericSelectTrainingType' | translate }}\"\r\n                    [ngClass]=\"{'is-invalid': (modelTrainingTypeVar.touched || modelTrainingTypeVar.dirty) && !modelTrainingTypeVar.valid }\"\r\n                    #modelTrainingTypeVar=\"ngModel\" name=\"modelTrainingTypeVar\">\r\n                    <mat-option value=\"0\">{{'GenericSelectTrainingType' | translate }}</mat-option>\r\n                    <mat-option *ngFor=\"let item of lstTrainingTypeoptions\" [value]=\"item.Id\">{{item.Name}}</mat-option>\r\n                  </mat-select>\r\n                  <mat-error *ngIf=\"modelTrainingTypeVar.errors?.required\">{{'GenericSelectTrainingTypeError' | translate }}</mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"form-group pull-right md-form\">\r\n                <button class=\"btn color-bg-01 btn-sm white-text btnSave\" type=\"submit\"\r\n                  \r\n                  [disabled]=\"!modelForm.valid\">{{'GenericSave' | translate }}</button></div>\r\n            </form>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n\r\n            <button type=\"button\" class=\"btn color-bg-02 btn-sm white-text\"\r\n              (click)=\"modal.close('Close click')\">{{'GenericClose' | translate }}</button>\r\n          </div>\r\n\r\n\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n  </div>","import { Component, OnInit } from '@angular/core';\r\nimport { cArea } from 'src/app/interface/Response/Area.class';\r\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\r\nimport { Page } from 'src/app/common/pagination/page';\r\nimport { cCityItem } from 'src/app/interface/Response/City.class';\r\nimport { ServiceDataManagement } from 'src/app/services/datamanagement.service';\r\nimport { Constants } from 'src/app/constants';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { CustomPaginationService } from 'src/app/common/pagination/services/custom-pagination.service';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { NgForm } from '@angular/forms';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TranslateType } from 'src/app/Enum/TranslateType.enum';\r\n\r\n@Component({\r\n  selector: 'app-area',\r\n  templateUrl: './area.component.html',\r\n  styleUrls: ['./area.component.scss']\r\n})\r\nexport class AreaComponent extends baseComponent implements OnInit {\r\n  pageTitle: string = 'Area';\r\n  message: ShowMessage = new ShowMessage();\r\n  modelName: string = '';\r\n  modelId: string = '';\r\n  modelNameEdited: string = '';\r\n  ModelIsCreate: boolean = true;\r\n  page: Page<cArea> = new Page();\r\n\r\n  filtertxt: string = '';\r\n\r\n  /////////////\r\n\r\n  objCity: cCityItem = new cCityItem();\r\n  AreaId: string = '';\r\n  filterArea: cArea[] = [];\r\n\r\n  constructor(private BLServiceDataManagement: ServiceDataManagement,\r\n    private route: ActivatedRoute,\r\n    BLServiceShowMessage: ServiceShowMessage,\r\n    BLServiceLoginUser: ServiceLoginUser, BLTranslate: TranslateService,\r\n    private paginationService: CustomPaginationService,\r\n    private router: Router,\r\n    private modalService: NgbModal) {\r\n    super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\r\n  }\r\n  ngOnInit() {\r\n    const param = this.route.snapshot.paramMap.get('id');\r\n    if (param) {\r\n      this.AreaId = param;\r\n      this.page.pageable.pageSize = Constants.PAGE_SIZE;\r\n      this.loadData();\r\n    }\r\n  }\r\n  loadData() {\r\n    this.BLServiceDataManagement.getCityGetByid(this.AreaId).subscribe({\r\n      next: obj => {\r\n        this.objCity = obj;\r\n        this.objCity.Areas = obj.Areas.sort((a,b)=> b.Id.localeCompare(a.Id));\r\n        \r\n        this.filterArea = this.loadDataFilter();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  public getNextPage(): void {\r\n    this.page.pageable = this.paginationService.getNextPage(this.page);\r\n  }\r\n\r\n  public getPreviousPage(): void {\r\n    this.page.pageable = this.paginationService.getPreviousPage(this.page);\r\n  }\r\n  public getloadPageCurrent(): void {\r\n  }\r\n  loadDataFilter(): cArea[] {\r\n\r\n\r\n    var lst = this.filtertxt == \"\" ? this.objCity.Areas : this.objCity.Areas.filter((item: cArea) =>\r\n      item.Name.toLocaleLowerCase().indexOf(this.filtertxt.toLocaleLowerCase()) !== -1);\r\n\r\n    this.page.totalElements = lst.length;\r\n    this.page.content = lst;\r\n    this.page.pageable.pageCurrent = 1\r\n    return lst;\r\n  }\r\n  setActivate(Id: string): void {\r\n    if (!confirm(this.msgsetActivate))\r\n      return;\r\n\r\n    this.BLServiceDataManagement.setAreaActivate(this.objCity.Id, Id).subscribe({\r\n      next: response => {\r\n\r\n        this.message.Success(this.msgActivatedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  setDeactivate(Id: string): void {\r\n    if (!confirm(this.msgsetDeactivate))\r\n      return;\r\n\r\n    this.BLServiceDataManagement.setAreaDeactivate(this.objCity.Id, Id).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.msgDeactivatedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  filterbtn(): void {\r\n    this.loadDataFilter();\r\n  }\r\n  createBtn(content): void {\r\n    this.modelId = this.objCity.Id;\r\n    this.modelName = \"\";\r\n    this.modelNameEdited = \"\";\r\n    this.ModelIsCreate = true;\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  modelSaveBtn(modelForm: NgForm): void {\r\n    if (!modelForm.valid)\r\n      return;\r\n\r\n\r\n    if (this.ModelIsCreate) {\r\n      this.BLServiceDataManagement.createArea(this.objCity.Id, this.modelName).subscribe({\r\n        next: response => {\r\n          this.message.Success(this.msgSavedSuccessfully);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.modalService.dismissAll();\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n    else {\r\n      this.BLServiceDataManagement.updateArea(this.objCity.Id, this.modelId, this.modelName).subscribe({\r\n        next: response => {\r\n          this.message.Success(this.msgSavedSuccessfully);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.modalService.dismissAll();\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n  }\r\n  openBackDropCustomClass(content, Id: string, name: string) {\r\n    this.modelId = Id;\r\n    this.modelName = name;\r\n    this.modelNameEdited = name;\r\n    this.ModelIsCreate = false;\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  onBack(): void {\r\n    this.router.navigate(['/DataManagement/City']);\r\n  }\r\n  Translate() {\r\n    this.router.navigate(['/Translate/' + TranslateType.Area + '/' + this.AreaId]);\r\n  }\r\n}\r\n","<section class=\"my-5\">\r\n  <div class=\"container\">\r\n    <div class='row'>\r\n      <h4 class=\"mb-4\">{{objCity.Name}}  {{'GenericCity' | translate }} - {{'AreaTitle' | translate }}</h4>\r\n\r\n    </div>\r\n    <div class='row'>\r\n      <div class=\"col-sm-6 md-form\">\r\n        <mat-form-field class=\"example-full-width\">\r\n          <mat-label>{{'AreaSearch' | translate }}</mat-label>\r\n          <input type=\"text\" placeholder=\"{{'AreaType' | translate }}\" matInput [(ngModel)]=\"filtertxt\">\r\n        </mat-form-field>\r\n        <input type=\"submit\" value=\"{{'GenericSearch' | translate }}\"  class=\"btn color-bg-02 white-text\" (click)=\"filterbtn()\">\r\n      </div>\r\n      <div class=\"col-sm-6 md-form pull-right\">\r\n        <input type=\"button\" class=\"pull-right btn color-bg-01 white-text\" value=\"{{'GenericCreateNew' | translate }}\"\r\n          (click)=\"createBtn(content)\">\r\n          <input type=\"button\" class=\"pull-right btn color-bg-03 white-text\" value=\"{{'GenericTranslate' | translate }}\"\r\n          (click)=\"Translate()\">\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-12\">\r\n      <div class='table-responsive'>\r\n        <table class='table' *ngIf='filterArea && filterArea.length'>\r\n          <thead>\r\n            <tr>\r\n              <th>{{'GenericName' | translate }}</th>\r\n              <th>{{'GenericAction' | translate }}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor='let obj of page.content | slice: (page.pageable.pageCurrent-1) * page.pageable.pageSize : (page.pageable.pageCurrent-1) * page.pageable.pageSize + page.pageable.pageSize'>\r\n              <td>{{obj.Name}}</td>\r\n              <td>\r\n                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-primary\" value=\"{{'GenericEdit' | translate }}\"\r\n                  (click)=\"openBackDropCustomClass(content,obj.Id, obj.Name)\">\r\n                <input *ngIf=\"!obj.IsActive\" type=\"button\" class=\"btn btn-success\" value=\"{{'GenericActivate' | translate }}\"\r\n                  (click)=\"setActivate(obj.Id)\">\r\n                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-danger\" value=\"{{'GenericDeactivate' | translate }}\"\r\n                  (click)=\"setDeactivate(obj.Id)\">\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div>\r\n        <app-custom-pagination [page]=\"page\" (nextPageEvent)=\"getNextPage()\" (previousPageEvent)=\"getPreviousPage()\"\r\n        (loadPageCurrentEvent)=\"getloadPageCurrent()\">\r\n      </app-custom-pagination>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div>\r\n    <div class='card-footer'>\r\n      <button class='btn btn-outline-secondary' (click)='onBack()' style='width:80px'>\r\n        <i class='fa fa-chevron-left'></i> {{'GenericBack' | translate }}\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <div>\r\n    <ng-template #content let-modal>\r\n      <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header color-bg-01 white-text text-center\">\r\n\r\n            <h6 class=\"modal-title\">\r\n              {{(ModelIsCreate ? 'GenericCreate'   : 'GenericEditing') | translate}} : {{ModelIsCreate ? (\"GenericNew\" | translate) : modelNameEdited}}\r\n            </h6>\r\n          </div>\r\n          <div class=\"modal-body pt-0\">\r\n            <form novalidate (ngSubmit)=\"modelSaveBtn(modelForm)\" #modelForm=\"ngForm\">\r\n              <div>\r\n                <mat-form-field class=\"example-full-width\">\r\n                  <mat-label>{{'AreaName' | translate }}</mat-label>\r\n                <input matInput id=\"modelNameId\" type=\"text\" placeholder=\"{{'GenericRequiredName' | translate }}\" required\r\n                  [(ngModel)]=\"modelName\" #modelNameVar=\"ngModel\" name=\"modelName\"\r\n                  [ngClass]=\"{'is-invalid': (modelNameVar.touched || modelNameVar.dirty) && !modelNameVar.valid }\" />\r\n                  <mat-error *ngIf=\"modelNameVar.errors?.required\">{{'AreaError' | translate }}</mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"form-group pull-right\">\r\n                <button class=\"btn color-bg-01 btn-sm white-text btnSave\" type=\"submit\"\r\n                  \r\n                  [disabled]=\"!modelForm.valid\">{{'GenericSave' | translate }}</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n\r\n            <button type=\"button\" class=\"btn color-bg-02 btn-sm white-text\"\r\n              (click)=\"modal.close('Close click')\">{{'GenericClose' | translate }}</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n  </div>\r\n</section>","import { Component, OnInit } from '@angular/core';\r\nimport { cCityList, cCityItem } from 'src/app/interface/Response/City.class';\r\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\r\nimport { Page } from 'src/app/common/pagination/page';\r\nimport { ServiceDataManagement } from 'src/app/services/datamanagement.service';\r\nimport { CustomPaginationService } from 'src/app/common/pagination/services/custom-pagination.service';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { Router } from '@angular/router';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgForm } from '@angular/forms';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TranslateType } from 'src/app/Enum/TranslateType.enum';\r\n\r\n@Component({\r\n  selector: 'app-city',\r\n  templateUrl: './city.component.html',\r\n  styleUrls: ['./city.component.scss']\r\n})\r\nexport class CityComponent extends baseComponent implements OnInit {\r\n  pageTitle: string = 'City';\r\n  lstCity: cCityList;\r\n  message: ShowMessage = new ShowMessage();\r\n  filtertxt: string = '';\r\n  modelName: string = '';\r\n  modelId: string = '';\r\n  modelNameEdited: string = '';\r\n\r\n  page: Page<cCityItem> = new Page();\r\n\r\n  constructor(private BLServiceDataManagement: ServiceDataManagement,\r\n    private paginationService: CustomPaginationService,\r\n    private router: Router,\r\n    private modalService: NgbModal,\r\n    BLServiceShowMessage: ServiceShowMessage,\r\n    BLServiceLoginUser: ServiceLoginUser,\r\n    BLTranslate: TranslateService) {\r\n    super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\r\n  }\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n  private loadData(): void {\r\n    this.BLServiceDataManagement.getCityAll(this.page.pageable.pageCurrent, this.filtertxt).subscribe({\r\n      next: lst => {\r\n        this.lstCity = lst;\r\n        this.page.pageable.pageSize = lst.pageSize;\r\n        this.page.totalElements = lst.totalCount;\r\n        this.page.content = lst.lstResult;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  public getNextPage(): void {\r\n    this.page.pageable = this.paginationService.getNextPage(this.page);\r\n    this.loadData();\r\n  }\r\n\r\n  public getPreviousPage(): void {\r\n    this.page.pageable = this.paginationService.getPreviousPage(this.page);\r\n    this.loadData();\r\n  }\r\n  public getloadPageCurrent(): void {\r\n    this.loadData();\r\n  }\r\n  setActivate(Id: string): void {\r\n    if (!confirm(this.msgsetActivate))\r\n      return;\r\n\r\n    this.BLServiceDataManagement.setCityActivate(Id).subscribe({\r\n      next: response => {\r\n        \r\n        this.message.Success(this.msgActivatedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  setDeactivate(Id: string): void {\r\n    if (!confirm(this.msgsetDeactivate))\r\n      return;\r\n\r\n    this.BLServiceDataManagement.setCityDeactivate(Id).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.msgDeactivatedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  filterbtn(): void {\r\n    this.page.pageable.pageCurrent = 1;\r\n    this.loadData();\r\n  }\r\n  createBtn(content): void {\r\n    this.modelId = \"-1\";\r\n    this.modelName = \"\";\r\n    this.modelNameEdited = \"\";\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  modelSaveBtn(modelForm: NgForm): void {\r\n    if (!modelForm.valid)\r\n      return;\r\n\r\n\r\n    if (this.modelId == \"-1\") {\r\n      this.BLServiceDataManagement.createCity(this.modelName).subscribe({\r\n        next: response => {\r\n          this.message.Success(this.msgSavedSuccessfully);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.modalService.dismissAll();\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n    else {\r\n      this.BLServiceDataManagement.updateCity(this.modelId, this.modelName).subscribe({\r\n        next: response => {\r\n          this.message.Success(this.msgSavedSuccessfully);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.modalService.dismissAll();\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n  }\r\n  openBackDropCustomClass(content, Id: string, name: string) {\r\n    this.modelId = Id;\r\n    this.modelName = name;\r\n    this.modelNameEdited = name;\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  Areas(Id: string) {\r\n    this.router.navigate(['/DataManagement/Area/' + Id]);\r\n  }\r\n  Translate(){\r\n    this.router.navigate(['/Translate/' + TranslateType.City + '/0']);\r\n  }\r\n}\r\n","<section class=\"my-5\">\r\n  <div class=\"container\">\r\n    <div class='row'>\r\n      <h4 class=\"mb-4\">{{'GenericCity' | translate }}</h4>\r\n    </div>\r\n    <div class='row'>\r\n      <div class=\"col-sm-6 md-form\">\r\n        <mat-form-field class=\"example-full-width\">\r\n          <mat-label>{{'CitySearch' | translate }}</mat-label>\r\n          <input type=\"text\" placeholder=\"{{'CityType' | translate }}\" matInput [(ngModel)]=\"filtertxt\">\r\n        </mat-form-field>\r\n        <input type=\"submit\" value=\"{{'GenericSearch' | translate }}\"  class=\"btn color-bg-02 white-text\" (click)=\"filterbtn()\">\r\n      </div>\r\n      <div class=\"col-sm-6 md-form pull-right\">\r\n        <input type=\"button\" class=\"pull-right btn color-bg-01 white-text\" value=\"{{'GenericCreateNew' | translate }}\"\r\n          (click)=\"createBtn(content)\">\r\n          <input type=\"button\" class=\"pull-right btn color-bg-03 white-text\" value=\"{{'GenericTranslate' | translate }}\"\r\n          (click)=\"Translate()\">\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-12\">\r\n      <div class='table-responsive'>\r\n        <table class='table' *ngIf='page.content && page.content.length'>\r\n          <thead>\r\n            <tr>\r\n              <th>{{'GenericName' | translate }}</th>\r\n              <th>{{'GenericAction' | translate }}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor='let obj of page.content'>\r\n              <td>{{ obj.Name}}</td>\r\n              <td>\r\n                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-primary\" value=\"{{'GenericEdit' | translate }}\"\r\n                  (click)=\"openBackDropCustomClass(content,obj.Id, obj.Name)\">\r\n                <input *ngIf=\"!obj.IsActive\" type=\"button\" class=\"btn btn-success\" value=\"{{'GenericActivate' | translate }}\"\r\n                  (click)=\"setActivate(obj.Id)\">\r\n                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-danger\" value=\"{{'GenericDeactivate' | translate }}\"\r\n                  (click)=\"setDeactivate(obj.Id)\">\r\n                <input type=\"button\" class=\"btn btn-warning\" value=\"{{'TrainingArea' | translate }}\" (click)=\"Areas(obj.Id)\">\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <app-custom-pagination [page]=\"page\" (nextPageEvent)=\"getNextPage()\" (previousPageEvent)=\"getPreviousPage()\"\r\n        (loadPageCurrentEvent)=\"getloadPageCurrent()\">\r\n      </app-custom-pagination>\r\n    </div>\r\n  </div>\r\n  <div>\r\n    <ng-template role=\"dialog\" #content let-modal class=\"modal fade\">\r\n      <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header color-bg-01 white-text text-center\">\r\n\r\n            <h6 class=\"modal-title\">\r\n              {{(modelId == \"-1\" ? 'GenericCreate'   : 'GenericEditing') | translate}} : {{modelId == \"-1\" ? (\"GenericNew\" | translate) : modelNameEdited}}\r\n            </h6>\r\n          </div>\r\n          <div class=\"modal-body pt-0\">\r\n\r\n            <form novalidate (ngSubmit)=\"modelSaveBtn(modelForm)\" #modelForm=\"ngForm\">\r\n              <div class=\"form-group \">\r\n                <mat-form-field class=\"example-full-width\">\r\n                  <mat-label>{{'CityName' | translate }}</mat-label>\r\n                  <input matInput id=\"modelNameId\" type=\"text\" placeholder=\"{{'GenericRequiredName' | translate }}\" required\r\n                    [(ngModel)]=\"modelName\" #modelNameVar=\"ngModel\" name=\"modelName\"\r\n                    [ngClass]=\"{'is-invalid': (modelNameVar.touched || modelNameVar.dirty) && !modelNameVar.valid }\" />\r\n                  <mat-error *ngIf=\"modelNameVar.errors?.required\">{{'CityError' | translate }}</mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"form-group pull-right md-form\">\r\n                <button class=\"btn color-bg-01 btn-sm white-text btnSave\" type=\"submit\"\r\n                  \r\n                  [disabled]=\"!modelForm.valid\">{{'GenericSave' | translate }}</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n\r\n            <button type=\"button\" class=\"btn color-bg-02 btn-sm white-text\"\r\n              (click)=\"modal.close('Close click')\">{{'GenericClose' | translate }}</button>\r\n          </div>\r\n\r\n\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n  </div>\r\n</section>","import { NgModule, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { TrainingCategoryListComponent } from './TrainingCategory/TrainingCategory-list.component';\r\nimport { CourseListComponent } from './Course/Course-list.component';\r\nimport { AdminRouteGuard } from '../core/admin-route-guard';\r\nimport { AreaComponent } from './area/area.component';\r\nimport { CityComponent } from './city/city.component';\r\nimport { NGOTypeComponent } from './ngotype/ngotype.component';\r\nimport { TrainingTypeComponent } from './training-type/training-type.component';\r\nimport { SharedModule } from '../common/sharedmodule.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TrainingCategoryListComponent,\r\n    CourseListComponent,\r\n    AreaComponent,\r\n    CityComponent,\r\n    NGOTypeComponent,\r\n    TrainingTypeComponent\r\n  ],\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      { path: 'DataManagement/Course/:id', component: CourseListComponent, canActivate: [AdminRouteGuard] },\r\n      { path: 'DataManagement/TrainingType', component: TrainingTypeComponent, canActivate: [AdminRouteGuard]},\r\n      { path: 'DataManagement/TrainingCategory', component: TrainingCategoryListComponent, canActivate: [AdminRouteGuard]},\r\n      { path: 'DataManagement/NGOType', component: NGOTypeComponent, canActivate: [AdminRouteGuard]},\r\n      { path: 'DataManagement/City', component: CityComponent, canActivate: [AdminRouteGuard]},\r\n      { path: 'DataManagement/Area/:id', component: AreaComponent, canActivate: [AdminRouteGuard] },\r\n    ])\r\n  ],\r\n  schemas: [ CUSTOM_ELEMENTS_SCHEMA,NO_ERRORS_SCHEMA  ]\r\n})\r\nexport class DataManagementModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgForm } from '@angular/forms';\r\n\r\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\r\nimport { cNGOTypeItem, cNGOTypeList } from 'src/app/interface/Response/NGOType.class';\r\nimport { CustomPaginationService } from 'src/app/common/pagination/services/custom-pagination.service';\r\nimport { ServiceDataManagement } from 'src/app/services/datamanagement.service';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { Page } from 'src/app/common/pagination/page';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-ngotype',\r\n  templateUrl: './ngotype.component.html',\r\n  styleUrls: ['./ngotype.component.scss']\r\n})\r\nexport class NGOTypeComponent extends baseComponent implements OnInit {\r\n\r\n  pageTitle: string = 'NGO Type';\r\n  lstNGOType: cNGOTypeList;\r\n  message: ShowMessage = new ShowMessage();\r\n  filtertxt: string = '';\r\n  modelName: string = '';\r\n  modelId: string = '';\r\n  modelNameEdited: string = '';\r\n\r\n  page: Page<cNGOTypeItem> = new Page();\r\n\r\n  constructor(private BLServiceDataManagement: ServiceDataManagement,\r\n    private paginationService: CustomPaginationService,\r\n    BLServiceShowMessage: ServiceShowMessage,\r\n    BLServiceLoginUser: ServiceLoginUser,BLTranslate: TranslateService,\r\n    private modalService: NgbModal) {super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate); }\r\n\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n  private loadData(): void {\r\n    this.BLServiceDataManagement.getNGOTypeAll(this.page.pageable.pageCurrent, this.filtertxt).subscribe({\r\n      next: lst => {\r\n        this.lstNGOType = lst;\r\n        this.page.pageable.pageSize = lst.pageSize;\r\n        this.page.totalElements = lst.totalCount;\r\n        this.page.content = lst.lstResult;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  public getNextPage(): void {\r\n    this.page.pageable = this.paginationService.getNextPage(this.page);\r\n    this.loadData();\r\n  }\r\n\r\n  public getPreviousPage(): void {\r\n    this.page.pageable = this.paginationService.getPreviousPage(this.page);\r\n    this.loadData();\r\n  }\r\n  public getloadPageCurrent(): void {\r\n    this.loadData();\r\n  }\r\n  setActivate(Id: string): void {\r\n    if (!confirm(this.msgsetActivate))\r\n      return;\r\n    this.BLServiceDataManagement.setNGOTypeActivate(Id).subscribe({\r\n      next: response => {\r\n        \r\n          this.message.Success(this.msgActivatedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  setDeactivate(Id: string): void {\r\n    if (!confirm(this.msgsetDeactivate))\r\n      return;\r\n\r\n    this.BLServiceDataManagement.setNGOTypeDeactivate(Id).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.msgDeactivatedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  filterbtn(): void {\r\n    this.page.pageable.pageCurrent = 1;\r\n    this.loadData();\r\n  }\r\n  createBtn(content): void {\r\n    this.modelId = \"-1\";\r\n    this.modelName = \"\";\r\n    this.modelNameEdited = \"\";\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  modelSaveBtn(modelForm: NgForm): void {\r\n    if (!modelForm.valid)\r\n      return;\r\n\r\n    if (this.modelId == \"-1\") {\r\n      this.BLServiceDataManagement.createNGOType(this.modelName).subscribe({\r\n        next: response => {\r\n          this.message.Success(this.msgSavedSuccessfully);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.modalService.dismissAll();\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n    else {\r\n      this.BLServiceDataManagement.updateNGOType(this.modelId, this.modelName).subscribe({\r\n        next: response => {\r\n          this.message.Success(this.msgSavedSuccessfully);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.modalService.dismissAll();\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n  }\r\n  openBackDropCustomClass(content, Id: string, name: string) {\r\n    this.modelId = Id;\r\n    this.modelName = name;\r\n    this.modelNameEdited = name;\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n\r\n\r\n}\r\n","<section class=\"my-5\">\r\n  <div class=\"container\">\r\n    <div class='row'>\r\n      <h4 class=\"mb-4\">{{pageTitle}}</h4>\r\n    </div>\r\n    <div class='row'>\r\n      <div class=\"col-sm-6 md-form\">\r\n        <mat-form-field class=\"example-full-width\">\r\n          <mat-label>Search for NGO Type</mat-label>\r\n          <input type=\"text\" placeholder=\"Type NGO Type Name\" matInput [(ngModel)]=\"filtertxt\">\r\n        </mat-form-field>\r\n        <input type=\"submit\" value=\"{{'GenericSearch' | translate }}\"  class=\"btn color-bg-02 white-text\" (click)=\"filterbtn()\">\r\n      </div>\r\n      <div class=\"col-sm-6 md-form pull-right\">\r\n        <input type=\"button\" class=\"pull-right btn color-bg-01 white-text\" value=\"{{'GenericCreateNew' | translate }}\"\r\n          (click)=\"createBtn(content)\">\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-12\">\r\n      <div class='table-responsive'>\r\n        <table class='table' *ngIf='page.content && page.content.length'>\r\n          <thead>\r\n            <tr>\r\n              <th>{{'GenericName' | translate }}</th>\r\n              <th>{{'GenericAction' | translate }}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor='let obj of page.content'>\r\n              <td>{{ obj.Name}}</td>\r\n              <td>\r\n                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-primary\" value=\"{{'GenericEdit' | translate }}\"\r\n                  (click)=\"openBackDropCustomClass(content,obj.Id, obj.Name)\">\r\n                <input *ngIf=\"!obj.IsActive\" type=\"button\" class=\"btn btn-success\" value=\"{{'GenericActivate' | translate }}\"\r\n                  (click)=\"setActivate(obj.Id)\">\r\n                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-danger\" value=\"{{'GenericDeactivate' | translate }}\"\r\n                  (click)=\"setDeactivate(obj.Id)\">\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <app-custom-pagination [page]=\"page\" (nextPageEvent)=\"getNextPage()\" (previousPageEvent)=\"getPreviousPage()\"\r\n        (loadPageCurrentEvent)=\"getloadPageCurrent()\">\r\n      </app-custom-pagination>\r\n    </div>\r\n  </div>\r\n  <div>\r\n    <ng-template role=\"dialog\" #content let-modal class=\"modal fade\">\r\n      <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header color-bg-01 white-text text-center\">\r\n\r\n            <h6 class=\"modal-title\">\r\n              {{(modelId == \"-1\" ? 'GenericCreate'   : 'GenericEditing') | translate}} : {{modelId == \"-1\" ? (\"GenericNew\" | translate) : modelNameEdited}}\r\n            </h6>\r\n          </div>\r\n          <!-- <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button> -->\r\n          <div class=\"modal-body pt-0\">\r\n\r\n            <form novalidate (ngSubmit)=\"modelSaveBtn(modelForm)\" #modelForm=\"ngForm\">\r\n              <div class=\"form-group \">\r\n                <mat-form-field class=\"example-full-width\">\r\n                  <mat-label>NGO Type Name</mat-label>\r\n                <input matInput id=\"modelNameId\" type=\"text\" placeholder=\"{{'GenericRequiredName' | translate }}\" required\r\n                  [(ngModel)]=\"modelName\" #modelNameVar=\"ngModel\" name=\"modelName\"\r\n                  [ngClass]=\"{'is-invalid': (modelNameVar.touched || modelNameVar.dirty) && !modelNameVar.valid }\" />\r\n                  <mat-error *ngIf=\"modelNameVar.errors?.required\">Please enter {{pageTitle}} name.</mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"form-group pull-right md-form\">\r\n                <button class=\"btn color-bg-01 btn-sm white-text btnSave\" type=\"submit\"\r\n                  \r\n                  [disabled]=\"!modelForm.valid\">{{'GenericSave' | translate }}</button></div>\r\n            </form>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn color-bg-02 btn-sm white-text\"\r\n              (click)=\"modal.close('Close click')\">{{'GenericClose' | translate }}</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n  </div>","import { Component, OnInit } from '@angular/core';\r\nimport { cTrainingTypeList, cTrainingTypeItem } from 'src/app/interface/Response/TrainingType.class';\r\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\r\nimport { Page } from 'src/app/common/pagination/page';\r\nimport { ServiceDataManagement } from 'src/app/services/datamanagement.service';\r\nimport { CustomPaginationService } from 'src/app/common/pagination/services/custom-pagination.service';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgForm } from '@angular/forms';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TranslateType } from 'src/app/Enum/TranslateType.enum';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-training-type',\r\n  templateUrl: './training-type.component.html',\r\n  styleUrls: ['./training-type.component.scss']\r\n})\r\nexport class TrainingTypeComponent extends baseComponent implements OnInit {\r\n\r\n\r\n  pageTitle: string = 'Training Type';\r\n  lstTrainingType: cTrainingTypeList;\r\n  message: ShowMessage = new ShowMessage();\r\n  filtertxt: string = '';\r\n  modelName: string = '';\r\n  modelId: string = '';\r\n  modelNameEdited: string = '';\r\n\r\n  page: Page<cTrainingTypeItem> = new Page();\r\n\r\n  constructor(private BLServiceDataManagement: ServiceDataManagement,\r\n    private paginationService: CustomPaginationService,\r\n    private router: Router,\r\n    BLServiceShowMessage: ServiceShowMessage,\r\n    BLServiceLoginUser: ServiceLoginUser, BLTranslate: TranslateService,\r\n    private modalService: NgbModal) {\r\n    super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n  private loadData(): void {\r\n    this.BLServiceDataManagement.getTrainingTypeAll(this.page.pageable.pageCurrent, this.filtertxt).subscribe({\r\n      next: lst => {\r\n        this.lstTrainingType = lst;\r\n        this.page.pageable.pageSize = lst.pageSize;\r\n        this.page.totalElements = lst.totalCount;\r\n        this.page.content = lst.lstResult;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  public getNextPage(): void {\r\n    this.page.pageable = this.paginationService.getNextPage(this.page);\r\n    this.loadData();\r\n  }\r\n\r\n  public getPreviousPage(): void {\r\n    this.page.pageable = this.paginationService.getPreviousPage(this.page);\r\n    this.loadData();\r\n  }\r\n  public getloadPageCurrent(): void {\r\n    this.loadData();\r\n  }\r\n  setActivate(Id: string): void {\r\n    if (!confirm(this.msgsetActivate))\r\n      return;\r\n\r\n    this.BLServiceDataManagement.setTrainingTypeActivate(Id).subscribe({\r\n      next: response => {\r\n\r\n        this.message.Success(this.msgActivatedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  setDeactivate(Id: string): void {\r\n    if (!confirm(this.msgsetDeactivate))\r\n      return;\r\n    this.BLServiceDataManagement.setTrainingTypeDeactivate(Id).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.msgDeactivatedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  filterbtn(): void {\r\n    this.page.pageable.pageCurrent = 1;\r\n    this.loadData();\r\n  }\r\n  createBtn(content): void {\r\n    this.modelId = \"-1\";\r\n    this.modelName = \"\";\r\n    this.modelNameEdited = \"\";\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  modelSaveBtn(modelForm: NgForm): void {\r\n    if (!modelForm.valid)\r\n      return;\r\n\r\n\r\n    if (this.modelId == \"-1\") {\r\n      this.BLServiceDataManagement.createTrainingType(this.modelName).subscribe({\r\n        next: response => {\r\n          this.message.Success(this.msgSavedSuccessfully);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.modalService.dismissAll();\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n    else {\r\n      this.BLServiceDataManagement.updateTrainingType(this.modelId, this.modelName).subscribe({\r\n        next: response => {\r\n          this.message.Success(this.msgSavedSuccessfully);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.modalService.dismissAll();\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n  }\r\n  openBackDropCustomClass(content, Id: string, name: string) {\r\n    this.modelId = Id;\r\n    this.modelName = name;\r\n    this.modelNameEdited = name;\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n\r\n  Translate() {\r\n    this.router.navigate(['/Translate/' + TranslateType.TrainingType + '/0']);\r\n  }\r\n}\r\n","<section class=\"my-5\">\r\n  <div class=\"container\">\r\n    <div class='row'>\r\n      <h4 class=\"mb-4\">{{'GenericTrainingType' | translate }}</h4>\r\n    </div>\r\n    <div class='row'>\r\n      <div class=\"col-sm-6 md-form\">\r\n        <mat-form-field class=\"example-full-width\">\r\n          <mat-label>{{'TrainingTypeSearch' | translate }}</mat-label>\r\n          <input type=\"text\" placeholder=\"{{'TrainingTypeType' | translate }} \" matInput [(ngModel)]=\"filtertxt\">\r\n        </mat-form-field>\r\n        <input type=\"submit\" value=\"{{'GenericSearch' | translate }}\"  class=\"btn color-bg-02 white-text\" (click)=\"filterbtn()\">\r\n      </div>\r\n      <div class=\"col-sm-6 md-form pull-right\">\r\n        <input type=\"button\" class=\"pull-right btn color-bg-01 white-text\" value=\"{{'GenericCreateNew' | translate }}\"\r\n          (click)=\"createBtn(content)\">\r\n          <input type=\"button\" class=\"pull-right btn color-bg-03 white-text\" value=\"{{'GenericTranslate' | translate }}\"\r\n          (click)=\"Translate()\">\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-12\">\r\n      <div class='table-responsive '>\r\n        <table class='table' *ngIf='page.content && page.content.length'>\r\n          <thead>\r\n            <tr>\r\n              <th>{{'GenericName' | translate }}</th>\r\n              <th>{{'GenericAction' | translate }}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor='let obj of page.content'>\r\n              <td>{{ obj.Name}}</td>\r\n              <td>\r\n                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-primary\" value=\"{{'GenericEdit' | translate }}\"\r\n                  (click)=\"openBackDropCustomClass(content,obj.Id, obj.Name)\">\r\n                <input *ngIf=\"!obj.IsActive\" type=\"button\" class=\"btn btn-success\" value=\"{{'GenericActivate' | translate }}\"\r\n                  (click)=\"setActivate(obj.Id)\">\r\n                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-danger\" value=\"{{'GenericDeactivate' | translate }}\"\r\n                  (click)=\"setDeactivate(obj.Id)\">\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <app-custom-pagination [page]=\"page\" (nextPageEvent)=\"getNextPage()\" (previousPageEvent)=\"getPreviousPage()\"\r\n        (loadPageCurrentEvent)=\"getloadPageCurrent()\">\r\n      </app-custom-pagination>\r\n    </div>\r\n  </div>\r\n  <div>\r\n    <ng-template role=\"dialog\" #content let-modal class=\"modal fade\">\r\n      <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header color-bg-01 white-text text-center\">\r\n\r\n            <h6 class=\"modal-title\">{{(modelId == \"-1\" ? 'GenericCreate'   : 'GenericEditing') | translate}} : {{modelId == \"-1\" ? (\"GenericNew\" | translate) : modelNameEdited}}</h6>\r\n          </div>\r\n          <!-- <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button> -->\r\n          <div class=\"modal-body pt-0\">\r\n\r\n            <form novalidate (ngSubmit)=\"modelSaveBtn(modelForm)\" #modelForm=\"ngForm\">\r\n              <div class=\"form-group \">\r\n                <mat-form-field class=\"example-full-width\">\r\n                  <mat-label>{{'TrainingTypeName' | translate }}</mat-label>\r\n                <input matInput id=\"modelNameId\" type=\"text\" placeholder=\"{{'GenericRequiredName' | translate }}\" required\r\n                  [(ngModel)]=\"modelName\" #modelNameVar=\"ngModel\" name=\"modelName\"\r\n                  [ngClass]=\"{'is-invalid': (modelNameVar.touched || modelNameVar.dirty) && !modelNameVar.valid }\" />\r\n                  <mat-error *ngIf=\"modelNameVar.errors?.required\">{{'TrainingTypeError1' | translate }}</mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"form-group pull-right md-form\">\r\n                <button class=\"btn color-bg-01 btn-sm white-text btnSave\" type=\"submit\"\r\n                  \r\n                  [disabled]=\"!modelForm.valid\">{{'GenericSave' | translate }}</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n\r\n            <button type=\"button\" class=\"btn color-bg-02 btn-sm white-text\"\r\n              (click)=\"modal.close('Close click')\">{{'GenericClose' | translate }}</button>\r\n          </div>\r\n\r\n\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n  </div>","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { PartnerComponent } from '../EntityManagement/partner/partner.component';\r\nimport { SubPartnerComponent } from '../EntityManagement/sub-partner/sub-partner.component';\r\nimport { TrainingCenterComponent } from '../EntityManagement/training-center/training-center.component';\r\n\r\nimport { AdminRouteGuard, AdminPartnerRouteGuard } from '../core/admin-route-guard';\r\nimport { SharedModule } from '../common/sharedmodule.module';\r\nimport { PartnerReportsComponent } from './partner-reports/partner-reports.component';\r\n\r\n@NgModule({\r\n  declarations: [ \r\n    PartnerComponent,\r\n    SubPartnerComponent,\r\n    TrainingCenterComponent,\r\n    PartnerReportsComponent\r\n  ],\r\n  imports: [ \r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      { path: 'EntityManagement/Partner', component: PartnerComponent, canActivate: [AdminPartnerRouteGuard]},\r\n      { path: 'EntityManagement/PartnerReports', component: PartnerReportsComponent, canActivate: [AdminRouteGuard]},\r\n      { path: 'EntityManagement/SubPartner', component: SubPartnerComponent, canActivate: [AdminPartnerRouteGuard]},\r\n      { path: 'EntityManagement/TrainingCenter/:id', component: TrainingCenterComponent, canActivate: [AdminPartnerRouteGuard]}\r\n    ])\r\n  ]\r\n})\r\nexport class EntityManagementModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { cUserProfileItem } from 'src/app/interface/Response/UserProfile.class';\nimport { Page } from 'src/app/common/pagination/page';\nimport { ServiceEntityManagement } from 'src/app/services/entitymanagement.service';\nimport { CustomPaginationService } from 'src/app/common/pagination/services/custom-pagination.service';\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\nimport { cEntityPartnerReportsList, cEntityPartnerReportsItem } from 'src/app/interface/Response/PartnerReports.class';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-partner-reports',\n  templateUrl: './partner-reports.component.html',\n  styleUrls: ['./partner-reports.component.css']\n})\nexport class PartnerReportsComponent extends baseComponent implements OnInit {\n\n  pageTitle: string = 'Partner Reports Account';\n  lstEntityPartner: cEntityPartnerReportsList;\n  PartnerMembers: cUserProfileItem[];\n  filtertxt: string = '';\n  modelNameEdited: string = '';\n  modelObj: cEntityPartnerReportsItem;\n  modelIsCreate:boolean = true;\n  page: Page<cEntityPartnerReportsItem> = new Page();\n  MemberId: string;\n\n  constructor(private BLServiceEntityManagement: ServiceEntityManagement,\n    private paginationService: CustomPaginationService,\n    BLServiceShowMessage: ServiceShowMessage,BLTranslate: TranslateService,\n    BLServiceLoginUser : ServiceLoginUser) { \n      super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\n    }\n\n\n  ngOnInit() {\n    this.loadData();\n  }\n  private loadData(): void {\n    this.BLServiceEntityManagement.EntityPartnerReportListAll(this.page.pageable.pageCurrent, this.filtertxt).subscribe({\n      next: lst => {\n        this.lstEntityPartner = lst;\n        this.page.pageable.pageSize = lst.pageSize;\n        this.page.totalElements = lst.totalCount;\n        this.page.content = lst.lstResult;\n      },\n      error: err => this.message.Error(err)\n    });\n  }\n  public getNextPage(): void {\n    this.page.pageable = this.paginationService.getNextPage(this.page);\n    this.loadData();\n  }\n\n  public getPreviousPage(): void {\n    this.page.pageable = this.paginationService.getPreviousPage(this.page);\n    this.loadData();\n  }\n  public getloadPageCurrent(): void {\n    this.loadData();\n  }\n  \n  filterbtn(): void {\n    this.page.pageable.pageCurrent = 1;\n    this.loadData();\n  }\n  \n\n}\n","<section class=\"my-5\">\n    <div class=\"container\">\n      <div class='row'>\n        <h4 class=\"mb-4\">{{'PartnerReport' | translate }}</h4>\n      </div>\n      <div class='row'>\n        <div class=\"col-sm-12 md-form\">\n          <mat-form-field class=\"example-full-width\">\n            <mat-label>{{'PartnerSearch' | translate }}</mat-label>\n            <input type=\"text\" placeholder=\"{{'PartnerTypeName' | translate }}\" matInput [(ngModel)]=\"filtertxt\">\n          </mat-form-field>\n          <input type=\"submit\" value=\"{{'GenericSearch' | translate }}\"  class=\"btn color-bg-02 white-text\" (click)=\"filterbtn()\">\n        </div>\n       \n      </div>\n      <div class=\"col-md-12\">\n        <div class='table-responsive'>\n          <table class='table' *ngIf='page.content && page.content.length'>\n            <thead>\n              <tr>\n                <th>{{'GenericName' | translate }}</th>\n                <th>{{'PartnerReportUserName' | translate }}</th>\n                <th>{{'PartnerReportPassword' | translate }}</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor='let obj of page.content'>\n                <td>{{ obj.Name}}</td>\n                <td>{{ obj.UserName}}</td>\n                <td>{{ obj.Password}}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n      <div>\n        <app-custom-pagination [page]=\"page\" (nextPageEvent)=\"getNextPage()\" (previousPageEvent)=\"getPreviousPage()\"\n          (loadPageCurrentEvent)=\"getloadPageCurrent()\">\n        </app-custom-pagination>\n      </div>\n    </div>\n  </section>","import { Component, OnInit } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgForm } from '@angular/forms';\r\n\r\nimport { cEntityPartnerList, cEntityPartnerItem } from 'src/app/interface/Response/EntityPartner.class';\r\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\r\nimport { Page } from 'src/app/common/pagination/page';\r\nimport { CustomPaginationService } from 'src/app/common/pagination/services/custom-pagination.service';\r\n\r\nimport { ServiceEntityManagement } from 'src/app/services/entitymanagement.service';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { cUserProfileItem } from 'src/app/interface/Response/UserProfile.class';\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-partner',\r\n  templateUrl: './partner.component.html',\r\n  styleUrls: ['./partner.component.scss']\r\n})\r\nexport class PartnerComponent extends baseComponent implements OnInit {\r\n\r\n  pageTitle: string = 'Partner';\r\n  lstEntityPartner: cEntityPartnerList;\r\n  PartnerMembers: cUserProfileItem[];\r\n  filtertxt: string = '';\r\n  modelNameEdited: string = '';\r\n  modelObj: cEntityPartnerItem;\r\n  modelIsCreate: boolean = true;\r\n  page: Page<cEntityPartnerItem> = new Page();\r\n  MemberId: string;\r\n  IsHoursCorrect: boolean = false;\r\n\r\n  constructor(private BLServiceEntityManagement: ServiceEntityManagement,\r\n    private paginationService: CustomPaginationService,\r\n    private modalService: NgbModal,\r\n    private router: Router,\r\n    BLServiceShowMessage: ServiceShowMessage, BLTranslate: TranslateService,\r\n    BLServiceLoginUser: ServiceLoginUser) {\r\n    super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n  private loadData(): void {\r\n    this.BLServiceEntityManagement.getEntityPartnerAll(this.page.pageable.pageCurrent, this.filtertxt).subscribe({\r\n      next: lst => {\r\n        this.lstEntityPartner = lst;\r\n        this.page.pageable.pageSize = lst.pageSize;\r\n        this.page.totalElements = lst.totalCount;\r\n        this.page.content = lst.lstResult;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  public getNextPage(): void {\r\n    this.page.pageable = this.paginationService.getNextPage(this.page);\r\n    this.loadData();\r\n  }\r\n\r\n  public getPreviousPage(): void {\r\n    this.page.pageable = this.paginationService.getPreviousPage(this.page);\r\n    this.loadData();\r\n  }\r\n  public getloadPageCurrent(): void {\r\n    this.loadData();\r\n  }\r\n  setActivate(Id: string): void {\r\n    if (!confirm(this.msgsetActivate))\r\n      return;\r\n    this.BLServiceEntityManagement.setEntityPartnerActivate(Id).subscribe({\r\n      next: response => {\r\n\r\n        this.message.Success(this.msgActivatedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  setDeactivate(Id: string): void {\r\n    if (!confirm(this.msgsetDeactivate))\r\n      return;\r\n\r\n    this.BLServiceEntityManagement.setEntityPartnerDeactivate(Id).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.msgDeactivatedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  filterbtn(): void {\r\n    this.page.pageable.pageCurrent = 1;\r\n    this.loadData();\r\n  }\r\n  createBtn(content): void {\r\n    // this.modelId = \"-1\";\r\n    // this.modelName = \"\";\r\n    this.modelObj = new cEntityPartnerItem;\r\n    this.modelIsCreate = true;\r\n    this.modelNameEdited = \"\";\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  modelSaveBtn(modelForm: NgForm): void {\r\n    if (!modelForm.valid)\r\n      return;\r\n\r\n    if (this.modelIsCreate) {\r\n      this.BLServiceEntityManagement.createEntityPartner(this.modelObj).subscribe({\r\n        next: response => {\r\n          this.message.Success(this.msgSavedSuccessfully);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.modalService.dismissAll();\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n    else {\r\n      this.BLServiceEntityManagement.updateEntityPartner(this.modelObj).subscribe({\r\n        next: response => {\r\n          this.message.Success(this.msgSavedSuccessfully);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.modalService.dismissAll();\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n  }\r\n  openBackDropCustomClass(content, obj: cEntityPartnerItem) {\r\n    this.modelObj = obj;\r\n    this.LoadPartnersMemebers();\r\n    this.modelIsCreate = false;\r\n    this.modelNameEdited = obj.Name;\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  LoadPartnersMemebers() {\r\n    this.BLServiceEntityManagement.getEntityPartnerGetByid(this.modelObj.Id).subscribe({\r\n      next: response => this.modelObj = response\r\n    });\r\n  }\r\n  SavePartnersMemebers(UserId: string) {\r\n    if (this.modelObj == null)\r\n      return;\r\n    this.BLServiceEntityManagement.memberAddEntityPartner(this.modelObj.Id, UserId).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.msgSavedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n        this.LoadPartnersMemebers();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  Remove(UserId: string) {\r\n    if (!confirm(this.msgsetRemove))\r\n      return;\r\n    this.BLServiceEntityManagement.memberRemoveEntityPartner(this.modelObj.Id, UserId).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.msgSavedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n        this.LoadPartnersMemebers();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  OnSelectedPartner(UserId: string): void {\r\n    this.SavePartnersMemebers(UserId);\r\n  }\r\n  GoToTrainingCenters(Id: string) {\r\n    this.router.navigate(['/EntityManagement/TrainingCenter/' + Id]);\r\n  }\r\n  onHoursSelect(event: any) {\r\n    this.IsHoursCorrect = this.modelObj.MinHours > this.modelObj.MaxHours;\r\n    \r\n  }\r\n}\r\n","<section class=\"my-5\">\r\n  <div class=\"container\">\r\n    <div class='row'>\r\n      <h4 class=\"mb-4\">{{'GenericPartner' | translate }}</h4>\r\n    </div>\r\n    <div class='row'>\r\n      <div class=\"col-sm-6 md-form\">\r\n        <mat-form-field class=\"example-full-width\">\r\n          <mat-label>{{'PartnerSearch' | translate }}</mat-label>\r\n          <input type=\"text\" placeholder=\"{{'PartnerTypeName' | translate }}\" matInput [(ngModel)]=\"filtertxt\">\r\n        </mat-form-field>\r\n        <input type=\"submit\" value=\"{{'GenericSearch' | translate }}\"  class=\"btn color-bg-02 white-text\" (click)=\"filterbtn()\">\r\n      </div>\r\n      <div class=\"col-sm-6 md-form pull-right\">\r\n        <input type=\"button\" class=\"pull-right btn color-bg-01 white-text\" value=\"{{'GenericCreateNew' | translate }}\"\r\n          (click)=\"createBtn(content)\">\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-12\">\r\n      <div class='table-responsive'>\r\n        <table class='table' *ngIf='page.content && page.content.length'>\r\n          <thead>\r\n            <tr>\r\n              <th>{{'GenericName' | translate }}</th>\r\n              <th>{{'RequestPhone' | translate }}</th>\r\n              <th>{{'PartnerManageAccount' | translate }}</th>\r\n              <th>{{'GenericAction' | translate }}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor='let obj of page.content'>\r\n              <td>{{ obj.Name}}</td>\r\n              <td>{{ obj.Phone}}</td>\r\n              <td>\r\n                <span *ngFor=\"let item of obj.Members\">{{item.Name}}, </span>\r\n              </td>\r\n              <td>\r\n                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-primary\" value=\"{{'GenericEdit' | translate }}\"\r\n                  (click)=\"openBackDropCustomClass(content,obj)\">\r\n                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-warning\" value=\"{{'PartnerAccount' | translate }}\"\r\n                  (click)=\"openBackDropCustomClass(contentAssign,obj)\">\r\n                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-info\" value=\"{{'GenericTrainingCenter' | translate }}\"\r\n                  (click)=\"GoToTrainingCenters(obj.Id)\">\r\n                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-danger\" value=\"{{'GenericDeactivate' | translate }}\"\r\n                  (click)=\"setDeactivate(obj.Id)\">\r\n                <input *ngIf=\"!obj.IsActive\" type=\"button\" class=\"btn btn-success\" value=\"{{'GenericActivate' | translate }}\"\r\n                  (click)=\"setActivate(obj.Id)\">\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <app-custom-pagination [page]=\"page\" (nextPageEvent)=\"getNextPage()\" (previousPageEvent)=\"getPreviousPage()\"\r\n        (loadPageCurrentEvent)=\"getloadPageCurrent()\">\r\n      </app-custom-pagination>\r\n    </div>\r\n  </div>\r\n  <div>\r\n    <ng-template role=\"dialog\" #content let-modal class=\"modal fade\">\r\n      <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header color-bg-01 white-text text-center\">\r\n\r\n            <h6 class=\"modal-title\">\r\n          \r\n              {{(modelIsCreate ? 'GenericCreate'   : 'GenericEditing') | translate}} : {{modelIsCreate ? (\"GenericNew\" | translate) : modelNameEdited}}\r\n            </h6>\r\n          </div>\r\n          <div class=\"modal-body pt-0\">\r\n            <form novalidate (ngSubmit)=\"modelSaveBtn(modelForm)\" #modelForm=\"ngForm\">\r\n              <div class=\"form-group \">\r\n                <mat-form-field class=\"example-full-width\">\r\n                  <mat-label>{{'PartnerName' | translate }}</mat-label>\r\n                  <input matInput id=\"modelNameId\" type=\"text\" placeholder=\"{{'GenericRequiredName' | translate }}\" required\r\n                    [(ngModel)]=\"modelObj.Name\" #modelNameVar=\"ngModel\" name=\"modelName\"\r\n                    [ngClass]=\"{'is-invalid': (modelNameVar.touched || modelNameVar.dirty) && !modelNameVar.valid }\" />\r\n                  <mat-error *ngIf=\"modelNameVar.errors?.required\">{{'PartnerEnterNameError' | translate }}</mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"form-group \">\r\n                <mat-form-field class=\"example-full-width\">\r\n                  <mat-label>{{'RequestPhone' | translate }}</mat-label>\r\n                  <input matInput id=\"modelPhoneId\" type=\"number\" placeholder=\"{{'RequestPhoneSelect' | translate }}\" required number\r\n                    [(ngModel)]=\"modelObj.Phone\" #modelPhoneVar=\"ngModel\" name=\"modelPhone\"\r\n                    [ngClass]=\"{'is-invalid': (modelPhoneVar.touched || modelPhoneVar.dirty) && !modelPhoneVar.valid }\" />\r\n                  <mat-error *ngIf=\"modelPhoneVar.errors?.required\">{{'RequestPhoneError' | translate }}</mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"form-group \">\r\n                <mat-form-field class=\"example-full-width\">\r\n                  <mat-label>{{'PartnerMinHour' | translate }}</mat-label>\r\n                  <input matInput id=\"modelMinHoursId\" pattern=\"^[1-9][0-9]?$|^100$\" min=\"1\" type=\"number\" placeholder=\"{{'PartnerMinHourSelect' | translate }}\" required number\r\n                    [(ngModel)]=\"modelObj.MinHours\" #modelMinHoursVar=\"ngModel\" name=\"modelMinHours\" (ngModelChange)=\"onHoursSelect($event)\"\r\n                    [ngClass]=\"{'is-invalid': (modelMinHoursVar.touched || modelMinHoursVar.dirty) && !modelMinHoursVar.valid }\" />\r\n                  <mat-error *ngIf=\"modelMinHoursVar.errors?.required\">{{'PartnerMinHourError' | translate }}</mat-error>\r\n                  <mat-error *ngIf=\"modelMaxHoursVar?.errors?.pattern\">{{'ConfigOrderError' | translate }}</mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"form-group \">\r\n                <mat-form-field class=\"example-full-width\">\r\n                  <mat-label>{{'PartnerMaxHour' | translate }}</mat-label>\r\n                  <input matInput id=\"modelMaxHoursId\" pattern=\"^[1-9][0-9]?$|^100$\" type=\"number\" placeholder=\"{{'PartnerMaxHourSelect' | translate }}\" required number \r\n                    [(ngModel)]=\"modelObj.MaxHours\" #modelMaxHoursVar=\"ngModel\" name=\"modelMaxHours\"  min=\"1\" (ngModelChange)=\"onHoursSelect($event)\"\r\n                    [ngClass]=\"{'is-invalid': (modelMaxHoursVar.touched || modelMaxHoursVar.dirty) && !modelMaxHoursVar.valid }\" />\r\n                    <mat-error *ngIf=\"modelMaxHoursVar.errors?.required\">{{'PartnerMaxHourError' | translate }}</mat-error>\r\n                    <mat-error *ngIf=\"modelMaxHoursVar?.errors?.pattern\">{{'ConfigOrderError' | translate }}</mat-error>\r\n                    <!-- <mat-error class=\"MatError\" *ngIf=\"IsHoursCorrect\">{{'TrainingDateError' | translate }}111</mat-error> -->\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"form-group pull-right md-form\">\r\n                <button class=\"btn color-bg-01 btn-sm white-text btnSave\" type=\"submit\"\r\n                  \r\n                  [disabled]=\"!modelForm.valid\">{{'GenericSave' | translate }}</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n\r\n            <button type=\"button\" class=\"btn color-bg-02 btn-sm white-text\"\r\n              (click)=\"modal.close('Close click')\">{{'GenericClose' | translate }}</button>\r\n          </div>\r\n\r\n\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n\r\n    <div>\r\n      <ng-template #contentAssign let-modal>\r\n        <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header color-bg-01 white-text text-center\">\r\n\r\n              <h6 class=\"modal-title\">\r\n                {{'PartnerAssignAccount' | translate }}: {{modelNameEdited}}</h6>\r\n            </div>\r\n            <div class=\"modal-body pt-0\">\r\n              <div>\r\n                <cust-search-partner (OnSelectedPartner)='OnSelectedPartner($event)'></cust-search-partner>\r\n              </div>\r\n              <div>\r\n                <table class='table' *ngIf='modelObj.Members && modelObj.Members.length'>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>{{'GenericName' | translate }}</th>\r\n                      <th>{{'GenericAction' | translate }}</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr *ngFor='let obj of modelObj.Members'>\r\n                      <td>{{ obj.Name }}\r\n                      </td>\r\n                      <td>\r\n                        <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-danger\" value=\"{{'GenericRemove' | translate }}\"\r\n                          (click)=\"Remove(obj.Id)\">\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              <button type=\"button\" class=\"btn color-bg-02 btn-sm white-text\"\r\n                (click)=\"modal.close('Close click')\">{{'GenericClose' | translate }}</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </ng-template>\r\n    </div>\r\n  </div>\r\n</section>","import { Component, OnInit } from '@angular/core';\r\nimport { cEntitySubPartnerList, cEntitySubPartnerItem } from 'src/app/interface/Response/EntitySubPartner.class';\r\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\r\nimport { cEntityPartnerItem } from 'src/app/interface/Response/EntityPartner.class';\r\nimport { Page } from 'src/app/common/pagination/page';\r\nimport { ModelEntitySubPartner } from 'src/app/interface/Model/ModelEntitySubPartner.class';\r\nimport { ServiceEntityManagement } from 'src/app/services/entitymanagement.service';\r\nimport { CustomPaginationService } from 'src/app/common/pagination/services/custom-pagination.service';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgForm } from '@angular/forms';\r\nimport { cEntityTrainingCenterItem } from 'src/app/interface/Response/EntityTrainingCenter.class';\r\nimport { noop } from 'rxjs';\r\nimport { cTrainingTypeItem } from 'src/app/interface/Response/TrainingType.class';\r\nimport { UserType } from 'src/app/Enum/UserType.enum';\r\nimport { cUserProfileItem } from 'src/app/interface/Response/UserProfile.class';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-sub-partner',\r\n  templateUrl: './sub-partner.component.html',\r\n  styleUrls: ['./sub-partner.component.css']\r\n})\r\nexport class SubPartnerComponent extends baseComponent implements OnInit {\r\n\r\n\r\n  pageTitle: string = 'Sub Partner';\r\n  lstEntitySubPartner: cEntitySubPartnerList;\r\n  message: ShowMessage = new ShowMessage();\r\n  filtertxt: string = '';\r\n  modelNameEdited: string = '';\r\n  modelObj: ModelEntitySubPartner;\r\n  modelObjSubPartner: cEntitySubPartnerItem;\r\n  modelIsCreate: boolean = true;\r\n  page: Page<cEntitySubPartnerItem> = new Page();\r\n  partnersList: cEntityPartnerItem[];\r\n  TrainingCenterList: cEntityTrainingCenterItem[];\r\n  lstMyPartners: cEntityPartnerItem[];\r\n  popup:boolean = false;\r\n  msgsetAddAll:string;\r\n  msgsetRemoveAll:string;\r\n\r\n  constructor(private BLServiceEntityManagement: ServiceEntityManagement,\r\n    private paginationService: CustomPaginationService,\r\n    private modalService: NgbModal,\r\n     BLServiceShowMessage: ServiceShowMessage,BLTranslate: TranslateService,\r\n    BLServiceLoginUser : ServiceLoginUser) { \r\n      super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\r\n    }\r\n\r\n\r\n  ngOnInit() {\r\n    this.BLTranslate.get(\"msgsetAddAll\").subscribe(res => { this.msgsetAddAll = res; });\r\n    this.BLTranslate.get(\"msgsetRemoveAll\").subscribe(res => { this.msgsetRemoveAll = res; });\r\n   \r\n    this.loadData();\r\n    this.BLServiceEntityManagement.getEntityPartnerListActive().subscribe({\r\n      next: lst => {\r\n        this.partnersList = lst;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n    // this.BLServiceEntityManagement.getEntityTrainingCenterListActive().subscribe({\r\n    //   next: lst => {\r\n    //     this.TrainingCenterList = lst;\r\n    //   },\r\n    //   error: err => this.message.Error(err)\r\n    // });\r\n    this.BLServiceEntityManagement.getEntityPartnerGetMy().subscribe({\r\n      next: lst => {\r\n        this.lstMyPartners = lst;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n\r\n  private loadData(): void {\r\n    this.BLServiceEntityManagement.getEntitySubPartnerAll(this.page.pageable.pageCurrent, this.filtertxt).subscribe({\r\n      next: lst => {\r\n\r\n        this.lstEntitySubPartner = lst;\r\n        this.page.pageable.pageSize = lst.pageSize;\r\n        this.page.totalElements = lst.totalCount;\r\n        this.page.content = lst.lstResult;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  public getNextPage(): void {\r\n    this.page.pageable = this.paginationService.getNextPage(this.page);\r\n    this.loadData();\r\n  }\r\n\r\n  public getPreviousPage(): void {\r\n    this.page.pageable = this.paginationService.getPreviousPage(this.page);\r\n    this.loadData();\r\n  }\r\n  public getloadPageCurrent(): void {\r\n    this.loadData();\r\n  }\r\n  setActivate(Id: string): void {\r\n    if (!confirm(this.msgsetActivate))\r\n      return;\r\n    this.BLServiceEntityManagement.setEntitySubPartnerActivate(Id).subscribe({\r\n      next: response => {\r\n        \r\n          this.message.Success(this.msgActivatedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  setDeactivate(Id: string): void {\r\n    if (!confirm(this.msgsetDeactivate))\r\n      return;\r\n\r\n    this.BLServiceEntityManagement.setEntitySubPartnerDeactivate(Id).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.msgDeactivatedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  filterbtn(): void {\r\n    this.page.pageable.pageCurrent = 1;\r\n    this.loadData();\r\n  }\r\n  createBtn(content): void {\r\n    this.modelObj = new ModelEntitySubPartner();\r\n    this.modelObjSubPartner = new cEntitySubPartnerItem();\r\n    this.ReconstructeTrainingCenterList();\r\n    this.modelIsCreate = true;\r\n    this.modelNameEdited = \"\";\r\n    this.modalService.open(content, {size:'lg',backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  modelSaveBtn(modelForm: NgForm): void {\r\n    if (!modelForm.valid)\r\n      return;\r\n\r\n    if (this.modelIsCreate) {\r\n      this.BLServiceEntityManagement.createEntitySubPartner(this.modelObj).subscribe({\r\n        next: response => {\r\n          this.message.Success(this.msgSavedSuccessfully);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.modalService.dismissAll();\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n    else {\r\n      this.BLServiceEntityManagement.updateEntitySubPartner(this.modelObj).subscribe({\r\n        next: response => {\r\n\r\n          this.message.Success(this.msgSavedSuccessfully);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.modalService.dismissAll();\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n  }\r\n  openBackDropCustomClass(content, obj: cEntitySubPartnerItem) {\r\n    this.modelObjSubPartner = obj;\r\n    this.ReconstructeTrainingCenterList();\r\n    this.modelObj = this.ConvertEntityToModel(obj);\r\n    this.modelIsCreate = false;\r\n    this.modelNameEdited = obj.Name;\r\n    this.modalService.open(content, { size:'lg',  backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  ReconstructeTrainingCenterList() {\r\n    \r\n    this.TrainingCenterList = [];\r\n    if (!this.modelObjSubPartner.Partners?.length)\r\n      return;\r\n\r\n    this.modelObjSubPartner.Partners.forEach(value => {\r\n      value.TrainingCenters.length ? this.TrainingCenterList = this.TrainingCenterList.concat(value.TrainingCenters.filter(item => item.IsActive == true)) : noop;\r\n    });\r\n    this.TrainingCenterList = this.TrainingCenterList.sort((t1, t2) => {\r\n      const name1 = t1.Name.toLowerCase();\r\n      const name2 = t2.Name.toLowerCase();\r\n      if (name1 > name2) { return 1; }\r\n      if (name1 < name2) { return -1; }\r\n      return 0;\r\n    });\r\n  }\r\n  ConvertEntityToModel(obj: cEntitySubPartnerItem): ModelEntitySubPartner {\r\n    var tmpObj = new ModelEntitySubPartner();\r\n    tmpObj.Id = obj.Id;\r\n    tmpObj.Name = obj.Name;\r\n    tmpObj.Phone = obj.Phone;\r\n    tmpObj.PartnerIds = obj.Partners.map(x => x.Id);\r\n    tmpObj.TrainingCenterIds = obj.TrainingCenters.map(x => x.Id);\r\n    return tmpObj;\r\n  }\r\n  //region Assign Sub Partner Account\r\n  LoadSubPartnersMemebers() {\r\n    this.BLServiceEntityManagement.getEntitySubPartnerGetByid(this.modelObj.Id).subscribe({\r\n      next: response => this.modelObjSubPartner = response\r\n    });\r\n  }\r\n  SavePartnersMemebers(UserId: string) {\r\n    if (this.modelObj == null)\r\n      return;\r\n    \r\n    this.BLServiceEntityManagement.memberAddEntitySubPartner(this.modelObjSubPartner.Id, UserId).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.msgSavedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n        this.LoadSubPartnersMemebers();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  Remove(UserId: string) {\r\n    if (!confirm(this.msgsetRemove))\r\n      return;\r\n    this.BLServiceEntityManagement.memberRemoveEntitySubPartner(this.modelObjSubPartner.Id, UserId).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.msgSavedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n        this.LoadSubPartnersMemebers();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  OnSelectedPartner(UserId: string): void {\r\n    this.SavePartnersMemebers(UserId);\r\n  }\r\n  //Endregion Assign Sub Partner Account\r\n  /////////////////////////////\r\n  //region Assign Partner Entity\r\n  RemovePartnerEntity(PartnerId: string) {\r\n    if (!confirm(this.msgsetRemove))\r\n      return;\r\n    this.BLServiceEntityManagement.RemovePartnerEntityToEntitySubPartner(PartnerId, this.modelObjSubPartner.Id).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.msgSavedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.LoadSubPartnersEntity();\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  OnSelectedPartnerEntity(UserId: string): void {\r\n    this.SavePartnersEntity(UserId);\r\n  }\r\n  SavePartnersEntity(PartnerId: string) {\r\n    if (this.modelObj == null)\r\n      return;\r\n    \r\n    this.BLServiceEntityManagement.AddPartnerEntityToEntitySubPartner(PartnerId, this.modelObjSubPartner.Id).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.msgSavedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.LoadSubPartnersEntity();\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  \r\n  LoadSubPartnersEntity() {\r\n    this.BLServiceEntityManagement.getEntitySubPartnerGetByid(this.modelObj.Id).subscribe({\r\n      next: response => {\r\n        this.modelObjSubPartner = response;\r\n        this.ReconstructeTrainingCenterList();\r\n      }\r\n    });\r\n  }\r\n  //Endregion Assign Partner Entity\r\n  //region TrainingCenters\r\n  SaveTrainingCenterEntity(TrainingCenterId: string) {\r\n    if (this.modelObj == null)\r\n      return;\r\n    \r\n    this.BLServiceEntityManagement.AddEntityTrainingCenterToSubPartner(TrainingCenterId,this.modelObjSubPartner.Id ).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.msgSavedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.LoadSubPartnersEntity();\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n\r\n  RemoveTrainingCenterEntity(TrainingCenterId: string) {\r\n    if (!confirm(this.msgsetRemove))\r\n      return;\r\n    this.BLServiceEntityManagement.RemoveEntityTrainingCenterToSubPartner(TrainingCenterId,this.modelObjSubPartner.Id).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.msgSavedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.LoadSubPartnersEntity();\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  AddAllPartnerTrainingCenter(PartnerId: string) {\r\n    if (!confirm(this.msgsetAddAll))\r\n      return;\r\n    this.BLServiceEntityManagement.AddEntityTrainingCenterToSubPartnerByPartnerID(PartnerId,this.modelObjSubPartner.Id).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.msgSavedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.LoadSubPartnersEntity();\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  RemoveAllPartnerTrainingCenter(PartnerId: string) {\r\n    if (!confirm(this.msgsetRemoveAll))\r\n      return;\r\n    this.BLServiceEntityManagement.RemoveEntityTrainingCenterToSubPartnerByPartnerID(PartnerId,this.modelObjSubPartner.Id).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.msgSavedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.LoadSubPartnersEntity();\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  OnSelectedTrainingCenter(Id:string)\r\n  {\r\n    \r\n    this.SaveTrainingCenterEntity(Id);\r\n  }\r\n  //EndRegion training Centers\r\n  filterSubPartnerAccount(obj:cUserProfileItem[]){;\r\n    if(obj.length > 0)\r\n    return obj.filter(x=>x.Type == UserType.SubPartner.toString());\r\n  }\r\n}\r\n","<section class=\"my-5\">\r\n  <div class=\"container\">\r\n    <div class='row'>\r\n      <h4 class=\"mb-4\">{{'GenericSubPartner' | translate }}</h4>\r\n    </div>\r\n    <div class='row'>\r\n      <div class=\"col-sm-6 md-form\">\r\n        <mat-form-field class=\"example-full-width\">\r\n          <mat-label>{{'SubPartnerSearch' | translate }}</mat-label>\r\n          <input type=\"text\" placeholder=\"{{'SubPartnerType' | translate }}\" matInput [(ngModel)]=\"filtertxt\">\r\n        </mat-form-field>\r\n        <input type=\"submit\" value=\"{{'GenericSearch' | translate }}\" class=\"btn color-bg-02 white-text\"\r\n          (click)=\"filterbtn()\">\r\n      </div>\r\n      <div class=\"col-sm-6 md-form  pull-right\">\r\n        <input type=\"button\" class=\" pull-right btn color-bg-01 white-text\" value=\"{{'GenericCreateNew' | translate }}\"\r\n          (click)=\"createBtn(content)\">\r\n        <button type=\"button\" (click)=\"popup = true\" class=\" pull-right btn color-bg-03 white-text\">My Partners</button>\r\n        <div class=\"overlay\" *ngIf=\"popup\">\r\n          <div class=\"popup\">\r\n            <h4>My Partner List</h4>\r\n            <a class=\"close\" (click)=\"popup = false\">&times;</a>\r\n            <hr class=\"style-seven\">\r\n            <div class=\"content\">\r\n              <ol class=\"mypartner\">\r\n                <li *ngFor=\"let item of lstMyPartners\">{{item.Name}}</li>\r\n              </ol>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-12\">\r\n      <div class='table-responsive'>\r\n        <table class='table' *ngIf='page.content && page.content.length'>\r\n          <thead>\r\n            <tr>\r\n              <th>{{'GenericName' | translate }}</th>\r\n              <th>{{'RequestPhone' | translate }}</th>\r\n              <th>{{'PartnerManageAccount' | translate }}</th>\r\n              <th>{{'GenericAction' | translate }}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor='let obj of page.content'>\r\n              <td>{{ obj.Name}}</td>\r\n              <td>{{ obj.Phone}}</td>\r\n              <td>\r\n                <span *ngFor=\"let item of filterSubPartnerAccount(obj.MemberSubPartners)\">{{item.Name}}, </span>\r\n              </td>\r\n              <td>\r\n                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-primary\" value=\"{{'GenericEdit' | translate }}\"\r\n                  (click)=\"openBackDropCustomClass(content,obj)\">\r\n                <input *ngIf=\"obj.IsActive  && (IsAdmin || IsPartner)\" type=\"button\" class=\"btn btn-info\"\r\n                  value=\"{{'GenericPartnerEntity' | translate }}\"\r\n                  (click)=\"openBackDropCustomClass(contentAssignEntity,obj)\">\r\n                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-warning\"\r\n                  value=\"{{'SubPartnerAccount' | translate }}\" (click)=\"openBackDropCustomClass(contentAssign,obj)\">\r\n                <input *ngIf=\"!obj.IsActive\" type=\"button\" class=\"btn btn-success\"\r\n                  value=\"{{'GenericActivate' | translate }}\" (click)=\"setActivate(obj.Id)\">\r\n                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-danger\"\r\n                  value=\"{{'GenericDeactivate' | translate }}\" (click)=\"setDeactivate(obj.Id)\">\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <app-custom-pagination [page]=\"page\" (nextPageEvent)=\"getNextPage()\" (previousPageEvent)=\"getPreviousPage()\"\r\n        (loadPageCurrentEvent)=\"getloadPageCurrent()\">\r\n      </app-custom-pagination>\r\n    </div>\r\n  </div>\r\n  <div>\r\n    <ng-template role=\"dialog\" #content let-modal class=\"modal fade\">\r\n      <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header color-bg-01 white-text text-center\">\r\n            <h6 class=\"modal-title\">\r\n              {{(modelIsCreate ? 'GenericCreate'   : 'GenericEditing') | translate}} :\r\n              {{modelIsCreate ? (\"GenericNew\" | translate) : modelNameEdited}}\r\n            </h6>\r\n          </div>\r\n          <div class=\"modal-body pt-0\">\r\n            <form novalidate (ngSubmit)=\"modelSaveBtn(modelForm)\" #modelForm=\"ngForm\">\r\n              <div class=\"form-group \">\r\n                <mat-form-field class=\"example-full-width\">\r\n                  <mat-label>{{'SubPartnerName' | translate }}</mat-label>\r\n                  <input matInput id=\"modelNameId\" type=\"text\" placeholder=\"{{'GenericRequiredName' | translate }}\"\r\n                    required [(ngModel)]=\"modelObj.Name\" #modelNameVar=\"ngModel\" name=\"modelName\"\r\n                    [ngClass]=\"{'is-invalid': (modelNameVar.touched || modelNameVar.dirty) && !modelNameVar.valid }\" />\r\n                  <mat-error *ngIf=\"modelNameVar.errors?.required\">{{'SubPartnerNameError' | translate }}</mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"form-group \">\r\n                <mat-form-field class=\"example-full-width\">\r\n                  <mat-label>{{'RequestPhone' | translate }}</mat-label>\r\n                  <input matInput id=\"modelPhoneId\" type=\"number\" placeholder=\"{{'RequestPhoneSelect' | translate }}\"\r\n                    required [(ngModel)]=\"modelObj.Phone\" #modelPhoneVar=\"ngModel\" name=\"modelPhone\"\r\n                    [ngClass]=\"{'is-invalid': (modelPhoneVar.touched || modelPhoneVar.dirty) && !modelPhoneVar.valid }\" />\r\n                  <mat-error *ngIf=\"modelPhoneVar.errors?.required\">{{'RequestPhoneError' | translate }}</mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"form-group pull-right md-form\">\r\n                <button class=\"btn color-bg-01 btn-sm white-text btnSave\" type=\"submit\"\r\n                  [disabled]=\"!modelForm.valid\">{{'GenericSave' | translate }}</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n\r\n            <button type=\"button\" class=\"btn color-bg-02 btn-sm white-text\"\r\n              (click)=\"modal.close('Close click')\">{{'GenericClose' | translate }}</button>\r\n          </div>\r\n\r\n\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n  </div>\r\n  <div>\r\n    <ng-template role=\"dialog\" #contentAssignEntity let-modal class=\"modal fade\">\r\n      <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n        <div class=\"modal-content\" style=\"min-height: 300px;\">\r\n          <div class=\"modal-header color-bg-01 white-text text-center\">\r\n\r\n            <h6 class=\"modal-title\">\r\n              {{(modelIsCreate ? 'GenericCreate'   : 'GenericEditing') | translate}} :\r\n              {{modelIsCreate ? (\"GenericNew\" | translate) : modelNameEdited}}\r\n            </h6>\r\n          </div>\r\n          <div class=\"modal-body pt-0\">\r\n            <mat-tab-group animationDuration=\"1000ms\">\r\n              <mat-tab label=\"{{'GenericPartnerEntity' | translate }}\" style=\"min-height: 150px;\" *ngIf=\"modelObj.Id\">\r\n                <cust-search-partner-entity (OnSelectedPartner)=\"OnSelectedPartnerEntity($event)\" *ngIf=\"IsAdmin\">\r\n                </cust-search-partner-entity>\r\n                <div *ngIf=\"modelObj.Id\">\r\n                  <table class='table' *ngIf='modelObjSubPartner.Partners && modelObjSubPartner.Partners.length'>\r\n                    <tbody>\r\n                      <tr *ngFor='let obj of modelObjSubPartner.Partners'>\r\n                        <td>{{ obj.Name }}\r\n                        </td>\r\n                        <td>\r\n                          <input *ngIf=\"obj.IsActive && IsAdmin\" type=\"button\" class=\"btn btn-danger\" \r\n                            value=\"{{'GenericRemove' | translate }}\" (click)=\"RemovePartnerEntity(obj.Id)\">\r\n                        </td>\r\n                        <td>\r\n                          <button mat-raised-button *ngIf=\"obj.IsActive\" class=\"btn btn-success\"\r\n                            matTooltip=\"{{'SubPartnerAddTrainingCenter' | translate }}\"\r\n                            (click)=\"AddAllPartnerTrainingCenter(obj.Id)\"><i class=\"fas fa-plus\"></i></button>\r\n                          <button mat-raised-button *ngIf=\"obj.IsActive\" class=\"btn btn-danger\"\r\n                            value=\"{{'SubPartnerRemoveTrainingCenter' | translate }}\"\r\n                            (click)=\"RemoveAllPartnerTrainingCenter(obj.Id)\"><i class=\"fas fa-minus\"></i></button>\r\n\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </mat-tab>\r\n              <mat-tab label=\"{{'TrainingCentersEntity' | translate }}\" *ngIf=\"modelObj.Id\">\r\n                <div class=\"alert alert-danger\" *ngIf=\"!this.modelObjSubPartner.Partners?.length\">\r\n                  {{'SubPartnerCenterError' | translate }}</div>\r\n                <div *ngIf=\"this.modelObjSubPartner.Partners?.length\">\r\n                  <cust-auto-compelet-list-generic (OnSelectedItem)=\"OnSelectedTrainingCenter($event)\"\r\n                    [lstTrainingCenters]='TrainingCenterList'></cust-auto-compelet-list-generic>\r\n                </div>\r\n                <div *ngIf=\"modelObj.Id && this.modelObjSubPartner.Partners?.length\">\r\n                  <table class='table'\r\n                    *ngIf='modelObjSubPartner.TrainingCenters && modelObjSubPartner.TrainingCenters.length'>\r\n                    <tbody>\r\n                      <tr *ngFor='let obj of modelObjSubPartner.TrainingCenters'>\r\n                        <td>{{ obj.Name }}\r\n                        </td>\r\n                        <td>\r\n                          <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-danger\"\r\n                            value=\"{{'GenericRemove' | translate }}\" (click)=\"RemoveTrainingCenterEntity(obj.Id)\">\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </mat-tab>\r\n            </mat-tab-group>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n\r\n            <button type=\"button\" class=\"btn color-bg-02 btn-sm white-text\"\r\n              (click)=\"modal.close('Close click')\">{{'GenericClose' | translate }}</button>\r\n          </div>\r\n\r\n\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n  </div>\r\n  <div>\r\n    <ng-template role=\"dialog\" #contentAssign let-modal class=\"modal fade\">\r\n      <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header color-bg-01 white-text text-center\">\r\n\r\n            <h6 class=\"modal-title\">\r\n              {{'SubPartnerAddSubAccount' | translate }}: {{modelNameEdited}}</h6>\r\n          </div>\r\n          <div class=\"modal-body pt-0\">\r\n\r\n\r\n            <div class=\"form-group \">\r\n              <cust-search-sub-partner (OnSelectedPartner)='OnSelectedPartner($event)'></cust-search-sub-partner>\r\n            </div>\r\n            <div>\r\n              <table class='table'\r\n                *ngIf='modelObjSubPartner.MemberSubPartners && modelObjSubPartner.MemberSubPartners.length'>\r\n                <thead>\r\n                  <tr>\r\n                    <th>{{'GenericName' | translate }}</th>\r\n                    <th>{{'GenericAction' | translate }}</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr *ngFor='let obj of filterSubPartnerAccount(modelObjSubPartner.MemberSubPartners)'>\r\n                    <td>{{ obj.Name }}\r\n                    </td>\r\n                    <td>\r\n                      <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-danger\"\r\n                        value=\"{{'GenericRemove' | translate }}\" (click)=\"Remove(obj.Id)\">\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn color-bg-02 btn-sm white-text\"\r\n              (click)=\"modal.close('Close click')\">{{'GenericClose' | translate }}</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n\r\n  </div>\r\n</section>","import { Component, OnInit } from '@angular/core';\r\nimport { cEntityTrainingCenterList, cEntityTrainingCenterItem } from 'src/app/interface/Response/EntityTrainingCenter.class';\r\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\r\nimport { Page } from 'src/app/common/pagination/page';\r\nimport { ServiceEntityManagement } from 'src/app/services/entitymanagement.service';\r\nimport { CustomPaginationService } from 'src/app/common/pagination/services/custom-pagination.service';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgForm } from '@angular/forms';\r\nimport { cEntityPartnerItem } from 'src/app/interface/Response/EntityPartner.class';\r\nimport { ModelEntityTrainingCenter } from 'src/app/interface/Model/ModelEntityTrainingCenter.class';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { cTrainingTypeItem } from 'src/app/interface/Response/TrainingType.class';\r\nimport { Constants } from 'src/app/constants';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-training-center',\r\n  templateUrl: './training-center.component.html',\r\n  styleUrls: ['./training-center.component.scss']\r\n})\r\nexport class TrainingCenterComponent extends baseComponent implements OnInit {\r\n\r\n  pageTitle: string = 'Training Center';\r\n  message: ShowMessage = new ShowMessage();\r\n  modelNameEdited: string = '';\r\n  modelObj: ModelEntityTrainingCenter;\r\n  modelIsCreate: boolean = true;\r\n\r\n  ///////\r\n  partnerObj: cEntityPartnerItem;\r\n  PartnerId: string;\r\n  lstEntityTrainingCenterfilter: cEntityTrainingCenterItem[];\r\n  page: Page<cEntityTrainingCenterItem> = new Page();\r\n\r\n  private _filtertxt: string = '';\r\n  public get filtertxt(): string {\r\n    return this._filtertxt;\r\n  }\r\n  public set filtertxt(value: string) {\r\n    this._filtertxt = value;\r\n    this.lstEntityTrainingCenterfilter = this.filtertxt ? this.loadDataFilter() : this.partnerObj.TrainingCenters;\r\n  }\r\n\r\n  constructor(private BLServiceEntityManagement: ServiceEntityManagement,\r\n    private paginationService: CustomPaginationService,\r\n    BLServiceShowMessage: ServiceShowMessage,\r\n    BLServiceLoginUser: ServiceLoginUser,BLTranslate: TranslateService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private modalService: NgbModal) { \r\n      super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\r\n    }\r\n\r\n\r\n  ngOnInit() {\r\n    const param = this.route.snapshot.paramMap.get('id');\r\n    if (param) {\r\n      this.PartnerId = param;\r\n      this.page.pageable.pageSize = Constants.PAGE_SIZE;\r\n      this.loadData();\r\n    }\r\n\r\n\r\n  }\r\n  private loadData(): void {\r\n    this.BLServiceEntityManagement.getEntityPartnerGetByid(this.PartnerId).subscribe({\r\n      next: data => {\r\n        this.partnerObj = data;\r\n        this.lstEntityTrainingCenterfilter = this.loadDataFilter();;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  public getNextPage(): void {\r\n    this.page.pageable = this.paginationService.getNextPage(this.page);\r\n  }\r\n\r\n  public getPreviousPage(): void {\r\n    this.page.pageable = this.paginationService.getPreviousPage(this.page);\r\n  }\r\n  public getloadPageCurrent(): void {\r\n  }\r\n  setActivate(Id: string): void {\r\n    if (!confirm(this.msgsetActivate))\r\n      return;\r\n    this.BLServiceEntityManagement.setEntityTrainingCenterActivate(this.PartnerId,Id).subscribe({\r\n      next: response => {\r\n        \r\n          this.message.Success(this.msgActivatedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  setDeactivate(Id: string): void {\r\n    if (!confirm(this.msgsetDeactivate))\r\n      return;\r\n\r\n    this.BLServiceEntityManagement.setEntityTrainingCenterDeactivate(this.PartnerId,Id).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.msgDeactivatedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  loadDataFilter() {\r\n    var lst = this.partnerObj.TrainingCenters.filter((item: cTrainingTypeItem) =>\r\n      item.Name.toLocaleLowerCase().indexOf(this.filtertxt.toLocaleLowerCase()) !== -1);\r\n\r\n    this.page.totalElements = lst.length;\r\n    this.page.content = lst;\r\n\r\n    return lst;\r\n  }\r\n  createBtn(content): void {\r\n    this.modelObj = new ModelEntityTrainingCenter();\r\n    this.modelIsCreate = true;\r\n    this.modelNameEdited = \"\";\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  modelSaveBtn(modelForm: NgForm): void {\r\n    if (!modelForm.valid)\r\n      return;\r\n\r\n    this.modelObj.PartnerId = this.PartnerId;\r\n\r\n    if (this.modelIsCreate) {\r\n      this.BLServiceEntityManagement.createEntityTrainingCenter(this.modelObj).subscribe({\r\n        next: response => {\r\n          this.message.Success(this.msgSavedSuccessfully);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.modalService.dismissAll();\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n    else {\r\n      this.BLServiceEntityManagement.updateEntityTrainingCenter(this.modelObj).subscribe({\r\n        next: response => {\r\n\r\n          this.message.Success(this.msgSavedSuccessfully);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.modalService.dismissAll();\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n  }\r\n  openBackDropCustomClass(content, obj: cEntityTrainingCenterItem) {\r\n    var tmpObj = new ModelEntityTrainingCenter();\r\n    tmpObj.Id = obj.Id;\r\n    tmpObj.Name = obj.Name;\r\n    tmpObj.Phone = obj.Phone;\r\n    this.modelObj = tmpObj;\r\n    this.modelIsCreate = false;\r\n    this.modelNameEdited = obj.Name;\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  onBack(): void {\r\n    this.router.navigate(['/EntityManagement/Partner']);\r\n  }\r\n}\r\n","<section class=\"my-5\">\r\n  <div class=\"container\">\r\n    <div class='row'>\r\n        <h4 class=\"mb-4\">{{partnerObj.Name }} {{'GenericPartner' | translate }} -  {{'GenericTrainingCenter' | translate }}</h4>\r\n    </div>\r\n    <div class='row'>\r\n      <div class=\"col-sm-6 md-form\">\r\n        <mat-form-field class=\"example-full-width\">\r\n          <mat-label>{{'TrainingCenterSearch' | translate }}</mat-label>\r\n          <input type=\"text\" placeholder=\"Type Training Center Name\" matInput [(ngModel)]=\"filtertxt\">\r\n        </mat-form-field>\r\n        <input type=\"submit\" value=\"{{'GenericSearch' | translate }}\"   class=\"btn color-bg-02 white-text\">\r\n      </div>\r\n      <div class=\"col-sm-6 md-form pull-right\">\r\n        <input type=\"button\" class=\"pull-right btn color-bg-01 white-text\" value=\"{{'GenericCreateNew' | translate }}\"\r\n          (click)=\"createBtn(content)\">\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-12\">\r\n      <div class='table-responsive'>\r\n        <table class='table' *ngIf='lstEntityTrainingCenterfilter && lstEntityTrainingCenterfilter.length'>\r\n          <thead>\r\n            <tr>\r\n              <th>{{'GenericName' | translate }}</th>\r\n              <th>{{'RequestPhone' | translate }}</th>\r\n              <th>{{'GenericAction' | translate }}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr\r\n              *ngFor='let obj of lstEntityTrainingCenterfilter| slice: (page.pageable.pageCurrent-1) * page.pageable.pageSize : (page.pageable.pageCurrent-1) * page.pageable.pageSize + page.pageable.pageSize'>\r\n              <td>{{ obj.Name}}</td>\r\n              <td>{{ obj.Phone}}</td>\r\n              <td>\r\n                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-primary\" value=\"{{'GenericEdit' | translate }}\"\r\n                  (click)=\"openBackDropCustomClass(content,obj)\">\r\n                <input *ngIf=\"!obj.IsActive\" type=\"button\" class=\"btn btn-success\" value=\"{{'GenericActivate' | translate }}\"\r\n                  (click)=\"setActivate(obj.Id)\">\r\n                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-danger\" value=\"{{'GenericDeactivate' | translate }}\"\r\n                  (click)=\"setDeactivate(obj.Id)\">\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <app-custom-pagination [page]=\"page\" (nextPageEvent)=\"getNextPage()\" (previousPageEvent)=\"getPreviousPage()\"\r\n      (loadPageCurrentEvent)=\"getloadPageCurrent()\">\r\n    </app-custom-pagination>\r\n    </div>\r\n  </div>\r\n  <div>\r\n    <div class='card-footer'>\r\n      <button class='btn btn-outline-secondary' (click)='onBack()' style='width:80px'>\r\n        <i class='fa fa-chevron-left'></i> {{'GenericBack' | translate }}\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <div>\r\n    <ng-template role=\"dialog\" #content let-modal class=\"modal fade\">\r\n      <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n          <div class=\"modal-content\" style=\"min-height: 300px;\">\r\n            <div class=\"modal-header color-bg-01 white-text text-center\">\r\n          <h6 class=\"modal-title\">\r\n            {{(modelIsCreate ? 'GenericCreate'   : 'GenericEditing') | translate}} : {{modelIsCreate ? (\"GenericNew\" | translate) : modelNameEdited}}\r\n          </h6>\r\n        </div>\r\n        <div class=\"modal-body pt-0\">\r\n          <form novalidate (ngSubmit)=\"modelSaveBtn(modelForm)\" #modelForm=\"ngForm\">\r\n            <div class=\"form-group \">\r\n              <mat-form-field class=\"example-full-width\">\r\n                <mat-label>{{'GenericTrainingCenterName' | translate }} </mat-label>\r\n                <input matInput id=\"modelNameId\" type=\"text\" placeholder=\"{{'GenericRequiredName' | translate }}\" required\r\n                  [(ngModel)]=\"modelObj.Name\" #modelNameVar=\"ngModel\" name=\"modelName\"\r\n                  [ngClass]=\"{'is-invalid': (modelNameVar.touched || modelNameVar.dirty) && !modelNameVar.valid }\" />\r\n                <mat-error *ngIf=\"modelNameVar.errors?.required\">{{'TrainingCenterError1' | translate }}</mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n            <div class=\"form-group \">\r\n              <mat-form-field class=\"example-full-width\">\r\n                <mat-label>{{'RequestPhone' | translate }}</mat-label>\r\n                <input matInput id=\"modelPhoneId\" type=\"number\" placeholder=\"{{'RequestPhoneSelect' | translate }}\" required\r\n                  [(ngModel)]=\"modelObj.Phone\" #modelPhoneVar=\"ngModel\" name=\"modelPhone\"\r\n                  [ngClass]=\"{'is-invalid': (modelPhoneVar.touched || modelPhoneVar.dirty) && !modelPhoneVar.valid }\" />\r\n                <mat-error *ngIf=\"modelPhoneVar.errors?.required\">{{'RequestPhoneError' | translate }}</mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n            <div class=\"form-group pull-right md-form\">\r\n              <button class=\"btn color-bg-01 btn-sm white-text btnSave\" type=\"submit\"\r\n                \r\n                [disabled]=\"!modelForm.valid\">{{'GenericSave' | translate }}</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n\r\n          <button type=\"button\" class=\"btn color-bg-02 btn-sm white-text\"\r\n            (click)=\"modal.close('Close click')\">{{'GenericClose' | translate }}</button>\r\n        </div>\r\n\r\n\r\n      </div>\r\n  </div>\r\n  </ng-template>\r\n  </div>\r\n</section>","export enum CertificateType{\r\n    Trainer = 1,\r\n    Trainee = 2\r\n}","export enum ConfigForm {\r\n    Trainee = 1,\r\n    RequestRegister = 2\r\n}","export enum EnumContentData {\r\n    About = 1,\r\n    Terms = 2,\r\n    Policy = 3,\r\n    Info = 4\r\n}","export enum LanguageType {\r\n    English = 1,\r\n    Arabic = 2,\r\n    French = 3\r\n}","export enum TranslateType {\r\n    City = 1,\r\n    Area = 2,\r\n    TrainingType = 3,\r\n    TrainingCategory = 4,\r\n    Courses = 5\r\n}","export enum UserType {\r\n    Admin = 1,\r\n    Partner = 2,\r\n    SubPartner = 3,\r\n    Trainer = 4,\r\n    Trainee = 5\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { ServiceExam } from 'src/app/services/exam.service';\r\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\r\nimport { cQuestionItemTemplate, cAnswerItem } from 'src/app/interface/Model/ModelQuestions.class';\r\nimport { Constants } from 'src/app/constants';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-take-exam',\r\n  templateUrl: './take-exam.component.html',\r\n  styleUrls: ['./take-exam.component.css']\r\n})\r\nexport class TakeExamComponent extends baseComponent implements OnInit {\r\n\r\n  message: ShowMessage = new ShowMessage();\r\n  pageTitle: string = 'Exam';\r\n  lstQuestion: cQuestionItemTemplate[];\r\n  ExamId: string;\r\n  config: any;\r\n  modelId: string;\r\n  ExamSuccess:string;\r\n  ExamFailed:string;\r\n  notFoundlist:boolean=false\r\n  constructor(private BLServiceExam: ServiceExam,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    BLServiceShowMessage: ServiceShowMessage,\r\n    BLServiceLoginUser: ServiceLoginUser,BLTranslate: TranslateService) {\r\n      super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\r\n     }\r\n\r\n  ngOnInit() {\r\n    this.BLTranslate.get(\"ExamSuccess\").subscribe(res => { this.ExamSuccess = res; });\r\n    this.BLTranslate.get(\"ExamFailed\").subscribe(res => { this.ExamFailed = res; });\r\n\r\n    const param = this.route.snapshot.paramMap.get('Id');\r\n    if (param) {\r\n      this.modelId = param;\r\n      this.loadData();\r\n    }\r\n  }\r\n  private loadData(): void {\r\n    this.BLServiceExam.takeExam(this.modelId).subscribe({\r\n      next: examModel => {\r\n        \r\n        this.lstQuestion = examModel.questions;\r\n        this.ExamId = examModel.ExamId;\r\n        this.config = {};\r\n        this.config.leftTime = Constants.EXAM_TIMER * 60;\r\n        this.config.format = 'm:s';\r\n        this.notFoundlist=false;\r\n      },\r\n\r\n      error: err => {  \r\n        this.BLTranslate.get(err).subscribe(res => {this.notFoundlist=true; this.message.Error(res); });\r\n        \r\n      }\r\n    });\r\n  }\r\n  onChange(e, questionItem: cQuestionItemTemplate, answer: cAnswerItem) {\r\n    if (e.target.value == \"on\")\r\n      questionItem.SelectedAnswer = answer._id;\r\n  }\r\n\r\n  submitExam() {\r\n    this.BLServiceExam.SubmitExam(this.ExamId, this.lstQuestion).subscribe({\r\n      next: isSuccess => {\r\n        if (isSuccess) {\r\n          this.message.Success(this.ExamSuccess);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n        }\r\n        else{\r\n          this.message.Error(this.ExamFailed);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n        }\r\n        this.router.navigate(['/MyTraining']);\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n\r\n  }\r\n\r\n  handleEvent(event) {\r\n    //TODO enhance the way to check timer is ended\r\n    if (event.text == \"0:0\")\r\n      this.submitExam();\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n","<section class=\"my-5\">\r\n    <div class=\"container\">\r\n      <div class='row'>\r\n        <div class=\"col-md-6\">\r\n          <h4 class=\"mb-4\">{{'ExampageTitle' | translate }}</h4>\r\n        </div>\r\n        <div class=\"col-md-6 \" *ngIf=\"lstQuestion?.length\">\r\n          <countdown colspan=\"pull-right\" #cd [config]=\"config\" (event)=\"handleEvent($event)\"></countdown>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-12\">\r\n        <div class='table-responsive '>\r\n          <table class='table' *ngIf='lstQuestion && lstQuestion?.length'>\r\n            <tbody>\r\n              <tr *ngFor='let obj of lstQuestion;index as i'>\r\n                <td>\r\n                    <h3> Q{{i+1}}- {{ obj.Name}}</h3>\r\n              <h5 *ngFor='let ans of obj.Answer'>\r\n                   <input type=\"radio\" name=\"{{obj._id}}\" (change)=\"onChange($event,obj,ans)\" />\r\n                   {{ans.Name}}\r\n              </h5>\r\n                </td>\r\n              \r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n          \r\n        </div>\r\n        <div class=\"col-md-12\" *ngIf=\"lstQuestion?.length\">\r\n          <button (click)=\"submitExam()\"  class=\"btn pull-right color-bg-02 btn-sm white-text\">{{'GenericSubmit' | translate }}</button>\r\n        </div>\r\n        <!-- <div class=\"\" *ngIf=\"!lstQuestion  || lstQuestion?.length == 0\"> -->\r\n          <div class=\"\" *ngIf=\"notFoundlist\">\r\n          <div class=\"text-center bg-red noresult\">\r\n            <span class=\"font-italic\">{{'ExamNotAllowed' | translate }} </span><span>&#9785;</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n","import { Component, OnInit } from '@angular/core';\nimport { cExamTemplateList, cExamTemplateItem } from 'src/app/interface/Response/ExamTemplate.class';\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\nimport { Page } from 'src/app/common/pagination/page';\nimport { ServiceDataManagement } from 'src/app/services/datamanagement.service';\nimport { CustomPaginationService } from 'src/app/common/pagination/services/custom-pagination.service';\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\nimport { Router } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { NgForm } from '@angular/forms';\nimport { ServiceExamTemplate } from 'src/app/services/exam-template.service';\nimport { ModelExamTempate } from 'src/app/interface/Model/ModelExamTemplate.class';\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-templates',\n  templateUrl: './templates.component.html',\n  styleUrls: ['./templates.component.css']\n})\nexport class TemplatesComponent extends baseComponent implements OnInit {\n\n  pageTitle: string = 'Exam Template';\n  lstExamTemplate: cExamTemplateList;\n  message: ShowMessage = new ShowMessage();\n  filtertxt: string = '';\n  modelName: string = '';\n  modelId: string = '';\n  modelNameEdited: string = '';\n  modelObj: ModelExamTempate = new ModelExamTempate();\n  msgExamTemplate100:string;\n\n  page: Page<cExamTemplateItem> = new Page();\n\n  constructor(private BLServiceExamTemplate: ServiceExamTemplate,\n    private paginationService: CustomPaginationService,\n    BLServiceShowMessage: ServiceShowMessage,\n    BLServiceLoginUser: ServiceLoginUser,BLTranslate: TranslateService,\n    private router: Router,\n    private modalService: NgbModal) { super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);}\n\n  ngOnInit() {\n    this.BLTranslate.get(\"msgExamTemplate100\").subscribe(res => { this.msgExamTemplate100 = res; });\n    this.loadData();\n  }\n  private loadData(): void {\n    this.BLServiceExamTemplate.getExamTemplateAll(this.page.pageable.pageCurrent, this.filtertxt).subscribe({\n      next: lst => {\n        this.lstExamTemplate = lst;\n        this.page.pageable.pageSize = lst.pageSize;\n        this.page.totalElements = lst.totalCount;\n        this.page.content = lst.lstResult;\n      },\n      error: err => this.message.Error(err)\n    });\n  }\n  public getNextPage(): void {\n    this.page.pageable = this.paginationService.getNextPage(this.page);\n    this.loadData();\n  }\n\n  public getPreviousPage(): void {\n    this.page.pageable = this.paginationService.getPreviousPage(this.page);\n    this.loadData();\n  }\n  public getloadPageCurrent(): void {\n    this.loadData();\n  }\n  setActivate(Id: string): void {\n    if (!confirm(this.msgsetActivate))\n      return;\n\n    this.BLServiceExamTemplate.setExamTemplateActivate(Id).subscribe({\n      next: response => {\n\n        this.message.Success(this.msgActivatedSuccessfully);\n        this.BLServiceShowMessage.sendMessage(this.message);\n        this.loadData();\n      },\n      error: err => this.message.Error(err)\n    });\n  }\n  setDeactivate(Id: string): void {\n    if (!confirm(this.msgsetDeactivate))\n      return;\n\n    this.BLServiceExamTemplate.setExamTemplateDeactivate(Id).subscribe({\n      next: response => {\n        this.message.Success(this.msgDeactivatedSuccessfully);\n        this.BLServiceShowMessage.sendMessage(this.message);\n        this.loadData();\n      },\n      error: err => this.message.Error(err)\n    });\n  }\n  filterbtn(): void {\n    this.page.pageable.pageCurrent = 1;\n    this.loadData();\n  }\n  createBtn(content): void {\n    this.modelId = \"-1\";\n    this.modelName = \"\";\n    this.modelNameEdited = \"\";\n    this.modelObj = new ModelExamTempate();\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\n  }\n  modelSaveBtn(modelForm: NgForm): void {\n    if (!modelForm.valid)\n      return;\n\n    var sum = this.modelObj.Easy + this.modelObj.Medium + this.modelObj.Hard\n    if (sum != 100) {\n      this.message.Error(this.msgExamTemplate100);\n      this.BLServiceShowMessage.sendMessage(this.message);\n      return;\n    }\n    \n    if (this.modelId == \"-1\") {\n      this.BLServiceExamTemplate.createExamTemplate(this.modelObj).subscribe({\n        next: response => {\n          this.message.Success(this.msgSavedSuccessfully);\n          this.BLServiceShowMessage.sendMessage(this.message);\n          this.loadData();\n          this.modalService.dismissAll();\n        },\n        error: err => this.message.Error(err)\n      });\n    }\n    else {\n      this.BLServiceExamTemplate.updateExamTemplate(this.modelObj).subscribe({\n        next: response => {\n          this.message.Success(this.msgSavedSuccessfully);\n          this.BLServiceShowMessage.sendMessage(this.message);\n          this.loadData();\n          this.modalService.dismissAll();\n        },\n        error: err => this.message.Error(err)\n      });\n    }\n  }\n  openBackDropCustomClass(content, obj: cExamTemplateItem) {\n    this.modelId = obj._id;\n    this.modelName = obj.Name;\n    this.modelNameEdited = obj.Name;\n\n    this.modelObj = new ModelExamTempate();\n    this.modelObj.Id = obj._id;\n    this.modelObj.Name = obj.Name;\n    this.modelObj.Easy = obj.Easy;\n    this.modelObj.Medium = obj.Medium;\n    this.modelObj.Hard = obj.Hard;\n\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\n  }\n  // Areas(Id: string) {\n  //   this.router.navigate(['/DataManagement/Area/' + Id]);\n  // }\n\n\n}\n","<section class=\"my-5\">\n    <div class=\"container\">\n        <div class='row'>\n            <h4 class=\"mb-4\">{{'ExamTemplateTitle' | translate }}</h4>\n        </div>\n        <div class='row'>\n            <div class=\"col-sm-6 md-form\">\n                <mat-form-field class=\"example-full-width\">\n                    <mat-label>{{'ExamSearch' | translate }}</mat-label>\n                    <input type=\"text\" placeholder=\"{{'ExamFilter' | translate }}\" matInput [(ngModel)]=\"filtertxt\">\n                </mat-form-field>\n                <input type=\"submit\" value=\"{{'GenericSearch' | translate }}\"  class=\"btn color-bg-02 white-text\" (click)=\"filterbtn()\">\n            </div>\n            <div class=\"col-sm-6 md-form pull-right\">\n                <input type=\"button\" class=\"pull-right btn color-bg-01 white-text\"\n                    value=\"{{'GenericCreateNew' | translate }}\" (click)=\"createBtn(content)\">\n            </div>\n        </div>\n        <div class=\"col-md-12\">\n            <div class='table-responsive'>\n                <table class='table' *ngIf='page.content && page.content.length'>\n                    <thead>\n                        <tr>\n                            <th>{{'GenericName' | translate }}</th>\n                            <th>{{'GenericAction' | translate }}</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor='let obj of page.content'>\n                            <td>{{ obj.Name}}</td>\n                            <td>\n                                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-primary\"\n                                    value=\"{{'GenericEdit' | translate }}\"\n                                    (click)=\"openBackDropCustomClass(content,obj)\">\n                                <input *ngIf=\"!obj.IsActive\" type=\"button\" class=\"btn btn-success\"\n                                    value=\"{{'GenericActivate' | translate }}\" (click)=\"setActivate(obj._id)\">\n                                <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-danger\"\n                                    value=\"{{'GenericDeactivate' | translate }}\" (click)=\"setDeactivate(obj._id)\">\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n        <div>\n            <app-custom-pagination [page]=\"page\" (nextPageEvent)=\"getNextPage()\" (previousPageEvent)=\"getPreviousPage()\"\n                (loadPageCurrentEvent)=\"getloadPageCurrent()\">\n            </app-custom-pagination>\n        </div>\n    </div>\n    <div>\n        <ng-template role=\"dialog\" #content let-modal class=\"modal fade\">\n            <div class=\"modal-dialog modal-lg\" role=\"document\">\n                <div class=\"modal-content\">\n                    <div class=\"modal-header color-bg-01 white-text text-center\">\n\n                        <h6 class=\"modal-title\">\n                            {{(modelId == \"-1\" ? 'GenericCreate'   : 'GenericEditing') | translate}} : {{modelId == \"-1\" ? (\"GenericNew\" | translate) : modelNameEdited}}\n                            \n                        </h6>\n                    </div>\n                    <div class=\"modal-body pt-0\">\n\n                        <form novalidate (ngSubmit)=\"modelSaveBtn(modelForm)\" #modelForm=\"ngForm\">\n                            <div class=\"form-group \">\n                                <mat-form-field class=\"example-full-width\">\n                                    <mat-label>{{'GenericName' | translate }}</mat-label>\n                                    <input matInput id=\"modelNameId\" type=\"text\"\n                                        placeholder=\"{{'GenericRequiredName' | translate }}\" required\n                                        [(ngModel)]=\"modelObj.Name\" #modelNameVar=\"ngModel\" name=\"modelName\"\n                                        [ngClass]=\"{'is-invalid': (modelNameVar.touched || modelNameVar.dirty) && !modelNameVar.valid }\" />\n                                    <mat-error *ngIf=\"modelNameVar.errors?.required\">{{'GenericEnterName' | translate }}</mat-error>\n                                </mat-form-field>\n                            </div>\n                            <div class=\"form-group \">\n                                <mat-form-field class=\"example-full-width\">\n                                    <mat-label>{{'ExamEasyPercent' | translate }}</mat-label>\n                                    <input matInput id=\"modelEasyId\" type=\"number\" placeholder=\"{{'ExamEasyPercentSelect' | translate }}\"\n                                        required [(ngModel)]=\"modelObj.Easy\" #modelEasyVar=\"ngModel\" name=\"modelEasy\"\n                                        min=\"1\" max=\"100\"\n                                        [ngClass]=\"{'is-invalid': (modelEasyVar.touched || modelEasyVar.dirty) && !modelEasyVar.valid }\" />\n                                    <mat-error *ngIf=\"modelEasyVar.errors?.required\">{{'ExamEasyPercentError' | translate }}\n                                    </mat-error>\n                                </mat-form-field>\n                            </div>\n                            <div class=\"form-group \">\n                                <mat-form-field class=\"example-full-width\">\n                                    <mat-label>{{'ExamMediumPercent' | translate }}</mat-label>\n                                    <input matInput id=\"modelMediumId\" type=\"number\" placeholder=\"{{'ExamMediumPercentSelect' | translate }}\"\n                                        required [(ngModel)]=\"modelObj.Medium\" #modelMediumVar=\"ngModel\" name=\"modelMedium\"\n                                        min=\"1\" max=\"100\"\n                                        [ngClass]=\"{'is-invalid': (modelMediumVar.touched || modelMediumVar.dirty) && !modelMediumVar.valid }\" />\n                                    <mat-error *ngIf=\"modelMediumVar.errors?.required\">{{'ExamMediumPercentError' | translate }}\n                                    </mat-error>\n                                </mat-form-field>\n                            </div>\n                            <div class=\"form-group \">\n                                <mat-form-field class=\"example-full-width\">\n                                    <mat-label>{{'ExamHardPercent' | translate }}</mat-label>\n                                    <input matInput id=\"modelHardId\" type=\"number\" placeholder=\"{{'ExamHardPercentSelect' | translate }}\"\n                                        required [(ngModel)]=\"modelObj.Hard\" #modelHardVar=\"ngModel\" name=\"modelHard\"\n                                        min=\"1\" max=\"100\"\n                                        [ngClass]=\"{'is-invalid': (modelHardVar.touched || modelHardVar.dirty) && !modelHardVar.valid }\" />\n                                    <mat-error *ngIf=\"modelHardVar.errors?.required\">{{'ExamHardPercentError' | translate }}\n                                    </mat-error>\n                                </mat-form-field>\n                            </div>\n                            <div class=\"form-group pull-right md-form\">\n                                <button class=\"btn color-bg-01 btn-sm white-text btnSave\" type=\"submit\"\n                                    [disabled]=\"!modelForm.valid\">{{'GenericSave' | translate }}</button>\n                            </div>\n                        </form>\n                    </div>\n                    <div class=\"modal-footer\">\n\n                        <button type=\"button\" class=\"btn color-bg-02 btn-sm white-text\"\n                            (click)=\"modal.close('Close click')\">{{'GenericClose' | translate }}</button>\n                    </div>\n\n\n                </div>\n            </div>\n        </ng-template>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>about works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\nimport { ModelContentData } from 'src/app/interface/Model/ModelContentData.class';\nimport { ServiceMisc } from 'src/app/services/misc.service';\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\nimport { EnumContentData } from 'src/app/Enum/ContentData.enum';\n\n@Component({\n  selector: 'app-policy',\n  templateUrl: './policy.component.html',\n  styleUrls: ['./policy.component.css']\n})\nexport class PolicyComponent implements OnInit {\n\n  msgShow: ShowMessage = new ShowMessage();\n  modelData: ModelContentData = new ModelContentData();\n\n  constructor(private BLServiceMisc: ServiceMisc,\n    private BLServiceMessage: ServiceShowMessage) { \n\n  }\n\n  ngOnInit(): void {\n    this.BLServiceMisc.ContentDataOneGetByTypeId(EnumContentData.Policy).subscribe({\n      next: obj => {\n        this.modelData = obj;\n      },\n      error: err => this.msgShow.Error(err)\n    });\n  }\n\n}\n","<section class=\"my-5\">\n    <div class=\"container\">\n        <div class='row'>\n            <div class=\"editor\" [innerHTML]=\"modelData.Data\"></div>\n        </div>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\r\nimport { cQuestionList, cQuestionItem, cAnswerItem } from 'src/app/interface/Model/ModelQuestions.class';\r\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\r\nimport { ServiceQuestion } from 'src/app/services/Question.service';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { NgForm, FormGroup, FormBuilder, Validators, FormArray } from '@angular/forms';\r\nimport { ServiceDataManagement } from 'src/app/services/datamanagement.service';\r\nimport { cTrainingTypeItem } from 'src/app/interface/Response/TrainingType.class';\r\nimport { ITrainingCategoryItem } from 'src/app/interface/Response/TrainingCategory.interface';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ModelFilterTraining } from 'src/app/interface/Model/ModelFilterTraining.class';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.css']\r\n})\r\nexport class CreateComponent extends baseComponent implements OnInit {\r\n\r\n  pageTitle: string = 'Questions';\r\n  lstQuestion: cQuestionList;\r\n  message: ShowMessage = new ShowMessage();\r\n  filtertxt: string = '';\r\n  modelObj: cQuestionItem = new cQuestionItem();\r\n  modelId: string = '';\r\n  IsCreate: boolean;\r\n  lstTrainingTypes: cTrainingTypeItem[];\r\n  lstTrainingCategory: ITrainingCategoryItem[];\r\n  TrainingTypeId: string;\r\n  formQuestion: FormGroup;\r\n  msgQuestion2Answer: string;\r\n  msgQuestionCorrectAnswer: string;\r\n  msgQuestionOneAnswer: string;\r\n\r\n  get Answers(): FormArray {\r\n    return <FormArray>this.formQuestion.get('Answers');\r\n  }\r\n\r\n  constructor(private BLServiceQuestion: ServiceQuestion,\r\n    private route: ActivatedRoute,\r\n    private BLServiceDataManagement: ServiceDataManagement,\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    BLServiceShowMessage: ServiceShowMessage,\r\n    BLServiceLoginUser: ServiceLoginUser, BLTranslate: TranslateService,) { super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate); }\r\n\r\n  ngOnInit(): void {\r\n    this.BLTranslate.get(\"msgQuestion2Answer\").subscribe(res => { this.msgQuestion2Answer = res; });\r\n    this.BLTranslate.get(\"msgQuestionCorrectAnswer\").subscribe(res => { this.msgQuestionCorrectAnswer = res; });\r\n    this.BLTranslate.get(\"msgQuestionOneAnswer\").subscribe(res => { this.msgQuestionOneAnswer = res; });\r\n\r\n    this.modelId = this.route.snapshot.paramMap.get('Id');\r\n    this.IsCreate = this.modelId == \"0\";\r\n\r\n    this.InitForm();\r\n    if (!this.IsCreate) {\r\n      this.BLServiceQuestion.getQuestionGetByid(this.modelId).subscribe({\r\n        next: lst => {\r\n          \r\n          if (lst != null) {\r\n            this.modelObj = lst;\r\n            //this.InitForm();\r\n            this.formQuestion.patchValue({\r\n              Question: this.modelObj.Name,\r\n              TrainingTypeId: this.modelObj.TrainingTypeId,\r\n              TrainingCategoryId: this.modelObj.TrainingCategoryId,\r\n              Difficulty: this.modelObj.Difficulty.toString(),\r\n            });\r\n            if (this.modelObj.Answer.length > 0) {\r\n              this.Answers.removeAt(0);\r\n              this.modelObj.Answer.forEach(item => {\r\n                const control = <FormArray>this.formQuestion.get('Answers');\r\n                control.push(this.buildAnswer(item.Name, item.IsCorrectAnswer));\r\n              });\r\n            }\r\n            this.onTrainingTypeSelect()\r\n          }\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n\r\n    this.BLServiceDataManagement.getTrainingTypeListActive().subscribe({\r\n      next: lst => {\r\n        this.lstTrainingTypes = lst;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n\r\n  }\r\n  InitForm() {\r\n    this.formQuestion = this.fb.group({\r\n      Question: ['', [Validators.required]],\r\n      TrainingTypeId: ['', [Validators.required]],\r\n      TrainingCategoryId: ['', [Validators.required]],\r\n      Difficulty: ['', [Validators.required]],\r\n      Answers: this.fb.array([this.buildAnswer()]),\r\n    });\r\n  }\r\n  buildAnswer(value: string = '', IsCorrect = false) {\r\n    return this.fb.group({\r\n      Answer: [value, [Validators.required]],\r\n      IsCorrectAnswer: IsCorrect\r\n    });\r\n  }\r\n  addAnswer() {\r\n    const control = <FormArray>this.formQuestion.get('Answers');\r\n    control.push(this.buildAnswer());\r\n  }\r\n  onTrainingTypeSelect() {\r\n    if (this.formQuestion.get('TrainingTypeId').value == \"\")\r\n      return;\r\n\r\n    this.BLServiceDataManagement.getTrainingCategoryListByTrainingType(this.formQuestion.get('TrainingTypeId').value).subscribe({\r\n      next: lst => {\r\n        this.lstTrainingCategory = lst;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  removeAnswer(index: number) {\r\n    var c = <FormArray>this.formQuestion.get('Answers')\r\n    c.removeAt(index);\r\n  }\r\n  modelSaveBtn(): void {\r\n    if (!this.formQuestion.valid)\r\n      return;\r\n\r\n    var model = new cQuestionItem();\r\n    model.Id = this.modelId;\r\n    model.Difficulty = (<FormArray>this.formQuestion.get('Difficulty')).value;\r\n    model.Name = (<FormArray>this.formQuestion.get('Question')).value;\r\n    model.TrainingCategoryId = (<FormArray>this.formQuestion.get('TrainingCategoryId')).value;\r\n    model.TrainingTypeId = (<FormArray>this.formQuestion.get('TrainingTypeId')).value;\r\n    model.Answer = <cAnswerItem[]>[];\r\n\r\n    var ans = <FormArray>this.formQuestion.get('Answers');\r\n    ans.value.forEach(item => {\r\n      if (item.IsCorrectAnswer == undefined)\r\n        item.IsCorrectAnswer = true;\r\n    });\r\n    \r\n    if (!ans || ans.length < 2) {\r\n      this.message.Error(this.msgQuestion2Answer);\r\n      this.BLServiceShowMessage.sendMessage(this.message);\r\n    }\r\n    else {\r\n      var correctAnswersCount = this.getCorrectAnswersCount(ans);\r\n      if (correctAnswersCount == 0) {//Case no correct answer selected\r\n        this.message.Error(this.msgQuestionCorrectAnswer);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n      }\r\n      else if (correctAnswersCount > 1) { //Case selecting more than corrent answer\r\n        this.message.Error(this.msgQuestionOneAnswer);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n      }\r\n      else {\r\n        ans.value.forEach(item => {\r\n\r\n          var obj = new cAnswerItem();\r\n\r\n          obj.Name = item.Answer;\r\n          obj.IsCorrectAnswer = item.IsCorrectAnswer;\r\n\r\n          model.Answer.push(obj);\r\n        });\r\n        if (this.IsCreate) {\r\n          this.BLServiceQuestion.createQuestion(model).subscribe({\r\n            next: response => {\r\n              this.message.Success(this.msgSavedSuccessfully);\r\n              this.BLServiceShowMessage.sendMessage(this.message);\r\n              this.router.navigate(['/Questions/List']);\r\n            },\r\n            error: err => this.message.Error(err)\r\n          });\r\n        }\r\n        else {\r\n          this.BLServiceQuestion.updateQuestion(model).subscribe({\r\n            next: response => {\r\n              this.message.Success(this.msgUpdatedsuccessfully);\r\n              this.BLServiceShowMessage.sendMessage(this.message);\r\n              this.router.navigate(['/Questions/List']);\r\n            },\r\n            error: err => this.message.Error(err)\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  getCorrectAnswersCount(ans: FormArray): number {\r\n    var correctAnswersCount = 0;\r\n    ans.value.forEach(item => {\r\n      if (item.IsCorrectAnswer) {\r\n        correctAnswersCount++;\r\n      }\r\n    });\r\n    return correctAnswersCount;\r\n  }\r\n  OnRedrirectBack() {\r\n    this.router.navigate(['/Questions/List']);\r\n  }\r\n  CorrectAnswer(obj) {\r\n    \r\n    var ans = <FormArray>this.formQuestion.get('Answers');\r\n    ans.value.forEach(item => {\r\n      item.IsCorrectAnswer = false;\r\n    });\r\n    ans.value[obj].IsCorrectAnswer = true;\r\n  }\r\n}\r\n","<section class=\"my-5\">\r\n    <div class=\"container\">\r\n        <div class='row'>\r\n            <h4 class=\"mb-4\">{{'HeaderQuestions' | translate }}</h4>\r\n        </div>\r\n        <div class='row'>\r\n\r\n\r\n            <div class=\"modal-body pt-0\">\r\n\r\n                <form novalidate [formGroup]=\"formQuestion\">\r\n                    <div class=\"col-md-8\">\r\n                        <div class=\"form-group \">\r\n                            <mat-form-field class=\"example-full-width\">\r\n                                <mat-label>{{'QuestionQ' | translate }}</mat-label>\r\n                                <textarea matInput id=\"modelNameId\" type=\"text\" placeholder=\"{{'QuestionSelect' | translate }}\"\r\n                                    required formControlName=\"Question\" cols=\"40\" rows=\"5\" value=\"\"></textarea>\r\n                                <mat-error *ngIf=\"formQuestion?.get('Question').errors?.required\">{{'QuestionError' | translate }}\r\n                                </mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"form-group \">\r\n                            <mat-form-field>\r\n                                <mat-label>{{'GenericTrainingType' | translate }}</mat-label>\r\n                                <mat-select id=\"TrainingTypeId\" placeholder=\"Select a TrainingTypeId\"\r\n                                    (selectionChange)=\"onTrainingTypeSelect()\" formControlName=\"TrainingTypeId\">\r\n                                    <mat-option value=\"\">{{'GenericSelectTrainingType' | translate }}</mat-option>\r\n                                    <mat-option *ngFor=\"let item of lstTrainingTypes\" value=\"{{item.Id}}\">\r\n                                        {{item.Name}}</mat-option>\r\n                                </mat-select>\r\n                                <mat-error *ngIf=\"formQuestion?.get('TrainingTypeId').errors?.required\">{{'GenericSelectTrainingTypeError' | translate }}</mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"form-group \">\r\n                            <mat-form-field>\r\n                                <mat-label>{{'GenericTrainingCategory' | translate }}</mat-label>\r\n                                <mat-select id=\"filtertrainingCategory\" placeholder=\"{{'GenericSelectTrainingCategory' | translate }}\"\r\n                                    formControlName=\"TrainingCategoryId\">\r\n                                    <mat-option value=\"\">{{'GenericSelectTrainingCategory' | translate }}</mat-option>\r\n                                    <mat-option *ngFor=\"let item of lstTrainingCategory\" value=\"{{item.Id}}\">\r\n                                        {{item.Name}}</mat-option>\r\n                                </mat-select>\r\n                                <mat-error *ngIf=\"formQuestion?.get('TrainingTypeId').errors?.required\">{{'GenericSelectTrainingCategoryError' | translate }}</mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"form-group \">\r\n                            <mat-form-field>\r\n                                <mat-label>{{'QuestionDifficulty' | translate }}</mat-label>\r\n                                <mat-select id=\"Difficulty\" placeholder=\"{{'QuestionDifficultySelect' | translate }}\"\r\n                                    formControlName=\"Difficulty\">\r\n                                    <mat-option value=\"\">{{'QuestionDifficultySelect' | translate }}</mat-option>\r\n                                    <mat-option value=\"1\">{{'QuestionEasy' | translate }}</mat-option>\r\n                                    <mat-option value=\"2\">{{'QuestionMedium' | translate }}</mat-option>\r\n                                    <mat-option value=\"3\">{{'QuestionHard' | translate }}</mat-option>\r\n                                </mat-select>\r\n                                <mat-error *ngIf=\"formQuestion?.get('TrainingTypeId').errors?.required\">{{'QuestionDifficultyError' | translate }}</mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <hr>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6\">\r\n                                <h4 class=\"mb-4\">{{'QuestionAnswer' | translate }}</h4>\r\n                            </div>\r\n                            <div class=\"col-md-6\"><button class=\"pull-right btn btn-success btn-sm white-text btnSave\" (click)=\"addAnswer()\">{{'GenericAdd' | translate }}</button></div>\r\n                        </div>\r\n                        <div formArrayName=\"Answers\" *ngFor=\"let item of Answers.controls; let i = index;\" class=\"row\">\r\n                            <div [formGroupName]=\"i\" class=\"col-md-12\">\r\n                                <div class=\"col-md-6 pull-left\">\r\n                                    <mat-form-field>\r\n                                        <mat-label>{{'QuestionAnswer' | translate }}</mat-label>\r\n                                        <textarea matInput formControlName=\"Answer\" placeholder=\"{{'QuestionEnterAnswer' | translate }}\"\r\n                                            cols=\"40\" rows=\"5\"></textarea>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-md-3  pull-left\">\r\n                                    <input type=\"checkbox\" [(ngModel)]=\"item.value.IsCorrectAnswer\" formControlName=\"IsCorrectAnswer\" id=\"radio{{i}}\" (click)=\"CorrectAnswer(i)\"\r\n                                        name=\"IsCorrectAnswer\">\r\n                                        <span> {{'QuestionCorrectAnswer' | translate }}</span>\r\n                                </div>\r\n                                <div class=\"col-md-2  pull-left\">\r\n                                    <button (click)=\"removeAnswer(i)\" class=\"pull-right btn btn-danger btn-sm white-text btnSave\">X</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group pull-right md-form\">\r\n                            <button class=\"btn color-bg-grey btn-sm btn-default white-text\" type=\"submit\" (click)=\"OnRedrirectBack()\">{{'GenericCancel' | translate }}</button>\r\n                            <button class=\"btn color-bg-01 btn-sm white-text btnSave\" type=\"submit\"\r\n                                (click)=\"modelSaveBtn()\"\r\n                                \r\n                                [disabled]=\"!formQuestion?.valid\">{{'GenericSave' | translate }}</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n\r\n    </div>","import { Component, OnInit } from '@angular/core';\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\nimport { cQuestionList, cQuestionItem } from 'src/app/interface/Model/ModelQuestions.class';\nimport { Page } from 'src/app/common/pagination/page';\nimport { ServiceQuestion } from 'src/app/services/Question.service';\nimport { CustomPaginationService } from 'src/app/common/pagination/services/custom-pagination.service';\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { cTrainingTypeItem } from 'src/app/interface/Response/TrainingType.class';\nimport { ITrainingCategoryItem } from 'src/app/interface/Response/TrainingCategory.interface';\nimport { ServiceDataManagement } from 'src/app/services/datamanagement.service';\nimport { ModelFilterQuestions } from 'src/app/interface/Model/ModelFilterQuestions.class';\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent extends baseComponent implements OnInit {\n\n  pageTitle: string = 'Questions';\n  lstQuestion: cQuestionList;\n  message: ShowMessage = new ShowMessage();\n  filtertxt: string = '';\n  modelName: string = '';\n  modelId: string = '';\n  modelNameEdited: string = '';\n  lstTrainingTypes: cTrainingTypeItem[];\n  lstTrainingCategory: ITrainingCategoryItem[];\n  lstTrainingCategoryFilter: ITrainingCategoryItem[];\n  filterObj: ModelFilterQuestions = new ModelFilterQuestions();\n\n  page: Page<cQuestionItem> = new Page();\n\n  constructor(private BLServiceQuestion: ServiceQuestion,\n    private paginationService: CustomPaginationService,\n    BLServiceShowMessage: ServiceShowMessage,\n    BLServiceLoginUser: ServiceLoginUser,BLTranslate: TranslateService,\n    private BLServiceDataManagement: ServiceDataManagement,\n    private router: Router,\n    private modalService: NgbModal) { super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);}\n\n\n  ngOnInit() {\n    this.loadData();\n  }\n  private loadData(): void {\n    this.filterObj.CurrentPage = this.page.pageable.pageCurrent;\n    this.BLServiceQuestion.getQuestionAll(this.filterObj).subscribe({\n      next: lst => {\n        this.lstQuestion = lst;\n        this.page.pageable.pageSize = lst.pageSize;\n        this.page.totalElements = lst.totalCount;\n        this.page.content = lst.lstResult;\n      },\n      error: err => this.message.Error(err)\n    });\n    this.BLServiceDataManagement.getTrainingTypeListActive().subscribe({\n      next: lst => {\n        this.lstTrainingTypes = lst;\n      },\n      error: err => this.message.Error(err)\n    });\n  }\n  public getNextPage(): void {\n    this.page.pageable = this.paginationService.getNextPage(this.page);\n    this.loadData();\n  }\n\n  public getPreviousPage(): void {\n    this.page.pageable = this.paginationService.getPreviousPage(this.page);\n    this.loadData();\n  }\n  public getloadPageCurrent(): void {\n    this.loadData();\n  }\n  setActivate(Id: string): void {\n    if (!confirm(this.msgsetActivate))\n      return;\n\n    this.BLServiceQuestion.setQuestionActivate(Id).subscribe({\n      next: response => {\n        this.message.Success(this.msgActivatedSuccessfully);\n        this.BLServiceShowMessage.sendMessage(this.message);\n        this.loadData();\n      },\n      error: err => this.message.Error(err)\n    });\n  }\n  setDeactivate(Id: string): void {\n    if (!confirm(this.msgsetDeactivate))\n      return;\n    this.BLServiceQuestion.setQuestionDeactivate(Id).subscribe({\n      next: response => {\n        this.message.Success(this.msgDeactivatedSuccessfully);\n        this.BLServiceShowMessage.sendMessage(this.message);\n        this.loadData();\n      },\n      error: err => this.message.Error(err)\n    });\n  }\n  filterbtn(): void {\n    this.page.pageable.pageCurrent = 1;\n    this.loadData();\n  }\n  Edit( Id: string) {\n      this.router.navigate(['/Questions/Create/' + Id]);\n  }\n  onTrainingTypeFilterSelect() {\n    if (this.filterObj.TrainingTypeId == \"\")\n      return;\n\n    this.BLServiceDataManagement.getTrainingCategoryListByTrainingType(this.filterObj.TrainingTypeId).subscribe({\n      next: lst => {\n        this.lstTrainingCategoryFilter = lst;\n      },\n      error: err => this.message.Error(err)\n    });\n  }\n}\n","<section class=\"my-5\">\n    <div class=\"container\">\n      <div class='row'>\n        <h4 class=\"mb-4\">{{'HeaderQuestions' | translate }}</h4>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-sm-6\">\n            <mat-form-field>\n                <mat-label>{{'GenericTrainingType' | translate }}</mat-label>\n                <mat-select id=\"filterTrainingType\" placeholder=\"Select a TrainingType\"\n                    (selectionChange)=\"onTrainingTypeFilterSelect()\" [(ngModel)]=\"filterObj.TrainingTypeId\"\n                    name=\"filterTrainingTypeVar\">\n                    <mat-option value=\"\">{{'GenericSelectTrainingType' | translate }}</mat-option>\n                    <mat-option *ngFor=\"let item of lstTrainingTypes\" value=\"{{item.Id}}\">\n                        {{item.Name}}</mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"col-sm-6\">\n            <mat-form-field>\n                <mat-label>{{'GenericTrainingCategory' | translate }}</mat-label>\n                <mat-select id=\"filtertrainingCategory\" placeholder=\"{{'GenericSelectTrainingCategory' | translate }}\"\n                    [(ngModel)]=\"filterObj.TrainingCagtegoryId\" name=\"filtertrainingCategoryVar\">\n                    <mat-option value=\"\">{{'GenericSelectTrainingCategory' | translate }}</mat-option>\n                    <mat-option *ngFor=\"let item of lstTrainingCategoryFilter\" value=\"{{item.Id}}\">\n                        {{item.Name}}</mat-option>\n                </mat-select>\n            </mat-form-field>\n            \n        </div>\n    </div>\n      <div class='row'>\n        <div class=\"col-sm-6 md-form\">\n          <mat-form-field class=\"example-full-width\">\n            <mat-label>{{'QuestionSearch' | translate }}</mat-label>\n            <input type=\"text\" placeholder=\"{{'QuestionSearch' | translate }}\" matInput [(ngModel)]=\"filtertxt\">\n          </mat-form-field>\n          <input type=\"submit\" value=\"{{'GenericSearch' | translate }}\"  class=\"btn color-bg-02 white-text\" (click)=\"filterbtn()\">\n        </div>\n        <div class=\"col-sm-6 md-form pull-right\">\n          <input type=\"button\" class=\"pull-right btn color-bg-01 white-text\" value=\"{{'GenericCreateNew' | translate }}\"\n            (click)=\"Edit('0')\">\n        </div>\n      </div>\n      <div class=\"col-md-12\">\n        <div class='table-responsive '>\n          <table class='table' *ngIf='page.content && page.content.length'>\n            <thead>\n              <tr>\n                <th>{{'GenericName' | translate }}</th>\n                <th>{{'GenericTrainingType' | translate }}</th>\n                <th>{{'GenericTrainingCategory' | translate }}</th>\n                <th>{{'GenericAction' | translate }}</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor='let obj of page.content'>\n                <td>{{ obj.Name}}</td>\n                <td>{{ obj.TrainingTypeName}}</td>\n                <td>{{ obj.TrainingCategoryName}}</td>\n                <td>\n                  <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-primary\" value=\"{{'GenericEdit' | translate }}\"\n                    (click)=\"Edit(obj.Id)\">\n                  <input *ngIf=\"!obj.IsActive\" type=\"button\" class=\"btn btn-success\" value=\"{{'GenericActivate' | translate }}\"\n                    (click)=\"setActivate(obj.Id)\">\n                  <input *ngIf=\"obj.IsActive\" type=\"button\" class=\"btn btn-danger\" value=\"{{'GenericDeactivate' | translate }}\"\n                    (click)=\"setDeactivate(obj.Id)\">\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n      <div>\n        <app-custom-pagination [page]=\"page\" (nextPageEvent)=\"getNextPage()\" (previousPageEvent)=\"getPreviousPage()\"\n          (loadPageCurrentEvent)=\"getloadPageCurrent()\">\n        </app-custom-pagination>\n      </div>\n    </div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\r\nimport { ModelRequestRegister } from 'src/app/interface/Model/ModelRequestRegister.class';\r\nimport { NgForm } from '@angular/forms';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { cEntityPartnerItem } from 'src/app/interface/Response/EntityPartner.class';\r\nimport { ServiceEntityManagement } from 'src/app/services/entitymanagement.service';\r\nimport { ServiceMisc } from 'src/app/services/misc.service';\r\nimport { Router } from '@angular/router';\r\nimport { DynamicFormComponent } from 'src/app/common/ConfigForms/components/dynamic-form/dynamic-form.component';\r\nimport { FieldConfig, Validator } from 'src/app/common/ConfigForms/field.interface';\r\nimport { ServiceConfigForm } from 'src/app/services/config-form.service';\r\nimport { ConfigForm } from 'src/app/Enum/ConfigForm.enum';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent extends baseComponent implements OnInit {\r\n\r\n  pageTitle: string = 'Request Register';\r\n  message: ShowMessage = new ShowMessage();\r\n  modelObj: ModelRequestRegister = new ModelRequestRegister();\r\n  lstPartners: cEntityPartnerItem[];\r\n  isClicked: boolean = false;\r\n\r\n  @ViewChild(DynamicFormComponent) form: DynamicFormComponent;\r\n  regConfig: FieldConfig[] = [];\r\n\r\n  constructor(private BLServiceEntityManagement: ServiceEntityManagement,\r\n    private BLServiceMisc: ServiceMisc,\r\n    private router: Router,\r\n    private BLServiceConfigForm: ServiceConfigForm,\r\n    BLServiceShowMessage: ServiceShowMessage,\r\n    BLServiceLoginUser: ServiceLoginUser,BLTranslate: TranslateService,) {\r\n    super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.BLServiceMisc.getEntityPartnerListAllActiveAnonymous().subscribe({\r\n      next: lst => {\r\n        this.lstPartners = lst;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n    this.InitDynamicForm();\r\n  }\r\n  InitDynamicForm() {\r\n    this.BLServiceMisc.GetByType(ConfigForm.RequestRegister).subscribe({\r\n      next: lst => {\r\n        this.regConfig = <FieldConfig[]>[];\r\n        lst.forEach(item => {\r\n\r\n          var obj = new FieldConfig();\r\n\r\n          obj.inputType = item.inputType;\r\n          obj.label = item.label;\r\n          obj.name = item.label;\r\n          obj.options = item.options;\r\n          obj.order = item.order;\r\n          obj.type = item.type;\r\n          obj.IsRequired = item.IsRequired;\r\n          if (obj.IsRequired)\r\n            obj.validations.push(new Validator(item.label));\r\n          if (this.modelObj.data)\r\n            obj.value = this.modelObj.data[item.label];\r\n\r\n          this.regConfig.push(obj);\r\n        });\r\n        this.form.fields = this.regConfig;\r\n        this.form.createControl();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n\r\n  }\r\n  modelSaveBtn(modelForm: NgForm): void {\r\n    if (!modelForm.valid)\r\n      return;\r\n    this.isClicked = true;\r\n    this.modelObj.data = this.form.value;\r\n\r\n    this.BLServiceMisc.RequestRegister(this.modelObj).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.msgSavedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.router.navigate(['/']);\r\n      },\r\n      error: err => {\r\n        this.message.Error(err)\r\n        this.isClicked = false;\r\n      }\r\n    });\r\n\r\n  }\r\n}\r\n","<section class=\"my-5\">\n    <div class=\"container\">\n        <div class='row'>\n            <h4 class=\"mb-4\">{{'RequestpageTitle' | translate }}</h4>\n        </div>\n        <div class='row'>\n            <div class=\"modal-body pt-0\">\n                <form novalidate (ngSubmit)=\"modelSaveBtn(modelForm)\" #modelForm=\"ngForm\">\n                    <div class=\"form-group \">\n                        <mat-form-field>\n                            <mat-label>{{'RequestUserType' | translate }}</mat-label>\n                            <mat-select placeholder=\"{{'GenericRequiredType' | translate }}\" required\n                                [(ngModel)]=\"modelObj.Type\" #modelTypeListVar=\"ngModel\" name=\"modelTypeList\"\n                                [value]=\"modelObj.Type\"\n                                [ngClass]=\"{'is-invalid': (modelTypeListVar.touched || modelTypeListVar.dirty) && !modelTypeListVar.valid}\">\n                                <mat-option value=\"\">{{'RequestUserTypeSelect' | translate }}</mat-option>\n                                <mat-option value=\"Trainer\">{{'GenericTrainer' | translate }}</mat-option>\n                                <mat-option value=\"Training Center\">{{'GenericTrainingCenter' | translate }}</mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"modelTypeListVar.errors?.required\">{{'RequestUserTypeError' | translate }}</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"form-group \">\n                        <mat-form-field>\n                            <mat-label>{{'GenericPartner' | translate }}</mat-label>\n                            <mat-select  placeholder=\"{{'GenericSelectPartner' | translate }}\" required\n                                [(ngModel)]=\"modelObj.PartnerName\" #modelMyPartnerListIds=\"ngModel\"\n                                name=\"MyPartnerListIds\"\n                                [ngClass]=\"{'is-invalid': (modelMyPartnerListIds.touched || modelMyPartnerListIds.dirty) && !modelMyPartnerListIds.valid}\">\n                                <mat-option *ngFor=\"let obj of lstPartners\" [value]=\"obj.Name\">{{ obj.Name }}</mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"modelMyPartnerListIds.errors?.required\">{{'GenericSelectPartnerError' | translate }}\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"form-group \">\n                        <mat-form-field class=\"example-full-width\">\n                            <mat-label>{{'GenericName' | translate }}</mat-label>\n                            <input matInput id=\"modelNameId\" type=\"text\" placeholder=\"{{'GenericRequiredName' | translate }}\" required\n                                [(ngModel)]=\"modelObj.Name\" #modelNameVar=\"ngModel\" name=\"modelName\"\n                                [ngClass]=\"{'is-invalid': (modelNameVar.touched || modelNameVar.dirty) && !modelNameVar.valid }\" />\n                            <mat-error *ngIf=\"modelNameVar.errors?.required\">{{'GenericEnterName' | translate }}</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"form-group \">\n                        <mat-form-field class=\"example-full-width\">\n                            <mat-label>{{'GenericEmail' | translate }}</mat-label>\n                            <input matInput oninput=\"this.value = this.value.toLowerCase()\" id=\"modelEmailId\"\n                                type=\"email\" placeholder=\"{{'GenericRequiredEmail' | translate }}\" [pattern]=\"emailPattern\" required\n                                 [(ngModel)]=\"modelObj.Email\" #modelEmailVar=\"ngModel\"\n                                name=\"modelEmail\"\n                                [ngClass]=\"{'is-invalid': (modelEmailVar.touched || modelEmailVar.dirty) && !modelEmailVar.valid }\" />\n                            <mat-error *ngIf=\"modelEmailVar.errors?.required\">{{'GenericEnterEmail' | translate }}</mat-error>\n                            <mat-error *ngIf=\"modelEmailVar.errors?.pattern\">{{'GenericEnterEmailValid' | translate }}</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"form-group \">\n                        <mat-form-field class=\"example-full-width\">\n                            <mat-label>{{'RequestPhone' | translate }}</mat-label>\n                            <input type=\"number\" matInput id=\"modelPhoneId\" placeholder=\"{{'RequestPhoneSelect' | translate }}\" required\n                                [(ngModel)]=\"modelObj.Phone\" #modelPhoneVar=\"ngModel\" name=\"modelPhone\"\n                                [ngClass]=\"{'is-invalid': (modelPhoneVar.touched || modelPhoneVar.dirty) && !modelPhoneVar.valid }\" />\n                            <mat-error *ngIf=\"modelPhoneVar.errors?.required\">{{'RequestPhoneError' | translate }}</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"form-group \">\n                        <mat-form-field class=\"example-full-width\">\n                            <mat-label>{{'RequestMessage' | translate }}</mat-label>\n                            <textarea matInput id=\"modelMessageId\" type=\"text\" placeholder=\"{{'RequestMessageSelect' | translate }}\" required\n                                [(ngModel)]=\"modelObj.Message\" #modelMessageVar=\"ngModel\" name=\"modelMessage\" rows=\"5\" cols=\"15\"\n                                [ngClass]=\"{'is-invalid': (modelMessageVar.touched || modelMessageVar.dirty) && !modelMessageVar.valid }\" ></textarea>\n                            <mat-error *ngIf=\"modelMessageVar.errors?.required\">{{'RequestMessageError' | translate }}</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"row\">\n                        <dynamic-form [fields]=\"regConfig\"></dynamic-form>\n                    </div>\n                    <div class=\"form-group pull-right md-form\">\n                        <button class=\"btn color-bg-01 btn-sm white-text\" type=\"submit\"                            \n                            [disabled]=\"!(modelForm.valid && form?.valid)|| isClicked\">{{'GenericSave' | translate }} <i class=\"fa fa-spinner fa-spin\" *ngIf=\"isClicked\"></i> </button>\n                    </div>\n                </form>\n            </div>\n        </div>\n\n    </div>","import { Component, OnInit, ViewChild, ElementRef, QueryList, ViewChildren } from '@angular/core';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ServiceTraining } from 'src/app/services/training.service';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { cTrainingItem, cAttendance, cSessionItem, cAttendanceTrainee } from 'src/app/interface/Response/Training.class';\r\nimport { cTraineeItem } from 'src/app/interface/Response/Trainee.class';\r\nimport { MatSlideToggle } from '@angular/material';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-attendance',\r\n  templateUrl: './attendance.component.html',\r\n  styleUrls: ['./attendance.component.css']\r\n})\r\nexport class AttendanceComponent extends baseComponent implements OnInit {\r\n\r\n  pageTitle: string = 'Attendance';\r\n  trainingId: string;\r\n  trainingObj: cTrainingItem;\r\n  attendance: cAttendance[];\r\n  sessions: cSessionItem[];\r\n  trainees: cTraineeItem[];\r\n  selectedSessionId: string = \"\";\r\n  ModelAttendance: cAttendance;\r\n\r\n\r\n  @ViewChildren(\"toggleElement\") ref: QueryList<MatSlideToggle>;\r\n\r\n  constructor(private route: ActivatedRoute,\r\n    private BLServiceTraining: ServiceTraining,\r\n    BLServiceShowMessage: ServiceShowMessage,\r\n    private router: Router,\r\n    BLServiceLoginUser: ServiceLoginUser,BLTranslate: TranslateService,) {\r\n    super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const param = this.route.snapshot.paramMap.get('Id');\r\n    if (param) {\r\n      this.trainingId = param;\r\n      this.loadData();\r\n    }\r\n  }\r\n  loadData() {\r\n    this.BLServiceTraining.getGetByid(this.trainingId).subscribe({\r\n      next: obj => {\r\n        this.trainingObj = obj;\r\n        this.attendance = obj.Attendances;\r\n        this.sessions = obj.Sessions;\r\n        this.trainees = obj.Trainees;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  getTraineeAttendance(sessionId: string, TraineeId: string): string {\r\n    if (!this.attendance)\r\n      return \"NA\";\r\n\r\n    var attSession = this.attendance.filter(x => x.SessionId == sessionId);\r\n    if (!attSession)\r\n      return \"NA\";\r\n\r\n    var attTrainee = attSession[0]?.Attendances?.filter(x => x.TraineeId == TraineeId);\r\n    if (!attTrainee)\r\n      return \"NA\";\r\n\r\n    return attTrainee[0]?.IsAttendant ? \"true\" : \"false\";\r\n  }\r\n  EnterAttendance(sessionId: string) {\r\n    this.selectedSessionId = sessionId;\r\n    this.ModelAttendance = new cAttendance();\r\n\r\n    this.ModelAttendance.SessionId = sessionId;\r\n    this.ModelAttendance.Attendances = [];\r\n    this.trainees.forEach(element => {\r\n      var att = new cAttendanceTrainee();\r\n      att.TraineeId = element.Id;\r\n      att.IsAttendant = this.getTraineeAttendance(sessionId, element.Id) == \"true\" ? true : false;\r\n      this.ModelAttendance.Attendances.push(att);\r\n    });\r\n  }\r\n  CancelAttendance() {\r\n    this.selectedSessionId = \"\";\r\n    this.ModelAttendance = new cAttendance();\r\n  }\r\n  AttendanceTraineeadded(traineeId: string, event: any) {\r\n    this.updateAttendanceModel(traineeId, event.checked);\r\n  }\r\n  updateAttendanceModel(traineeId: string, isChecked: boolean) {\r\n    var attIndex = this.ModelAttendance.Attendances.findIndex(x => x.TraineeId == traineeId);\r\n    this.ModelAttendance.Attendances[attIndex].IsAttendant = isChecked;\r\n  }\r\n  MarkAll() {\r\n    this.ref.toArray().forEach(item => {item.checked = true;});\r\n    this.ModelAttendance.Attendances.forEach(item => { item.IsAttendant = true });\r\n  }\r\n  UnMarkAll() {\r\n    this.ref.toArray().forEach(item => {item.checked = false;});\r\n    this.ModelAttendance.Attendances.forEach(item => { item.IsAttendant = false });\r\n  }\r\n  Save() {\r\n    this.BLServiceTraining.SaveAttendnace(this.trainingId, this.ModelAttendance).subscribe({\r\n      next: obj => {\r\n        this.selectedSessionId = \"\";\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  onBack(): void {\r\n    this.router.navigate(['/Training/List']);\r\n  }\r\n}\r\n","<section class=\"my-5\">\r\n    <div class=\"container\">\r\n        <div class='row'>\r\n            <h4 class=\"mb-4\">{{'AttendancepageTitle' | translate }}</h4>\r\n        </div>\r\n        <div class=\"col-md-12\">\r\n            <div class='table-responsive '>\r\n                <table class='table table-header-rotated'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>{{'GenericName' | translate }}</th>\r\n                            <th *ngFor=\"let item of sessions\" class=\"{{sessions.length > 6 ? 'rotate' : ''}}\">\r\n                                <div >\r\n                                    <span *ngIf=\"!item.IsFilled && item.Id != selectedSessionId\">\r\n                                        <a (click)=\"EnterAttendance(item.Id)\" *ngIf=\"((compareDate(trainingObj.StartDate , todayDate) == -1 || compareDate(trainingObj.StartDate , todayDate) == 0) \r\n                                                                    && compareDate(trainingObj.EndDate , todayDate) == 1 && IsTrainer) || IsAdmin || IsPartner || IsSubPartner\"><i title=\"{{'GenericEdit' | translate }}\"\r\n                                                class=\"far fa-edit\"></i></a>\r\n                                        {{item.Name}}\r\n                                    </span>\r\n                                    <span *ngIf=\"item.Id == selectedSessionId\">\r\n                                        <a (click)=\"CancelAttendance()\"><i title=\"{{'GenericCancel' | translate }}\"\r\n                                                class=\"far fa-times\"></i></a>\r\n                                        {{item.Name}}\r\n                                    </span>\r\n                                </div>\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let trainee of trainees\">\r\n                            <td>{{trainee.Name}}</td>\r\n                            <td *ngFor=\"let session of sessions\" class=\"\">\r\n                                <span *ngIf=\"session.Id == selectedSessionId\">\r\n                                    <mat-slide-toggle #toggleElement (change)=\"AttendanceTraineeadded(trainee.Id,$event)\" [checked]=\"getTraineeAttendance(session.Id,trainee.Id) == 'true' ? true : false\" color=\"primary\"></mat-slide-toggle>\r\n                                </span>\r\n                                <span *ngIf=\"session.Id != selectedSessionId\"\r\n                                    [ngSwitch]=\"getTraineeAttendance(session.Id,trainee.Id)\">\r\n                                    <i *ngSwitchCase=\"'NA'\" class=\"fas fa-minus\"></i>\r\n                                    <i *ngSwitchCase=\"'false'\" class=\"fas fa-times\"></i>\r\n                                    <i *ngSwitchCase=\"'true'\" class=\"fas fa-check\"></i>\r\n                                </span>\r\n\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                    <tfoot >\r\n                        <tr *ngIf=\"selectedSessionId\">\r\n                            <td></td>\r\n                            <td *ngFor=\"let session of sessions\" class=\"\">\r\n                                <span *ngIf=\"session.Id == selectedSessionId\">\r\n                                    <a (click)=\"MarkAll()\" title=\"{{'AttendanceMarkAll' | translate }}\"><i class=\"far fa-check-circle\"></i></a>\r\n                                    <a (click)=\"UnMarkAll()\" title=\"{{'AttendanceUnMarkAll' | translate }}\"><i class=\"far fa-times-circle\"></i></a>\r\n                                </span><br>\r\n                                <span *ngIf=\"session.Id == selectedSessionId\">\r\n                                    <button class=\"btn color-bg-01 btn-sm white-text\" (click)=\"Save()\"\r\n                                    type=\"submit\" style=\"width:80px\">{{'GenericSave' | translate }}</button>\r\n                                </span>\r\n                            </td>\r\n                        </tr>\r\n                    </tfoot>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div>\r\n        <div class='card-footer'>\r\n            <button class='btn btn-outline-secondary' (click)='onBack()' style='width:80px'>\r\n                <i class='fa fa-chevron-left'></i> {{'GenericBack' | translate }}\r\n            </button>\r\n        </div>\r\n    </div>\r\n\r\n</section>","import { Component, OnInit } from '@angular/core';\nimport { MyTraining, MyTrainingItems } from 'src/app/interface/Response/MyTraining.class';\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\nimport { Page } from 'src/app/common/pagination/page';\nimport { ServiceTrainee } from 'src/app/services/trainee.service';\nimport { CustomPaginationService } from 'src/app/common/pagination/services/custom-pagination.service';\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Constants } from 'src/app/constants';\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-my-trainings',\n  templateUrl: './my-trainings.component.html',\n  styleUrls: ['./my-trainings.component.css']\n})\nexport class MyTrainingsComponent extends baseComponent implements OnInit {\n  pageTitle: string = 'My Trainings';\n  lstData: MyTraining;\n  message: ShowMessage = new ShowMessage();\n  filtertxt: string = '';\n  modelName: string = '';\n  modelId: string = '';\n  modelNameEdited: string = '';\n  TraineeId: string = \"\";\n  page: Page<MyTrainingItems> = new Page();\n\n\n  constructor(private BLService: ServiceTrainee,\n    private paginationService: CustomPaginationService,\n    private router: Router,\n    private route: ActivatedRoute,\n    BLServiceShowMessage: ServiceShowMessage,\n    BLServiceLoginUser: ServiceLoginUser, BLTranslate: TranslateService,) {\n    super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\n  }\n\n  ngOnInit(): void {\n    this.loadData();\n  }\n  private loadData(): void {\n    const param = this.route.snapshot.paramMap.get('Id');\n    if (param) {\n      this.TraineeId = param;\n      this.BLService.GetTraineeTraining(this.TraineeId).subscribe({\n        next: lst => {\n          this.lstData = lst;\n          this.page.pageable.pageSize = Constants.PAGE_SIZE;\n          this.page.totalElements = lst.trainings.length;\n          this.page.content = lst.trainings;\n        },\n        error: err => this.message.Error(err)\n      });\n    }\n    else {\n      this.BLService.GetMyTraining().subscribe({\n        next: lst => {\n          this.lstData = lst;\n          this.page.pageable.pageSize = Constants.PAGE_SIZE;\n          this.page.totalElements = lst.trainings.length;\n          this.page.content = lst.trainings;\n        },\n        error: err => this.message.Error(err)\n      });\n    }\n  }\n  public getNextPage(): void {\n    this.page.pageable = this.paginationService.getNextPage(this.page);\n    this.loadData();\n  }\n\n  public getPreviousPage(): void {\n    this.page.pageable = this.paginationService.getPreviousPage(this.page);\n    this.loadData();\n  }\n  public getloadPageCurrent(): void {\n    this.loadData();\n  }\n  TakeExam(Id) {\n    this.router.navigate(['/Exam/TakeExam/' + Id]);\n  }\n}\n","<section class=\"my-5\">\n    <div class=\"container\">\n        <div class='row'>\n            <h4 class=\"mb-4\">{{'MyTraineepageTitle' | translate }} - {{lstData?.Profile.Name}}</h4>\n        </div>\n        <div class=\"col-md-12\">\n            <div class='table-responsive'>\n                <table class='table' *ngIf='page.content && page.content.length'>\n                    <thead>\n                        <tr>\n                            <th>{{'GenericName' | translate }}</th>\n                            <th>{{'TrainingDates' | translate }}</th>\n                            <th>{{'GenericAction' | translate }}</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor='let obj of page.content'>\n                            <td>{{ obj.Name}}</td>\n                            <td>{{ obj.Date }}</td>\n                            <td>\n                                <input *ngIf=\"!obj.HasCertificate && obj.ExamCount<2 && !IsAdmin\" type=\"button\"\n                                    class=\"btn btn-success\" value=\"{{'MyTraineeTakeExam' | translate }}\" (click)=\"TakeExam(obj.TrainingId)\">\n                                <a *ngIf=\"obj.HasCertificate && obj.CertificatePath != ''\"\n                                    href=\"{{FilesURL + obj.CertificatePath}}\" target=\"_blank\">{{'CertificateDownloadCertificate' | translate }}</a>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</section>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { cTrainingItem } from 'src/app/interface/Response/Training.class';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { ServiceTraining } from 'src/app/services/training.service';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { cTraineeItem, cTraineeItemInfo } from 'src/app/interface/Response/Trainee.class';\r\nimport { ServiceTrainee } from 'src/app/services/trainee.service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ModelTraineeTraining } from 'src/app/interface/Model/ModelTraineeTraining.class';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Constants } from 'src/app/constants';\r\nimport * as FileSaver from 'file-saver';\r\nimport { constants } from 'buffer';\r\n\r\n@Component({\r\n  selector: 'app-trainee-list',\r\n  templateUrl: './trainee-list.component.html',\r\n  styleUrls: ['./trainee-list.component.css']\r\n})\r\nexport class TraineeListComponent extends baseComponent implements OnInit {\r\n\r\n  @ViewChild('fileInput') fileInput: any;\r\n  pageTitle: string = \"Trainee List\"\r\n  trainingId: string;\r\n  trainingObj: cTrainingItem;\r\n  traineelst: cTraineeItemInfo[];\r\n  todayDate = new Date();\r\n  todayDateMinus2 = new Date();\r\n  ExcelOnly: string;\r\n  DonwloadURL: string;\r\n  DownloadURLError:string;\r\n  msgTrainingNoCertificates: string;\r\n  IsTraineeUpload:boolean = false;\r\n\r\n  private _filtertxt: string = '';\r\n  public get filtertxt(): string {\r\n    return this._filtertxt;\r\n  }\r\n  public set filtertxt(value: string) {\r\n    this._filtertxt = value;\r\n    this.filterbtn();\r\n  }\r\n  constructor(private route: ActivatedRoute,\r\n    private BLServiceTraining: ServiceTraining,\r\n    private modalService: NgbModal,\r\n    private BLServiceTrainee: ServiceTrainee,\r\n    private router: Router,\r\n    BLServiceShowMessage: ServiceShowMessage,\r\n    BLServiceLoginUser: ServiceLoginUser, BLTranslate: TranslateService,) {\r\n    super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\r\n    this.BLTranslate.get(\"ExcelOnly\").subscribe(res => { this.ExcelOnly = res; });\r\n    this.BLTranslate.get(\"TrainingNoCertificates\").subscribe(res => { this.msgTrainingNoCertificates = res; });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.todayDateMinus2.setDate(this.todayDateMinus2.getDate() - 2);\r\n    this.DonwloadURL = Constants.FilesURL + \"ImportTrainee.xlsx\";\r\n    const param = this.route.snapshot.paramMap.get('Id');\r\n    if (param) {\r\n      this.trainingId = param;\r\n      this.loadData();\r\n    }\r\n  }\r\n  filterbtn() {\r\n    this.traineelst = this.filtertxt ? this.loadDataFilter() : this.trainingObj.Trainees;\r\n  }\r\n  loadDataFilter(): cTraineeItemInfo[] {\r\n    return this.trainingObj.Trainees.filter((item: cTraineeItemInfo) =>\r\n      item.Name.toLocaleLowerCase().indexOf(this.filtertxt.toLocaleLowerCase()) !== -1\r\n      || item.Email.toLocaleLowerCase().indexOf(this.filtertxt.toLocaleLowerCase()) !== -1\r\n      || item.Mobile.toLocaleLowerCase().indexOf(this.filtertxt.toLocaleLowerCase()) !== -1\r\n      || item.NationalId.toLocaleLowerCase().indexOf(this.filtertxt.toLocaleLowerCase()) !== -1);\r\n  }\r\n  loadData() {\r\n    this.BLServiceTraining.getGetByid(this.trainingId).subscribe({\r\n      next: obj => {\r\n        this.trainingObj = obj;\r\n        this.filterbtn();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  setDeactivate(traineeId: string) {\r\n    if (!confirm(this.msgsetDeleted))\r\n      return;\r\n\r\n    this.BLServiceTrainee.RemoveTraining(this.trainingId, traineeId).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.msgDeletedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  isCourseStarted() {\r\n    if (this.trainingObj.StartDate < this.todayDate) //if start date less than today, course has started\r\n      return true;\r\n\r\n    return false;\r\n  }\r\n  AddTrainee(content) {\r\n    this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  OnSelectedTrainee(TraineeId: string): void {\r\n    this.IsTraineeUpload = true;\r\n    this.BLServiceTrainee.AddTraining(this.trainingId, TraineeId).subscribe({\r\n      next: response => {\r\n        this.IsTraineeUpload = false;\r\n        this.loadData();\r\n        this.message.Success(this.msgSavedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => {\r\n        this.message.Error(err);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.IsTraineeUpload = false;\r\n      }\r\n    });\r\n  }\r\n  onBack(): void {\r\n    this.router.navigate(['/Training/List']);\r\n  }\r\n  createBtn() {\r\n    // path: 'Trainee/Create/:IsCreate/:TraineeId/:TrainingId'\r\n    this.router.navigate(['/Trainee/Create/1/0/' + this.trainingId]);\r\n  }\r\n  Approve(TraineeId: string) {\r\n    var model = new ModelTraineeTraining();\r\n    model.TraineeId = TraineeId;\r\n    model.TrainingId = this.trainingId;\r\n\r\n    this.BLServiceTrainee.ApproveTraineeRegister(model).subscribe({\r\n      next: response => {\r\n        this.loadData();\r\n        this.message.Success(this.msgSavedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  Certificate(TraineeId) {\r\n    // path: 'Trainee/Create/:IsCreate/:TraineeId/:TrainingId'\r\n    this.router.navigate(['/MyTraining/' + TraineeId]);\r\n  }\r\n  public uploadFile = (files) => {\r\n    if (files.length === 0) {\r\n      return;\r\n    }\r\n\r\n    let fileToUpload = <File>files[0];\r\n    if (fileToUpload.type != \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\") {\r\n      this.message.Error(this.ExcelOnly);\r\n\r\n      this.BLServiceShowMessage.sendMessage(this.message);\r\n    } else {\r\n      this.IsTraineeUpload = true;\r\n      this.BLServiceTrainee.ImportTrainee(fileToUpload, this.trainingId).subscribe({\r\n        next: response => {\r\n          this.fileInput.nativeElement.value = '';\r\n          this.IsTraineeUpload = false;\r\n          if(response.IsValid)\r\n          {\r\n            this.message.Success(this.msgSavedSuccessfully);\r\n            this.BLServiceShowMessage.sendMessage(this.message);\r\n          }\r\n          else{\r\n            this.message.Error(response.Error);\r\n            this.BLServiceShowMessage.sendMessage(this.message);\r\n            if(response.FileURL != \"\")\r\n            {\r\n              this.DownloadURLError = Constants.FilesURL + response.FileURL;\r\n            }\r\n          }\r\n          this.loadData();\r\n          \r\n        },\r\n\r\n        error: err => {\r\n          this.fileInput.nativeElement.value = '';\r\n          this.message.Error(err);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.IsTraineeUpload = false;\r\n        }\r\n      });\r\n    }\r\n  }\r\n  DownloadCertificate() {\r\n    this.BLServiceTrainee.DownloadTrainingCertificate(this.trainingId).subscribe({\r\n      next: data => {\r\n        window.open(Constants.FilesURL + data, \"_blank\");\r\n      },\r\n\r\n      error: err => {\r\n        this.message.Error(this.msgTrainingNoCertificates);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n      }\r\n    });\r\n  }\r\n  ExportBtn(){\r\n    this.BLServiceTraining.ExportTrainingTrainee(this.trainingId).subscribe({\r\n      next: data => {\r\n        this.downloadFile(data);\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n}\r\n","<section class=\"my-5\">\r\n  <div class=\"container \">\r\n    <div class='row'>\r\n      <h4 class=\"mb-4\">{{'TraineePageTitle' | translate }} ({{traineelst?.length ? traineelst?.length : 0}})</h4>\r\n    </div>\r\n    <div class='row'>\r\n      <div class=\"col-sm-6 md-form\">\r\n        <mat-form-field class=\"example-full-width\">\r\n          <mat-label>{{'TraineeSearch' | translate }}</mat-label>\r\n          <input type=\"text\" placeholder=\"{{'TraineeSearchPH' | translate }}\" matInput [(ngModel)]=\"filtertxt\">\r\n        </mat-form-field>\r\n        <input type=\"submit\" value=\"{{'GenericSearch' | translate }}\" class=\"btn color-bg-02 white-text\"\r\n          (click)=\"filterbtn()\">\r\n      </div>\r\n      <div class=\"col-sm-6 md-form pull-right \" *ngIf=\"compareDate(trainingObj?.StartDate , todayDateMinus2) == 1 || compareDate(trainingObj?.StartDate , todayDateMinus2) == 0\">\r\n        <div class=\"pull-right ml-3\">\r\n          <input #fileInput id=\"uploadTrainee\" name=\"uploadTrainee\" type=\"file\" #fileTrainee\r\n            placeholder=\"{{'ImportTrainee' | translate }}\"\r\n            accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\r\n            (change)=\"uploadFile(fileTrainee.files)\" style=\"display:none;\">\r\n          <button id=\"btnuploadTrainee\" name=\"btnuploadTrainee\" type=\"button\" class=\"btn btn-warning white-text \"\r\n            (click)=\"fileTrainee.click()\" [disabled]=\"IsTraineeUpload\">{{'ImportTrainee' | translate }}<i\r\n            class=\"fa fa-spinner fa-spin\" *ngIf=\"IsTraineeUpload\"></i></button>\r\n\r\n          <input type=\"button\" class=\"btn color-bg-03 white-text  \" value=\"{{'TraineeAdd' | translate }}\" [disabled]=\"IsTraineeUpload\"\r\n            (click)=\"AddTrainee(content)\">\r\n          <input type=\"button\" class=\" btn color-bg-01 white-text\" value=\"{{'GenericCreateNew' | translate }}\" [disabled]=\"IsTraineeUpload\"\r\n            (click)=\"createBtn()\">\r\n\r\n        </div>\r\n      </div>\r\n      <div class=\"col-sm-6 md-form pull-right \" *ngIf=\"compareDate(trainingObj?.EndDate , todayDate) == -1\">\r\n        <div class=\"pull-right ml-3\">\r\n          <input type=\"button\" class=\" btn btn-warning white-text\" value=\"{{'TrainingCourseCertificate' | translate }}\"\r\n            (click)=\"DownloadCertificate()\">\r\n            <input type=\"button\" class=\"pull-right btn color-bg-02 white-text Excel\"\r\n            value=\"{{'ExportToExcel' | translate }}\" (click)=\"ExportBtn()\">\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class='row col-sm-12 text-center' *ngIf='DownloadURLError'>\r\n      <div class=\"col-sm-4 md-form text-center bgDownloadError m-auto mb-1 \">\r\n        <a href=\"{{DownloadURLError}}\" target=\"_blank\">{{'TrainingDownloadTemplateError' | translate}}</a>\r\n      </div>\r\n    </div>\r\n    <div class='row' *ngIf=\"compareDate(trainingObj?.StartDate , todayDateMinus2) == 1\">\r\n      <div class=\"col-sm-12 md-form text-right mb-1\">\r\n        <a href=\"{{DonwloadURL}}\" target=\"_blank\">{{'TrainingDownloadTemplate' | translate}}</a>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-12\">\r\n      <div class='table-responsive'>\r\n        <table class='table' *ngIf='traineelst && traineelst?.length'>\r\n          <thead>\r\n            <tr>\r\n              <th>{{'GenericName' | translate }}</th>\r\n              <th>{{'GenericEmail' | translate }}</th>\r\n              <th>{{'GenericMobile' | translate }}</th>\r\n              <th>{{'GenericNationalID' | translate }}</th>\r\n              <th>{{'GenericAction' | translate }}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor='let obj of traineelst'>\r\n              <td>{{obj.Name}}</td>\r\n              <td>{{obj.Email}}</td>\r\n              <td>{{obj.Mobile}}</td>\r\n              <td>{{obj.NationalId}}</td>\r\n              <td>\r\n                <input *ngIf=\" (compareDate(trainingObj?.StartDate , todayDateMinus2) == 1 || compareDate(trainingObj?.StartDate , todayDateMinus2) == 0)\" type=\"button\"\r\n                  class=\"btn btn-danger\" value=\"{{'GenericRemove' | translate }}\" (click)=\"setDeactivate(obj.Id)\">\r\n                <input *ngIf=\"!obj.IsApproved && (compareDate(trainingObj?.StartDate , todayDateMinus2) == 1 || compareDate(trainingObj?.StartDate , todayDateMinus2) == 0)\" type=\"button\"\r\n                  class=\"btn btn-success\" value=\"{{'CertificateApprove' | translate }}\" (click)=\"Approve(obj.Id)\">\r\n                <input type=\"button\" class=\"btn btn-info\" value=\"Certificates\" (click)=\"Certificate(obj.Id)\">\r\n              </td>\r\n\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div class=\"\" *ngIf=\"traineelst?.length == 0\">\r\n        <div class=\"text-center bg-red noresult\">\r\n          <span class=\"font-italic\">{{'TrainingNoTraineeAdded' | translate }} </span><span>&#9785;</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <ng-template #content let-modal>\r\n        <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header color-bg-01 white-text text-center\">\r\n\r\n              <h6 class=\"modal-title\">{{'TraineeAdd2' | translate }}</h6>\r\n            </div>\r\n            <div class=\"modal-body pt-0\">\r\n              <div>\r\n                <cust-search-trainee (OnSelectedTrainee)=\"OnSelectedTrainee($event)\"></cust-search-trainee>\r\n              </div>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n\r\n              <button type=\"button\" class=\"btn color-bg-02 btn-sm white-text\"\r\n                (click)=\"modal.close('Close click')\">{{'GenericClose' | translate }}</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </ng-template>\r\n    </div>\r\n  </div>\r\n  <div>\r\n    <div class='card-footer'>\r\n      <button class='btn btn-outline-secondary' (click)='onBack()' style='width:80px'>\r\n        <i class='fa fa-chevron-left'></i> {{'GenericBack' | translate }}\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n</section>","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { cTrainingList, cTrainingItem } from 'src/app/interface/Response/Training.class';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ServiceTraining } from 'src/app/services/training.service';\r\nimport { CustomPaginationService } from 'src/app/common/pagination/services/custom-pagination.service';\r\nimport { Page } from 'src/app/common/pagination/page';\r\nimport { ModelTraining } from 'src/app/interface/Model/ModelTraining.class';\r\nimport { cEntityPartnerItem } from 'src/app/interface/Response/EntityPartner.class';\r\nimport { cEntitySubPartnerItem } from 'src/app/interface/Response/EntitySubPartner.class';\r\nimport { cUserProfileItem } from 'src/app/interface/Response/UserProfile.class';\r\nimport { ServiceUserProfile } from 'src/app/services/userprofile.service';\r\nimport { ServiceEntityManagement } from 'src/app/services/entitymanagement.service';\r\nimport { cTrainingTypeItem } from 'src/app/interface/Response/TrainingType.class';\r\nimport { ITrainingCategoryItem } from 'src/app/interface/Response/TrainingCategory.interface';\r\nimport { ServiceDataManagement } from 'src/app/services/datamanagement.service';\r\nimport { cCityItem } from 'src/app/interface/Response/City.class';\r\nimport { cArea } from 'src/app/interface/Response/Area.class';\r\nimport { ModelFilterTraining } from 'src/app/interface/Model/ModelFilterTraining.class';\r\nimport { Router } from '@angular/router';\r\nimport { ServiceTrainee } from 'src/app/services/trainee.service';\r\nimport { cEntityTrainingCenterItem } from 'src/app/interface/Response/EntityTrainingCenter.class';\r\nimport { cExamTemplateItem } from 'src/app/interface/Response/ExamTemplate.class';\r\nimport { ServiceExamTemplate } from 'src/app/services/exam-template.service';\r\nimport { ModelEntitySubEntityIds } from 'src/app/interface/Model/ModelEntitySubEntityIds.class';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Constants } from 'src/app/constants';\r\nimport { ICourse } from 'src/app/interface/Response/Course.interface';\r\n\r\n@Component({\r\n  selector: 'app-training-list',\r\n  templateUrl: './training-list.component.html',\r\n  styleUrls: ['./training-list.component.css']\r\n})\r\nexport class TrainingListComponent extends baseComponent implements OnInit {\r\n\r\n  filterObj: ModelFilterTraining = new ModelFilterTraining();\r\n  pageTitle: string = 'Training List';\r\n  lstTraining: cTrainingList;\r\n  filtertxt: string = '';\r\n  modelNameEdited: string = '';\r\n  modelObj: ModelTraining;\r\n  modelIsCreate: boolean = true;\r\n  modelIsStarted: boolean = false;\r\n  page: Page<cTrainingItem> = new Page();\r\n  MemberId: string;\r\n  lstPartners: cEntityPartnerItem[];\r\n  lstSubPartners: cEntitySubPartnerItem[];\r\n  lstTrainingCenters: cEntityTrainingCenterItem[];\r\n  lstSubPartnersFilter: cEntitySubPartnerItem[];\r\n  lstTrainers: cUserProfileItem[];\r\n  lstTrainersFilter: cUserProfileItem[];\r\n  lstTrainingTypes: cTrainingTypeItem[];\r\n  lstTrainingCategory: ITrainingCategoryItem[];\r\n  lstTrainingCategoryFilter: ITrainingCategoryItem[];\r\n  lstCity: cCityItem[];\r\n  lstAreas: cArea[];\r\n  todayDate = new Date();\r\n  IsDatesCorrect: boolean = true;\r\n  lstExamTemplate: cExamTemplateItem[];\r\n  modelExamTemplate: ModelEntitySubEntityIds;\r\n  lstCourses: ICourse[];\r\n\r\n  msgTrainingRegister: string;\r\n\r\n  constructor(private BLServiceTraining: ServiceTraining,\r\n    private BLServiceTrainee: ServiceTrainee,\r\n    private BLServiceUserProfile: ServiceUserProfile,\r\n    private BLServiceEntityManagement: ServiceEntityManagement,\r\n    private BLServiceDataManagement: ServiceDataManagement,\r\n    private BLServiceExamTemplate: ServiceExamTemplate,\r\n    private paginationService: CustomPaginationService,\r\n    private modalService: NgbModal,\r\n    private router: Router,\r\n    BLServiceShowMessage: ServiceShowMessage,\r\n    BLServiceLoginUser: ServiceLoginUser, BLTranslate: TranslateService,) {\r\n    super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n\r\n    this.BLTranslate.get(\"msgTrainingRegister\").subscribe(res => { this.msgTrainingRegister = res; });\r\n\r\n\r\n    this.loadData();\r\n    if (!this.IsTrainee) {\r\n      this.BLServiceEntityManagement.getEntityPartnerGetMy().subscribe({\r\n        next: lst => {\r\n          this.lstPartners = lst;\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n      this.BLServiceExamTemplate.ExamTemplateListActive().subscribe({\r\n        next: lst => {\r\n          this.lstExamTemplate = lst;\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n    this.BLServiceDataManagement.getTrainingTypeListActive().subscribe({\r\n      next: lst => {\r\n        this.lstTrainingTypes = lst;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n    this.BLServiceDataManagement.getCityListActive().subscribe({\r\n      next: lst => {\r\n        this.lstCity = lst;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n\r\n  }\r\n\r\n  onPartnerSelect() {\r\n    if (this.modelObj.PartnerId == \"\")\r\n      return;\r\n\r\n    if (!this.IsTrainee) {\r\n      this.BLServiceEntityManagement.getEntitySubPartnerGetMyByPartnerId(this.modelObj.PartnerId).subscribe({\r\n        next: lst => {\r\n          this.lstSubPartners = lst;\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n      if (!this.IsSubPartner) {\r\n        var tc = this.lstPartners.find(item => item.Id == this.modelObj.PartnerId).TrainingCenters;\r\n        this.lstTrainingCenters = tc.filter(a => a.IsActive == true).sort((a, b) => a.Name.localeCompare(b.Name));\r\n      }\r\n    }\r\n    this.lstTrainers = [];\r\n  }\r\n  onPartnerFilterSelect() {\r\n    if (this.filterObj.PartnerId == \"\")\r\n      return;\r\n\r\n    if (!this.IsTrainee) {\r\n      this.BLServiceEntityManagement.getEntitySubPartnerGetMyByPartnerId(this.filterObj.PartnerId).subscribe({\r\n        next: lst => {\r\n          this.lstSubPartnersFilter = lst;\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n    this.lstTrainers = [];\r\n  }\r\n  onSubPartnerSelect() {\r\n    if (this.modelObj.SubPartnerId == \"\")\r\n      return;\r\n    if (!this.IsTrainee) {\r\n      this.BLServiceUserProfile.GetMyTrainersBySubPartnerId(this.modelObj.SubPartnerId).subscribe({\r\n        next: lst => {\r\n          this.lstTrainers = lst;\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n    if (this.IsSubPartner) {\r\n\r\n      var sub = this.lstSubPartners.find(item => item.Id == this.modelObj.SubPartnerId);\r\n      this.lstTrainingCenters = sub.TrainingCenters;\r\n    }\r\n  }\r\n  onSubPartnerFilterSelect() {\r\n    if (this.filterObj.SubPartnerId == \"\")\r\n      return;\r\n    if (!this.IsTrainee) {\r\n      this.BLServiceUserProfile.GetMyTrainersBySubPartnerId(this.filterObj.SubPartnerId).subscribe({\r\n        next: lst => {\r\n          this.lstTrainersFilter = lst;\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n  }\r\n  onTrainingTypeSelect() {\r\n    if (this.modelObj.TrainingTypeId == \"\")\r\n      return;\r\n\r\n    this.BLServiceDataManagement.getTrainingCategoryListByTrainingType(this.modelObj.TrainingTypeId).subscribe({\r\n      next: lst => {\r\n        this.lstTrainingCategory = lst.filter(a => a.IsActive == true).sort((a, b) => a.Name.localeCompare(b.Name));;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  onTrainingTypeFilterSelect() {\r\n    if (this.filterObj.TrainingTypeId == \"\")\r\n      return;\r\n\r\n    this.BLServiceDataManagement.getTrainingCategoryListByTrainingType(this.filterObj.TrainingTypeId).subscribe({\r\n      next: lst => {\r\n        this.lstTrainingCategoryFilter = lst.filter(a => a.IsActive == true).sort((a, b) => a.Name.localeCompare(b.Name));;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  getCourses() {\r\n    var lst = this.lstTrainingCategory?.find(x => x.Id == this.modelObj.TrainingCategoryId)?.Course;\r\n    if (lst) {\r\n      var x = lst?.filter(y => y.IsActive == true).sort((a, b) => a.Name.localeCompare(b.Name));\r\n      return x;\r\n    }\r\n    return lst;\r\n  }\r\n  OnCitySelect() {\r\n\r\n    this.lstAreas = [];\r\n\r\n    var area = this.lstCity?.find(x => x.Id == this.modelObj.CityId).Areas;\r\n    if (area.length == 0)\r\n      return;\r\n    this.lstAreas = area.filter(y => y.IsActive == true).sort((x, y) => x.Name.localeCompare(y.Name));\r\n\r\n  }\r\n  onTrainingAdminApproved(Id: string) {\r\n    this.BLServiceTraining.SetAdminApproved(Id).subscribe({\r\n      next: obj => {\r\n        this.loadData();\r\n      }\r\n    });\r\n  }\r\n  onTrainingConfirm1(Id: string) {\r\n    this.BLServiceTraining.SetConfirmed1(Id).subscribe({\r\n      next: obj => {\r\n        this.loadData();\r\n      }\r\n    });\r\n  }\r\n  onTrainingConfirm2(Id: string) {\r\n    this.BLServiceTraining.SetConfirmed2(Id).subscribe({\r\n      next: obj => {\r\n        this.loadData();\r\n      }\r\n    });\r\n  }\r\n  private loadData(): void {\r\n\r\n    this.filterObj.CurrentPage = this.page.pageable.pageCurrent;\r\n    this.BLServiceTraining.searchTraining(this.filterObj).subscribe({\r\n      next: lst => {\r\n        this.page.pageable.pageSize = lst.pageSize;\r\n        this.page.totalElements = lst.totalCount;\r\n        this.page.content = lst.lstResult;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  public getNextPage(): void {\r\n    this.page.pageable = this.paginationService.getNextPage(this.page);\r\n    this.loadData();\r\n  }\r\n\r\n  public getPreviousPage(): void {\r\n    this.page.pageable = this.paginationService.getPreviousPage(this.page);\r\n    this.loadData();\r\n  }\r\n  public getloadPageCurrent(): void {\r\n    this.loadData();\r\n  }\r\n  setDeactivate(Id: string): void {\r\n    if (!confirm(this.msgsetDeleted))\r\n      return;\r\n\r\n    this.BLServiceTraining.setDeactivate(Id).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.msgDeletedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        this.loadData();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  filterbtn(): void {\r\n    this.page.pageable.pageCurrent = 1;\r\n    this.loadData();\r\n  }\r\n  createBtn(content): void {\r\n    // this.modelId = \"-1\";\r\n    // this.modelName = \"\";\r\n    this.modelIsStarted = false;\r\n    this.lstSubPartners = [];\r\n    this.lstTrainers = [];\r\n    this.lstAreas = [];\r\n    this.modelObj = new ModelTraining();\r\n    this.modelIsCreate = true;\r\n    this.modelNameEdited = \"\";\r\n    this.modalService.open(content, { size: 'lg', backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  ExportBtn() {\r\n    this.BLServiceTraining.ExportTraining(this.filterObj).subscribe({\r\n      next: data => {\r\n        \r\n        this.downloadFile(data);\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  modelSaveBtn(modelForm: NgForm): void {\r\n    if (!modelForm.valid)\r\n      return;\r\n\r\n    if (this.modelIsCreate) {\r\n      this.BLServiceTraining.create(this.modelObj).subscribe({\r\n        next: response => {\r\n          this.message.Success(this.msgSavedSuccessfully);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.modalService.dismissAll();\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n    else {\r\n      this.BLServiceTraining.update(this.modelObj).subscribe({\r\n        next: response => {\r\n          this.message.Success(this.msgSavedSuccessfully);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.modalService.dismissAll();\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n  }\r\n  openExamTemplate(content, obj: cTrainingItem) {\r\n    this.modelExamTemplate = new ModelEntitySubEntityIds();\r\n    this.modelExamTemplate.MainEntityId = obj.Id;\r\n    this.modelExamTemplate.SubEntityId = obj.ExamTemplateId;\r\n    this.modalService.open(content, { size: 'lg', backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  SaveExamTemplate(modelForm: NgForm) {\r\n    if (!modelForm.valid)\r\n      return;\r\n\r\n    if (this.modelIsCreate) {\r\n      this.BLServiceTraining.SaveExamTemplate(this.modelExamTemplate).subscribe({\r\n        next: response => {\r\n          this.message.Success(this.msgSavedSuccessfully);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          this.loadData();\r\n          this.modalService.dismissAll();\r\n        },\r\n        error: err => this.message.Error(err)\r\n      });\r\n    }\r\n  }\r\n  openBackDropCustomClass(content, obj: cTrainingItem) {\r\n\r\n    var model = new ModelTraining;\r\n    model.AreaId = obj.AreaId;\r\n    model.CityId = obj.CityId;\r\n    model.EndDate = obj.EndDate;\r\n    model.Id = obj.Id;\r\n    model.PartnerId = obj.PartnerId.Id;\r\n    model.SubPartnerId = obj.SubPartnerId.Id;\r\n    model.StartDate = obj.StartDate;\r\n    model.TrainingCategoryId = obj.TrainingCategoryId.Id;\r\n    model.TrainingTypeId = obj.TrainingTypeId.Id;\r\n    model.days = obj.days;\r\n    model.TrainerId = obj.TrainerId;\r\n    model.TrainingCenterId = obj.TrainingCenterId.Id;\r\n    model.Type = obj.Type.toString();\r\n    model.IsOnline = obj.IsOnline;\r\n\r\n    this.modelIsStarted = false;\r\n    var start = new Date(model.StartDate );\r\n    var end = new Date(model.EndDate);\r\n    if (start <= this.todayDate && end>= this.todayDate)\r\n      this.modelIsStarted = true;\r\n\r\n    this.modelObj = model;\r\n    this.onPartnerSelect();\r\n    this.onSubPartnerSelect();\r\n    this.onTrainingTypeSelect();\r\n    this.OnCitySelect();\r\n\r\n    this.modelIsCreate = false;\r\n    //this.modelNameEdited = obj.Name;\r\n    this.modalService.open(content, { size: 'lg', backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  openViewOnly(content, obj: cTrainingItem) {\r\n\r\n    var model = new ModelTraining;\r\n    this.lstCourses = [];\r\n    this.BLServiceUserProfile.getGetByid(obj.TrainerId).subscribe({\r\n      next: user => {\r\n        this.modelObj.TrainerId = user.Name;\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n\r\n    this.BLServiceDataManagement.getTrainingCategoryGetByid(obj.TrainingCategoryId.Id).subscribe({\r\n      next: cat => {\r\n\r\n        if (cat) {\r\n          var x = cat.Course?.filter(y => y.IsActive == true).sort((a, b) => {\r\n            if (a.Name > b.Name)\r\n              return 1;\r\n            else\r\n              return -1\r\n          });\r\n          this.lstCourses = x;\r\n        }\r\n\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n\r\n\r\n    model.EndDate = obj.EndDate;\r\n    model.Id = obj.Id;\r\n    model.PartnerId = obj.PartnerId.Name;\r\n    model.SubPartnerId = obj.SubPartnerId.Name;\r\n    model.StartDate = obj.StartDate;\r\n    model.TrainingCategoryId = obj.TrainingCategoryId.Name;\r\n    model.TrainingTypeId = obj.TrainingTypeId.Name;\r\n    model.days = obj.days;\r\n    model.TrainingCenterId = obj.TrainingCenterId.Name;\r\n    model.Type = obj.Type.toString();\r\n    model.IsOnline = obj.IsOnline;\r\n\r\n\r\n    var city = this.lstCity?.find(x => x.Id == obj.CityId);\r\n    model.CityId = city?.Name;\r\n\r\n    var area = city.Areas.find(x => x.Id == obj.AreaId);\r\n    model.AreaId = area?.Name;\r\n\r\n    this.modelObj = model;\r\n\r\n    this.modelIsCreate = false;\r\n    this.modalService.open(content, { size: 'lg', backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  isCourseStarted(startdate: Date) {\r\n    var d = new Date(startdate);\r\n    if (d < this.todayDate) //if start date less than today, course has started\r\n      return true;\r\n\r\n    return false;\r\n  }\r\n  isCourseEnded(endtdate: Date) {\r\n    var d = new Date(endtdate);\r\n    if (d < this.todayDate) //if start date less than today, course has started\r\n      return true;\r\n\r\n    return false;\r\n  }\r\n  ListTrainees(Id: string) {\r\n    this.router.navigate(['/Training/Trainees/' + Id]);\r\n  }\r\n  Attendance(Id: string) {\r\n    this.router.navigate(['/Training/Attendance/' + Id]);\r\n  }\r\n  Register(Id: string) {\r\n    if (!confirm(this.msgTrainingRegister))\r\n      return;\r\n\r\n    this.BLServiceTrainee.TraineeRegister(Id).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.msgSavedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n        //this.loadData();\r\n        //this.modalService.dismissAll();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n  onStartDateSelect(param) {\r\n    this.IsDatesCorrect = this.CompareTwoDates(this.modelObj.StartDate, this.modelObj.EndDate);\r\n  }\r\n  onEndDateSelect(param) {\r\n    this.IsDatesCorrect = this.CompareTwoDates(this.modelObj.StartDate, param);\r\n  }\r\n  onLocationChange(e, fileType: string) {\r\n    //if (e.target.value == \"1\") {\r\n    if (fileType == \"1\") {\r\n      this.modelObj.IsOnline = true;\r\n    }\r\n    else {\r\n      this.modelObj.IsOnline = false;\r\n    }\r\n  }\r\n  // }\r\n\r\n}\r\n","<section class=\"my-5 \">\r\n    <div class=\"container container-max\">\r\n        <div class='row'>\r\n            <h4 class=\"mb-4\">{{'TrainingpageTitle' | translate }}</h4>\r\n        </div>\r\n\r\n        <div class=\"row\" *ngIf=\"!IsTrainee\">\r\n            <div class=\"col-sm-4\">\r\n                <mat-form-field>\r\n                    <mat-label>{{'GenericPartner' | translate }}</mat-label>\r\n                    <mat-select id=\"filterPartner\" placeholder=\"{{'GenericSelectPartner' | translate }}\"\r\n                        (selectionChange)=\"onPartnerFilterSelect()\" [(ngModel)]=\"filterObj.PartnerId\"\r\n                        name=\"filterPartnerVar\">\r\n                        <mat-option value=\"\">{{'GenericSelectPartner' | translate }}</mat-option>\r\n                        <mat-option *ngFor=\"let item of lstPartners\" value=\"{{item.Id}}\">\r\n                            {{item.Name}}</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"col-sm-4\">\r\n                <mat-form-field>\r\n                    <mat-label>{{'GenericSubPartner' | translate }}</mat-label>\r\n                    <mat-select id=\"filterSubPartnerId\" placeholder=\"{{'GenericSelectPartner' | translate }}\"\r\n                        (selectionChange)=\"onSubPartnerFilterSelect()\" [(ngModel)]=\"filterObj.SubPartnerId\"\r\n                        name=\"filterSubPartner\">\r\n                        <mat-option value=\"\">{{'GenericSelectPartner' | translate }}</mat-option>\r\n                        <mat-option *ngFor=\"let item of lstSubPartnersFilter\" value=\"{{item.Id}}\">\r\n                            {{item.Name}}</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"col-sm-4\">\r\n                <mat-form-field>\r\n                    <mat-label>{{'GenericTrainer' | translate }}</mat-label>\r\n                    <mat-select id=\"filterTrainer\" placeholder=\"{{'GenericSelectTrainer' | translate }}\"\r\n                        [(ngModel)]=\"filterObj.TrainerId\" name=\"filterTrainerVar\">\r\n                        <mat-option *ngFor=\"let item of lstTrainersFilter\" value=\"{{item.Id}}\">\r\n                            {{item.Name}}</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-6\">\r\n                <mat-form-field>\r\n                    <mat-label>{{'GenericTrainingType' | translate }}</mat-label>\r\n                    <mat-select id=\"filterTrainingType\" placeholder=\"Select a TrainingType\"\r\n                        (selectionChange)=\"onTrainingTypeFilterSelect()\" [(ngModel)]=\"filterObj.TrainingTypeId\"\r\n                        name=\"filterTrainingTypeVar\">\r\n                        <mat-option value=\"\">{{'GenericSelectTrainingType' | translate }}</mat-option>\r\n                        <mat-option *ngFor=\"let item of lstTrainingTypes\" value=\"{{item.Id}}\">\r\n                            {{item.Name}}</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"col-sm-6\">\r\n                <mat-form-field>\r\n                    <mat-label>{{'GenericTrainingCategory' | translate }}</mat-label>\r\n                    <mat-select id=\"filtertrainingCategory\"\r\n                        placeholder=\"{{'GenericSelectTrainingCategory' | translate }}\"\r\n                        [(ngModel)]=\"filterObj.TrainingCategoryId\" name=\"filtertrainingCategoryVar\">\r\n                        <mat-option value=\"\">{{'GenericSelectTrainingCategory' | translate }}</mat-option>\r\n                        <mat-option *ngFor=\"let item of lstTrainingCategoryFilter\" value=\"{{item.Id}}\">\r\n                            {{item.Name}}</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n                <input type=\"submit\" value=\"{{'GenericSearch' | translate }}\" class=\"btn color-bg-02 white-text\"\r\n                    (click)=\"filterbtn()\">\r\n            </div>\r\n        </div>\r\n        <div class='row' *ngIf=\"!IsTrainee\">\r\n            <div class=\"col-sm-12 md-form pull-right mb-1\">\r\n                <input type=\"button\" class=\"pull-right btn color-bg-01 white-text\"\r\n                    value=\"{{'GenericCreateNew' | translate }}\" (click)=\"createBtn(content)\">\r\n                <input type=\"button\" class=\"pull-right btn color-bg-02 white-text Excel\"\r\n                    value=\"{{'ExportToExcel' | translate }}\" (click)=\"ExportBtn()\">\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"col-md-12\">\r\n            <div class='table-responsive '>\r\n                <table class='table' *ngIf='page.content && page.content.length'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>{{'GenericTrainer' | translate }} ({{'GenericPartner' | translate }})</th>\r\n                            <th>{{'GenericType' | translate }}({{'TrainingCategory' | translate }})</th>\r\n                            <th>{{'TrainingDates' | translate }}</th>\r\n                            <!-- <th *ngIf=\"!IsTrainee\">{{'CertificateApprove' | translate }}</th>\r\n                            <th *ngIf=\"!IsTrainee\">{{'TrainingConfirm' | translate }} 1</th> -->\r\n                            <th *ngIf=\"!IsTrainee\">{{'TrainingConfirm' | translate }} 2</th>\r\n                            <th>{{'GenericAction' | translate }}</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor='let obj of page.content'>\r\n                            <td>{{ obj.TrainerCount }} - {{obj.TrainerDetails.Name}} ({{ obj.PartnerId.Name}})</td>\r\n                            <td>{{ obj.TrainingTypeId.Name}}({{ obj.TrainingCategoryId.Name}})</td>\r\n                            <td>{{ obj.StartDate | date:'dd/MM/yyyy'}} -\r\n                                {{ obj.EndDate | date:'dd/MM/yyyy'}}</td>\r\n                            <td *ngIf=\"( !IsTrainee)  \">\r\n                                <mat-slide-toggle *ngIf=\"IsAdmin && !obj.IsConfirm2 && isCourseEnded(obj.EndDate)\"\r\n                                    (change)=\"onTrainingConfirm2(obj.Id)\" color=\"primary\"></mat-slide-toggle>\r\n                                <span><i *ngIf=\" obj.IsConfirm2\" class=\"fas fa-check\"></i></span>\r\n                            </td>\r\n                            <!-- <td *ngIf=\"( !IsTrainee)   \">\r\n                                <i *ngIf=\"obj.IsConfirm1\" class=\"fas fa-check\"></i>\r\n                            </td> -->\r\n                            <!-- <td *ngIf=\"( !IsTrainee)  \">\r\n                                <i *ngIf=\"obj.IsConfirm2\" class=\"fas fa-check\"></i>\r\n                            </td> -->\r\n                            <td *ngIf=\"!IsTrainee\">\r\n                                <a *ngIf=\"obj.CanEdit \" title=\"{{'GenericEdit' | translate }}\"\r\n                                    (click)=\"openBackDropCustomClass(content,obj)\"><i\r\n                                        title=\"{{'GenericEdit' | translate }}\" class=\"far fa-edit\"></i></a>\r\n                                <a *ngIf=\"!obj.CanEdit\" title=\"{{'GenericView' | translate }}\"\r\n                                    (click)=\"openViewOnly(contentViewOnly,obj)\"><i\r\n                                        title=\"{{'GenericView' | translate }}\" class=\"far fa-eye\"></i></a>\r\n                                <a *ngIf=\"IsAdmin || IsTrainer\" title=\"{{'TrainingTrainees' | translate }}\"\r\n                                    (click)=\"ListTrainees(obj.Id)\"><i title=\"{{'TrainingTrainees' | translate }}\"\r\n                                        class=\"fas fa-users\"></i></a>\r\n                                <a title=\"{{'TrainingAttendance' | translate }}\" (click)=\"Attendance(obj.Id)\"><i\r\n                                        title=\"{{'TrainingAttendance' | translate }}\"\r\n                                        class=\"fas fa-clipboard-list\"></i></a>\r\n                                <a *ngIf=\"IsAdmin\" title=\"{{'HeaderExamTemplates' | translate }}\"\r\n                                    (click)=\"openExamTemplate(contentExamTemplate, obj)\"><i\r\n                                        title=\"{{'HeaderExamTemplates' | translate }}\" class=\"fas fa-diagnoses\"></i></a>\r\n                                <a *ngIf=\"(IsAdmin || IsPartner ) && compareDate(obj.StartDate , todayDate) == 1\"\r\n                                    title=\"{{'GenericDeactivate' | translate }}\" (click)=\"setDeactivate(obj.Id)\"><i\r\n                                        title=\"{{'TrainingDelete' | translate }}\" class=\"fas fa-trash-alt\"></i></a>\r\n                            </td>\r\n                            <td *ngIf=\"IsTrainee\">\r\n                                <a title=\"{{'TrainingRegister' | translate }}\" (click)=\"Register(obj.Id)\"><i\r\n                                        title=\"{{'TrainingRegister' | translate }}\" class=\"far fa-registered\"></i></a>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <app-custom-pagination [page]=\"page\" (nextPageEvent)=\"getNextPage()\" (previousPageEvent)=\"getPreviousPage()\"\r\n                (loadPageCurrentEvent)=\"getloadPageCurrent()\">\r\n            </app-custom-pagination>\r\n        </div>\r\n    </div>\r\n    <div>\r\n        <ng-template role=\"dialog\" #content let-modal class=\"modal fade\">\r\n            <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n                <div class=\"modal-content\">\r\n                    <div class=\"modal-header color-bg-01 white-text text-center\">\r\n\r\n                        <h6 class=\"modal-title\">\r\n                            {{(modelIsCreate ? 'GenericCreate'   : 'GenericEditing') | translate}} :\r\n                            {{modelIsCreate ? (\"GenericNew\" | translate) : modelNameEdited}}\r\n                        </h6>\r\n                    </div>\r\n                    <div class=\"modal-body pt-0\">\r\n                        <form novalidate (ngSubmit)=\"modelSaveBtn(modelForm)\" #modelForm=\"ngForm\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-4\">\r\n                                    <mat-form-field>\r\n                                        <mat-label>{{'GenericPartner' | translate }}</mat-label>\r\n                                        <mat-select id=\"modelPartner\" [disabled]=\"modelIsStarted\"\r\n                                            placeholder=\"{{'GenericSelectPartner' | translate }}\" required\r\n                                            (selectionChange)=\"onPartnerSelect()\" [(ngModel)]=\"modelObj.PartnerId\"\r\n                                            name=\"modelPartnerVar\" #modelPartnerVar=\"ngModel\" name=\"modelPartner\"\r\n                                            [ngClass]=\"{'is-invalid': (modelPartnerVar.touched || modelPartnerVar.dirty) && !modelPartnerVar.valid }\">\r\n                                            <!-- <mat-option value=\"0\">{{'GenericSelectPartner' | translate }}</mat-option> -->\r\n                                            <mat-option *ngFor=\"let item of lstPartners\" value=\"{{item.Id}}\">\r\n                                                {{item.Name}}</mat-option>\r\n                                        </mat-select>\r\n                                        <mat-error *ngIf=\"modelPartnerVar.errors?.required\">\r\n                                            {{'GenericSelectPartnerError' | translate }}\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-sm-4\">\r\n                                    <mat-form-field>\r\n                                        <mat-label>{{'GenericSubPartner' | translate }}</mat-label>\r\n                                        <mat-select id=\"modelSubPartner\" placeholder=\"Select a SubPartner\" required [disabled]=\"modelIsStarted\"\r\n                                            (selectionChange)=\"onSubPartnerSelect()\" [(ngModel)]=\"modelObj.SubPartnerId\"\r\n                                            name=\"modelSubPartnerVar\" #modelSubPartnerVar=\"ngModel\"\r\n                                            name=\"modelSubPartner\"\r\n                                            [ngClass]=\"{'is-invalid': (modelSubPartnerVar.touched || modelSubPartnerVar.dirty) && !modelSubPartnerVar.valid }\">\r\n                                            <!-- <mat-option value=\"0\">{{'GenericSelectSubPartner' | translate }}\r\n                                            </mat-option> -->\r\n                                            <mat-option *ngFor=\"let item of lstSubPartners\" value=\"{{item.Id}}\">\r\n                                                {{item.Name}}</mat-option>\r\n                                        </mat-select>\r\n                                        <mat-error *ngIf=\"modelSubPartnerVar.errors?.required\">\r\n                                            {{'GenericSelectSubPartnerError' | translate }}\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-sm-4\">\r\n                                    <mat-form-field>\r\n                                        <mat-label>{{'GenericTrainer' | translate }}</mat-label>\r\n                                        <mat-select id=\"modelTrainer\" placeholder=\"{{'GenericTrainer' | translate }}\" [disabled]=\"modelIsStarted\"\r\n                                            required [(ngModel)]=\"modelObj.TrainerId\" name=\"modelTrainerVar\"\r\n                                            #modelTrainerVar=\"ngModel\" name=\"modelTrainer\"\r\n                                            [ngClass]=\"{'is-invalid': (modelTrainerVar.touched || modelTrainerVar.dirty) && !modelTrainerVar.valid }\">\r\n                                            <!-- <mat-option value=\"0\">Select a Trainer</mat-option> -->\r\n                                            <mat-option *ngFor=\"let item of lstTrainers\" value=\"{{item.Id}}\">\r\n                                                {{item.Name}}\r\n                                            </mat-option>\r\n                                        </mat-select>\r\n                                        <mat-error *ngIf=\"modelTrainerVar.errors?.required\">\r\n                                            {{'TrainingSelectTrainerError' | translate }}\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-4\">\r\n                                    <mat-form-field>\r\n                                        <mat-label>{{'GenericTrainingCenter' | translate }}</mat-label>\r\n                                        <mat-select id=\"modelTrainingCenter\" placeholder=\"Select a Training Center\" [disabled]=\"modelIsStarted\"\r\n                                            required [(ngModel)]=\"modelObj.TrainingCenterId\"\r\n                                            #modelTrainingCenterVar=\"ngModel\" name=\"modelTrainingCenter\"\r\n                                            [ngClass]=\"{'is-invalid': (modelTrainingCenterVar.touched || modelTrainingCenterVar.dirty) && !modelTrainingCenterVar.valid }\">\r\n                                            <!-- <mat-option value=\"0\">{{'TrainingTrainingCenter' | translate }}</mat-option> -->\r\n                                            <mat-option *ngFor=\"let item of lstTrainingCenters\" value=\"{{item.Id}}\">\r\n                                                {{item.Name}}</mat-option>\r\n                                        </mat-select>\r\n                                        <mat-error *ngIf=\"modelTrainingCenterVar.errors?.required\">\r\n                                            {{'TrainingTrainingCenterError' | translate }}</mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-sm-4\">\r\n                                    <mat-form-field>\r\n                                        <mat-label>{{'GenericTrainingType' | translate }}</mat-label>\r\n                                        <mat-select id=\"modelTrainingType\" placeholder=\"{{'TrainingType' | translate }}\"\r\n                                            required (selectionChange)=\"onTrainingTypeSelect()\"\r\n                                            [(ngModel)]=\"modelObj.TrainingTypeId\" name=\"modelTrainingTypeVar\"\r\n                                            #modelTrainingTypeVar=\"ngModel\"\r\n                                            [ngClass]=\"{'is-invalid': (modelTrainingTypeVar.touched || modelTrainingTypeVar.dirty) && !modelTrainingTypeVar.valid }\">\r\n                                            <!-- <mat-option value=\"0\">{{'GenericSelectTrainingType' | translate }}\r\n                                            </mat-option> -->\r\n                                            <mat-option *ngFor=\"let item of lstTrainingTypes\" value=\"{{item.Id}}\">\r\n                                                {{item.Name}}</mat-option>\r\n                                        </mat-select>\r\n                                        <mat-error *ngIf=\"modelTrainingTypeVar.errors?.required\">\r\n                                            {{'TrainingTypeError' | translate }}\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-sm-4\">\r\n                                    <mat-form-field>\r\n                                        <mat-label>{{'GenericTrainingCategory' | translate }}</mat-label>\r\n                                        <mat-select id=\"modeltrainingCategory\"\r\n                                            placeholder=\"{{'GenericSelectTrainingCategory' | translate }}\" required\r\n                                            [(ngModel)]=\"modelObj.TrainingCategoryId\" name=\"modeltrainingCategoryVar\"\r\n                                            #modeltrainingCategoryVar=\"ngModel\" name=\"modeltrainingCategory\"\r\n                                            [ngClass]=\"{'is-invalid': (modeltrainingCategoryVar.touched || modeltrainingCategoryVar.dirty) && !modeltrainingCategoryVar.valid }\">\r\n                                            <!-- <mat-option value=\"0\">{{'GenericSelectTrainingCategory' | translate }}\r\n                                            </mat-option> -->\r\n                                            <mat-option *ngFor=\"let item of lstTrainingCategory\" value=\"{{item.Id}}\">\r\n                                                {{item.Name}}</mat-option>\r\n                                        </mat-select>\r\n                                        <mat-error *ngIf=\"modeltrainingCategoryVar.errors?.required\">\r\n                                            {{'TrainingCategoryError' | translate }}\r\n                                        </mat-error>\r\n                                    </mat-form-field><br>\r\n                                    <mat-hint class=\"matHintTraining\">\r\n                                        <span *ngFor=\"let item of getCourses()\">{{item.Name}}, </span>\r\n                                    </mat-hint>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-4\">\r\n                                    <mat-form-field>\r\n                                        <mat-label>{{'GenericType' | translate }}</mat-label>\r\n                                        <mat-select id=\"modelType\" placeholder=\"{{'AccountSelectType' | translate }}\"\r\n                                            required [(ngModel)]=\"modelObj.Type\" name=\"modelTypeVar\" [disabled]=\"modelIsStarted\"\r\n                                            #modelTypeVar=\"ngModel\" name=\"modelType\"\r\n                                            [ngClass]=\"{'is-invalid': (modelTypeVar.touched || modelTypeVar.dirty) && !modelTypeVar.valid }\">\r\n                                            <mat-option value=\"1\">{{'TrainingPublic' | translate }}</mat-option>\r\n                                            <mat-option value=\"2\">{{'TrainingPrivate' | translate }}</mat-option>\r\n                                        </mat-select>\r\n                                        <mat-error *ngIf=\"modelTypeVar.errors?.required\">\r\n                                            {{'TrainingSelectTypeError' | translate }}</mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-sm-4\">\r\n                                    <mat-form-field>\r\n                                        <mat-label>{{'GenericCity' | translate }}</mat-label>\r\n                                        <mat-select id=\"modelCity\" placeholder=\"{{'AccountSelectCity' | translate }}\"\r\n                                            required [(ngModel)]=\"modelObj.CityId\" name=\"modelCityVar\" [disabled]=\"modelIsStarted\"\r\n                                            (selectionChange)=\"OnCitySelect()\" #modelCityVar=\"ngModel\" name=\"modelCity\"\r\n                                            [ngClass]=\"{'is-invalid': (modelCityVar.touched || modelCityVar.dirty) && !modelCityVar.valid }\">\r\n                                            <!-- <mat-option value=\"0\">Select a City</mat-option> -->\r\n                                            <mat-option *ngFor=\"let item of lstCity\" value=\"{{item.Id}}\">\r\n                                                {{item.Name}}</mat-option>\r\n                                        </mat-select>\r\n                                        <mat-error *ngIf=\"modelCityVar.errors?.required\">\r\n                                            {{'AccountSelectCityError' | translate }}\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-sm-4\">\r\n                                    <mat-form-field>\r\n                                        <mat-label>{{'TrainingArea' | translate }}</mat-label>\r\n                                        <mat-select id=\"modelArea\" placeholder=\"Select a Area\" required [disabled]=\"modelIsStarted\"\r\n                                            [(ngModel)]=\"modelObj.AreaId\" name=\"filterTypeId\" #modelAreaVar=\"ngModel\"\r\n                                            name=\"modelArea\"\r\n                                            [ngClass]=\"{'is-invalid': (modelAreaVar.touched || modelAreaVar.dirty) && !modelAreaVar.valid }\">\r\n                                            <!-- <mat-option value=\"0\">{{'TrainingAreaSelect' | translate }}</mat-option> -->\r\n                                            <mat-option *ngFor=\"let item of lstAreas\" value=\"{{item.Id}}\">\r\n                                                {{item.Name}}</mat-option>\r\n                                        </mat-select>\r\n                                        <mat-error *ngIf=\"modelAreaVar.errors?.required\">\r\n                                            {{'TrainingAreaSelectError' | translate }}\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-4\">\r\n                                    <mat-form-field class=\"example-full-width\">\r\n                                        <mat-label>{{'TrainingStart' | translate }}</mat-label>\r\n                                        <input matInput [owlDateTime]=\"dt1\" [min]=\"todayDate\" required [disabled]=\"modelIsStarted\"\r\n                                            id=\"modelStartDateId\" type=\"text\"\r\n                                            placeholder=\"{{'TrainingStartSelect' | translate }}\" required\r\n                                            [(ngModel)]=\"modelObj.StartDate\" #modelStartDateVar=\"ngModel\"\r\n                                            name=\"modelStartDate\" (ngModelChange)=\"onStartDateSelect($event)\"\r\n                                            [ngClass]=\"{'is-invalid': (modelStartDateVar.touched || modelStartDateVar.dirty) && !modelStartDateVar.valid }\" />\r\n                                        <mat-error *ngIf=\"modelStartDateVar.errors?.required\">\r\n                                            {{'TrainingStartError' | translate }}\r\n                                        </mat-error>\r\n                                        <mat-icon matSuffix [owlDateTimeTrigger]=\"dt1\"><i class=\"fa fa-calendar\"></i>\r\n                                        </mat-icon>\r\n                                    </mat-form-field>\r\n                                    <owl-date-time #dt1></owl-date-time>\r\n                                </div>\r\n                                <div class=\"col-sm-4\">\r\n                                    <mat-form-field class=\"example-full-width\">\r\n                                        <mat-label>{{'TrainingEnd' | translate }}</mat-label>\r\n                                        <input matInput [owlDateTime]=\"dt2\" [min]=\"todayDate\" required [disabled]=\"modelIsStarted\"\r\n                                            id=\"modelEndDateId\" type=\"text\"\r\n                                            placeholder=\"{{'TrainingEndSelect' | translate }}\" required\r\n                                            (ngModelChange)=\"onEndDateSelect($event)\" [(ngModel)]=\"modelObj.EndDate\"\r\n                                            #modelEndDateVar=\"ngModel\" name=\"modelEndDate\"\r\n                                            [ngClass]=\"{'is-invalid': (modelEndDateVar.touched || modelEndDateVar.dirty) && !modelEndDateVar.valid }\" />\r\n                                        <mat-error *ngIf=\"modelEndDateVar.errors?.required\">\r\n                                            {{'TrainingEndError' | translate }}</mat-error>\r\n                                        <mat-icon matSuffix [owlDateTimeTrigger]=\"dt2\"><i class=\"fa fa-calendar\"></i>\r\n                                        </mat-icon>\r\n                                    </mat-form-field>\r\n                                    <owl-date-time #dt2></owl-date-time>\r\n                                    <mat-error class=\"MatError\" *ngIf=\"!IsDatesCorrect\">\r\n                                        {{'TrainingDateError' | translate }}</mat-error>\r\n                                </div>\r\n                                <div class=\"col-sm-4\">\r\n                                    <mat-form-field>\r\n                                        <mat-label>{{'TrainingDays' | translate }}</mat-label>\r\n                                        <mat-select multiple id=\"modelDays\" [disabled]=\"modelIsStarted\"\r\n                                            placeholder=\"{{'TrainingDaysSelect' | translate }}\" required\r\n                                            [(ngModel)]=\"modelObj.days\" name=\"modelDaysVar\" #modelDaysVar=\"ngModel\"\r\n                                            name=\"modelDays\"\r\n                                            [ngClass]=\"{'is-invalid': (modelDaysVar.touched || modelDaysVar.dirty) && !modelDaysVar.valid }\">\r\n                                            <!-- <mat-option value=\"0\">{{'TrainingDaysSelect' | translate }}</mat-option> -->\r\n                                            <mat-option value=\"1\">{{'TrainingSunday' | translate }}</mat-option>\r\n                                            <mat-option value=\"2\">{{'TrainingMonday' | translate }}</mat-option>\r\n                                            <mat-option value=\"3\">{{'TrainingTuesday' | translate }}</mat-option>\r\n                                            <mat-option value=\"4\">{{'TrainingWednesday' | translate }}</mat-option>\r\n                                            <mat-option value=\"5\">{{'TrainingThursday' | translate }}</mat-option>\r\n                                            <mat-option value=\"6\">{{'TrainingFriday' | translate }}</mat-option>\r\n                                            <mat-option value=\"7\">{{'TrainingSaturday' | translate }}</mat-option>\r\n                                        </mat-select>\r\n                                        <mat-error *ngIf=\"modelDaysVar.errors?.required\">\r\n                                            {{'TrainingDaysError' | translate }}\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-12\">\r\n                                    <div class=\"form-group \">\r\n                                        <span class=\"pr-3\">{{'TrainingIsOnline' | translate }}:</span>\r\n                                        <input type=\"radio\" [checked]=\"modelObj.IsOnline\" name=\"TrainingIsOnline\" [disabled]=\"modelIsStarted\"\r\n                                            (change)=\"onLocationChange($event,'1')\"\r\n                                            class=\"mr-2\" />{{'TrainingOnline' | translate }}\r\n                                        <input type=\"radio\" [checked]=\"!modelObj.IsOnline\" name=\"TrainingIsOnline\" [disabled]=\"modelIsStarted\"\r\n                                            (change)=\"onLocationChange($event,'0')\"\r\n                                            class=\"mr-2 ml-4\" />{{'TrainingOffline' | translate }}\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"form-group pull-right md-form\">\r\n                                <button class=\"btn color-bg-01 btn-sm white-text\" type=\"submit\" style=\"width:80px\"\r\n                                    [disabled]=\"!modelForm.valid || !IsDatesCorrect\">{{'GenericSave' | translate }}</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                    <div class=\"modal-footer\">\r\n                        <button type=\"button\" class=\"btn color-bg-02 btn-sm white-text\"\r\n                            (click)=\"modal.close('Close click')\">{{'GenericClose' | translate }}</button>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </ng-template>\r\n    </div>\r\n    <div>\r\n        <ng-template role=\"dialog\" #contentViewOnly let-modal class=\"modal fade\">\r\n            <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n                <div class=\"modal-content\">\r\n                    <div class=\"modal-header color-bg-01 white-text text-center\">\r\n\r\n                        <h6 class=\"modal-title\">\r\n                            {{(modelIsCreate ? 'GenericCreate'   : 'GenericEditing') | translate}} :\r\n                            {{modelIsCreate ? (\"GenericNew\" | translate) : modelNameEdited}}\r\n                        </h6>\r\n                    </div>\r\n                    <div class=\"modal-body pt-0\">\r\n\r\n                        <form novalidate (ngSubmit)=\"modelSaveBtn(modelForm)\" #modelForm=\"ngForm\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-4\">\r\n                                    <mat-label class=\"font-weight-bold\">{{'GenericPartner' | translate }}: </mat-label>\r\n                                    <mat-label class=\"view\">{{modelObj.PartnerId}}</mat-label>\r\n                                </div>\r\n                                <div class=\"col-sm-4\">\r\n                                    <mat-label class=\"font-weight-bold\">{{'GenericSubPartner' | translate }}:\r\n                                    </mat-label>\r\n                                    <mat-label class=\"view\">{{modelObj.SubPartnerId}}</mat-label>\r\n                                </div>\r\n                                <div class=\"col-sm-4\">\r\n                                    <mat-label class=\"font-weight-bold\">{{'GenericTrainer' | translate }}: </mat-label>\r\n                                    <mat-label class=\"view\">{{modelObj.TrainerId}}</mat-label>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-4\">\r\n                                    <mat-label class=\"font-weight-bold\">{{'GenericTrainingCenter' | translate }}:\r\n                                    </mat-label>\r\n                                    <mat-label class=\"view\">{{modelObj.TrainingCenterId}}</mat-label>\r\n                                </div>\r\n                                <div class=\"col-sm-4\">\r\n                                    <mat-label class=\"font-weight-bold\">{{'GenericTrainingType' | translate }}:\r\n                                    </mat-label>\r\n                                    <mat-label class=\"view\">{{modelObj.TrainingTypeId}}</mat-label>\r\n                                </div>\r\n                                <div class=\"col-sm-4\">\r\n                                    <mat-label class=\"font-weight-bold\">{{'GenericTrainingCategory' | translate }}:\r\n                                    </mat-label>\r\n                                    <mat-label class=\"view\">{{modelObj.TrainingCategoryId}}</mat-label><br>\r\n                                    <div class=\"viewHint\">\r\n                                        <span *ngFor=\"let item of lstCourses\">{{item.Name}}, </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-4\">\r\n\r\n                                    <mat-label class=\"font-weight-bold\">{{'GenericType' | translate }}: </mat-label>\r\n                                    <mat-label class=\"view\" *ngIf=\"modelObj.Type == '1'\">\r\n                                        {{'TrainingPublic' | translate }}</mat-label>\r\n                                    <mat-label class=\"view\" *ngIf=\"modelObj.Type == '2'\">\r\n                                        {{'TrainingPrivate' | translate }}</mat-label>\r\n                                </div>\r\n                                <div class=\"col-sm-4\">\r\n                                    <mat-label class=\"font-weight-bold\">{{'GenericCity' | translate }}: </mat-label>\r\n                                    <mat-label class=\"view\">{{modelObj.CityId}}</mat-label>\r\n                                </div>\r\n                                <div class=\"col-sm-4\">\r\n                                    <mat-label class=\"font-weight-bold\">{{'TrainingArea' | translate }}: </mat-label>\r\n                                    <mat-label class=\"view\">{{modelObj.AreaId}}</mat-label>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-4\">\r\n                                    <mat-label class=\"font-weight-bold\">{{'TrainingStart' | translate }}: </mat-label>\r\n                                    <mat-label class=\"view\">{{ modelObj.StartDate | date:\"dd/MM/yyyy\" }}</mat-label>\r\n                                </div>\r\n                                <div class=\"col-sm-4\">\r\n                                    <mat-label class=\"font-weight-bold\">{{'TrainingEnd' | translate }}: </mat-label>\r\n                                    <mat-label class=\"view\">{{ modelObj.EndDate | date:\"dd/MM/yyyy\" }}</mat-label>\r\n                                </div>\r\n                                <div class=\"col-sm-4\">\r\n                                    <mat-label class=\"font-weight-bold\">{{'TrainingDays' | translate }}: </mat-label>\r\n                                    <mat-label class=\"view\" *ngIf=\"modelObj.days.includes('1')\">\r\n                                        {{'TrainingSunday' | translate }}, </mat-label>\r\n                                    <mat-label class=\"view\" *ngIf=\"modelObj.days.includes('2')\">\r\n                                        {{'TrainingMonday' | translate }}, </mat-label>\r\n                                    <mat-label class=\"view\" *ngIf=\"modelObj.days.includes('3')\">\r\n                                        {{'TrainingTuesday' | translate }}, </mat-label>\r\n                                    <mat-label class=\"view\" *ngIf=\"modelObj.days.includes('4')\">\r\n                                        {{'TrainingWednesday' | translate }}, </mat-label>\r\n                                    <mat-label class=\"view\" *ngIf=\"modelObj.days.includes('5')\">\r\n                                        {{'TrainingThursday' | translate }}, </mat-label>\r\n                                    <mat-label class=\"view\" *ngIf=\"modelObj.days.includes('6')\">\r\n                                        {{'TrainingFriday' | translate }}, </mat-label>\r\n                                    <mat-label class=\"view\" *ngIf=\"modelObj.days.includes('7')\">\r\n                                        {{'TrainingSaturday' | translate }}, </mat-label>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-12\">\r\n                                    <mat-label class=\"font-weight-bold\">{{'TrainingIsOnline' | translate }}:\r\n                                    </mat-label>\r\n                                    <mat-label class=\"view\" *ngIf=\"modelObj.IsOnline\">{{'TrainingOnline' | translate }}\r\n                                    </mat-label>\r\n                                    <mat-label class=\"view\" *ngIf=\"!modelObj.IsOnline\">\r\n                                        {{'TrainingOffline' | translate }}</mat-label>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                    <div class=\"modal-footer\">\r\n                        <button type=\"button\" class=\"btn color-bg-02 btn-sm white-text\"\r\n                            (click)=\"modal.close('Close click')\">{{'GenericClose' | translate }}</button>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </ng-template>\r\n    </div>\r\n    <div>\r\n        <ng-template role=\"dialog\" #contentExamTemplate let-modal class=\"modal fade\">\r\n            <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n                <div class=\"modal-content\">\r\n                    <div class=\"modal-header color-bg-01 white-text text-center\">\r\n\r\n                        <h6 class=\"modal-title\">\r\n                            {{'HeaderExamTemplates' | translate }}\r\n                        </h6>\r\n                    </div>\r\n                    <div class=\"modal-body pt-0\">\r\n\r\n                        <form novalidate (ngSubmit)=\"SaveExamTemplate(modelForm)\" #modelForm=\"ngForm\">\r\n                            <div class=\"form-group \">\r\n                                <mat-form-field>\r\n                                    <mat-label>{{'HeaderExamTemplates' | translate }}</mat-label>\r\n                                    <mat-select id=\"modelExamTemplate\"\r\n                                        placeholder=\"{{'TrainingExamTemplateSelect' | translate }}\" required\r\n                                        [(ngModel)]=\"modelExamTemplate.SubEntityId\" name=\"modelExamTemplateVar\"\r\n                                        #modelExamTemplateVar=\"ngModel\" name=\"modelExamTemplate\"\r\n                                        [ngClass]=\"{'is-invalid': (modelExamTemplateVar.touched || modelExamTemplateVar.dirty) && !modelExamTemplateVar.valid }\">\r\n                                        <mat-option value=\"0\">{{'TrainingExamTemplateSelect' | translate }}</mat-option>\r\n                                        <mat-option *ngFor=\"let item of lstExamTemplate\" value=\"{{item._id}}\">\r\n                                            {{item.Name}}</mat-option>\r\n                                    </mat-select>\r\n                                    <mat-error *ngIf=\"modelExamTemplateVar.errors?.required\">\r\n                                        {{'TrainingExamTemplateSelectError' | translate }}\r\n                                    </mat-error>\r\n                                </mat-form-field>\r\n                            </div>\r\n                            <div class=\"form-group pull-right md-form\">\r\n                                <button class=\"btn color-bg-01 btn-sm white-text btnSave\" type=\"submit\"\r\n                                    [disabled]=\"!modelForm.valid\">{{'GenericSave' | translate }}</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                    <div class=\"modal-footer\">\r\n\r\n                        <button type=\"button\" class=\"btn color-bg-02 btn-sm white-text\"\r\n                            (click)=\"modal.close('Close click')\">{{'GenericClose' | translate }}</button>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </ng-template>\r\n    </div>\r\n</section>","import { NgModule } from '@angular/core';\r\nimport { SharedModule } from '../common/sharedmodule.module';\r\nimport { RouterModule } from '@angular/router';\r\nimport { TrainingListComponent } from './training-list/training-list.component';\r\nimport { TraineeListComponent } from './trainee-list/trainee-list.component';\r\nimport { AttendanceComponent } from './attendance/attendance.component';\r\nimport { MyTrainingsComponent } from './my-trainings/my-trainings.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TrainingListComponent,\r\n    TraineeListComponent,\r\n    AttendanceComponent,\r\n    MyTrainingsComponent\r\n  ],\r\n  imports: [\r\n    SharedModule,\r\n   \r\n    RouterModule.forChild([\r\n      { path: 'Training/List', component: TrainingListComponent},\r\n      { path: 'Training/Trainees/:Id', component: TraineeListComponent},\r\n      { path: 'Training/Attendance/:Id', component: AttendanceComponent}\r\n    ])\r\n  ]\r\n})\r\nexport class TrainingModule { }\r\n","; import { Component, OnInit } from '@angular/core';\nimport { TranslateList } from 'src/app/interface/Response/TranslateList.classl';\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\nimport { ServiceTranslateList } from 'src/app/services/translate-list.service';\nimport { TranslateType } from 'src/app/Enum/TranslateType.enum';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Constants } from 'src/app/constants';\nimport { ModelTranslateList } from 'src/app/interface/Model/ModelTranslateList.class';\n\n@Component({\n  selector: 'app-translate-list',\n  templateUrl: './translate-list.component.html',\n  styleUrls: ['./translate-list.component.css']\n})\nexport class TranslateListComponent extends baseComponent implements OnInit {\n\n  lstData: TranslateList;\n  modelObj: ModelTranslateList = new ModelTranslateList();\n  title: string;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private BLServiceTranslate: ServiceTranslateList,\n    BLServiceShowMessage: ServiceShowMessage,\n    BLTranslate: TranslateService,\n    BLServiceLoginUser: ServiceLoginUser) {\n    super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\n  }\n\n  ngOnInit(): void {\n    \n    const paramType = this.route.snapshot.paramMap.get('Type');\n    const paramId = this.route.snapshot.paramMap.get('Id');\n    if (paramId) {\n      this.modelObj.Id = paramId\n    }\n    if (paramType) {\n      this.modelObj.Type = +paramType;\n      this.loadData();\n      this.loadTitle();\n    }\n  }\n  loadTitle() {\n    switch (this.modelObj.Type) {\n      case TranslateType.City:\n        this.BLTranslate.get(\"GenericCity\").subscribe(res => { this.title = res; });\n        break;\n      case TranslateType.Area:\n        this.BLTranslate.get(\"TrainingArea\").subscribe(res => { this.title = res; });\n        break;\n      case TranslateType.TrainingCategory:\n        this.BLTranslate.get(\"GenericTrainingCategory\").subscribe(res => { this.title = res; });\n        break;\n      case TranslateType.TrainingType:\n        this.BLTranslate.get(\"GenericTrainingType\").subscribe(res => { this.title = res; });\n        break;\n      case TranslateType.Courses:\n        this.BLTranslate.get(\"CoursesTitle\").subscribe(res => { this.title = res; });\n        break;\n    }\n  }\n  private loadData(): void {\n    this.BLServiceTranslate.ListTranslationByType(this.modelObj).subscribe({\n      next: lst => {\n        this.lstData = lst;\n      },\n      error: err => this.message.Error(err)\n    });\n  }\n  modelSaveBtn() {\n    this.BLServiceTranslate.SaveListTranslation(this.lstData).subscribe({\n      next: response => {\n        this.message.Success(this.msgSavedSuccessfully);\n        this.BLServiceShowMessage.sendMessage(this.message);\n        this.OnRedrirectBack();\n      },\n      error: err => this.message.Error(err)\n    });\n  }\n  OnRedrirectBack() {\n    switch (this.modelObj.Type) {\n      case TranslateType.City:\n        this.router.navigate(['/DataManagement/City']);\n        break;\n      case TranslateType.Area:\n        this.router.navigate(['/DataManagement/Area/' + this.modelObj.Id]);\n        break;\n      case TranslateType.TrainingCategory:\n        this.router.navigate(['/DataManagement/TrainingCategory']);\n        break;\n      case TranslateType.TrainingType:\n        this.router.navigate(['/DataManagement/TrainingType']);\n        break;\n      case TranslateType.Courses:\n        this.router.navigate(['/DataManagement/Course/' + this.modelObj.Id]);\n        break;\n    }\n  }\n}\n","<section class=\"my-5\">\n  <div class=\"container\">\n    <div class='row'>\n      <h4 class=\"mb-4\">{{title }}</h4>\n    </div>\n    <div class=\"col-md-12\" *ngIf='lstData?.Data.length > 0'>\n      <div class='table-responsive'>\n        <table class='table'>\n          <thead>\n            <tr>\n              <th>English</th>\n              <th>عربى</th>\n              <th *ngIf=\"false\">Française</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor='let obj of lstData.Data; let i = index '>\n              <td>{{ obj.Name}}</td>\n              <td>\n                <input type=\"text\" id=\"Name2{{i}}\" [(ngModel)]=\"lstData.Data[i].Name2\" #modelName2Var=\"ngModel\"\n                  name=\"modelName2\">\n              </td>\n              <td *ngIf=\"false\">\n                <input type=\"text\" id=\"Name3{{i}}\" [(ngModel)]=\"lstData.Data[i].Name3\" #modelName3Var=\"ngModel\"\n                  name=\"modelName3\">\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class=\"form-group pull-right md-form\">\n        <button class=\"btn color-bg-grey btn-sm btn-default white-text\" type=\"submit\"\n          (click)=\"OnRedrirectBack()\">{{'GenericCancel' | translate }}</button>\n        <button class=\"btn color-bg-01 btn-sm white-text btnSave\" type=\"submit\"\n          (click)=\"modelSaveBtn()\">{{'GenericSave' | translate }}</button>\n      </div>\n    </div>\n    <div class=\"\" *ngIf=\"lstData?.Data.length  == 0\">\n      <div class=\"text-center bg-red noresult\">\n        <span class=\"font-italic\">{{'PageNoResult' | translate }} </span><span>&#9785;</span>\n      </div>\n    </div>\n  </div>\n</section>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nimport { AdminRouteGuard } from '../core/admin-route-guard';\r\n\r\nconst routes: Routes = [\r\n  // { path: 'admin', component: ManageProjectsComponent,\r\n  //     canActivate: [AdminRouteGuard] },\r\n  // { path: 'admin/manage-permissions/:projectId', component: ManagePermissionsComponent,\r\n  //     canActivate: [AdminRouteGuard] }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AdminRoutingModule { }\r\n\r\n// export const routedComponents = [ManageProjectsComponent];","import { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport {\r\n  MatButtonModule,\r\n  MatDialogModule,\r\n  MatFormFieldModule,\r\n  MatInputModule,\r\n  MatSelectModule,\r\n  MatTableModule,\r\n  MatToolbarModule,\r\n} from '@angular/material';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AdminRoutingModule } from './admin-routing.module';\r\nimport { CoreModule } from '../core/core.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    MatFormFieldModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatToolbarModule,\r\n    MatTableModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    AdminRoutingModule,\r\n    CoreModule\r\n  ],\r\n  exports: [],\r\n  declarations: [\r\n  \r\n  ],\r\n  providers: [],\r\n  entryComponents: [\r\n\r\n  ]\r\n})\r\nexport class AdminModule {}\r\n"," import { NgModule, MissingTranslationStrategy } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ContactUsComponent } from './home/contact-us.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { SigninRedirectCallbackComponent } from './home/signin-redirect-callback.component';\r\nimport { SignoutRedirectCallbackComponent } from './home/signout-redirect-callback.component';\r\nimport { UnauthorizedComponent } from './home/unauthorized.component';\r\nimport { ListComponent } from './Questions/list/list.component';\r\nimport { CreateComponent } from './Questions/create/create.component';\r\nimport { TakeExamComponent } from './Exam/take-exam/take-exam.component';\r\nimport { TermsComponent } from './home/terms/terms.component';\r\nimport { PolicyComponent } from './Home/policy/policy.component';\r\nimport { AboutComponent } from './Home/about/about.component';\r\nimport { ConfigTraineeComponent } from './config/config-trainee/config-trainee.component';\r\nimport { GenericsComponent } from './Certificates/generics/generics.component';\r\nimport { CategoryComponent } from './Certificates/category/category.component';\r\nimport { CertificateTrainingCenterComponent } from './Certificates/trainingcenter/trainingcenter.component';\r\nimport { MyTrainingsComponent } from './Training/my-trainings/my-trainings.component';\r\nimport { RegisterComponent } from './Request/register/register.component';\r\nimport { ConfigRequestRegisterComponent } from './config/config-request-register/config-request-register.component';\r\nimport { AboutEditComponent } from './Content/about-edit/about-edit.component';\r\nimport { AddTraineeComponent } from './common/add-trainee/add-trainee.component';\r\nimport { TrainerApprovalComponent } from './Certificates/trainer-approval/trainer-approval.component';\r\nimport { InfoEditComponent } from './Content/info-edit/info-edit.component';\r\nimport { PolicyEditComponent } from './Content/policy-edit/policy-edit.component';\r\nimport { TermEditComponent } from './Content/term-edit/term-edit.component';\r\nimport { TemplatesComponent } from './Exam/templates/templates.component';\r\nimport { TranslateListComponent } from './Translate/translate-list/translate-list.component';\r\nimport { TrainerCertificateComponent } from './Account/trainer-certificate/trainer-certificate.component';\r\nimport { SiteLogoComponent } from './Content/site-logo/site-logo.component';\r\nimport { PartnerLogoComponent } from './Content/partner-logo/partner-logo.component';\r\nimport { TraineeRouteGuard } from './core/admin-route-guard';\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: HomeComponent, data:{PageName:\"home\"} },\r\n    { path: 'home/:msg/:isSuccess', component: HomeComponent, data:{PageName:\"home\"} },\r\n    { path: 'RequestRegister', component: RegisterComponent , data:{PageName:\"home\"}},\r\n    { path: 'Translate/:Type/:Id', component: TranslateListComponent },\r\n    { path: 'MyTraining', component: MyTrainingsComponent },\r\n    { path: 'MyProfile', component: AddTraineeComponent },\r\n    { path: 'TrainerCertificate/:Id', component: TrainerCertificateComponent },\r\n    { path: 'MyTraining/:Id', component: MyTrainingsComponent },\r\n    { path: 'Trainee/Register', component: AddTraineeComponent, data:{PageName:\"home\", PageType:\"register\"} },\r\n    { path: 'Trainee/Create/:IsCreate/:TraineeId/:TrainingId', component: AddTraineeComponent },\r\n    { path: 'Content/PortalLogo', component: SiteLogoComponent },\r\n    { path: 'Content/PartnerLogo', component: PartnerLogoComponent },\r\n    { path: 'About/Edit', component: AboutEditComponent },\r\n    { path: 'Term/Edit', component: TermEditComponent },\r\n    { path: 'Policy/Edit', component: PolicyEditComponent },\r\n    { path: 'Info/Edit', component: InfoEditComponent },\r\n    { path: 'About', component: AboutComponent , data:{PageName:\"home\"}},\r\n    { path: 'Questions/List', component: ListComponent },\r\n    { path: 'Questions/Create/:Id', component: CreateComponent },\r\n    { path: 'Exam/Templates', component: TemplatesComponent },\r\n    { path: 'Exam/List', component: TakeExamComponent },\r\n    { path: 'Exam/TakeExam/:Id', component: TakeExamComponent },\r\n    { path: 'contact-us', component: ContactUsComponent, data:{PageName:\"home\"} },\r\n    { path: 'Terms', component: TermsComponent, data:{PageName:\"home\"} },\r\n    { path: 'Policy', component: PolicyComponent, data:{PageName:\"home\"} },\r\n    { path: 'Certificate/TranierApproval', component: TrainerApprovalComponent },\r\n    { path: 'Certificate/Generics', component: GenericsComponent },\r\n    { path: 'Certificate/Category', component: CategoryComponent },\r\n    { path: 'Certificate/TrainingCenter', component: CertificateTrainingCenterComponent },\r\n    { path: 'ConfigTrainee', component:ConfigTraineeComponent},\r\n    { path: 'ConfigRequestRegister', component:ConfigRequestRegisterComponent},\r\n    { path: 'signin-callback', component: SigninRedirectCallbackComponent },\r\n    { path: 'signout-callback', component: SignoutRedirectCallbackComponent },\r\n    { path: 'unauthorized', component: UnauthorizedComponent },\r\n    \r\n  \r\n    \r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { AfterViewChecked, Component, OnInit } from '@angular/core';\r\nimport { AuthService } from './core/auth-service.component';\r\nimport { ServiceShowMessage } from './services/show-message.service';\r\nimport { EnumShowMessage } from './interface/Model/ModelShowMessage.class';\r\nimport { ServiceLoginUser } from './services/loginuser.service';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { filter, map, mergeMap } from 'rxjs/operators';\r\nimport { ActivatedRoute, Router, NavigationEnd } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TryCatchStmt } from '@angular/compiler';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: []\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n  msgClass: string = '';\r\n  msgText: string = '';\r\n\r\n  userName: string;\r\n  userRole: string;\r\n  isLoggedIn = false;\r\n  isAdmin: boolean = false;\r\n  isPartner: boolean = false;\r\n  isCurrentPageHome: boolean = false;\r\n  IsAppear:boolean = true;\r\n  isLoggedInMYadd:boolean=false\r\n\r\n  lang: string = 'ar';\r\n  cssExt: string = '';\r\n\r\n  constructor(private _authService: AuthService,\r\n    private BLServiceShowMessage: ServiceShowMessage,\r\n    private BLServiceLoginUser: ServiceLoginUser,\r\n    BLTranslate: TranslateService,\r\n    private _snackBar: MatSnackBar,\r\n    private router: Router, private route: ActivatedRoute) {\r\n\r\n    var url = localStorage.getItem('URL');\r\n    if (url && url != null && url != \"null\") {\r\n      localStorage.setItem('URL', null);\r\n      this.router.navigate([this.router.url]);\r\n    }\r\n\r\n    this._authService.CheckLogin();\r\n    this.lang = localStorage.getItem('lang') ? localStorage.getItem('lang') : \"ar\";\r\n    if (this.lang == 'ar')\r\n      this.cssExt = 'ar'\r\n    else\r\n      this.cssExt = '';\r\n\r\n    this.BLServiceShowMessage.msgChanged.subscribe(msg => {\r\n      this.msgText = msg.message;\r\n      this.msgClass = msg.type == EnumShowMessage.Success ? 'snackbar-success' : 'snackbar-error';\r\n      this._snackBar.open(this.msgText, null, {\r\n        duration: 3000,\r\n        panelClass: [this.msgClass]\r\n      });\r\n    });\r\n    this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n      map(() => this.route),\r\n      map(route => {\r\n        while (route.firstChild) route = route.firstChild\r\n        return route\r\n      }),\r\n      filter(route => route.outlet === 'primary'),\r\n      mergeMap(route => route.data)\r\n    ).subscribe(data => {\r\n      this.isCurrentPageHome = data.PageName === 'home';\r\n    })\r\n\r\n     this.InitData();  \r\n    //  this._authService.loginChanged.subscribe(loggedIn => {\r\n    //    this.isLoggedIn = loggedIn;\r\n    //  });\r\n    //  this._authService.authContextChanged.subscribe(obj => {\r\n    //   this.AuthContext = obj;\r\n    // });\r\n    this.BLServiceLoginUser.UserRoleChanged.subscribe(obj => {\r\n      this.userRole = obj;\r\n    });\r\n    this.BLServiceLoginUser.UserNameChanged.subscribe(obj => {\r\n      this.userName = obj;\r\n    });\r\n    this.BLServiceLoginUser.UserIsAdminChanged.subscribe(obj => {\r\n      this.isAdmin = obj;\r\n    });\r\n    this.BLServiceLoginUser.UserIsPartnerChanged.subscribe(obj => {\r\n      this.isPartner = obj;\r\n    });\r\n  }\r\n\r\n  async InitData() {\r\n    var GetIsLoggedInFunction = () => {\r\n      var self = this;\r\n        return new Promise((resolve, reject) => {\r\n            self.BLServiceLoginUser.UserIsLoggedInChanged.subscribe(obj => {\r\n              resolve(obj);\r\n            });  \r\n            setTimeout(() => \r\n            {\r\n                this.IsAppear = false;\r\n            },\r\n            2000);\r\n          //resolve(self.BLServiceLoginUser.isLoggedIn);  \r\n        });\r\n     \r\n    }\r\n    var GetIsHomeFunction = () => {\r\n      var self = this;\r\n      return new Promise((resolve) => {\r\n        self.router.events.pipe(\r\n          filter(event => event instanceof NavigationEnd),\r\n          map(() => this.route),\r\n          map(route => {\r\n            while (route.firstChild) route = route.firstChild\r\n            return route\r\n          }),\r\n          filter(route => route.outlet === 'primary'),\r\n          mergeMap(route => route.data)\r\n        ).subscribe(data => {\r\n          resolve(data.PageName);\r\n        });\r\n\r\n      });\r\n    }\r\n\r\n\r\n\r\n    var Islogged = await GetIsLoggedInFunction();\r\n   // var HomeVal = await GetIsHomeFunction();\r\n    //console.log(HomeVal);\r\n    this.isLoggedIn = <any>Islogged;\r\n    //this.isCurrentPageHome = HomeVal === 'home';\r\n  }\r\n  ngAfterContentInit()\t\r\n  {\r\n    setTimeout(() => {\r\n      this.isLoggedInMYadd = true;\r\n    }, 7000);\r\n  }\r\n  ngOnInit() {\r\n    this.BLServiceLoginUser.UserIsLoggedInChanged.subscribe(obj => {\r\n      this.isLoggedIn = obj;\r\n    });\r\n  }\r\n  \r\n  //  isAdmin() {\r\n  //    //return this.isLoggedIn && this._authService.authContext && this._authService.authContext.isAdmin;\r\n  //    this.isAdmin\r\n  //  }\r\n\r\n}\r\n","<link rel=\"stylesheet\" href=\"/assets/css/custom.css\" *ngIf=\"cssExt != 'ar'\"/>\r\n<link rel=\"stylesheet\" href=\"/assets/css/style.css\" *ngIf=\"cssExt != 'ar'\"/> \r\n\r\n<link rel=\"stylesheet\" href=\"/assets/css/customAR.css\" *ngIf=\"cssExt == 'ar'\"/>\r\n<link rel=\"stylesheet\" href=\"/assets/css/styleAR.css\" *ngIf=\"cssExt == 'ar'\"/> \r\n\r\n\r\n<div class=\"fullscreen\" *ngIf=\"IsAppear\">\r\n\r\n</div>\r\n<app-header></app-header>\r\n<nav>\r\n    <!-- <mat-toolbar color=\"primary\">\r\n        <a href=\"/\">\r\n            <span>\r\n                <img src=\"/assets/images/Globo_logo.png\" alt=\"Globomantics\" title=\"Globomantics\" class=\"globo-logo\">\r\n            </span>\r\n        </a>\r\n        <span class=\"navbar-fill\">\r\n            <div *ngIf=\"isLoggedIn\">\r\n                <button *ngIf=\"isAdmin\" mat-button routerLink=\"/DataManagement/TrainingType\">Training Type</button>\r\n                <button *ngIf=\"isAdmin\" mat-button routerLink=\"/DataManagement/TrainingCategory\">Training\r\n                    Category</button>\r\n                <button *ngIf=\"isAdmin\" mat-button routerLink=\"/DataManagement/City\">City</button>\r\n                <button *ngIf=\"isAdmin\" mat-button routerLink=\"/DataManagement/NGOType\">NGO Type</button>\r\n                <button *ngIf=\"isAdmin || isPartner\" mat-button routerLink=\"/EntityManagement/Partner\">Partner</button>\r\n                <button *ngIf=\"isAdmin || isPartner\" mat-button routerLink=\"/EntityManagement/SubPartner\">Sub\r\n                    Partner</button>\r\n                <button *ngIf=\"isAdmin || isPartner\" mat-button routerLink=\"/Account/Account\">Accounts</button>\r\n                <button mat-button routerLink=\"/Test/Test\">Test</button>\r\n            </div>\r\n        </span>\r\n        <span>\r\n            \r\n        </span>\r\n    </mat-toolbar> -->\r\n</nav>\r\n<main>\r\n   \r\n    <div  *ngIf=\"isLoggedInMYadd\"> \r\n        <div *ngIf=\"!isLoggedIn && !isCurrentPageHome\" class=\"ScreenLock bubbleContainer\">\r\n            <div class=\"messageBubble ssfLocationPopup\">\r\n                <div class=\"messageContainer\">\r\n                    <p>{{'SessionExpored' | translate }}</p>\r\n                    <p>{{'LoginFirst' | translate }}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    <router-outlet></router-outlet>\r\n</main>\r\n\r\n<app-footer></app-footer>\r\n\r\n","import { HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatSnackBarModule, MatMenuModule, MatToolbarModule, MatButtonModule, MatTableModule, MatInputModule, MatSelectModule, MatFormFieldModule, MatIconModule, MatRadioModule, MatCheckboxModule, MatExpansionModule, MatDialogModule } from '@angular/material';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AdminModule } from './admin/admin.module';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { CoreModule } from './core/core.module';\r\nimport { ContactUsComponent } from './home/contact-us.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { SigninRedirectCallbackComponent } from './home/signin-redirect-callback.component';\r\nimport { SignoutRedirectCallbackComponent } from './home/signout-redirect-callback.component';\r\nimport { UnauthorizedComponent } from './home/unauthorized.component';\r\nimport { DataManagementModule } from './DataManagement/data-management.module';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { EntityManagementModule } from './EntityManagement/entity-management.module';\r\nimport { AccountModule } from './Account/account.module';\r\nimport { TestModule } from './ztest/test/test.module';\r\nimport { HeaderComponent } from './common/header/header.component';\r\nimport { FooterComponent } from './common/footer/footer.component';\r\nimport { TrainingModule } from './Training/training.module';\r\nimport { ListComponent } from './Questions/list/list.component';\r\nimport { CreateComponent } from './Questions/create/create.component';\r\nimport { TakeExamComponent } from './Exam/take-exam/take-exam.component';\r\nimport { CountdownModule } from 'ngx-countdown';\r\nimport { TermsComponent } from './home/terms/terms.component';\r\nimport { PolicyComponent } from './Home/policy/policy.component';\r\nimport { AboutComponent } from './Home/about/about.component';\r\nimport { ConfigTraineeComponent } from './config/config-trainee/config-trainee.component';\r\nimport { SharedModule } from './common/sharedmodule.module';\r\nimport { CreateFormComponent } from './common/ConfigForms/AdminConfig/create-form/create-form.component';\r\nimport { DynamicFieldDirective } from './common/ConfigForms/components/dynamic-field/dynamic-field.directive';\r\nimport { DynamicFormComponent } from './common/ConfigForms/components/dynamic-form/dynamic-form.component';\r\nimport { GenericsComponent } from './Certificates/generics/generics.component';\r\nimport { CategoryComponent } from './Certificates/category/category.component';\r\nimport { CertificateTrainingCenterComponent } from './Certificates/trainingcenter/trainingcenter.component';\r\nimport { RegisterComponent } from './Request/register/register.component';\r\nimport { ConfigRequestRegisterComponent } from './config/config-request-register/config-request-register.component';\r\nimport { AboutEditComponent } from './Content/about-edit/about-edit.component';\r\nimport { TrainerApprovalComponent } from './Certificates/trainer-approval/trainer-approval.component';\r\n\r\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { TermEditComponent } from './Content/term-edit/term-edit.component';\r\nimport { PolicyEditComponent } from './Content/policy-edit/policy-edit.component';\r\nimport { InfoEditComponent } from './Content/info-edit/info-edit.component';\r\nimport { TemplatesComponent } from './Exam/templates/templates.component';\r\nimport { TranslateListComponent } from './Translate/translate-list/translate-list.component';\nimport { SiteLogoComponent } from './Content/site-logo/site-logo.component';\nimport { PartnerLogoComponent } from './Content/partner-logo/partner-logo.component';\nimport { VerifyComponent } from './Certificates/verify/verify.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    ContactUsComponent,\r\n    SigninRedirectCallbackComponent,\r\n    SignoutRedirectCallbackComponent,\r\n    UnauthorizedComponent,\r\n    HeaderComponent,\r\n    FooterComponent,\r\n    ListComponent,\r\n    CreateComponent,\r\n    TakeExamComponent,\r\n    TermsComponent,\r\n    PolicyComponent,\r\n    AboutComponent,\r\n    ConfigTraineeComponent,\r\n    GenericsComponent,\r\n    CategoryComponent,\r\n    CertificateTrainingCenterComponent,\r\n    RegisterComponent,\r\n    ConfigRequestRegisterComponent,\r\n    AboutEditComponent,\r\n    TrainerApprovalComponent,\r\n    TermEditComponent,\r\n    PolicyEditComponent,\r\n    InfoEditComponent,\r\n    TemplatesComponent,\r\n    TranslateListComponent,\r\n    SiteLogoComponent,\r\n    PartnerLogoComponent,\r\n    VerifyComponent,\r\n  ],\r\n  imports: [\r\n    SharedModule,\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    MatSnackBarModule,\r\n    MatMenuModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatTableModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatFormFieldModule,\r\n    MatIconModule,\r\n    MatRadioModule,\r\n    MatCheckboxModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    AdminModule,\r\n    CoreModule,\r\n    AppRoutingModule,\r\n    NgbModule,\r\n    DataManagementModule,\r\n    EntityManagementModule,\r\n    AccountModule,\r\n    TrainingModule,\r\n    TestModule,\r\n    CountdownModule,\r\n    MatButtonModule,\r\n    MatDialogModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatTableModule,\r\n    MatToolbarModule\r\n  ],\r\n  providers: [\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [\r\n    //AddEditMilestoneDialogComponent\r\n    HomeComponent\r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class AppModule { }\r\n\r\n","import { Component, OnInit, ViewChild, AfterViewChecked, Input } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormArray, MaxLengthValidator } from '@angular/forms';\r\nimport { DynamicFormComponent } from '../../components/dynamic-form/dynamic-form.component';\r\nimport { FieldConfig, Validator } from '../../field.interface';\r\nimport { ServiceConfigForm } from 'src/app/services/config-form.service';\r\nimport { ModelConfigForm, ModelFieldConfig } from 'src/app/interface/Model/ModelConfigForm.class';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { ConfigForm } from 'src/app/Enum/ConfigForm.enum';\r\nimport { ConfirmationDialogService } from 'src/app/common/confirmation-dialog/confirmation-dialog.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-create-form',\r\n  templateUrl: './create-form.component.html',\r\n  styleUrls: ['./create-form.component.css']\r\n})\r\nexport class CreateFormComponent extends baseComponent implements OnInit {\r\n\r\n  @ViewChild(DynamicFormComponent) form: DynamicFormComponent;\r\n  regConfig: FieldConfig[] = [\r\n    {\r\n      type: \"button\",\r\n      label: \"Save\",\r\n      order: 100,\r\n      IsRequired: false\r\n    }\r\n  ];\r\n\r\n  @Input() pageTitle: string = 'Config Form Fields';\r\n  @Input() formType: ConfigForm = 0;\r\n\r\n  adminForm: FormGroup;\r\n  get FormInputs(): FormArray {\r\n    return <FormArray>this.adminForm.get('FormInputs');\r\n  }\r\n  get options(): FormArray {\r\n    return <FormArray>this.adminForm.get('options');\r\n  }\r\n\r\n  constructor(private fb: FormBuilder,\r\n    protected BLService: ServiceConfigForm,\r\n    private confirmationDialogService: ConfirmationDialogService,\r\n    BLServiceShowMessage: ServiceShowMessage,\r\n    BLCompanyLoginUser: ServiceLoginUser, BLTranslate: TranslateService,) {\r\n    super(BLServiceShowMessage, BLCompanyLoginUser, BLTranslate);\r\n  }\r\n  InitDynamicForm() {\r\n    this.BLService.GetByType(this.formType).subscribe({\r\n      next: lst => {\r\n        this.regConfig = <FieldConfig[]>[];\r\n        if (lst.length > 0) {\r\n          this.FormInputs.removeAt(0);\r\n        }\r\n\r\n        lst.forEach(item => {\r\n\r\n          var obj = new FieldConfig();\r\n\r\n          obj.inputType = item.inputType;\r\n          obj.label = item.label;\r\n          obj.name = item.name;\r\n          obj.options = item.options;\r\n          obj.order = item.order;\r\n          obj.type = item.type;\r\n          obj.IsRequired = item.IsRequired;\r\n          if (obj.IsRequired)\r\n            obj.validations.push(new Validator(item.label));\r\n\r\n          this.regConfig.push(obj);\r\n\r\n          var ctl = this.fb.group({\r\n            Order: [item.order, [Validators.required, Validators.max(100), Validators.min(0)]],\r\n            Label: [item.label, [Validators.required, Validators.maxLength(50)]],\r\n            Name: [item.name, [Validators.required, Validators.maxLength(50)]],\r\n            Type: [item.type, [Validators.required]],\r\n            InputType: [item.inputType],\r\n            options: this.fb.array([]),\r\n            IsRequired: item.IsRequired,\r\n          });\r\n          var opt = <FormArray>ctl.controls[\"options\"];\r\n          item.options.forEach(obj => {\r\n            var yy = obj[\"option\"];\r\n            var xx = this.buildoptions(yy);\r\n            opt.push(xx)\r\n          });\r\n          this.FormInputs.push(ctl);\r\n        });\r\n        this.form.fields = this.regConfig;\r\n        this.form.createControl();\r\n\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n\r\n  }\r\n  ngOnInit() {\r\n    this.adminForm = this.fb.group({\r\n      FormInputs: this.fb.array([this.buildFormInputs()])\r\n    });\r\n    this.InitDynamicForm();\r\n  }\r\n\r\n  addFormInputs() {\r\n    this.ConvertToForm();\r\n    this.FormInputs.push(this.buildFormInputs());\r\n  }\r\n  removeFormInputs(idx) {\r\n    this.confirmationDialogService.confirm(this.msgsetRemove)\r\n      .then((confirmed) => {\r\n        if (!confirmed)\r\n          return;\r\n        if (this.FormInputs.controls.length > 1) {\r\n          this.FormInputs.removeAt(idx);\r\n        }\r\n        this.ConvertToForm();\r\n      });\r\n  }\r\n\r\n  buildFormInputs() {\r\n    return this.fb.group({\r\n      Order: ['', [Validators.required, Validators.max(100), Validators.min(0)]],\r\n      Label: ['', [Validators.required, Validators.maxLength(50)]],\r\n      Name: ['', [Validators.required, Validators.maxLength(50)]],\r\n      Type: ['', [Validators.required]],\r\n      InputType: ['text'],\r\n      options: this.fb.array([]),\r\n      IsRequired: true,\r\n    });\r\n  }\r\n  onTypeChange(obj) {\r\n    if (obj.get('Type').value == 'select' || obj.get('Type').value == 'selectmulti') {\r\n      if (obj.get('options').controls.length == 0) {\r\n        obj.get('options').push(this.buildoptions());\r\n      }\r\n    }\r\n  }\r\n  buildoptions(value: string = '') {\r\n    return this.fb.group({\r\n      option: [value, [Validators.required]]\r\n    });\r\n  }\r\n  addOption(idx: number) {\r\n    //this.options.push(this.buildoptions());\r\n    const control = <FormArray>this.adminForm.get(['FormInputs', idx, 'options']);\r\n    control.push(this.buildoptions());\r\n  }\r\n  getoptions(idx: number) {\r\n    const opt = <FormArray>this.adminForm.get(['FormInputs', idx, 'options']);\r\n    return opt?.controls;\r\n  }\r\n  ConvertToForm() {\r\n\r\n    this.regConfig = <FieldConfig[]>[];\r\n    // [{\r\n    //   type: \"button\",\r\n    //   label: \"Save\",\r\n    //   order: 100\r\n    // }];\r\n    var frm = <FormArray>this.adminForm.get(['FormInputs']);\r\n\r\n    frm.controls.forEach(element => {\r\n      var ctl = new FieldConfig();\r\n\r\n      ctl.order = element.get('Order').value;\r\n      ctl.name = element.get('Name').value;\r\n      ctl.label = element.get('Label').value;\r\n      ctl.type = element.get('Type').value;\r\n      ctl.inputType = element.get('InputType').value;\r\n      ctl.IsRequired = element.get('IsRequired').value;\r\n\r\n      if (ctl.type == 'select' || ctl.type == 'selectmulti')\r\n        ctl.options = element.get('options').value;\r\n\r\n\r\n      ctl.validations.push(new Validator(ctl.label));\r\n\r\n      this.regConfig.push(ctl);\r\n    });\r\n\r\n    if (this.regConfig.length > 1) {\r\n      this.regConfig = this.regConfig.sort((obj1, obj2) => {\r\n        if (obj1.order > obj2.order) {\r\n          return 1;\r\n        }\r\n\r\n        if (obj1.order < obj2.order) {\r\n          return -1;\r\n        }\r\n\r\n        return 0;\r\n      });\r\n    }\r\n    this.form.fields = this.regConfig;\r\n    this.form.createControl();\r\n  }\r\n  Save(adminForm) {\r\n    this.ConvertToForm();\r\n    if (!adminForm.valid)\r\n      return;\r\n    debugger;\r\n    var model = new ModelConfigForm();\r\n    model.FormType = this.formType;\r\n    model.Form = <ModelFieldConfig[]>[];\r\n    this.regConfig.forEach(item => {\r\n\r\n      var obj = new ModelFieldConfig();\r\n\r\n      obj.inputType = item.inputType;\r\n      obj.label = item.label;\r\n      obj.name = item.name;\r\n      obj.options = item.options;\r\n      obj.order = item.order;\r\n      obj.type = item.type;\r\n      obj.validations = true;\r\n      obj.IsRequired = item.IsRequired;\r\n\r\n      model.Form.push(obj);\r\n    });\r\n    this.BLService.Update(model).subscribe({\r\n      next: response => {\r\n        this.message.Success(this.msgSavedSuccessfully);\r\n        this.BLServiceShowMessage.sendMessage(this.message);\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n  }\r\n}\r\n","<section class=\"mt-50 shadow-sm p-  bg-white rounded\">\r\n  <div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12 col-lg-12 mb25\">\r\n        <h4 class=\"fz20\">\r\n          {{'ConfigFormFields' | translate }}\r\n        </h4>\r\n      </div>\r\n      <br>\r\n      <div class=\"col-lg-6 col-xl-6\">\r\n        <form novalidate [formGroup]=\"adminForm\">\r\n          <div class=\"col-xl-12 mb5\">\r\n            <button (click)=\"addFormInputs()\" class=\"btn btn-primary \" [disabled]=\"!adminForm.valid\">{{'ConfigAddFormInput' | translate }}</button>\r\n            <button (click)=\"ConvertToForm()\" class=\"btn btn-success pull-right\"\r\n              [disabled]=\"!adminForm.valid\">{{'ConfigPreview' | translate }}</button>\r\n          </div>\r\n          <div formArrayName=\"FormInputs\" *ngFor=\"let obj of FormInputs?.controls; let k = index;\" class=\"col-xl-12\">\r\n            <div [formGroupName]=\"k\" class=\"formAdminGroup\">\r\n              <mat-accordion>\r\n                <mat-expansion-panel [expanded]=\"true\">\r\n                  <mat-expansion-panel-header>\r\n                    <mat-panel-title>\r\n                      {{'ConfigOrder' | translate }}: {{obj.get('Order')?.value}} - {{'ConfigLabel' | translate }}: {{obj.get('Label')?.value}}\r\n                    </mat-panel-title>\r\n                    <mat-panel-description>\r\n                      {{'GenericName' | translate }}: {{obj.get('Name')?.value}}\r\n                    </mat-panel-description>\r\n                  </mat-expansion-panel-header>\r\n\r\n                  <div>\r\n                    <mat-form-field class=\"example-full-width\">\r\n                      <mat-label>{{'ConfigOrder' | translate }}</mat-label>\r\n                      <input matInput type=\"number\" pattern=\"^[1-9][0-9]?$|^100$\" formControlName=\"Order\" placeholder=\"{{'ConfigEnterOrder' | translate }}\" value=\"\">\r\n                      <mat-error *ngIf=\"obj.get('Order')?.errors?.required\">{{'ConfigEnterOrder' | translate }}</mat-error>\r\n                      <mat-error *ngIf=\"obj.get('Order')?.errors?.max || obj.get('Order')?.errors?.min\">{{'ConfigOrderError' | translate }}</mat-error>\r\n                        <mat-error *ngIf=\"obj.get('Order')?.errors?.pattern\">{{'ConfigOrderError1' | translate }}</mat-error>\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <br>\r\n                  <div>\r\n                    <mat-form-field class=\"example-full-width\">\r\n                      <mat-label>{{'ConfigLabel' | translate }}</mat-label>\r\n                      <input matInput formControlName=\"Label\" placeholder=\"{{'ConfigEnterLabel' | translate }}\" value=\"\">\r\n                      <mat-error *ngIf=\"obj.get('Label')?.errors?.required\">{{'ConfigEnterLabel' | translate }}</mat-error>\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <br>\r\n                  <div>\r\n                    <mat-form-field class=\"example-full-width\">\r\n                      <mat-label>{{'GenericName' | translate }}</mat-label>\r\n                      <input matInput formControlName=\"Name\" placeholder=\"{{'ConfigEnterName' | translate }}\"\r\n                        oninput=\"this.value = this.value.replace(' ','')\">\r\n                      <mat-error *ngIf=\"obj.get('Name')?.errors?.required\">{{'GenericEnterName' | translate }}</mat-error>\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <br>\r\n                  <div>\r\n                    <mat-form-field>\r\n                      <mat-label>{{'ConfigType' | translate }}</mat-label>\r\n                      <mat-select formControlName=\"Type\" (selectionChange)=\"onTypeChange(obj)\">\r\n                        <mat-option [value]=\"'input'\">{{'ConfigTextBox' | translate }}</mat-option>\r\n                        <mat-option [value]=\"'select'\">{{'ConfigDropdown' | translate }}</mat-option>\r\n                         <!--<mat-option [value]=\"'selectmulti'\">Dropdown Multiple Select</mat-option>\r\n                        <mat-option [value]=\"'checkbox'\">Check Box</mat-option>\r\n                        <mat-option [value]=\"'radiobutton'\">Radio button</mat-option>\r\n                        <mat-option [value]=\"'date'\">Date Picker</mat-option> -->\r\n                      </mat-select>\r\n                      <mat-error *ngIf=\"obj.get('Type')?.errors?.required\">{{'ConfigTypeError' | translate }}</mat-error>\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <br>\r\n                  <div *ngIf=\"obj.get('Type').value == 'input'\">\r\n                    <mat-form-field>\r\n                      <mat-label>{{'ConfigInputType' | translate }}</mat-label>\r\n                      <mat-select formControlName=\"InputType\">\r\n                        <mat-option [value]=\"'text'\">{{'ConfigText' | translate }}</mat-option>\r\n                        <mat-option [value]=\"'number'\">{{'ConfigNumbers' | translate }}</mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <div *ngIf=\"obj.get('Type').value == 'select' || obj.get('Type').value == 'selectmulti'\">\r\n                    <div>\r\n                      <button class=\"btn color-bg-01 btn-sm white-text\" (click)=\"addOption(k)\">{{'ConfigAdd' | translate }}</button>\r\n                    </div>\r\n                    <div formArrayName=\"options\" *ngFor=\"let item of getoptions(k); let i = index;\">\r\n                      <div [formGroupName]=\"i\">\r\n                        <mat-form-field class=\"example-full-width\">\r\n                          <mat-label>{{'ConfigOption' | translate }}</mat-label>\r\n                          <input  matInput formControlName=\"option\" placeholder=\"{{'ConfigEnterOption' | translate }}\">\r\n                        \r\n                        </mat-form-field>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <br>\r\n                  <div>\r\n                    <mat-checkbox formControlName=\"IsRequired\">is Required</mat-checkbox> \r\n                    <button *ngIf=\" FormInputs?.controls.length > 1\" (click)=\"removeFormInputs(k)\"\r\n                      class=\"btn btn-danger pull-right\">{{'ConfigRemove' | translate }}</button>\r\n                  </div>\r\n                </mat-expansion-panel>\r\n              </mat-accordion>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-xl-12 mt5\">\r\n            <button (click)=\"addFormInputs()\" class=\"btn btn-primary \" [disabled]=\"!adminForm.valid\">{{'ConfigAddFormInput' | translate }}</button>\r\n            <button (click)=\"ConvertToForm()\" class=\"btn btn-success pull-right\"\r\n              [disabled]=\"!adminForm.valid\">{{'ConfigPreview' | translate }}</button>\r\n          </div>\r\n          <!-- <div>\r\n            {{adminForm.value | json}}\r\n          </div>-->\r\n        </form>\r\n      </div>\r\n      <div class=\"col-lg-6 col-xl-6\">\r\n        <div class=\"mb5\">\r\n          <h4>{{'ConfigPreviewform' | translate }}</h4>\r\n        </div>\r\n        <div class=\"formAdminView\">\r\n          <!-- <dynamic-form [fields]=\"regConfig\"> -->\r\n          <dynamic-form>\r\n          </dynamic-form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n<section class=\" shadow-sm p-3 mb-5 bg-white rounded\">\r\n  <div class=\"container\">\r\n    <div class=\"row align-items-center\">\r\n      <button class=\"btn color-bg-02 btn-sm white-text btnsave\" (click)=\"Save(adminForm)\"\r\n        [disabled]=\"!adminForm.valid\">{{'GenericSave' | translate }} </button>\r\n    </div>\r\n  </div>\r\n</section>","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { FieldConfig } from \"../../field.interface\";\r\n@Component({\r\n  selector: \"app-select\",\r\n  template: `\r\n<mat-form-field class=\"demo-full-width margin-top\" [formGroup]=\"group\">\r\n<mat-select placeholder=\"{{field.label}} *\" [formControlName]=\"field.name\" multiple>\r\n<mat-option *ngFor=\"let item of field.options\" [value]=\"item.option\">{{item.option}}</mat-option>\r\n</mat-select>\r\n<ng-container *ngFor=\"let validation of field.validations;\" ngProjectAs=\"mat-error\">\r\n<mat-error *ngIf=\"group.get(field.name).errors?.required\">Please select {{field.label}}.</mat-error>\r\n</ng-container>\r\n</mat-form-field>\r\n`,\r\n  styles: []\r\n})\r\nexport class SelectMultiComponent implements OnInit {\r\n  field: FieldConfig;\r\n  group: FormGroup;\r\n  constructor() {}\r\n  ngOnInit() {}\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { FieldConfig } from \"../../field.interface\";\r\n@Component({\r\n  selector: \"app-button\",\r\n  template: `\r\n<div class=\"demo-full-width margin-top\" [formGroup]=\"group\">\r\n<button type=\"submit\" [disabled]=\"!group.valid\" mat-raised-button color=\"primary\">{{field.label}}</button>\r\n</div>\r\n`,\r\n  styles: []\r\n})\r\nexport class ButtonComponent implements OnInit {\r\n  field: FieldConfig;\r\n  group: FormGroup;\r\n  constructor() {}\r\n  ngOnInit() {}\r\n}\r\n","import {\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  Directive,\r\n  Input,\r\n  OnInit,\r\n  ViewContainerRef\r\n} from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { FieldConfig } from \"../../field.interface\";\r\nimport { InputComponent } from \"../input/input.component\";\r\nimport { ButtonComponent } from \"../button/button.component\";\r\nimport { SelectComponent } from \"../select/select.component\";\r\n\r\nimport { SelectMultiComponent } from '../SelectMulti/selectmulti.component';\r\n\r\nconst componentMapper = {\r\n  input: InputComponent,\r\n  button: ButtonComponent,\r\n  select: SelectComponent,\r\n  selectmulti: SelectMultiComponent};\r\n@Directive({\r\n  selector: \"[dynamicField]\"\r\n})\r\nexport class DynamicFieldDirective implements OnInit {\r\n  @Input() field: FieldConfig;\r\n  @Input() group: FormGroup;\r\n  componentRef: any;\r\n  constructor(\r\n    private resolver: ComponentFactoryResolver,\r\n    private container: ViewContainerRef\r\n  ) {}\r\n  ngOnInit() {\r\n    const factory = this.resolver.resolveComponentFactory(\r\n      componentMapper[this.field.type]\r\n    );\r\n    this.componentRef = this.container.createComponent(factory);\r\n    this.componentRef.instance.field = this.field;\r\n    this.componentRef.instance.group = this.group;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  Output,\r\n  ChangeDetectorRef\r\n} from \"@angular/core\";\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  FormControl\r\n} from \"@angular/forms\";\r\nimport { FieldConfig, Validator } from \"../../field.interface\";\r\n\r\n@Component({\r\n  exportAs: \"dynamicForm\",\r\n  selector: \"dynamic-form\",\r\n  template: `\r\n <form class=\"dynamic-form\" [formGroup]=\"form\" (submit)=\"onSubmit($event)\"> \r\n    <ng-container *ngFor=\"let field of fields;\" dynamicField [field]=\"field\" [group]=\"form\" >\r\n    </ng-container>\r\n  </form> \r\n  `,\r\n  styles: []\r\n})\r\nexport class DynamicFormComponent implements OnInit {\r\n  @Input() fields: FieldConfig[] = [];\r\n\r\n  @Output() submit: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  form: FormGroup;\r\n\r\n  get valid() {\r\n    return this.form.valid;\r\n  }\r\n\r\n  get value() {\r\n    return this.form.value;\r\n  }\r\n \r\n  constructor(private fb: FormBuilder,\r\n    private ref: ChangeDetectorRef) { }\r\n\r\n  ngOnInit() {\r\n    this.createControl();\r\n  }\r\n\r\n  onSubmit(event: Event) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    if (this.form.valid) {\r\n      this.submit.emit(this.form.value);\r\n    } else {\r\n      this.validateAllFormFields(this.form);\r\n    }\r\n  }\r\n\r\n  createControl() {\r\n    const group = this.fb.group({});\r\n    this.fields.forEach(field => {\r\n      if (field.type === \"button\") return;\r\n      const control = this.fb.control(\r\n        field.value,\r\n        this.bindValidations(field.validations || [])\r\n      );\r\n      group.addControl(field.name, control);\r\n    });\r\n    this.form = group;\r\n  }\r\n\r\n  bindValidations(validations: any) {\r\n    if (validations.length > 0) {\r\n      const validList = [];\r\n      validations.forEach(valid => {\r\n        validList.push(valid.validator);\r\n      });\r\n      return Validators.compose(validList);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  validateAllFormFields(formGroup: FormGroup) {\r\n    Object.keys(formGroup.controls).forEach(field => {\r\n      const control = formGroup.get(field);\r\n      control.markAsTouched({ onlySelf: true });\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { FieldConfig } from \"../../field.interface\";\r\n\r\n@Component({\r\n  selector: \"app-input\",\r\n  template: `\r\n<mat-form-field class=\"demo-full-width\" [formGroup]=\"group\">\r\n<input matInput [formControlName]=\"field.name\" [id]=\"field.name\" [name]=\"field.name\" placeholder=\"{{field.IsRequired ? field.label + ' *' : field.label}}\" [type]=\"field.inputType\">\r\n<ng-container *ngFor=\"let validation of field.validations;\" ngProjectAs=\"mat-error\">\r\n<mat-error *ngIf=\"group.get(field.name)?.errors?.required\">{{'ConfigPleaseenter' | translate }}  {{field.label}}.</mat-error>\r\n</ng-container>\r\n</mat-form-field>\r\n`,\r\n  styles: []\r\n})\r\nexport class InputComponent implements OnInit {\r\n  field: FieldConfig;\r\n  group: FormGroup;\r\n  constructor() {}\r\n  ngOnInit() {}\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { FieldConfig } from \"../../field.interface\";\r\n@Component({\r\n  selector: \"app-select\",\r\n  template: `\r\n<mat-form-field class=\"demo-full-width margin-top\" [formGroup]=\"group\">\r\n<mat-select placeholder=\"{{field.IsRequired ? field.label + ' *' : field.label}}\" [formControlName]=\"field.name\" >\r\n<mat-option *ngFor=\"let item of field.options\" [value]=\"item.option\">{{item.option}}</mat-option>\r\n</mat-select>\r\n<ng-container *ngFor=\"let validation of field.validations;\" ngProjectAs=\"mat-error\">\r\n<mat-error *ngIf=\"group.get(field.name).errors?.required\">{{'ConfigPleaseselect' | translate }}  {{field.label}}.</mat-error>\r\n</ng-container>\r\n</mat-form-field>\r\n`,\r\n  styles: []\r\n})\r\nexport class SelectComponent implements OnInit {\r\n  field: FieldConfig;\r\n  group: FormGroup;\r\n  constructor() {}\r\n  ngOnInit() {}\r\n}\r\n","import { Validators } from \"@angular/forms\";\r\n\r\nexport class Validator {\r\n  constructor(strName:string)\r\n  {\r\n    this.name = strName;\r\n    this.validator = Validators.required;\r\n    this.message = \"Please enter \" + strName + \".\";\r\n  }\r\n  name: string;\r\n  validator: Validators;\r\n  message: string;\r\n}\r\nexport class FieldConfig {\r\n  constructor(){\r\n    this.validations = <Validator[]>[];\r\n  }\r\n  order?: number;\r\n  label?: string;\r\n  name?: string;\r\n  inputType?: string;\r\n  options?: options[];\r\n  collections?: any;\r\n  type: string;\r\n  value?: any;\r\n  IsRequired:boolean;\r\n  validations?: Validator[];\r\n  \r\n}\r\nexport class options{\r\n  option: string;\r\n}\r\n","import { Component, OnInit, Output, Input, EventEmitter } from '@angular/core';\r\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead/public_api';\r\n\r\n@Component({\r\n  selector: 'cust-auto-compelet-list-generic',\r\n  templateUrl: './auto-compelet-list-generic.component.html',\r\n  styleUrls: ['./auto-compelet-list-generic.component.scss']\r\n})\r\nexport class AutoCompeletListGenericComponent implements OnInit {\r\n \r\n  @Output() OnSelectedItem : EventEmitter<string> = new EventEmitter<string>();\r\n  @Input() lstTrainingCenters: any[];\r\n\r\n  search: string;\r\n  noResult: boolean = false;\r\n  errorMessage: string;\r\n  selectedOption: any;\r\n  typeaheadLoading: boolean;\r\n  constructor() { }\r\n  ngOnInit(){}\r\n  onSelect(event: TypeaheadMatch): void {\r\n    this.selectedOption = event.item.Id;\r\n    this.OnSelectedItem.emit(event.item.Id);\r\n  }\r\n  changeTypeaheadLoading(e: boolean): void {\r\n    this.typeaheadLoading = e;\r\n  }\r\n  typeaheadNoResults(event: boolean): void {\r\n    this.noResult = event;\r\n  }\r\n\r\n}\r\n","<div class=\"form-group\">\r\n    <input [(ngModel)]=\"search\" typeaheadOptionField=\"Name\" [typeahead]=\"lstTrainingCenters\"\r\n        [typeaheadItemTemplate]=\"customItemTemplate\" class=\"form-control\" placeholder=\"{{'FromsControlSearch' | translate }}\"\r\n        [typeaheadMinLength]=\"3\" [isAnimated]=\"true\" (typeaheadOnSelect)=\"onSelect($event)\" (typeaheadNoResults)=\"typeaheadNoResults($event)\"\r\n        (typeaheadLoading)=\"changeTypeaheadLoading($event)\">\r\n\r\n    <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"errorMessage\">\r\n        {{ errorMessage }}\r\n    </div>\r\n    <ng-template #customItemTemplate let-model=\"item\">\r\n        <span>{{model.Name}}</span>\r\n    </ng-template>\r\n    <div *ngIf=\"typeaheadLoading\">\r\n        <app-atom-spinner [animationDuration]=\"1000\" [size]=\"60\" [color]=\"'#ff1d5e'\"></app-atom-spinner>\r\n    </div>\r\n    <div class=\"alert alert-danger\" *ngIf=\"noResult\">{{'PageNoResult' | translate }}</div>\r\n</div>\r\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead/public_api';\r\nimport { tap, switchMap } from 'rxjs/operators';\r\nimport { noop, of, Observable, Observer } from 'rxjs';\r\nimport { ServiceEntityManagement } from 'src/app/services/entitymanagement.service';\r\nimport { cEntityPartnerItem } from 'src/app/interface/Response/EntityPartner.class';\r\n\r\n@Component({\r\n  selector: 'cust-search-partner-entity',\r\n  templateUrl: './search-partner-entity.component.html',\r\n  styleUrls: ['./search-partner-entity.component.css']\r\n})\r\nexport class SearchPartnerEntityComponent implements OnInit {\r\n\r\n \r\n  @Output() OnSelectedPartner : EventEmitter<string> = new EventEmitter<string>();\r\n  \r\n  noResult: boolean = false;\r\n  search: string;\r\n  suggestions$: Observable<cEntityPartnerItem[]>;\r\n  errorMessage: string;\r\n  selectedOption: any;\r\n  typeaheadLoading: boolean;\r\n  constructor(private BLServiceEntity: ServiceEntityManagement) { }\r\n  ngOnInit(): void {\r\n    this.suggestions$ = new Observable((observer: Observer<string>) => {\r\n      observer.next(this.search);\r\n    }).pipe(\r\n      switchMap((query: string) => {\r\n        if (query) {\r\n          return this.BLServiceEntity.getEntityPartnerListActive(query).pipe(\r\n            tap(() => noop, err => {\r\n              // in case of http error\r\n              this.errorMessage = err && err.message || 'Something goes wrong';\r\n            }));\r\n        }\r\n\r\n        return of([]);\r\n      })\r\n    );\r\n  }\r\n  typeaheadNoResults(event: boolean): void {\r\n    this.noResult = event;\r\n  }\r\n  onSelect(event: TypeaheadMatch): void {\r\n    this.selectedOption = event.item.Id;\r\n    this.OnSelectedPartner.emit(event.item.Id);\r\n  }\r\n  changeTypeaheadLoading(e: boolean): void {\r\n    this.typeaheadLoading = e;\r\n  }\r\n\r\n\r\n\r\n}\r\n","<div class=\"form-group\">\r\n    <input [(ngModel)]=\"search\" typeaheadOptionField=\"Name\" [typeahead]=\"suggestions$\" [typeaheadAsync]=\"true\"\r\n      [typeaheadItemTemplate]=\"customItemTemplate\" class=\"form-control\"\r\n      placeholder=\"{{'FromsControlSearch' | translate }}\" [typeaheadMinLength]=\"3\" [isAnimated]=\"true\"\r\n      (typeaheadOnSelect)=\"onSelect($event)\" (typeaheadLoading)=\"changeTypeaheadLoading($event)\"\r\n      (typeaheadNoResults)=\"typeaheadNoResults($event)\">\r\n  \r\n    <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"errorMessage\">\r\n      {{ errorMessage }}\r\n    </div>\r\n    <ng-template #customItemTemplate let-model=\"item\">\r\n      <span>{{model.Name}}</span>\r\n    </ng-template>\r\n    <div *ngIf=\"typeaheadLoading\">\r\n      <app-atom-spinner [animationDuration]=\"1000\" [size]=\"60\" [color]=\"'#ff1d5e'\"></app-atom-spinner>\r\n    </div>\r\n    <div class=\"alert alert-danger\" *ngIf=\"noResult\">{{'PageNoResult' | translate }}</div>\r\n  </div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead/public_api';\r\nimport { switchMap, tap, map } from 'rxjs/operators';\r\nimport { noop, Observable, Observer, of } from 'rxjs';\r\nimport { cTraineeItem } from 'src/app/interface/Response/Trainee.class';\r\nimport { ServiceTrainee } from 'src/app/services/trainee.service';\r\n\r\n@Component({\r\n  selector: 'cust-search-trainee',\r\n  templateUrl: './search-trainee.component.html',\r\n  styleUrls: ['./search-trainee.component.css']\r\n})\r\nexport class SearchTraineeComponent implements OnInit {\r\n  @Output() OnSelectedTrainee: EventEmitter<string> = new EventEmitter<string>();\r\n  noResult: boolean = false;\r\n  search: string;\r\n  suggestions$: Observable<string[]>;\r\n  errorMessage: string;\r\n  selectedOption: any;\r\n  typeaheadLoading: boolean;\r\n  constructor(private BLServiceTrainee: ServiceTrainee) { }\r\n  ngOnInit(): void {\r\n    this.suggestions$ = new Observable((observer: Observer<string>) => {\r\n      observer.next(this.search);\r\n    }).pipe(\r\n      switchMap((query: string) => {\r\n        if (query) {\r\n          return this.BLServiceTrainee.ListSearch(query).pipe(\r\n            map((items: cTraineeItem[]) => {\r\n                return items.map((item: cTraineeItem) => (\r\n                  { Name: item.Name + \"<\" + item.Email + \">\" + item.Mobile + \" - \" + item.NationalId,\r\n                Id:item.Id }))\r\n              }),\r\n            tap(() => noop, err => {\r\n              // in case of http error\r\n              this.errorMessage = err && err.message || 'Something goes wrong';\r\n            }));\r\n            // .forEach((items: cTraineeItem[]) => {\r\n              \r\n            //   return items.map((item: cTraineeItem) => (\r\n            //     { Name: item.Name + \"<\" + item.Email + \">\" + item.Mobile + \" - \" + item.NationalId }))\r\n            // });\r\n        }\r\n\r\n        return of([]);\r\n      })\r\n    );\r\n  }\r\n  typeaheadNoResults(event: boolean): void {\r\n    this.noResult = event;\r\n  }\r\n  onSelect(event: TypeaheadMatch): void {\r\n    this.selectedOption = event.item.Id;\r\n    this.OnSelectedTrainee.emit(event.item.Id);\r\n  }\r\n  changeTypeaheadLoading(e: boolean): void {\r\n    this.typeaheadLoading = e;\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"form-group\">\r\n    <input [(ngModel)]=\"search\" typeaheadOptionField=\"Name\" [typeahead]=\"suggestions$\" [typeaheadAsync]=\"true\"\r\n      [typeaheadItemTemplate]=\"customItemTemplate\" class=\"form-control\" placeholder=\"{{'FromsControlSearchTrainee' | translate }}\"\r\n      [typeaheadMinLength]=\"3\" [isAnimated]=\"true\" (typeaheadOnSelect)=\"onSelect($event)\" (typeaheadNoResults)=\"typeaheadNoResults($event)\"\r\n      (typeaheadLoading)=\"changeTypeaheadLoading($event)\">\r\n  \r\n    <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"errorMessage\">\r\n      {{ errorMessage }}\r\n    </div>\r\n    \r\n    <ng-template #customItemTemplate let-model=\"item\">\r\n      <span>{{model.Name}}</span>\r\n    </ng-template>\r\n  \r\n    <div *ngIf=\"typeaheadLoading\">\r\n      <app-atom-spinner [animationDuration]=\"1000\" [size]=\"60\" [color]=\"'#ff1d5e'\"></app-atom-spinner>\r\n    </div>\r\n    <div class=\"alert alert-danger\" *ngIf=\"noResult\">{{'PageNoResult' | translate }}</div>\r\n  </div>\r\n  ","import { Component, OnInit, AfterViewInit, Input, Output, EventEmitter, ViewChild } from '@angular/core';\r\nimport { cTraineeItem } from 'src/app/interface/Response/Trainee.class';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ModelTrainee } from 'src/app/interface/Model/ModelTrainee.class';\r\nimport { ServiceTrainee } from 'src/app/services/trainee.service';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { DynamicFormComponent } from '../ConfigForms/components/dynamic-form/dynamic-form.component';\r\nimport { FieldConfig, Validator } from '../ConfigForms/field.interface';\r\nimport { ConfigForm } from 'src/app/Enum/ConfigForm.enum';\r\nimport { ActivatedRoute, Router, NavigationEnd } from '@angular/router';\r\nimport { ServiceMisc } from 'src/app/services/misc.service';\r\nimport { filter, map, mergeMap } from 'rxjs/operators';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'cust-add-trainee',\r\n  templateUrl: './add-trainee.component.html',\r\n  styleUrls: ['./add-trainee.component.css']\r\n})\r\nexport class AddTraineeComponent extends baseComponent implements AfterViewInit, OnInit {\r\n  IsCreate: boolean = false;\r\n  IsEdit: boolean = false;\r\n  IsModelTemplate: boolean = false;\r\n  obj: cTraineeItem;\r\n  TrainingId: string = \"\";\r\n  modelTraineeId: string = \"\";\r\n  isPageRegister: boolean = false;\r\n  //@Output() Reload: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n  emailPattern = \"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\";\r\n  modelIsCreate: boolean = true;\r\n  isClicked: boolean = false;\r\n  modelNameEdited: string = '';\r\n  modelObj: cTraineeItem = new cTraineeItem();\r\n  IsLoggedInTrainee:boolean = false;\r\n\r\n  @ViewChild(DynamicFormComponent) form: DynamicFormComponent;\r\n  regConfig: FieldConfig[] = [];\r\n\r\n  constructor(private modalService: NgbModal,\r\n    private router: Router,\r\n    private BLServiceMisc: ServiceMisc,\r\n    private BLServiceTrainee: ServiceTrainee,\r\n    private route: ActivatedRoute,\r\n    BLServiceShowMessage: ServiceShowMessage,\r\n    BLServiceLoginUser: ServiceLoginUser, BLTranslate: TranslateService,) {\r\n    super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\r\n    console.log(this.router.url);\r\n    this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n      map(() => this.route),\r\n      map(route => {\r\n        while (route.firstChild) route = route.firstChild\r\n        return route\r\n      }),\r\n      filter(route => route.outlet === 'primary'),\r\n      mergeMap(route => route.data)\r\n    ).subscribe(data => {\r\n      this.isPageRegister = data.PageType === 'register';\r\n    })\r\n  }\r\n\r\n   async ngOnInit() {\r\n    // var GetRoleFunction =  () => {\r\n    //   var self = this;\r\n    //   return new Promise((resolve) => {\r\n    //     self.BLServiceLoginUser.UserIsTraineeChanged.subscribe(obj => {\r\n    //       resolve(obj);\r\n    //     });\r\n    //   });\r\n    // }\r\n    // \r\n    var IsTrainee = this.router.url.toLocaleLowerCase() === \"/myprofile\";\r\n    \r\n    this.IsLoggedInTrainee = <any>IsTrainee;\r\n    \r\n    this.InitData();\r\n    this.createBtn();\r\n  }\r\n  ngAfterViewInit(): void {\r\n    this.InitDynamicForm();\r\n  }\r\n\r\n  InitData() {\r\n    if (this.IsLoggedInTrainee) {\r\n      this.IsCreate = false;\r\n      this.IsEdit = true;\r\n\r\n      this.BLServiceTrainee.getMyProfile().subscribe({\r\n        next: response => {\r\n          this.modelObj = response;\r\n          this.openBackDropCustomClass(this.modelObj);\r\n          this.InitDynamicForm();\r\n        },\r\n        error: err => {\r\n          this.message.Error(err)\r\n        }\r\n      });\r\n    }\r\n    else {\r\n      //{ path: 'Trainee/Create/:IsCreate/:TraineeId/:TrainingId', component: AddTraineeComponent },\r\n      const paramCreate = this.route.snapshot.paramMap.get('IsCreate');\r\n      if (paramCreate) {\r\n        this.IsCreate = paramCreate == \"1\";\r\n        this.IsEdit = paramCreate == \"0\";\r\n\r\n        if (this.IsCreate) {\r\n          this.createBtn();\r\n        }\r\n      }\r\n      const paramTraineeId = this.route.snapshot.paramMap.get('TraineeId');\r\n      if (paramTraineeId && paramTraineeId != \"0\" && !this.isPageRegister) {\r\n        this.modelTraineeId = paramTraineeId;\r\n        //Load trainee Data\r\n        this.BLServiceTrainee.getGetByid(this.modelTraineeId).subscribe({\r\n          next: response => {\r\n            this.modelObj = response;\r\n            this.openBackDropCustomClass(this.modelObj);\r\n            this.InitDynamicForm();\r\n          },\r\n          error: err => {\r\n            this.message.Error(err)\r\n          }\r\n        });\r\n      }\r\n      const paramTrainingId = this.route.snapshot.paramMap.get('TrainingId');\r\n      if (paramTrainingId && paramTrainingId != \"0\" && !this.isPageRegister) {\r\n        this.TrainingId = paramTrainingId;\r\n      }\r\n    }\r\n  }\r\n  InitDynamicForm() {\r\n    this.BLServiceMisc.GetByType(ConfigForm.Trainee).subscribe({\r\n      next: lst => {\r\n        this.regConfig = <FieldConfig[]>[];\r\n        lst.forEach(item => {\r\n\r\n          var obj = new FieldConfig();\r\n\r\n          obj.inputType = item.inputType;\r\n          obj.label = item.label;\r\n          obj.name = item.name;\r\n          obj.options = item.options;\r\n          obj.order = item.order;\r\n          obj.type = item.type;\r\n          obj.IsRequired = item.IsRequired;\r\n          if (obj.IsRequired)\r\n            obj.validations.push(new Validator(item.label));\r\n          if (this.modelObj.data)\r\n            obj.value = this.modelObj.data[item.name];\r\n\r\n          this.regConfig.push(obj);\r\n        });\r\n        this.form.fields = this.regConfig;\r\n        this.form.createControl();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n\r\n  }\r\n  createBtn(): void {\r\n\r\n    this.modelObj = new cTraineeItem;\r\n    this.modelIsCreate = true;\r\n    this.isClicked = false;\r\n    this.modelNameEdited = \"\";\r\n    //this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  modelSaveBtn(modelForm: NgForm): void {\r\n\r\n    if (!modelForm.valid)\r\n      return;\r\n\r\n    this.isClicked = true;\r\n    var model = new ModelTrainee();\r\n    model.Id = this.modelObj.Id;\r\n    model.Name = this.modelObj.Name;\r\n    model.NationalId = this.modelObj.NationalId;\r\n    model.Gender = this.modelObj.Gender.toString();\r\n    model.IdType = this.modelObj.IdType.toString();\r\n    model.Mobile = this.modelObj.Mobile;\r\n    model.Email = this.modelObj.Email;\r\n    model.DOB = this.modelObj.DOB;\r\n    model.data = this.form.value;\r\n\r\n    if (this.IsLoggedInTrainee) {\r\n      this.BLServiceTrainee.updateMyProfile(model).subscribe({\r\n        next: response => {\r\n          this.message.Success(this.msgSavedSuccessfully);\r\n          this.BLServiceShowMessage.sendMessage(this.message);\r\n          //this.Reload.emit(true);\r\n          this.isClicked = false;\r\n        },\r\n        error: err => {\r\n          this.message.Error(err);\r\n          this.isClicked = false;\r\n        }\r\n      });\r\n    }\r\n    else {\r\n      if (this.modelIsCreate) {\r\n        model.TrainingId = this.TrainingId;\r\n        this.BLServiceTrainee.create(model).subscribe({\r\n          next: response => {\r\n            this.message.Success(this.msgSavedSuccessfully);\r\n            this.BLServiceShowMessage.sendMessage(this.message);\r\n            //this.Reload.emit(true);\r\n            this.isClicked = false;\r\n            this.OnRedrirectBack();\r\n          },\r\n          error: err => {\r\n            this.message.Error(err)\r\n            this.isClicked = false;\r\n          }\r\n        });\r\n      }\r\n      else {\r\n        this.BLServiceTrainee.update(model).subscribe({\r\n          next: response => {\r\n            this.message.Success(this.msgSavedSuccessfully);\r\n            this.BLServiceShowMessage.sendMessage(this.message);\r\n            //this.Reload.emit(true);\r\n            this.isClicked = false;\r\n            this.OnRedrirectBack();\r\n          },\r\n          error: err => {\r\n            this.message.Error(err);\r\n            this.isClicked = false;\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n  openBackDropCustomClass(obj: cTraineeItem) {\r\n\r\n    this.modelObj = obj;\r\n    this.modelIsCreate = false;\r\n    this.isClicked = false;\r\n    this.modelNameEdited = obj.Name;\r\n    //this.modalService.open(content, { backdropClass: 'light-blue-backdrop', centered: true });\r\n  }\r\n  OnRedrirectBack() {\r\n    if (this.isPageRegister) {\r\n      this.router.navigate(['/']);\r\n    }\r\n    else if (this.TrainingId != \"\") {\r\n      this.router.navigate(['/Training/Trainees/' + this.TrainingId]);\r\n    }\r\n    else {\r\n      this.router.navigate(['/Account/Trainee']);\r\n    }\r\n  }\r\n}\r\n","<!-- <input *ngIf=\"obj?.IsActive && IsEdit\" type=\"button\" class=\"btn btn-primary\" value=\"{{'GenericEdit' | translate }}\"\r\n    (click)=\"openBackDropCustomClass(content,obj)\">\r\n\r\n<input *ngIf=\"IsCreate\" type=\"button\" class=\"pull-right btn color-bg-01 white-text\" value=\"{{'GenericCreateNew' | translate }}\"\r\n    (click)=\"createBtn(content)\">\r\n<ng-template role=\"dialog\" #content let-modal class=\"modal fade\"> -->\r\n<section class=\"my-5\">\r\n    <div class=\"container\">\r\n        <div class='row'>\r\n            <h4 class=\"mb-4\" *ngIf=\"modelIsCreate\">{{'GenericCreate' | translate}}</h4>\r\n            <h4 class=\"mb-4\" *ngIf=\"!modelIsCreate\">{{'GenericEditing' | translate}}: {{modelNameEdited}}</h4>\r\n        </div>\r\n        <div class='row'>\r\n            <div class=\"modal-body pt-0\">\r\n                <form novalidate (ngSubmit)=\"modelSaveBtn(modelForm)\" #modelForm=\"ngForm\">\r\n                    <div class=\"form-group \">\r\n                        <mat-form-field class=\"example-full-width\">\r\n                            <mat-label>{{'GenericName' | translate }}</mat-label>\r\n                            <input matInput id=\"modelNameId\" type=\"text\" placeholder=\"{{'GenericRequiredName' | translate }}\" required\r\n                                [(ngModel)]=\"modelObj.Name\" #modelNameVar=\"ngModel\" name=\"modelName\"\r\n                                [ngClass]=\"{'is-invalid': (modelNameVar.touched || modelNameVar.dirty) && !modelNameVar.valid }\" />\r\n                            <mat-error *ngIf=\"modelNameVar.errors?.required\">{{'TraineeNameError' | translate }}\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"form-group \">\r\n                        <mat-form-field class=\"example-full-width\">\r\n                            <mat-label>{{'GenericEmail' | translate }}</mat-label>\r\n                            <input matInput oninput=\"this.value = this.value.toLowerCase()\" id=\"modelEmailId\"\r\n                                type=\"email\" placeholder=\"{{'GenericRequiredEmail' | translate }}\" [pattern]=\"emailPattern\" required\r\n                                disabled=\"{{!modelIsCreate}}\" [(ngModel)]=\"modelObj.Email\" #modelEmailVar=\"ngModel\"\r\n                                name=\"modelEmail\"\r\n                                [ngClass]=\"{'is-invalid': (modelEmailVar.touched || modelEmailVar.dirty) && !modelEmailVar.valid }\" />\r\n                            <mat-error *ngIf=\"modelEmailVar.errors?.required\">{{'TraineeEmailError' | translate }}\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"modelEmailVar.errors?.pattern\">{{'GenericEnterEmailValid' | translate }}\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"form-group \">\r\n                        <mat-label class=\"mr-2 ml-2\">{{'GenericType' | translate }} *</mat-label>\r\n                        <mat-radio-group id=\"modelIdTypeId\" [(ngModel)]=\"modelObj.IdType\" color=\"primary\"\r\n                            [required]=\"true\" #modelIdTypeVar=\"ngModel\" name=\"modelIdType\"\r\n                            [ngClass]=\"{'is-invalid': (modelIdTypeVar.touched || modelIdTypeVar.dirty) && !modelIdTypeVar.valid }\">\r\n                            <mat-radio-button class=\"mr-2 ml-2\" [value]=\"1\" color=\"primary\">{{'GenericNationalID' | translate }}\r\n                            </mat-radio-button>\r\n                            <mat-radio-button class=\"mr-2 ml-2\" [value]=\"2\" color=\"primary\">{{'GenericPassport' | translate }}\r\n                            </mat-radio-button>\r\n                        </mat-radio-group>\r\n                        <!-- </mat-form-field> -->\r\n                    </div>\r\n                    <div class=\"form-group \" *ngIf=\" modelObj.IdType == 1\">\r\n                        <mat-form-field class=\"example-full-width\">\r\n                            <mat-label>{{'GenericId' | translate }}</mat-label>\r\n                            <input matInput id=\"modelNationalIdId\" type=\"text\" placeholder=\"{{'TraineeIdRequired' | translate }}\"\r\n                                required disabled=\"{{!modelIsCreate && !IsAdmin}}\" [(ngModel)]=\"modelObj.NationalId\"\r\n                                #modelNationalIdVar=\"ngModel\" name=\"modelNationalId\" maxlength=\"14\" minlength=\"14\"\r\n                                [ngClass]=\"{'is-invalid': (modelNationalIdVar.touched || modelNationalIdVar.dirty) && !modelNationalIdVar.valid }\" />\r\n                            <mat-error *ngIf=\"modelNationalIdVar.errors?.required\">{{'TraineeIdError' | translate }}</mat-error>\r\n                            <div *ngIf=\"(modelNationalIdVar.errors?.maxlength || modelNationalIdVar.errors?.mminlength) && modelObj.IdType == 1\"> \r\n                                National Id must be 14 characters long.\r\n                           </div> \r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"form-group \" *ngIf=\" modelObj.IdType == 2\">\r\n                        <mat-form-field class=\"example-full-width\">\r\n                            <mat-label>{{'GenericId' | translate }}</mat-label>\r\n                            <input matInput id=\"modelNationalIdId\" type=\"text\" placeholder=\"{{'TraineeIdRequired' | translate }}\"\r\n                                required disabled=\"{{!modelIsCreate && !IsAdmin}}\" [(ngModel)]=\"modelObj.NationalId\"\r\n                                #modelNationalIdVar=\"ngModel\" name=\"modelNationalId\" \r\n                                [ngClass]=\"{'is-invalid': (modelNationalIdVar.touched || modelNationalIdVar.dirty) && !modelNationalIdVar.valid }\" />\r\n                            <mat-error *ngIf=\"modelNationalIdVar.errors?.required\">{{'TraineeIdError' | translate }}</mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"form-group \">\r\n                        <mat-form-field class=\"example-full-width\">\r\n                            <mat-label>{{'GenericMobile' | translate }}</mat-label>\r\n                            <input matInput id=\"modelMobileId\" type=\"number\" placeholder=\"{{'TraineeMobileRequired' | translate }}\" required\r\n                                number [(ngModel)]=\"modelObj.Mobile\" #modelMobileVar=\"ngModel\" name=\"modelMobile\"\r\n                                [ngClass]=\"{'is-invalid': (modelMobileVar.touched || modelMobileVar.dirty) && !modelMobileVar.valid }\" />\r\n                            <mat-error *ngIf=\"modelMobileVar.errors?.required\">{{'TraineeMobileError' | translate }}\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"form-group \">\r\n                        <mat-form-field class=\"example-full-width\">\r\n                            <mat-label>{{'TraineeDOB' | translate }}</mat-label>\r\n                            <input matInput [owlDateTime]=\"dt1\" [max]=\"todayDate\" required\r\n                                id=\"modelDOBId\" type=\"text\" placeholder=\"{{'TraineeDOBReuqired' | translate }}\"\r\n                                required [(ngModel)]=\"modelObj.DOB\" #modelDOBVar=\"ngModel\"\r\n                                name=\"modelDOB\" \r\n                                [ngClass]=\"{'is-invalid': (modelDOBVar.touched || modelDOBVar.dirty) && !modelDOBVar.valid }\" />\r\n                            <mat-error *ngIf=\"modelDOBVar.errors?.required\">{{'TraineeDOBError' | translate }}\r\n                            </mat-error>\r\n                            <mat-icon matSuffix [owlDateTimeTrigger]=\"dt1\"><i class=\"fa fa-calendar\"></i></mat-icon>\r\n                        </mat-form-field>\r\n                        <owl-date-time #dt1 [pickerType]=\"'calendar'\"></owl-date-time>\r\n                    </div>\r\n                    <div class=\"form-group \">\r\n                        <!-- <mat-form-field class=\"example-full-width\"> -->\r\n                        <mat-label class=\"mr-2 ml-2\">{{'TraineeGender' | translate }} *</mat-label>\r\n                        <mat-radio-group id=\"modelGenderId\" [(ngModel)]=\"modelObj.Gender\" color=\"primary\"\r\n                            [required]=\"true\" #modelGenderVar=\"ngModel\" name=\"modelGender\"\r\n                            [ngClass]=\"{'is-invalid': (modelGenderVar.touched || modelGenderVar.dirty) && !modelGenderVar.valid }\">\r\n                            <mat-radio-button class=\"mr-2 ml-2\" [value]=\"1\" color=\"primary\">{{'TraineeMale' | translate }}\r\n                            </mat-radio-button>\r\n                            <mat-radio-button class=\"mr-2 ml-2\" [value]=\"2\" color=\"primary\">{{'TraineeFemale' | translate }}\r\n                            </mat-radio-button>\r\n                        </mat-radio-group>\r\n                        <!-- </mat-form-field> -->\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <dynamic-form [fields]=\"regConfig\"></dynamic-form>\r\n                    </div>\r\n                    <div class=\"form-group pull-right md-form\">\r\n                        <button class=\"btn color-bg-grey btn-sm btn-default white-text\" type=\"submit\" (click)=\"OnRedrirectBack()\">Cancel</button>\r\n                        <button class=\"btn color-bg-01 btn-sm white-text\" type=\"submit\"\r\n                            [disabled]=\"!(modelForm.valid && form?.valid) || isClicked\">{{'GenericSave' | translate }} <i class=\"fa fa-spinner fa-spin\"\r\n                                *ngIf=\"isClicked\"></i></button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n<!-- </ng-template> -->","import { Component, OnInit, Input, Output, EventEmitter, Inject } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-confirmation-dialog',\r\n  templateUrl: './confirmation-dialog.component.html',\r\n  styleUrls: ['./confirmation-dialog.component.css']\r\n})\r\nexport class ConfirmationDialogComponent implements OnInit {\r\n\r\n\r\n  @Input() title: string;\r\n  @Input() message: string;\r\n  @Input() btnOkText: string;\r\n  @Input() btnCancelText: string;\r\n  \r\n  //constructor(public dialogRef: MatDialogRef<ConfirmationDialogComponent>) {}\r\n  constructor(private dialogRef: NgbActiveModal) { }\r\n\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public decline() {\r\n    this.dialogRef.close(false);\r\n  }\r\n\r\n   accept() {\r\n     this.dialogRef.close(true);\r\n  }\r\n\r\n  public dismiss() {\r\n    this.dialogRef.dismiss();\r\n  }\r\n}\r\n","<div class=\"\">\r\n    <div class=\"confirmMessage text-center\">\r\n        <p><i class=\"fa fa-info-circle\"></i> </p>\r\n        <h5 class=\"txt-color-red\">{{'ConfigMSGAlert' | translate }}</h5>\r\n        {{ message }}\r\n\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"accept()\">{{'ConfigMSGbtnOkText' | translate }}</button>\r\n        <button type=\"button\" class=\"btn btn-danger\" (click)=\"decline()\">{{'ConfigMSGbtnCancelText' | translate }}</button>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { ConfirmationDialogComponent } from './confirmation-dialog.component';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Component, Inject } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfirmationDialogService {\r\n\r\n  msgsetDeactivate: string;\r\n  msgsetActivate: string;\r\n  strOk:string;\r\n  strCancel:string\r\n  //constructor(private modalService: MatDialog) { }\r\n  constructor(private modalService: NgbModal,\r\n    private BLTranslate: TranslateService) {\r\n      this.BLTranslate.get(\"msgsetDeactivate\").subscribe(res => { this.msgsetDeactivate = res; });\r\n      this.BLTranslate.get(\"msgsetActivate\").subscribe(res => { this.msgsetActivate = res; });\r\n      this.BLTranslate.get(\"ConfigMSGbtnOkText\").subscribe(res => { this.strOk = res; });\r\n      this.BLTranslate.get(\"ConfigMSGbtnCancelText\").subscribe(res => { this.strCancel = res; });\r\n    }\r\n\r\n  public confirm(\r\n    // title: string,\r\n    message: string ,\r\n    btnOkText: string = this.strOk,\r\n    btnCancelText: string = this.strCancel,\r\n    dialogSize: 'sm'|'lg' = 'lg'): Promise<boolean> {\r\n    const modalRef = this.modalService.open(ConfirmationDialogComponent);\r\n    //modalRef.componentInstance.title = title;\r\n    modalRef.componentInstance.message = message;\r\n    modalRef.componentInstance.btnOkText = btnOkText;\r\n    modalRef.componentInstance.btnCancelText = btnCancelText;\r\n\r\n    return modalRef.result;\r\n  }\r\n\r\n  public confirmActivation(\r\n    // title: string,\r\n    message: string = this.msgsetActivate,\r\n    btnOkText: string = this.strOk,\r\n    btnCancelText: string = this.strCancel,\r\n    dialogSize: 'sm'|'lg' = 'lg'): Promise<boolean> {\r\n    const modalRef = this.modalService.open(ConfirmationDialogComponent);\r\n    //modalRef.componentInstance.title = title;\r\n    modalRef.componentInstance.message = message;\r\n    modalRef.componentInstance.btnOkText = btnOkText;\r\n    modalRef.componentInstance.btnCancelText = btnCancelText;\r\n\r\n    return modalRef.result;\r\n  }\r\n  \r\n  public confirmDeactivation(\r\n    // title: string,\r\n    message: string = this.msgsetDeactivate,\r\n    btnOkText: string = this.strOk,\r\n    btnCancelText: string = this.strCancel,\r\n    dialogSize: 'sm'|'lg' = 'lg'): Promise<boolean> {\r\n    const modalRef = this.modalService.open(ConfirmationDialogComponent);\r\n    //modalRef.componentInstance.title = title;\r\n    modalRef.componentInstance.message = message;\r\n    modalRef.componentInstance.btnOkText = btnOkText;\r\n    modalRef.componentInstance.btnCancelText = btnCancelText;\r\n\r\n    return modalRef.result;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Constants } from 'src/app/constants';\r\nimport { cLogoPartnerItem } from 'src/app/interface/Response/LogoPartner.class';\r\nimport { ServiceMisc } from 'src/app/services/misc.service';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n  lstLogoPartner:cLogoPartnerItem[];\r\n  FilesURL: string = Constants.FilesURL;\r\n  \r\n  constructor(private BLService: ServiceMisc) { }\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n  loadData() {\r\n\r\n    this.BLService.getLogoPartnerListActive().subscribe({\r\n      next: lst => {\r\n        this.lstLogoPartner = lst;\r\n      }\r\n    });\r\n  }\r\n}\r\n","<!-- #Footer -->\r\n\r\n<footer>\r\n\r\n    <div class=\"footer-top vert-cent\">\r\n\r\n        <div class=\"container-fluid\">\r\n\r\n            <div class=\"row py-3 d-flex align-items-center\">\r\n                <div class=\"col-md-10 col-lg-10 customer-logos slider\">\r\n                    <div class=\"col-md-12\" *ngIf=\"lstLogoPartner?.length > 0\">\r\n                        <div *ngFor=\"let item of lstLogoPartner\" class=\"slide\">\r\n                            <img *ngIf=\"item.WebsiteURL == ''\" src=\"{{FilesURL + item.ImagePath}}\">\r\n                            <a *ngIf=\"item.WebsiteURL != ''\" href=\"{{item.WebsiteURL}}\" target=\"_blank\">\r\n                                <img src=\"{{FilesURL + item.ImagePath}}\">\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-2 col-lg-2 text-center text-md-right\">\r\n                    <a href=\"https://www.facebook.com/TawarWaghayar\" target=\"_blank\" class=\"fb-ic\"><i\r\n                            class=\"fab fa-facebook-f ml-4\"></i></a>\r\n                    <a href=\"https://twitter.com/CitizenshipMSEg\" target=\"_blank\" class=\"tw-ic\"><i\r\n                            class=\"fab fa-twitter ml-4\"></i></a>\r\n                    <!-- <a href=\"javascript:void(0)\" target=\"_blank\" class=\"gplus-ic\"><i\r\n                            class=\"fab fa-google-plus-g ml-4\"></i></a>\r\n                    <a href=\"javascript:void(0)\" target=\"_blank\" class=\"li-ic\"><i\r\n                            class=\"fab fa-linkedin-in ml-4\"></i></a>\r\n                    <a href=\"javascript:void(0)\" target=\"_blank\" class=\"ins-ic\"><i\r\n                            class=\"fab fa-instagram ml-4\"></i></a> -->\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"footer-links\">\r\n        <div class=\"container-fluid\">\r\n            <div class=\"row py-4 d-flex\">\r\n\r\n                <div class=\"col-md-6 col-lg-6 col-xs-6 text-md-left mb-md-0 mb-3\">\r\n                    <img src=\"/assets/img/main/logo-load.jpg\" class=\"img-fluid mb-3 \" alt=\"\" />\r\n                    <div class=\"w-100\"></div>\r\n                    <img src=\"/assets/img/test-img/MoYouth.png\" class=\"img-fluid mx-2\" alt=\"\" />\r\n                    <img src=\"/assets/img/test-img/Microsoft.png\" class=\"img-fluid mx-2\" alt=\"\" />\r\n                    <img src=\"/assets/img/test-img/cef.png\" class=\"img-fluid mx-2\" alt=\"\" />\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-lg-3 col-xs-6 text-md-left mb-md-0 mb-3\">\r\n                    <h6 class=\"mb-4\">{{'FooterUsefulLinks' | translate }}</h6>\r\n                    <p><a routerLink=\"/Terms\">{{'FooterTerms' | translate }}</a></p>\r\n                    <p><a routerLink=\"/Policy\">{{'FooterPolicy' | translate }}</a></p>\r\n                    <!-- <p><a routerLink=\"/About\">About Us</a></p> -->\r\n                </div>\r\n\r\n                <div class=\"col-md-3 col-lg-3 text-md-left mb-md-0\">\r\n                    <h6 class=\"mb-4\">{{'FooterContact' | translate }}</h6>\r\n                    <p class=\"cont\"><i class=\"fal fa-home mr-3\"></i><a target=\"_blank\"\r\n                            href=\"https://www.facebook.com/MicrosoftEgyptCitizenship\">\r\n                            {{'FooterAddress1' | translate }}</a></p>\r\n                    <p>{{'FooterAddress2' | translate }}</p>\r\n                    <p>{{'FooterAddress3' | translate }}</p>\r\n                    <p class=\"cont\"><i class=\"fal fa-envelope mr-3\"></i><a\r\n                            href=\"mailto:info@getonlineegypt.com\">info@getonlineegypt.com</a></p>\r\n                    <p class=\"cont\"><i class=\"fal fa-phone mr-3\"></i><a href=\"tel:+20235393333\">+2 02 3539 3333</a> /\r\n                        <a href=\"tel:+20235390303\">+2 02 3539 0303</a>\r\n                    </p>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"footer-copyright text-center py-4\">\r\n        <div class=\"container-fluid\">\r\n            ©\r\n            <script>document.write(new Date().getFullYear());</script> TawarWeGhayar.com | Developed By <a\r\n                href=\"http://www.nrg-it.com/\" target=\"_blank\"> nrg-it.com</a>\r\n        </div>\r\n    </div>\r\n\r\n</footer>\r\n<!-- #Footer End -->","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { tap, switchMap, map } from 'rxjs/operators';\r\nimport { of, noop, Observer, Observable } from 'rxjs';\r\nimport { ServiceUserProfile } from 'src/app/services/userprofile.service';\r\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead/typeahead-match.class';\r\nimport { cUserProfileItem } from 'src/app/interface/Response/UserProfile.class';\r\n\r\n@Component({\r\n  selector: 'cust-search-partner',\r\n  templateUrl: './search-partner.component.html',\r\n  styleUrls: ['./search-partner.component.scss']\r\n})\r\nexport class SearchPartnerComponent implements OnInit {\r\n  @Output() OnSelectedPartner : EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  noResult: boolean = false;\r\n  search: string;\r\n  suggestions$: Observable<cUserProfileItem[]>;\r\n  errorMessage: string;\r\n  selectedOption: any;\r\n  typeaheadLoading: boolean;\r\n  constructor(private BLServiceUserProfile: ServiceUserProfile) { }\r\n  ngOnInit(): void {\r\n    this.suggestions$ = new Observable((observer: Observer<string>) => {\r\n      observer.next(this.search);\r\n    }).pipe(\r\n      switchMap((query: string) => {\r\n        if (query) {\r\n          return this.BLServiceUserProfile.GetPartnerSearch(query).pipe(\r\n            tap(() => noop, err => {\r\n              // in case of http error\r\n              this.errorMessage = err && err.message || 'Something goes wrong';\r\n            }));\r\n        }\r\n\r\n        return of([]);\r\n      })\r\n    );\r\n  }\r\n  typeaheadNoResults(event: boolean): void {\r\n    this.noResult = event;\r\n  }\r\n  onSelect(event: TypeaheadMatch): void {\r\n    this.selectedOption = event.item.Id;\r\n    this.OnSelectedPartner.emit(event.item.Id);\r\n  }\r\n  changeTypeaheadLoading(e: boolean): void {\r\n    this.typeaheadLoading = e;\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"form-group\">\r\n  <input [(ngModel)]=\"search\" typeaheadOptionField=\"Name\" [typeahead]=\"suggestions$\" [typeaheadAsync]=\"true\"\r\n    [typeaheadItemTemplate]=\"customItemTemplate\" class=\"form-control\" placeholder=\"{{'FromsControlSearch' | translate }}\"\r\n    [typeaheadMinLength]=\"3\" [isAnimated]=\"true\" (typeaheadOnSelect)=\"onSelect($event)\" (typeaheadNoResults)=\"typeaheadNoResults($event)\"\r\n    (typeaheadLoading)=\"changeTypeaheadLoading($event)\">\r\n\r\n  <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"errorMessage\">\r\n    {{ errorMessage }}\r\n  </div>\r\n  \r\n  <ng-template #customItemTemplate let-model=\"item\">\r\n    <span>{{model.Name}}</span>\r\n  </ng-template>\r\n\r\n  <div *ngIf=\"typeaheadLoading\">\r\n    <app-atom-spinner [animationDuration]=\"1000\" [size]=\"60\" [color]=\"'#ff1d5e'\"></app-atom-spinner>\r\n  </div>\r\n  <div class=\"alert alert-danger\" *ngIf=\"noResult\">{{'PageNoResult' | translate }}</div>\r\n</div>\r\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { Observable, noop, Observer, of } from 'rxjs';\r\nimport { ServiceEntityManagement } from 'src/app/services/entitymanagement.service';\r\nimport { switchMap, tap } from 'rxjs/operators';\r\nimport { cEntityPartnerItem } from 'src/app/interface/Response/EntityPartner.class';\r\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead/public_api';\r\nimport { cEntitySubPartnerItem } from 'src/app/interface/Response/EntitySubPartner.class';\r\n\r\n@Component({\r\n  selector: 'cust-search-sub-partner-entity',\r\n  templateUrl: './search-sub-partner-entity.component.html',\r\n  styleUrls: ['./search-sub-partner-entity.component.scss']\r\n})\r\nexport class SearchSubPartnerEntityComponent implements OnInit {\r\n\r\n  @Output() OnSelectedPartner : EventEmitter<string> = new EventEmitter<string>();\r\n  \r\n  noResult: boolean = false;\r\n  search: string;\r\n  suggestions$: Observable<cEntitySubPartnerItem[]>;\r\n  errorMessage: string;\r\n  selectedOption: any;\r\n  typeaheadLoading: boolean;\r\n  constructor(private BLServiceEntityManagement: ServiceEntityManagement) { }\r\n  ngOnInit(): void {\r\n    this.suggestions$ = new Observable((observer: Observer<string>) => {\r\n      observer.next(this.search);\r\n    }).pipe(\r\n      switchMap((query: string) => {\r\n        if (query) {\r\n          return this.BLServiceEntityManagement.getEntitySubPartnerListActive(query).pipe(\r\n            tap(() => noop, err => {\r\n              // in case of http error\r\n              this.errorMessage = err && err.message || 'Something goes wrong';\r\n            }));\r\n        }\r\n\r\n        return of([]);\r\n      })\r\n    );\r\n  }\r\n  typeaheadNoResults(event: boolean): void {\r\n    this.noResult = event;\r\n  }\r\n  onSelect(event: TypeaheadMatch): void {\r\n    this.selectedOption = event.item.Id;\r\n    this.OnSelectedPartner.emit(event.item.Id);\r\n  }\r\n  changeTypeaheadLoading(e: boolean): void {\r\n    this.typeaheadLoading = e;\r\n  }\r\n\r\n\r\n\r\n}\r\n","<div class=\"form-group\">\r\n    <input [(ngModel)]=\"search\" typeaheadOptionField=\"Name\" [typeahead]=\"suggestions$\" [typeaheadAsync]=\"true\"\r\n      [typeaheadItemTemplate]=\"customItemTemplate\" class=\"form-control\" placeholder=\"{{'FromsControlSearch' | translate }}\"\r\n      [typeaheadMinLength]=\"3\" [isAnimated]=\"true\" (typeaheadOnSelect)=\"onSelect($event)\" (typeaheadNoResults)=\"typeaheadNoResults($event)\"\r\n      (typeaheadLoading)=\"changeTypeaheadLoading($event)\">\r\n  \r\n    <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"errorMessage\">\r\n      {{ errorMessage }}\r\n    </div>\r\n    <ng-template #customItemTemplate let-model=\"item\">\r\n      <span>{{model.Name}}</span>\r\n    </ng-template>\r\n    <div *ngIf=\"typeaheadLoading\">\r\n      <app-atom-spinner [animationDuration]=\"1000\" [size]=\"60\" [color]=\"'#ff1d5e'\"></app-atom-spinner>\r\n    </div>\r\n    <div class=\"alert alert-danger\" *ngIf=\"noResult\">{{'PageNoResult' | translate }}</div>\r\n  </div>\r\n  ","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\r\nimport { TypeaheadMatch } from 'ngx-bootstrap/typeahead/public_api';\r\nimport { switchMap, tap } from 'rxjs/operators';\r\nimport { noop, Observable, Observer, of } from 'rxjs';\r\nimport { ServiceUserProfile } from 'src/app/services/userprofile.service';\r\nimport { cUserProfileItem } from 'src/app/interface/Response/UserProfile.class';\r\n\r\n@Component({\r\n  selector: 'cust-search-sub-partner',\r\n  templateUrl: './search-sub-partner.component.html',\r\n  styleUrls: ['./search-sub-partner.component.scss']\r\n})\r\nexport class SearchSubPartnerComponent implements OnInit {\r\n\r\n  @Output() OnSelectedPartner : EventEmitter<string> = new EventEmitter<string>();\r\n  \r\n  noResult: boolean = false;\r\n  search: string;\r\n  suggestions$: Observable<cUserProfileItem[]>;\r\n  errorMessage: string;\r\n  selectedOption: any;\r\n  typeaheadLoading: boolean;\r\n  constructor(private BLServiceUserProfile: ServiceUserProfile) { }\r\n  ngOnInit(): void {\r\n    this.suggestions$ = new Observable((observer: Observer<string>) => {\r\n      observer.next(this.search);\r\n    }).pipe(\r\n      switchMap((query: string) => {\r\n        if (query) {\r\n          return this.BLServiceUserProfile.GetSubPartnerSearch(query).pipe(\r\n            tap(() => noop, err => {\r\n              // in case of http error\r\n              this.errorMessage = err && err.message || 'Something goes wrong';\r\n            }));\r\n        }\r\n\r\n        return of([]);\r\n      })\r\n    );\r\n  }\r\n  typeaheadNoResults(event: boolean): void {\r\n    this.noResult = event;\r\n  }\r\n  onSelect(event: TypeaheadMatch): void {\r\n    this.selectedOption = event.item.Id;\r\n    this.OnSelectedPartner.emit(event.item.Id);\r\n  }\r\n  changeTypeaheadLoading(e: boolean): void {\r\n    this.typeaheadLoading = e;\r\n  }\r\n\r\n\r\n\r\n}\r\n","<div class=\"form-group\">\r\n  <!-- <pre class=\"card card-block card-header\">Model: {{ search | json }}</pre>\r\n    <pre class=\"card card-block card-header mb-3\">Selected option: {{selectedOption | json}}</pre> -->\r\n  <input [(ngModel)]=\"search\" typeaheadOptionField=\"Name\" [typeahead]=\"suggestions$\" [typeaheadAsync]=\"true\"\r\n    [typeaheadItemTemplate]=\"customItemTemplate\" class=\"form-control\"\r\n    placeholder=\"{{'FromsControlSearch' | translate }}\" [typeaheadMinLength]=\"3\" [isAnimated]=\"true\"\r\n    (typeaheadOnSelect)=\"onSelect($event)\" (typeaheadLoading)=\"changeTypeaheadLoading($event)\"\r\n    (typeaheadNoResults)=\"typeaheadNoResults($event)\">\r\n\r\n  <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"errorMessage\">\r\n    {{ errorMessage }}\r\n  </div>\r\n  <ng-template #customItemTemplate let-model=\"item\">\r\n    <span>{{model.Name}}</span>\r\n  </ng-template>\r\n  <div *ngIf=\"typeaheadLoading\">\r\n    <app-atom-spinner [animationDuration]=\"1000\" [size]=\"60\" [color]=\"'#ff1d5e'\"></app-atom-spinner>\r\n  </div>\r\n  <div class=\"alert alert-danger\" *ngIf=\"noResult\">{{'PageNoResult' | translate }}</div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from 'src/app/core/auth-service.component';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ServiceMisc } from 'src/app/services/misc.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Constants } from 'src/app/constants';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  isLoggedIn = false;\r\n  userName: string;\r\n  userRole: string;\r\n  isAdmin: boolean = false;\r\n  isPartner: boolean = false;\r\n  isSubPartner: boolean = false;\r\n  IsTrainee: boolean = false;\r\n  IsTrainer: Boolean;\r\n  \r\n  lang: string = 'ar';\r\n  PathFiles:string = Constants.FilesURL;\r\n\r\n  constructor(private _authService: AuthService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    public BLServiceMisc: ServiceMisc,\r\n    public translate: TranslateService,\r\n    private BLServiceLoginUser: ServiceLoginUser,\r\n    BLTranslate: TranslateService,) {\r\n    translate.addLangs(['en', 'ar']);\r\n\r\n    if (localStorage.getItem('lang'))\r\n      this.lang = localStorage.getItem('lang');\r\n\r\n    translate.setDefaultLang(this.lang ? this.lang : \"ar\");\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.userName = this.BLServiceLoginUser.userName;\r\n    this.BLServiceLoginUser.UserNameChanged.subscribe(obj => {\r\n      this.userName = obj;\r\n    });\r\n\r\n    this.isLoggedIn = this.BLServiceLoginUser.isLoggedIn;\r\n    this.BLServiceLoginUser.UserIsLoggedInChanged.subscribe(obj => {\r\n      this.isLoggedIn = obj;\r\n    });\r\n\r\n    this.userRole = this.BLServiceLoginUser.userRole;\r\n    this.BLServiceLoginUser.UserRoleChanged.subscribe(obj => {\r\n      this.userRole = obj;\r\n    });\r\n\r\n    this.isAdmin = this.BLServiceLoginUser.IsAdmin;\r\n    this.BLServiceLoginUser.UserIsAdminChanged.subscribe(obj => {\r\n      this.isAdmin = obj;\r\n    });\r\n\r\n    this.isPartner = this.BLServiceLoginUser.IsPartner;\r\n    this.BLServiceLoginUser.UserIsPartnerChanged.subscribe(obj => {\r\n      this.isPartner = obj;\r\n    });\r\n    this.isSubPartner = this.BLServiceLoginUser.IsSubPartner;\r\n    this.BLServiceLoginUser.UserIsSubPartnerChanged.subscribe(obj => {\r\n      this.isSubPartner = obj;\r\n    });\r\n\r\n    this.IsTrainer = this.BLServiceLoginUser.IsTrainer;\r\n    this.BLServiceLoginUser.UserIsTrainerChanged.subscribe(obj => {\r\n      this.IsTrainer = obj;\r\n    });\r\n\r\n    this.IsTrainee = this.BLServiceLoginUser.IsTrainee;\r\n    this.BLServiceLoginUser.UserIsTraineeChanged.subscribe(obj => {\r\n      this.IsTrainee = obj;\r\n    });\r\n  }\r\n  login() {\r\n    this._authService.login();\r\n  }\r\n\r\n  logout() {\r\n    this._authService.logout();\r\n  }\r\n  switchLang(lang: string) {\r\n    this.translate.use(lang);\r\n\r\n    localStorage.setItem('lang', lang);\r\n    localStorage.setItem('URL', this.router.url);\r\n    window.location.reload();\r\n  }\r\n}\r\n","<header>\r\n    <nav class=\"navbar navbar-expand-lg header-top\">\r\n        <a class=\"navbar-brand\" href=\"/\">\r\n            <!-- <img src=\"/assets/img/main/logo.png\" class=\"logo-header\" alt=\"\" /> -->\r\n            <img src=\"{{PathFiles}}Logo/logo.png\" class=\"logo-header\" alt=\"\" />\r\n        </a>\r\n        <!-- <div class=\"container-fluid\">\r\n            isLoggedIn: {{isLoggedIn}}<br>\r\n            userName: {{userName}}<br>\r\n            userRole: {{userRole}}<br>\r\n            IsAdmin:{{isAdmin}}\r\n        </div>  -->\r\n        <button class=\"navbar-toggler header-menu-mob\" type=\"button\" data-toggle=\"offcanvas\">\r\n            <span class=\"fal fa-bars\"></span>\r\n        </button>\r\n\r\n        <button class=\"navbar-toggler header-top-mob\" type=\"button\" data-toggle=\"collapse\" data-target=\"#header-top\"\r\n            aria-controls=\"header-top\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span class=\"fal fa-ellipsis-v\"></span>\r\n        </button>\r\n\r\n        <div class=\"collapse navbar-collapse\" id=\"header-top\">\r\n            <ul class=\"navbar-nav ulMargianAuto\">\r\n\r\n                <!-- <li class=\"nav-item\">\r\n                    <a class=\"nav-link\" data-toggle=\"modal\" data-target=\"#SearchForm\"><i class=\"fal fa-search\"></i></a>\r\n                </li> -->\r\n\r\n                <li class=\"nav-item dropdown\">\r\n                    <a class=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\r\n                        aria-expanded=\"true\">\r\n                        <i class=\"fas fa-bars\"></i>\r\n                        <!-- <img src=\"/assets/img/main/user-01.jpg\" alt=\"\" /> -->\r\n                    </a>\r\n                    <div class=\"dropdown-menu dropdown-menu-right\">\r\n                        <a *ngIf=\"!isLoggedIn\" class=\"dropdown-item\" (click)=\"login()\"><i\r\n                                class=\"fal fa-unlock-alt\"></i>{{'HeaderSignIn' | translate }}</a>\r\n                        <a *ngIf=\"isLoggedIn\" class=\"dropdown-item\">{{userName}}</a>\r\n                        <a *ngIf=\"isLoggedIn\" class=\"dropdown-item\" (click)=\"logout()\"><i\r\n                                class=\"fal fa-lock-alt\"></i>{{'HeaderSignout' | translate }}</a>\r\n                    </div>\r\n                </li>\r\n\r\n                <li class=\"nav-item dropdown\">\r\n                    <a class=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\r\n                        aria-expanded=\"true\">\r\n                        <div class=\"flag-top-menu flag-icon-gb\" *ngIf=\"lang == 'en' \"></div>\r\n                        <div class=\"flag-top-menu flag-icon-eg\" *ngIf=\"lang == 'ar'\"></div>\r\n                    </a>\r\n                    <div class=\"dropdown-menu dropdown-menu-right\">\r\n                        <a class=\"dropdown-item\" (click)=\"switchLang('en')\">\r\n                            <div class=\"flag-top-menu flag-icon-gb\"></div>English\r\n                        </a>\r\n                        <a class=\"dropdown-item ar-lang\" (click)=\"switchLang('ar')\">\r\n                            <div class=\"flag-top-menu flag-icon-eg\"></div>عربى\r\n                        </a>\r\n                    </div>\r\n                </li>\r\n\r\n            </ul>\r\n        </div>\r\n\r\n    </nav>\r\n\r\n    <nav class=\"navbar navbar-expand-lg header-menu\">\r\n\r\n        <div class=\"navbar-collapse offcanvas-collapse\" id=\"header-menu\">\r\n            <ul class=\"navbar-nav urMargianAuto\">\r\n\r\n                <li class=\"nav-item\">\r\n                    <a class=\"nav-link\" href=\"/\" style=\"font-size: 25px;\"><i class=\"fas fa-home\"></i></a>\r\n                </li>\r\n                <li class=\"nav-item dropdown\" *ngIf=\"isAdmin\">\r\n                    <a class=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\r\n                        aria-expanded=\"true\">{{'HeaderDataManagement' | translate }}</a>\r\n                    <div class=\"dropdown-menu\">\r\n                        <a class=\"dropdown-item\" *ngIf=\"isAdmin\" routerLink=\"/DataManagement/City\">{{'GenericCity' |\r\n                            translate }}</a>\r\n                        <!-- <a class=\"dropdown-item\" *ngIf=\"isAdmin\" routerLink=\"/DataManagement/NGOType\">{{'GenericNGOType' | translate }}</a> -->\r\n                        <a class=\"dropdown-item\" *ngIf=\"isAdmin\"\r\n                            routerLink=\"/DataManagement/TrainingType\">{{'GenericTrainingType' | translate }}</a>\r\n                        <a class=\"dropdown-item\" *ngIf=\"isAdmin\"\r\n                            routerLink=\"/DataManagement/TrainingCategory\">{{'GenericTrainingCategory' | translate }}</a>\r\n                        <a class=\"dropdown-item\" *ngIf=\"isAdmin\" routerLink=\"/Questions/List\">{{'HeaderQuestions' |\r\n                            translate }}</a>\r\n                        <a class=\"dropdown-item\" *ngIf=\"isAdmin\" routerLink=\"/Exam/Templates\">{{'HeaderExamTemplates' |\r\n                            translate }}</a>\r\n                    </div>\r\n                </li>\r\n                <li class=\"nav-item dropdown\" *ngIf=\"isAdmin || isPartner\">\r\n                    <a class=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\r\n                        aria-expanded=\"true\">{{'HeaderEntityManagement' | translate }}</a>\r\n                    <div class=\"dropdown-menu\">\r\n                        <a class=\"dropdown-item\" *ngIf=\"isAdmin\"\r\n                            routerLink=\"/EntityManagement/Partner\">{{'GenericPartner' | translate }}</a>\r\n                        <a class=\"dropdown-item\" *ngIf=\"isAdmin || isPartner\"\r\n                            routerLink=\"/EntityManagement/SubPartner\">{{'GenericSubPartner' | translate }}</a>\r\n                        <a class=\"dropdown-item\" *ngIf=\"isAdmin \"\r\n                            routerLink=\"/EntityManagement/PartnerReports\">{{'HeaderPartnerReports' | translate }}</a>\r\n                    </div>\r\n                </li>\r\n                <li class=\"nav-item dropdown\" *ngIf=\"isAdmin \">\r\n                    <a class=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\r\n                        aria-expanded=\"true\">{{'HeaderConfigForm' | translate }} </a>\r\n                    <div class=\"dropdown-menu\">\r\n                        <a class=\"dropdown-item\" *ngIf=\"isAdmin\"\r\n                            routerLink=\"/ConfigRequestRegister\">{{'ConfigRequestRegisterationForm' | translate }} </a>\r\n                        <a class=\"dropdown-item\" *ngIf=\"isAdmin\"\r\n                            routerLink=\"/ConfigTrainee\">{{'ConfigTraineeRegisterationForm' | translate }} </a>\r\n                    </div>\r\n                </li>\r\n                <li class=\"nav-item dropdown\" *ngIf=\"isAdmin \">\r\n                    <a class=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\r\n                        aria-expanded=\"true\">{{'HeaderManage' | translate }}</a>\r\n                    <div class=\"dropdown-menu\">\r\n                        <a class=\"dropdown-item\" *ngIf=\"isAdmin\" routerLink=\"/About/Edit\">{{'HeaderAboutEdit' |\r\n                            translate }}</a>\r\n                        <a class=\"dropdown-item\" *ngIf=\"isAdmin\" routerLink=\"/Term/Edit\">{{'HeaderTermConditionEdit' |\r\n                            translate }}</a>\r\n                        <a class=\"dropdown-item\" *ngIf=\"isAdmin\" routerLink=\"/Policy/Edit\">{{'HeaderPolicyEdit' |\r\n                            translate }}</a>\r\n                        <a class=\"dropdown-item\" *ngIf=\"isAdmin\" routerLink=\"/Info/Edit\">{{'HeaderHomepageInfoEdit' |\r\n                            translate }}</a>\r\n                        <a class=\"dropdown-item\" *ngIf=\"isAdmin\"\r\n                            routerLink=\"/Content/PortalLogo\">{{'HeaderHomepagePortalLogo' | translate }}</a>\r\n                        <a class=\"dropdown-item\" *ngIf=\"isAdmin\"\r\n                            routerLink=\"/Content/PartnerLogo\">{{'HeaderHomepagePartnerLogo' | translate }}</a>\r\n                    </div>\r\n                </li>\r\n                <li class=\"nav-item dropdown\" *ngIf=\"isAdmin \">\r\n                    <a class=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\r\n                        aria-expanded=\"true\">{{'HeaderCertificate' | translate }}</a>\r\n                    <div class=\"dropdown-menu\">\r\n                        <a class=\"dropdown-item\" *ngIf=\"isAdmin\" routerLink=\"/Certificate/Generics\">{{'HeaderGenerics' |\r\n                            translate }}</a>\r\n                        <a class=\"dropdown-item\" *ngIf=\"isAdmin\" routerLink=\"/Certificate/Category\">{{'GenericPartner' |\r\n                            translate }}</a>\r\n                        <a class=\"dropdown-item\" *ngIf=\"isAdmin\"\r\n                            routerLink=\"/Certificate/TrainingCenter\">{{'GenericTrainingCenter' | translate }}</a>\r\n                        <a class=\"dropdown-item\" *ngIf=\"isAdmin\"\r\n                            routerLink=\"/Certificate/TranierApproval\">{{'GenericTrainerApproval' | translate }} </a>\r\n                    </div>\r\n                </li>\r\n                <li class=\"nav-item\" *ngIf=\"!isLoggedIn\">\r\n                    <a class=\"nav-link\" href=\"\" routerLink=\"/Trainee/Register\">{{'HeaderRegisterTrainee' | translate\r\n                        }}</a>\r\n                </li>\r\n                <li class=\"nav-item\" *ngIf=\"!isLoggedIn\">\r\n                    <a class=\"nav-link\" href=\"\" routerLink=\"/RequestRegister\">{{'HeaderRegisterTrainer' | translate\r\n                        }}</a>\r\n                </li>\r\n                <li class=\"nav-item\" *ngIf=\"!isLoggedIn\">\r\n                    <a class=\"nav-link\" href=\"\" routerLink=\"/RequestRegister\">{{'HeaderRegisterCenter' | translate\r\n                        }}</a>\r\n                </li>\r\n                <li class=\"nav-item\" *ngIf=\"isLoggedIn\">\r\n                    <a class=\"nav-link\" *ngIf=\"isAdmin|| isPartner || isSubPartner\" href=\"\"\r\n                        routerLink=\"/Account/Account\">{{'HeaderAccounts' | translate }}</a>\r\n                </li>\r\n                <li class=\"nav-item\" *ngIf=\"isLoggedIn  && (isAdmin || IsTrainer)\">\r\n                    <a class=\"nav-link\" href=\"\" routerLink=\"/Account/Trainee\">{{'GenericTrainee' | translate }}</a>\r\n                </li>\r\n                <li class=\"nav-item\" *ngIf=\"isLoggedIn\">\r\n                    <a class=\"nav-link\" href=\"\" routerLink=\"/Training/List\">{{'HeaderTraining' | translate }}</a>\r\n                </li>\r\n\r\n                <li class=\"nav-item\" *ngIf=\"isLoggedIn && IsTrainee\">\r\n                    <a class=\"nav-link\" href=\"\" routerLink=\"/MyTraining\">{{'HeaderMyTraining' | translate }}</a>\r\n                </li>\r\n                <li class=\"nav-item\" *ngIf=\"isLoggedIn && IsTrainee\">\r\n                    <a class=\"nav-link\" href=\"\" routerLink=\"/MyProfile\">{{'HeaderMyProfile' | translate }}</a>\r\n                </li>\r\n                <li class=\"nav-item\" *ngIf=\"isLoggedIn && IsTrainer\">\r\n                    <a class=\"nav-link\" href=\"\" routerLink=\"/TrainerCertificate/0\">{{'HeaderMyCertificates' | translate}}</a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n\r\n    </nav>\r\n\r\n</header>\r\n<!-- #Header End -->","import { Component, OnInit, EventEmitter, Input, Output } from '@angular/core';\r\nimport { Page } from '../../../pagination/page';\r\n\r\n//https://keepgrowing.in/angular/handle-server-side-sorting-in-an-angular-application/\r\n@Component({\r\n  selector: 'app-custom-pagination',\r\n  templateUrl: './custom-pagination.component.html',\r\n  styleUrls: ['./custom-pagination.component.scss']\r\n})\r\nexport class CustomPaginationComponent implements OnInit {\r\n  @Input() page: Page<any>;\r\n  @Output() nextPageEvent = new EventEmitter();\r\n  @Output() previousPageEvent = new EventEmitter();\r\n  @Output() loadPageCurrentEvent = new EventEmitter();\r\n  \r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  nextPage(): void {\r\n    this.nextPageEvent.emit(null);\r\n  }\r\n\r\n  previousPage(): void {\r\n    this.previousPageEvent.emit(null);\r\n  }\r\n  loadPageCurrent(PageCurrent:number): void {\r\n    //TODO::Fix this error. work fine in runtime\r\n    this.page.pageable.pageCurrent = PageCurrent;\r\n    this.loadPageCurrentEvent.emit(null);\r\n  }\r\n}\r\n","<div class=\"\" *ngIf=\"page.totalElements == 0\">\r\n  <div class=\"text-center bg-red noresult\">\r\n    <span class=\"font-italic\">{{'PageNoResult' | translate }} </span><span>&#9785;</span>\r\n  </div>\r\n</div>\r\n<div *ngIf=\"page && page.totalElements > 0\" class=\"card-actions align-items-center justify-content-end\">\r\n  <a class=\"btn btn-outline\" [ngClass]=\"{'disabled': page.pageable.IsFirst }\" (click)=\"previousPage()\">\r\n    {{'PagePrevious' | translate }}\r\n  </a>\r\n  <li *ngFor=\"let indexItem of page.pageable.PageDisplayList\" class=\"btn btn-outline\"\r\n    [ngClass]=\"{'disabled pageActive': page.pageable.pageCurrent == indexItem }\" (click)=\"loadPageCurrent(indexItem)\">\r\n    <i>{{indexItem}}</i>\r\n  </li>\r\n  <li class=\"btn btn-outline\" [ngClass]=\"{'disabled': page.pageable.IsLast }\" (click)=\"nextPage()\">\r\n    {{'PageNext' | translate }}\r\n  </li>\r\n</div>","//import  { Sort } from './sort';\r\nimport  { Pageable } from './pageable';\r\n\r\nexport class Page<T> {\r\n  content: Array<T>;\r\n  pageable: Pageable;\r\n  \r\n  private _totalElements: number;\r\n  public get totalElements(): number {\r\n    return this._totalElements;\r\n  }\r\n  public set totalElements(value: number) {\r\n    \r\n    this._totalElements = value;\r\n    this.pageable.PageTotalCount = Math.ceil((this.totalElements/this.pageable.pageSize))\r\n    this.pageable.PageTotalCount = this.pageable.PageTotalCount == 0 ? 1 : this.pageable.PageTotalCount;\r\n  }\r\n  \r\n  public constructor() {\r\n    this.pageable = new Pageable();\r\n  }\r\n}\r\n","import { Constants } from 'src/app/constants';\r\n\r\nexport class Pageable {\r\n  \r\n  PageDisplayCount: number = 5;\r\n  PageDisplayList: Array<number>;\r\n  IsFirst: boolean = true;\r\n  IsLast: boolean = false;\r\n\r\n  private _pageSize: number;\r\n  public get pageSize(): number {\r\n    return this._pageSize;\r\n  }\r\n  public set pageSize(value: number) {\r\n    this._pageSize = value;\r\n  }\r\n\r\n  private _PageTotalCount: number = -1;\r\n  public get PageTotalCount(): number {\r\n    return this._PageTotalCount;\r\n  }\r\n  public set PageTotalCount(value: number) {\r\n    this._PageTotalCount = value;\r\n    this.CalculateLastFirst();\r\n    this.calculateDisplayPage();\r\n  }\r\n\r\n  private _pageCurrent: number;\r\n  public get pageCurrent(): number {\r\n    return this._pageCurrent;\r\n  }\r\n  public set pageCurrent(value: number) {\r\n    if(value <= 0 )\r\n      value = 1;\r\n    \r\n    if(value > this.PageTotalCount && this.PageTotalCount != -1)\r\n      value = this.PageTotalCount;\r\n\r\n    this._pageCurrent = value;\r\n    this.CalculateLastFirst();\r\n    this.calculateDisplayPage();\r\n  }\r\n  private CalculateLastFirst(){\r\n    if(this._pageCurrent == 1)\r\n      this.IsFirst = true;\r\n    else\r\n      this.IsFirst = false;\r\n    \r\n    if(this._pageCurrent == this.PageTotalCount && this.PageTotalCount != -1)\r\n      this.IsLast = true;\r\n    else\r\n      this.IsLast = false;\r\n\r\n    if(this.PageTotalCount == -1)\r\n    {\r\n      this.PageTotalCount = 1;\r\n      this.IsLast = true;\r\n      this.IsFirst = true;\r\n    }\r\n  }\r\n  private calculateDisplayPage()\r\n  {\r\n    \r\n    this.PageDisplayList = [];\r\n    let indexStart = this.pageCurrent - this.PageDisplayCount;\r\n    let indexEnd   = this.pageCurrent + this.PageDisplayCount;\r\n    \r\n    // if(this.pageSize == 1 && this.pageCurrent == 1)\r\n    // {\r\n    //   this.PageDisplayList.push(1);\r\n    //   return;\r\n    // }\r\n    if(indexStart <= 0)\r\n      indexStart = 1;\r\n    if(indexEnd > this.PageTotalCount)\r\n      indexEnd = this.PageTotalCount;\r\n\r\n      for(let i=indexStart;i<=indexEnd;i++)\r\n      {\r\n        this.PageDisplayList.push(i);\r\n      }\r\n  }\r\n\r\n  public constructor() {\r\n    this.pageSize = Constants.PAGE_SIZE;\r\n    this.pageCurrent = Constants.PAGE_FIRST_NUMBER;\r\n    this.PageDisplayCount = Constants.PAGE_Display_Count;\r\n    //this.calculateDisplayPage();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Page } from '../../pagination/page';\r\nimport { Pageable } from '../../pagination/pageable';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CustomPaginationService {\r\n\r\n  constructor() { }\r\n\r\n  public getNextPage(page: Page<any>): Pageable {\r\n    if(!page.pageable.IsLast) {\r\n      page.pageable.pageCurrent = page.pageable.pageCurrent+1;\r\n    }\r\n    return page.pageable;\r\n  }\r\n\r\n  public getPreviousPage(page: Page<any>): Pageable {\r\n    if(!page.pageable.IsFirst) {\r\n      page.pageable.pageCurrent = page.pageable.pageCurrent-1;\r\n    }\r\n    return page.pageable;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatButtonModule, MatTableModule, MatInputModule, MatSelectModule, MatFormFieldModule, MatIconModule, MatRadioModule, MatCheckboxModule, MAT_LABEL_GLOBAL_OPTIONS, MatMenuModule, MatMenu, MatTabsModule, MatTooltipModule, MatAutocompleteModule, MatSlideToggleModule, MatExpansionModule } from '@angular/material';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { TypeaheadModule } from 'ngx-bootstrap/typeahead';\r\nimport { AtomSpinnerModule } from 'angular-epic-spinners';\r\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime';\r\n//import { OwlTooltipModule } from 'owl-ng';\r\n\r\nimport { CustomPaginationComponent } from './pagination/components/custom-pagination/custom-pagination.component';\r\nimport { SearchPartnerComponent } from './formcontrols/search-partner/search-partner.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { SearchSubPartnerComponent } from './formcontrols/search-sub-partner/search-sub-partner.component';\r\nimport { SearchSubPartnerEntityComponent } from './formcontrols/search-sub-partner-entity/search-sub-partner-entity.component';\r\nimport { AutoCompeletListGenericComponent } from './FormControls/auto-compelet-list-generic/auto-compelet-list-generic.component';\r\nimport { SearchPartnerEntityComponent } from './FormControls/search-partner-entity/search-partner-entity.component';\r\nimport { AddTraineeComponent } from './add-trainee/add-trainee.component';\r\nimport { SearchTraineeComponent } from './FormControls/search-trainee/search-trainee.component';\r\nimport { CreateFormComponent } from './ConfigForms/AdminConfig/create-form/create-form.component';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { ConfirmationDialogComponent } from './confirmation-dialog/confirmation-dialog.component';\r\nimport { InputComponent } from './ConfigForms/components/input/input.component';\r\nimport { ButtonComponent } from './ConfigForms/components/button/button.component';\r\nimport { SelectComponent } from './ConfigForms/components/select/select.component';\r\nimport { SelectMultiComponent } from './ConfigForms/components/SelectMulti/selectmulti.component';\r\nimport { DynamicFieldDirective } from './ConfigForms/components/dynamic-field/dynamic-field.directive';\r\nimport { DynamicFormComponent } from './ConfigForms/components/dynamic-form/dynamic-form.component';\r\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { AngularEditorModule } from '@kolkov/angular-editor';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CustomPaginationComponent,\r\n    SearchPartnerComponent,\r\n    SearchPartnerEntityComponent,\r\n    SearchSubPartnerComponent,\r\n    SearchSubPartnerEntityComponent,\r\n    AutoCompeletListGenericComponent,\r\n    AddTraineeComponent,\r\n    SearchTraineeComponent,\r\n    CreateFormComponent,\r\n    ConfirmationDialogComponent,\r\n    InputComponent,\r\n    ButtonComponent,\r\n    SelectComponent,\r\n    SelectMultiComponent,\r\n    DynamicFieldDirective,\r\n    DynamicFormComponent,\r\n  ],\r\n  imports: [\r\n    OwlDateTimeModule, \r\n    OwlNativeDateTimeModule,\r\n    BrowserModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    AtomSpinnerModule,\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule,\r\n    MatButtonModule,\r\n    MatTableModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatFormFieldModule,\r\n    MatTooltipModule,\r\n    MatTabsModule,\r\n    MatIconModule,\r\n    MatMenuModule,\r\n    MatRadioModule,\r\n    MatCheckboxModule,\r\n    MatExpansionModule,\r\n    MatAutocompleteModule,\r\n    AngularEditorModule,\r\n    TypeaheadModule.forRoot(),\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: httpTranslateLoader,\r\n        deps: [HttpClient]\r\n      }\r\n    })\r\n  ],\r\n  exports: [\r\n    AutoCompeletListGenericComponent,\r\n    CustomPaginationComponent,\r\n    SearchPartnerComponent,\r\n    SearchPartnerEntityComponent,\r\n    SearchSubPartnerComponent,\r\n    SearchSubPartnerEntityComponent,\r\n    SearchTraineeComponent,\r\n    AddTraineeComponent,\r\n    CommonModule,\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    MatButtonModule,\r\n    MatTableModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatFormFieldModule,\r\n    MatTooltipModule,\r\n    MatTabsModule,\r\n    MatIconModule,\r\n    MatMenuModule,\r\n    MatRadioModule,\r\n    MatCheckboxModule,\r\n    ReactiveFormsModule,\r\n    MatAutocompleteModule,\r\n    MatMenuModule,\r\n    MatSlideToggleModule,\r\n    AtomSpinnerModule,\r\n    TypeaheadModule,\r\n    OwlDateTimeModule, \r\n    OwlNativeDateTimeModule,\r\n    BrowserAnimationsModule,\r\n    CreateFormComponent,\r\n    DynamicFieldDirective,\r\n    DynamicFormComponent,\r\n    MatExpansionModule,\r\n    TranslateModule,\r\n    AngularEditorModule\r\n  ],\r\n  providers: [\r\n    // { provide: MAT_LABEL_GLOBAL_OPTIONS, useValue: { float: 'auto' } }\r\n  ]\r\n})\r\nexport class SharedModule { }\r\n// AOT compilation support\r\nexport function httpTranslateLoader(http: HttpClient) {\r\n  return new TranslateHttpLoader(http);\r\n}","import { Component, OnInit } from '@angular/core';\nimport { ConfigForm } from 'src/app/Enum/ConfigForm.enum';\n\n@Component({\n  selector: 'app-config-request-register',\n  templateUrl: './config-request-register.component.html',\n  styleUrls: ['./config-request-register.component.css']\n})\nexport class ConfigRequestRegisterComponent implements OnInit {\n  pageTitle: string = \"Config Request Registeration\";\n  formType: ConfigForm = ConfigForm.RequestRegister;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section class=\"my-5\">\n    <div class=\"container\">\n        <div class='row'>\n            <h4 class=\"mb-4\">{{'ConfigRequestRegisteration' | translate }}</h4>\n        </div>\n        <div class=\"row\">\n            <app-create-form [pageTitle]=\"'ConfigRequestRegisterationForm' | translate \" [formType]=\"formType\"></app-create-form>\n        </div>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { ConfigForm } from 'src/app/Enum/ConfigForm.enum';\n\n@Component({\n  selector: 'app-config-trainee',\n  templateUrl: './config-trainee.component.html',\n  styleUrls: ['./config-trainee.component.css']\n})\nexport class ConfigTraineeComponent implements OnInit {\n  pageTitle: string = \"Config Trainee\";\n  formType: ConfigForm = ConfigForm.Trainee;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section class=\"my-5\">\n    <div class=\"container\">\n        <div class='row'>\n            <h4 class=\"mb-4\">{{'ConfigTrainee' | translate }}</h4>\n        </div>\n        <div class=\"row\">\n            <app-create-form [pageTitle]=\"'ConfigTraineeRegisterationForm'| translate \" [formType]=\"formType\"></app-create-form>\n        </div>\n    </div>\n</section>","\r\nexport class Constants {\r\n\tstatic readonly clientId = 'spa-Tadrebat-client';\r\n\r\n\tstatic readonly clientRoot = 'http://www.ms-training.digisummits.com/';\r\n\tstatic readonly apiRoot = 'http://api.ms-training.digisummits.com/';\r\n\tstatic readonly stsAuthority = 'http://sts.ms-training.digisummits.com/';\r\n\tstatic readonly FilesURL = 'http://files.ms-training.digisummits.com/';\r\n\r\n\r\n\tstatic readonly EXAM_TIMER = 30;\r\n\tstatic readonly PAGE_SIZE = 3;\r\n\tstatic readonly PAGE_FIRST_NUMBER = 1;\r\n\tstatic readonly PAGE_Display_Count = 5;\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { Constants } from '../constants';\r\nimport { UserProfile } from '../model/user-profile';\r\nimport { CoreModule } from './core.module';\r\n\r\n@Injectable()\r\nexport class AccountService {\r\n    userProfile: UserProfile;\r\n    constructor(private _httpClient: HttpClient) { }\r\n      \r\n    getAllUsers(): Observable<UserProfile[]> {\r\n        return this._httpClient.get<UserProfile[]>(Constants.apiRoot + 'Account/Users');\r\n    }\r\n\r\n    createUserProfile(userProfile: UserProfile) {\r\n        return this._httpClient.post(`${Constants.apiRoot}Account/Profile`, userProfile);\r\n    }\r\n\r\n    updateUserProfile(userProfile: UserProfile) {\r\n        return this._httpClient.put(`${Constants.apiRoot}Account/Profile/${userProfile.id}`, userProfile);\r\n    }\r\n\r\n    register(userInfo: any) {\r\n        return this._httpClient.post(`${Constants.apiRoot}Account/Register`, userInfo);\r\n\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot } from '@angular/router';\r\nimport { AuthService } from './auth-service.component';\r\n\r\n@Injectable()\r\nexport class AdminRouteGuard implements CanActivate {\r\n    constructor(private _authService: AuthService) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n\r\n        return !!this._authService.authContext &&\r\n            this._authService.authContext.isAdmin;\r\n    }\r\n}\r\n@Injectable()\r\nexport class AdminPartnerRouteGuard implements CanActivate {\r\n    constructor(private _authService: AuthService) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        return (!!this._authService.authContext &&\r\n            (this._authService.authContext.isAdmin\r\n                || this._authService.authContext.isPartner));\r\n    }\r\n}\r\n@Injectable()\r\nexport class AdminPartnerSubPartnerRouteGuard implements CanActivate {\r\n    constructor(private _authService: AuthService) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        return (!!this._authService.authContext &&\r\n            (this._authService.authContext.isAdmin\r\n                || this._authService.authContext.isPartner\r\n                || this._authService.authContext.isSubPartner));\r\n    }\r\n}\r\n@Injectable()\r\nexport class TraineeRouteGuard implements CanActivate {\r\n    constructor(private _authService: AuthService) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        return (!!this._authService.authContext &&\r\n            this._authService.authContext.isTrainee);\r\n    }\r\n}","import { HttpEvent, HttpHandler, HttpHeaders, HttpInterceptor, HttpRequest, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { from, Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { Constants } from '../constants';\r\nimport { AuthService } from './auth-service.component';\r\nimport { Utils } from './utils';\r\nimport { ShowMessage } from '../interface/Model/ModelShowMessage.class';\r\nimport { ServiceShowMessage } from '../services/show-message.service';\r\n\r\n@Injectable()\r\nexport class AuthInterceptorService implements HttpInterceptor {\r\n  message: ShowMessage = new ShowMessage();\r\n\r\n  constructor(private _authService: AuthService,\r\n    private _router: Router,\r\n    private BLServiceShowMessage: ServiceShowMessage) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    if (req.url.startsWith(Constants.apiRoot) && req.url.toLowerCase().indexOf(\"misc\") == -1) {\r\n      return from(this._authService.getAccessToken().then(token => {\r\n        var lang = \"en\";\r\n        if (localStorage.getItem('lang'))\r\n          lang = localStorage.getItem('lang');\r\n\r\n        const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`).set(\"currentLang\", lang);\r\n        const authReq = req.clone({ headers });\r\n        return next.handle(authReq).pipe(tap(_ => { }, error => {\r\n          var respError = error as HttpErrorResponse;\r\n          if (respError && (respError.status === 401 || respError.status === 403)) {\r\n            this._router.navigate(['/unauthorized']);\r\n          }\r\n          if (respError && (respError.status === 400)) {\r\n            var msg = Utils.formatError(respError);\r\n            this.message.Error(msg);\r\n            this.BLServiceShowMessage.sendMessage(this.message);\r\n          }\r\n        })).toPromise();\r\n      }));\r\n    }\r\n    else {\r\n      return next.handle(req);\r\n    }\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { UserManager, User } from 'oidc-client';\r\nimport { Constants } from '../constants';\r\nimport { Subject } from 'rxjs';\r\nimport { CoreModule } from './core.module';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AuthContext } from '../model/auth-context';\r\nimport * as Oidc from 'oidc-client';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n  private _userManager: UserManager;\r\n  private _user: User;\r\n  private _loginChangedSubject = new Subject<boolean>();\r\n  private _authContextSubject = new Subject<AuthContext>();\r\n  loginChanged = this._loginChangedSubject.asObservable();\r\n  authContextChanged = this._authContextSubject.asObservable();\r\n\r\n  authContext: AuthContext;\r\n\r\n  constructor(private _httpClient: HttpClient) {\r\n    const stsSettings = {\r\n      authority: Constants.stsAuthority,\r\n      client_id: Constants.clientId,\r\n      redirect_uri: `${Constants.clientRoot}signin-callback`,\r\n      scope: 'openid profile projects-api',\r\n      response_type: 'code',\r\n      post_logout_redirect_uri: `${Constants.clientRoot}signout-callback`,\r\n      automaticSilentRenew: true,\r\n      //silent_redirect_uri: `${Constants.clientRoot}core/silent-callback/silent-callback.component.html`\r\n      silent_redirect_uri: `${Constants.clientRoot}assets/silent-callback.html`\r\n    };\r\n    this._userManager = new UserManager(stsSettings);\r\n    this._userManager.startSilentRenew();\r\n    this._userManager.events.addAccessTokenExpired(_ => {\r\n      this._loginChangedSubject.next(false);\r\n    });\r\n    this._userManager.events.addUserLoaded(user => {\r\n      if (this._user !== user) {\r\n        this._user = user;\r\n        this.loadSecurityContext();\r\n        this._loginChangedSubject.next(!!user && !user.expired);\r\n      }\r\n    });\r\n\r\n  }\r\n  CheckLogin() {\r\n    this._userManager.signinSilent();\r\n  }\r\n  login() {\r\n    return this._userManager.signinRedirect();\r\n  }\r\n\r\n  isLoggedIn(): Promise<boolean> {\r\n    return this._userManager.getUser().then(user => {\r\n      const userCurrent = !!user && !user.expired;\r\n      if (this._user !== user) {\r\n        this._loginChangedSubject.next(userCurrent);\r\n      }\r\n      if (userCurrent && !this.authContext) {\r\n\r\n        this.loadSecurityContext();\r\n      }\r\n      this._user = user;\r\n      return userCurrent;\r\n    });\r\n  }\r\n\r\n  completeLogin() {\r\n\r\n    return this._userManager.signinRedirectCallback().then(user => {\r\n      this._user = user;\r\n      this._loginChangedSubject.next(!!user && !user.expired);\r\n      return user;\r\n    });\r\n  }\r\n  logout() {\r\n    this._userManager.signoutRedirect();\r\n  }\r\n\r\n  completeLogout() {\r\n    this._user = null;\r\n    this._loginChangedSubject.next(false);\r\n    return this._userManager.signoutRedirectCallback();\r\n  }\r\n\r\n  getAccessToken() {\r\n    return this._userManager.getUser().then(user => {\r\n      if (!!user && !user.expired) {\r\n        return user.access_token;\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    });\r\n  }\r\n\r\n  loadSecurityContext() {\r\n    this._httpClient\r\n      .get<AuthContext>(`${Constants.apiRoot}Account/AuthContext`)\r\n      .subscribe(\r\n        context => {\r\n\r\n          this.authContext = new AuthContext();\r\n          this.authContext.claims = context.claims;\r\n          this.authContext.userProfile = context.userProfile;\r\n          this._authContextSubject.next(this.authContext);\r\n        },\r\n        error => {}//console.error(error)\r\n      );\r\n  }\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { AuthInterceptorService } from './auth-interceptor.service';\r\nimport { AuthService } from './auth-service.component';\r\nimport { AccountService } from './account.service';\r\nimport { ProjectService } from './project.service';\r\nimport { AdminRouteGuard } from './admin-route-guard';\r\n\r\n@NgModule({\r\n    imports: [],\r\n    exports: [],\r\n    declarations: [],\r\n    providers: [\r\n        AuthService,\r\n        AccountService,\r\n        ProjectService,\r\n        AdminRouteGuard,\r\n        { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptorService, multi: true }\r\n    ],\r\n})\r\nexport class CoreModule { }\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, from } from 'rxjs';\r\nimport { Constants } from '../constants';\r\nimport { Milestone } from '../model/milestone';\r\nimport { MilestoneStatus } from '../model/milestone-status';\r\nimport { Project } from '../model/project';\r\nimport { UserPermission } from '../model/user-permission';\r\nimport { UserProfile } from '../model/user-profile';\r\nimport { CoreModule } from './core.module';\r\nimport { AuthService } from './auth-service.component';\r\n\r\n\r\n@Injectable()\r\nexport class ProjectService {\r\n    constructor(private _httpClient: HttpClient,\r\n                private _authService: AuthService) { }\r\n    \r\n    getProjects(): Observable<Project[]> {\r\n        return from(this._authService.getAccessToken().then(token => {\r\n            const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\r\n            return this._httpClient.get<Project[]>(Constants.apiRoot + 'Projects/GetProjects', {headers: headers}).toPromise();\r\n        }));\r\n    }\r\n\r\n    getProject(projectId: number): Observable<Project> {\r\n        return this._httpClient.get<Project>(Constants.apiRoot + 'Projects/' + projectId);\r\n    }\r\n\r\n    getProjectUsers(projectId: number): Observable<UserProfile[]> {\r\n        return this._httpClient.get<UserProfile[]>(Constants.apiRoot + 'Projects/' + projectId + '/Users');\r\n    }\r\n\r\n    addProject(project: Project): Observable<Project> {\r\n        return this._httpClient.post<Project>(Constants.apiRoot + 'Projects', project);\r\n    }\r\n\r\n    deleteProject(project: Project): Observable<object> {\r\n        return this._httpClient.delete(Constants.apiRoot + 'Projects/' + project.id);\r\n    }\r\n\r\n    addUserPermission(userPermission: UserPermission) {\r\n        return this._httpClient.post(Constants.apiRoot + 'UserPermissions', userPermission);\r\n    }\r\n\r\n    removeUserPermission(userId: string, projectId: number) {\r\n        return this._httpClient.delete(`${Constants.apiRoot}UserPermissions/?userId=${userId}&projectId=${projectId}`);\r\n    }\r\n\r\n    updateUserPermission(userPermission) {\r\n        return this._httpClient.put(`${Constants.apiRoot}UserPermissions`, userPermission);\r\n    }\r\n\r\n    getMilestones(projectId: number): Observable<Milestone[]> {\r\n        return this._httpClient.get<Milestone[]>(Constants.apiRoot + 'Milestone');\r\n    }\r\n\r\n    getMilestoneStatuses() {\r\n        return this._httpClient.get<MilestoneStatus[]>(`${Constants.apiRoot}Projects/MilestoneStatuses`);\r\n    }\r\n\r\n    addMilestone(milestone: Milestone) {\r\n        return this._httpClient.post(`${Constants.apiRoot}Projects/Milestones`, milestone);\r\n    }\r\n\r\n    deleteMilestone(id: number) {\r\n        return this._httpClient.delete(`${Constants.apiRoot}Projects/Milestones/${id}`);\r\n    }\r\n\r\n    updateMilestone(milestone: Milestone) {\r\n        return this._httpClient.put(`${Constants.apiRoot}Projects/Milestones/${milestone.id}`, milestone);\r\n    }\r\n}","import { HttpErrorResponse } from \"@angular/common/http\";\r\nimport { ShowMessage } from '../interface/Model/ModelShowMessage.class';\r\nimport { ServiceShowMessage } from '../services/show-message.service';\r\n\r\nexport class Utils {\r\n\r\n  public static formatError(error: HttpErrorResponse): string {\r\n    if (error.error instanceof ErrorEvent) {\r\n      // A client-side or network error occurred. Handle it accordingly.\r\n      return 'An error occurred: ' + error.error.message;\r\n    } else {\r\n      // The backend returned an unsuccessful response code.\r\n      // The response body may contain clues as to what went wrong,\r\n      let msg = \"Unknown error\";\r\n      if (error.error && typeof error.error === 'string') {\r\n        msg = <string>error.error;\r\n      }\r\n      else if (error.message) {\r\n        msg = error.message;\r\n      }\r\n      console.log(`Backend returned code ${error.status}, ${error.error}`);\r\n\r\n      return ` ${error.error}`;\r\n    }\r\n  };\r\n\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-contactus',\r\n    templateUrl: 'contact-us.component.html'\r\n})\r\n\r\nexport class ContactUsComponent implements OnInit {\r\n    constructor() { }\r\n\r\n    ngOnInit() { }\r\n    \r\n}","<div>Contact Us</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ServiceShowMessage } from '../services/show-message.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ShowMessage } from '../interface/Model/ModelShowMessage.class';\r\nimport { ModelContentData } from '../interface/Model/ModelContentData.class';\r\nimport { EnumContentData } from '../Enum/ContentData.enum';\r\nimport { ServiceContentData } from '../services/content-data.service';\r\nimport { ServiceMisc } from '../services/misc.service';\r\nimport { StatsCount } from '../interface/Response/StatsCount.class';\r\n\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: 'home.component.html'\r\n})\r\n\r\nexport class HomeComponent implements OnInit {\r\n  \r\n  msgShow: ShowMessage = new ShowMessage();\r\n  modelAboutData: ModelContentData = new ModelContentData();\r\n  modelInfoData: ModelContentData = new ModelContentData();\r\n  objStats: StatsCount = new StatsCount();\r\n\r\n  constructor(private route: ActivatedRoute,\r\n    private BLServiceMisc: ServiceMisc,\r\n    private BLServiceMessage: ServiceShowMessage) { }\r\n\r\n  ngOnInit() {\r\n    const msgRedirect = this.route.snapshot.paramMap.get('msg');\r\n    const msgIsSuccess = this.route.snapshot.paramMap.get('isSuccess');\r\n    if (msgRedirect) {\r\n      var isSuccess = false;\r\n      if (msgIsSuccess)\r\n        isSuccess = msgIsSuccess.toLowerCase() == \"true\" ? true : false;\r\n\r\n      this.msgShow.Send(msgRedirect, isSuccess);\r\n      this.BLServiceMessage.sendMessage(this.msgShow);\r\n    }\r\n    this.loadData();\r\n  }\r\n  loadData() {\r\n    this.BLServiceMisc.ContentDataOneGetByTypeId(EnumContentData.About).subscribe({\r\n      next: obj => {\r\n        this.modelAboutData = obj;\r\n      },\r\n      error: err => this.msgShow.Error(err)\r\n    });\r\n    this.BLServiceMisc.ContentDataOneGetByTypeId(EnumContentData.Info).subscribe({\r\n      next: obj => {\r\n        this.modelInfoData = obj;\r\n      },\r\n      error: err => this.msgShow.Error(err)\r\n    });\r\n    this.BLServiceMisc.GetStats().subscribe({\r\n      next: obj => {\r\n        this.objStats = obj;\r\n      },\r\n      error: err => this.msgShow.Error(err)\r\n    });\r\n  }\r\n}","<section class=\"homeslide mb-5\">\r\n    <div id=\"slideshow\" class=\"carousel slide carousel-fade\" data-ride=\"carousel\">\r\n        <ol class=\"carousel-indicators\">\r\n            <li data-target=\"#slideshow\" data-slide-to=\"0\" class=\"active\"></li>\r\n            <li data-target=\"#slideshow\" data-slide-to=\"1\"></li>\r\n            <li data-target=\"#slideshow\" data-slide-to=\"2\"></li>\r\n        </ol>\r\n        <div class=\"carousel-inner\">\r\n            <div class=\"carousel-item active\">\r\n                <div class=\"slideshow\" style=\"background-image: url(assets/img/test-img/slideshow-01.jpg)\"></div>\r\n                <img src=\"assets/img/test-img/slideshow-01.jpg\" class=\"img-fluid d-none\" alt=\"\" />\r\n                <div class=\"carousel-caption\">\r\n                    <p class=\"p-pre-wrap\">{{modelInfoData.Data}}</p>\r\n                </div>\r\n            </div>\r\n            <!-- <div class=\"carousel-item\">\r\n                <div class=\"slideshow\" style=\"background-image: url(assets/img/test-img/slideshow-02.jpg)\"></div>\r\n                <img src=\"assets/img/test-img/slideshow-02.jpg\" class=\"img-fluid d-none\" alt=\"\" />\r\n                <div class=\"carousel-caption\">\r\n                    <p class=\"p-pre-wrap\">Lorem ipsum dolor sit amet, sectetu adip scing varius interdum incid unt quis,\r\n                        libero aenean mturpis.\r\n                        Maecenas hendrerit masa laoreet iaculipede mnisl ulamcorper. Tellus er sodales enim, in\r\n                        tincidunt mauris in odio. Massa ac laoreet iaculipede nisl ullamcorpermassa, ac consectetuer\r\n                        feipsum eget pede. Proin nunc, Donec massa, Nulla pulvinar, nisl ac convallis nonummy.</p>\r\n                </div>\r\n            </div>\r\n            <div class=\"carousel-item\">\r\n                <div class=\"slideshow\" style=\"background-image: url(assets/img/test-img/slideshow-03.jpg)\"></div>\r\n                <img src=\"assets/img/test-img/slideshow-03.jpg\" class=\"img-fluid d-none\" alt=\"\" />\r\n                <div class=\"carousel-caption\">\r\n                    <p class=\"p-pre-wrap\">Lorem ipsum dolor sit amet, sectetu adip scing varius interdum incid unt quis,\r\n                        libero aenean mturpis.\r\n                        Maecenas hendrerit masa laoreet iaculipede mnisl ulamcorper. Tellus er sodales enim, in\r\n                        tincidunt mauris in odio. Massa ac laoreet iaculipede nisl ullamcorpermassa, ac consectetuer\r\n                        feipsum eget pede. Proin nunc, Donec massa, Nulla pulvinar, nisl ac convallis nonummy.</p>\r\n                </div>\r\n            </div> -->\r\n        </div>\r\n        <a class=\"carousel-control-prev\" href=\"#slideshow\" role=\"button\" data-slide=\"prev\">\r\n            <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n            <span class=\"sr-only\">Previous</span>\r\n        </a>\r\n        <a class=\"carousel-control-next\" href=\"#slideshow\" role=\"button\" data-slide=\"next\">\r\n            <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n            <span class=\"sr-only\">Next</span>\r\n        </a>\r\n    </div>\r\n</section>\r\n\r\n\r\n\r\n<section class=\"mb-5\" *ngIf=\"modelAboutData\">\r\n    <div class=\"container\">\r\n        <h1 class=\"mb-3 pt-5 text-center in-tit\">{{modelAboutData.Name}}</h1>\r\n        <p class=\"w-75 mx-auto text-center p-pre-wrap\">{{modelAboutData.Data}}</p>\r\n    </div>\r\n</section>\r\n\r\n\r\n<section class=\"mb-1 pt-5 border-top border-bottom\">\r\n    <div class=\"container-fluid text-center\">\r\n\r\n        <div class=\"counter-one\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xs-12 col-sm-6 col-md-4 mb-5\">\r\n                    <div class=\"counter-one\">\r\n                        <div class=\"counter-content\" data-count=\"97\">\r\n                            <h1 class=\"counter-number mb-4\">{{objStats.TraineeCount}}</h1>\r\n                            <h5>{{'GenericTrainee' | translate }}</h5>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-xs-12 col-sm-6 col-md-4 mb-5\">\r\n                    <div class=\"counter-one\">\r\n                        <div class=\"counter-content\" data-count=\"169\">\r\n                            <h1 class=\"counter-number mb-4\">{{objStats.TrainingCount}}</h1>\r\n                            <h5>{{'HeaderTraining' | translate }}</h5>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-xs-12 col-sm-6 col-md-4 mb-5\">\r\n                    <div class=\"counter-one\">\r\n                        <div class=\"counter-content\" data-count=\"30\">\r\n                            <h1 class=\"counter-number mb-4\">{{objStats.TrainerCount}}</h1>\r\n                            <h5>{{'GenericTrainer' | translate }}</h5>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</section>\r\n\r\n<!-- \r\n<section class=\"mb-5 py-3\">\r\n    <div class=\"container-fluid\">\r\n        <h4 class=\"mb-3 pt-5 text-center\">Our Services</h4>\r\n        <div class=\"row\">\r\n\r\n            <div class=\"col-xl-4 col-md-6\">\r\n                <div class=\"card\">\r\n                    <a href=\"javascript:void(0)\">\r\n                        <div class=\"card-header-img\" style=\"background-image: url(assets/img/test-img/img-01.jpg)\"></div>\r\n                        <img src=\"assets/img/test-img/img-01.jpg\" class=\"img-fluid d-none\" alt=\"\" />\r\n                    </a>\r\n                    <div class=\"card-body pt-0\">\r\n                        <a href=\"javascript:void(0)\">\r\n                            <h5 class=\"card-title color-text-01 my-2\">Service 01</h5>\r\n                        </a>\r\n                        <p class=\"p-pre-wrap max-text\">Lorem ipsum dolor sit amet, sectetu adip scing varius interdum\r\n                            incid unt quis, libero aenean mturpis. masa laoreet iaculipede mnisl ulamcorper. Tellus er\r\n                            sodales enim, in tincidunt mauris in odio. Massa ac laoreet iaculipede nisl\r\n                            ullamcorpermassa, ac consectetuer feipsum eget pede. Proin nunc, Donec massa, Nulla\r\n                            pulvinar, nisl ac convallis nonummy.</p>\r\n                    </div>\r\n                    <div class=\"card-footer\">\r\n                        <ul class=\"footer-det\">\r\n                            <li><a href=\"javascript:void(0)\" class=\"btn color-bg-02 btn-sm white-text\">More</a></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"col-xl-4 col-md-6\">\r\n                <div class=\"card\">\r\n                    <a href=\"javascript:void(0)\">\r\n                        <div class=\"card-header-img\" style=\"background-image: url(assets/img/test-img/img-02.jpg)\"></div>\r\n                        <img src=\"assets/img/test-img/img-15.jpg\" class=\"img-fluid d-none\" alt=\"\" />\r\n                    </a>\r\n                    <div class=\"card-body pt-0\">\r\n                        <a href=\"javascript:void(0)\">\r\n                            <h5 class=\"card-title color-text-01 my-2\">Service 02</h5>\r\n                        </a>\r\n                        <p class=\"p-pre-wrap max-text\">Lorem ipsum dolor sit amet, sectetu adip scing varius interdum\r\n                            incid unt quis, libero aenean mturpis. masa laoreet iaculipede mnisl ulamcorper. Tellus er\r\n                            sodales enim, in tincidunt mauris in odio. Massa ac laoreet iaculipede nisl\r\n                            ullamcorpermassa, ac consectetuer feipsum eget pede. Proin nunc, Donec massa, Nulla\r\n                            pulvinar, nisl ac convallis nonummy.</p>\r\n                    </div>\r\n                    <div class=\"card-footer\">\r\n                        <ul class=\"footer-det\">\r\n                            <li><a href=\"javascript:void(0)\" class=\"btn color-bg-02 btn-sm white-text\">More</a></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"col-xl-4 col-md-6\">\r\n                <div class=\"card\">\r\n                    <a href=\"javascript:void(0)\">\r\n                        <div class=\"card-header-img\" style=\"background-image: url(assets/img/test-img/img-03.jpg)\"></div>\r\n                        <img src=\"assets/img/test-img/img-09.jpg\" class=\"img-fluid d-none\" alt=\"\" />\r\n                    </a>\r\n                    <div class=\"card-body pt-0\">\r\n                        <a href=\"javascript:void(0)\">\r\n                            <h5 class=\"card-title color-text-01 my-2\">Service 03</h5>\r\n                        </a>\r\n                        <p class=\"p-pre-wrap max-text\">Lorem ipsum dolor sit amet, sectetu adip scing varius interdum\r\n                            incid unt quis, libero aenean mturpis. masa laoreet iaculipede mnisl ulamcorper. Tellus er\r\n                            sodales enim, in tincidunt mauris in odio. Massa ac laoreet iaculipede nisl\r\n                            ullamcorpermassa, ac consectetuer feipsum eget pede. Proin nunc, Donec massa, Nulla\r\n                            pulvinar, nisl ac convallis nonummy.</p>\r\n                    </div>\r\n                    <div class=\"card-footer\">\r\n                        <ul class=\"footer-det\">\r\n                            <li><a href=\"javascript:void(0)\" class=\"btn color-bg-02 btn-sm white-text\">More</a></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</section>\r\n\r\n\r\n\r\n<section class=\"py-5\" data-stellar-background-ratio=\"0.5\">\r\n    <div class=\"home-art-bg\" style=\"background-image: url(assets/img/test-img/slideshow-04.jpg)\">\r\n        <div class=\"mask\"></div>\r\n        <div class=\"container-fluid text-mob-center\">\r\n            <div class=\"row\">\r\n\r\n                <div class=\"col-md-6 parallax-text\">\r\n                    <h1 class=\"mt-5\"><span>Ahmed Mahmoud</span> Trainer of The Month</h1>\r\n                    <p class=\"mt-5 p-pre-wrap\">Lorem ipsum dolor sit amet, sectetu adip scing varius interdum incid unt\r\n                        quis, libero aenean mturpis.\r\n                        Maecenas hendrerit masa laoreet iaculipede mnisl ulamcorper. Tellus er sodales enim, in\r\n                        tincidunt mauris in odio. Massa ac laoreet iaculipede nisl ullamcorpermassa, ac consectetuer\r\n                        feipsum eget pede. Proin nunc, Donec massa, Nulla pulvinar, nisl ac convallis nonummy.</p>\r\n                </div>\r\n\r\n                <div class=\"col-md-6\">\r\n                    <div class=\"icons-circle-img-02\" style=\"background-image: url(assets/img/test-img/img-17.jpg)\"></div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</section>\r\n\r\n\r\n\r\n<section class=\"mb-5\">\r\n    <div class=\"container-fluid\">\r\n        <h4 class=\"mb-3 text-center\">{{'GenericTrainingCenter' | translate }}s</h4>\r\n        <div class=\"row slider autoplay\">\r\n\r\n            <div class=\"col-xl-4 col-xxl-3 col-md-6\">\r\n                <div class=\"card card-theme-02\">\r\n                    <a href=\"javascript:void(0)\">\r\n                        <div class=\"card-header-img\" style=\"background-image: url(assets/img/test-img/img-04.jpg)\"></div>\r\n                        <img src=\"assets/img/test-img/img-01.jpg\" class=\"img-fluid d-none\" alt=\"\" />\r\n                    </a>\r\n                    <div class=\"card-body pt-0\">\r\n                        <a href=\"javascript:void(0)\">\r\n                            <h5 class=\"card-title color-text-01 my-2\">{{'GenericTrainingCenter' | translate }} 01</h5>\r\n                        </a>\r\n                        <p class=\"card-dest mb-2\"><i\r\n                                class=\"far fa-map-marker-alt color-text-02 mr-2\"></i><strong>Destination:</strong> Cairo\r\n                        </p>\r\n                        <p class=\"p-pre-wrap max-text\">Lorem ipsum dolor sit amet, sectetu adip scing varius interdum\r\n                            incid unt quis, libero aenean mturpis. masa laoreet iaculipede mnisl ulamcorper. Tellus er\r\n                            sodales enim, in tincidunt mauris in odio. Massa ac laoreet iaculipede nisl\r\n                            ullamcorpermassa, ac consectetuer feipsum eget pede. Proin nunc, Donec massa, Nulla\r\n                            pulvinar, nisl ac convallis nonummy.</p>\r\n                    </div>\r\n                    <div class=\"card-footer\">\r\n                        <ul class=\"footer-det\">\r\n                            <li><a href=\"javascript:void(0)\" class=\"btn color-bg-02 btn-sm white-text\">More</a></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"col-xl-4 col-xxl-3 col-md-6\">\r\n                <div class=\"card card-theme-02\">\r\n                    <a href=\"javascript:void(0)\">\r\n                        <div class=\"card-header-img\" style=\"background-image: url(assets/img/test-img/img-05.jpg)\"></div>\r\n                        <img src=\"assets/img/test-img/img-02.jpg\" class=\"img-fluid d-none\" alt=\"\" />\r\n                    </a>\r\n                    <div class=\"card-body pt-0\">\r\n                        <a href=\"javascript:void(0)\">\r\n                            <h5 class=\"card-title color-text-01 my-2\">{{'GenericTrainingCenter' | translate }} 02</h5>\r\n                        </a>\r\n                        <p class=\"card-dest mb-2\"><i\r\n                                class=\"far fa-map-marker-alt color-text-02 mr-2\"></i><strong>Destination:</strong>\r\n                            Alexandria</p>\r\n                        <p class=\"p-pre-wrap max-text\">Lorem ipsum dolor sit amet, sectetu adip scing varius interdum\r\n                            incid unt quis, libero aenean mturpis. masa laoreet iaculipede mnisl ulamcorper. Tellus er\r\n                            sodales enim, in tincidunt mauris in odio. Massa ac laoreet iaculipede nisl\r\n                            ullamcorpermassa, ac consectetuer feipsum eget pede. Proin nunc, Donec massa, Nulla\r\n                            pulvinar, nisl ac convallis nonummy.</p>\r\n                    </div>\r\n                    <div class=\"card-footer\">\r\n                        <ul class=\"footer-det\">\r\n                            <li><a href=\"javascript:void(0)\" class=\"btn color-bg-02 btn-sm white-text\">More</a></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"col-xl-4 col-xxl-3 col-md-6\">\r\n                <div class=\"card card-theme-02\">\r\n                    <a href=\"javascript:void(0)\">\r\n                        <div class=\"card-header-img\" style=\"background-image: url(assets/img/test-img/img-06.jpg)\"></div>\r\n                        <img src=\"assets/img/test-img/img-03.jpg\" class=\"img-fluid d-none\" alt=\"\" />\r\n                    </a>\r\n                    <div class=\"card-body pt-0\">\r\n                        <a href=\"javascript:void(0)\">\r\n                            <h5 class=\"card-title color-text-01 my-2\">{{'GenericTrainingCenter' | translate }} 03</h5>\r\n                        </a>\r\n                        <p class=\"card-dest mb-2\"><i\r\n                                class=\"far fa-map-marker-alt color-text-02 mr-2\"></i><strong>Destination:</strong> Aswan\r\n                        </p>\r\n                        <p class=\"p-pre-wrap max-text\">Lorem ipsum dolor sit amet, sectetu adip scing varius interdum\r\n                            incid unt quis, libero aenean mturpis. masa laoreet iaculipede mnisl ulamcorper. Tellus er\r\n                            sodales enim, in tincidunt mauris in odio. Massa ac laoreet iaculipede nisl\r\n                            ullamcorpermassa, ac consectetuer feipsum eget pede. Proin nunc, Donec massa, Nulla\r\n                            pulvinar, nisl ac convallis nonummy.</p>\r\n                    </div>\r\n                    <div class=\"card-footer\">\r\n                        <ul class=\"footer-det\">\r\n                            <li><a href=\"javascript:void(0)\" class=\"btn color-bg-02 btn-sm white-text\">More</a></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"col-xl-4 col-xxl-3 col-md-6\">\r\n                <div class=\"card card-theme-02\">\r\n                    <a href=\"javascript:void(0)\">\r\n                        <div class=\"card-header-img\" style=\"background-image: url(assets/img/test-img/img-07.jpg)\"></div>\r\n                        <img src=\"assets/img/test-img/img-04.jpg\" class=\"img-fluid d-none\" alt=\"\" />\r\n                    </a>\r\n                    <div class=\"card-body pt-0\">\r\n                        <a href=\"javascript:void(0)\">\r\n                            <h5 class=\"card-title color-text-01 my-2\">{{'GenericTrainingCenter' | translate }} 04</h5>\r\n                        </a>\r\n                        <p class=\"card-dest mb-2\"><i\r\n                                class=\"far fa-map-marker-alt color-text-02 mr-2\"></i><strong>Destination:</strong> Luxor\r\n                        </p>\r\n                        <p class=\"p-pre-wrap max-text\">Lorem ipsum dolor sit amet, sectetu adip scing varius interdum\r\n                            incid unt quis, libero aenean mturpis. masa laoreet iaculipede mnisl ulamcorper. Tellus er\r\n                            sodales enim, in tincidunt mauris in odio. Massa ac laoreet iaculipede nisl\r\n                            ullamcorpermassa, ac consectetuer feipsum eget pede. Proin nunc, Donec massa, Nulla\r\n                            pulvinar, nisl ac convallis nonummy.</p>\r\n                    </div>\r\n                    <div class=\"card-footer\">\r\n                        <ul class=\"footer-det\">\r\n                            <li><a href=\"javascript:void(0)\" class=\"btn color-bg-02 btn-sm white-text\">More</a></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"col-xl-4 col-xxl-3 col-md-6\">\r\n                <div class=\"card card-theme-02\">\r\n                    <a href=\"javascript:void(0)\">\r\n                        <div class=\"card-header-img\" style=\"background-image: url(assets/img/test-img/img-08.jpg)\"></div>\r\n                        <img src=\"assets/img/test-img/img-05.jpg\" class=\"img-fluid d-none\" alt=\"\" />\r\n                    </a>\r\n                    <div class=\"card-body pt-0\">\r\n                        <a href=\"javascript:void(0)\">\r\n                            <h5 class=\"card-title color-text-01 my-2\">{{'GenericTrainingCenter' | translate }} 05</h5>\r\n                        </a>\r\n                        <p class=\"card-dest mb-2\"><i\r\n                                class=\"far fa-map-marker-alt color-text-02 mr-2\"></i><strong>Destination:</strong>\r\n                            Hurghada</p>\r\n                        <p class=\"p-pre-wrap max-text\">Lorem ipsum dolor sit amet, sectetu adip scing varius interdum\r\n                            incid unt quis, libero aenean mturpis. masa laoreet iaculipede mnisl ulamcorper. Tellus er\r\n                            sodales enim, in tincidunt mauris in odio. Massa ac laoreet iaculipede nisl\r\n                            ullamcorpermassa, ac consectetuer feipsum eget pede. Proin nunc, Donec massa, Nulla\r\n                            pulvinar, nisl ac convallis nonummy.</p>\r\n                    </div>\r\n                    <div class=\"card-footer\">\r\n                        <ul class=\"footer-det\">\r\n                            <li><a href=\"javascript:void(0)\" class=\"btn color-bg-02 btn-sm white-text\">More</a></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"col-xl-4 col-xxl-3 col-md-6\">\r\n                <div class=\"card card-theme-02\">\r\n                    <a href=\"javascript:void(0)\">\r\n                        <div class=\"card-header-img\" style=\"background-image: url(assets/img/test-img/img-09.jpg)\"></div>\r\n                        <img src=\"assets/img/test-img/img-06.jpg\" class=\"img-fluid d-none\" alt=\"\" />\r\n                    </a>\r\n                    <div class=\"card-body pt-0\">\r\n                        <a href=\"javascript:void(0)\">\r\n                            <h5 class=\"card-title color-text-01 my-2\">{{'GenericTrainingCenter' | translate }} 06</h5>\r\n                        </a>\r\n                        <p class=\"card-dest mb-2\"><i\r\n                                class=\"far fa-map-marker-alt color-text-02 mr-2\"></i><strong>Destination:</strong> El\r\n                            Suez</p>\r\n                        <p class=\"p-pre-wrap max-text\">Lorem ipsum dolor sit amet, sectetu adip scing varius interdum\r\n                            incid unt quis, libero aenean mturpis. masa laoreet iaculipede mnisl ulamcorper. Tellus er\r\n                            sodales enim, in tincidunt mauris in odio. Massa ac laoreet iaculipede nisl\r\n                            ullamcorpermassa, ac consectetuer feipsum eget pede. Proin nunc, Donec massa, Nulla\r\n                            pulvinar, nisl ac convallis nonummy.</p>\r\n                    </div>\r\n                    <div class=\"card-footer\">\r\n                        <ul class=\"footer-det\">\r\n                            <li><a href=\"javascript:void(0)\" class=\"btn color-bg-02 btn-sm white-text\">More</a></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</section>\r\n\r\n\r\n\r\n<section class=\"\" data-stellar-background-ratio=\"0.5\">\r\n    <div class=\"home-art-bg\" style=\"background-image: url(assets/img/test-img/slideshow-05.jpg)\">\r\n        <img src=\"assets/img/test-img/slideshow-06.jpg\" class=\"img-fluid d-none\" alt=\"\" />\r\n        <div class=\"mask\"></div>\r\n        <div class=\"container-fluid\">\r\n            <div class=\"row\">\r\n\r\n                <div class=\"col-lg-3 col-md-6 mb-5 inf-lis\">\r\n                    <a href=\"javascript:void(0)\">\r\n                        <div class=\"icons-circle-img mb-1\" style=\"background-image: url(assets/img/test-img/img-10.jpg)\"></div>\r\n                        <img src=\"assets/img/test-img/img-07.jpg\" class=\"img-fluid d-none\" alt=\"\" />\r\n                    </a>\r\n                    <h5 class=\"my-2\">News &amp; Events 01</h5>\r\n                    <p class=\"p-pre-wrap max-text-02 mb-1\">Lorem ipsum dolor sit amet, sectetu adip scing varius\r\n                        interdum incid unt quis, libero aenean mturpis. Maecenas hendrerit masa laoreet iaculipede mnisl\r\n                        ulamcorper. Tellus er sodales enim, in tincidunt mauris in odio. Massa ac laoreet iaculipede\r\n                        nisl ullamcorpermassa, ac consectetuer feipsum eget pede. Proin nunc, Donec massa, Nulla\r\n                        pulvinar, nisl ac convallis nonummy.</p>\r\n                    <a href=\"javascript:void(0)\" class=\"link-color-04\">Read More<i\r\n                            class=\"fal fa-arrow-circle-right ml-2\"></i></a>\r\n                </div>\r\n\r\n                <div class=\"col-lg-3 col-md-6 mb-5 inf-lis\">\r\n                    <a href=\"javascript:void(0)\">\r\n                        <div class=\"icons-circle-img mb-1\" style=\"background-image: url(assets/img/test-img/img-11.jpg)\"></div>\r\n                        <img src=\"assets/img/test-img/img-08.jpg\" class=\"img-fluid d-none\" alt=\"\" />\r\n                    </a>\r\n                    <h5 class=\"my-2\">News &amp; Events 02</h5>\r\n                    <p class=\"p-pre-wrap max-text-02 mb-1\">Lorem ipsum dolor sit amet, sectetu adip scing varius\r\n                        interdum incid unt quis, libero aenean mturpis. Maecenas hendrerit masa laoreet iaculipede mnisl\r\n                        ulamcorper. Tellus er sodales enim, in tincidunt mauris in odio. Massa ac laoreet iaculipede\r\n                        nisl ullamcorpermassa, ac consectetuer feipsum eget pede. Proin nunc, Donec massa, Nulla\r\n                        pulvinar, nisl ac convallis nonummy.</p>\r\n                    <a href=\"javascript:void(0)\" class=\"link-color-04\">Read More<i\r\n                            class=\"fal fa-arrow-circle-right ml-2\"></i></a>\r\n                </div>\r\n\r\n                <div class=\"col-lg-3 col-md-6 mb-5 inf-lis\">\r\n                    <a href=\"javascript:void(0)\">\r\n                        <div class=\"icons-circle-img mb-1\" style=\"background-image: url(assets/img/test-img/img-12.jpg)\"></div>\r\n                        <img src=\"assets/img/test-img/img-09.jpg\" class=\"img-fluid d-none\" alt=\"\" />\r\n                    </a>\r\n                    <h5 class=\"my-2\">News &amp; Events 03</h5>\r\n                    <p class=\"p-pre-wrap max-text-02 mb-1\">Lorem ipsum dolor sit amet, sectetu adip scing varius\r\n                        interdum incid unt quis, libero aenean mturpis. Maecenas hendrerit masa laoreet iaculipede mnisl\r\n                        ulamcorper. Tellus er sodales enim, in tincidunt mauris in odio. Massa ac laoreet iaculipede\r\n                        nisl ullamcorpermassa, ac consectetuer feipsum eget pede. Proin nunc, Donec massa, Nulla\r\n                        pulvinar, nisl ac convallis nonummy.</p>\r\n                    <a href=\"javascript:void(0)\" class=\"link-color-04\">Read More<i\r\n                            class=\"fal fa-arrow-circle-right ml-2\"></i></a>\r\n                </div>\r\n\r\n                <div class=\"col-lg-3 col-md-6 mb-5 inf-lis\">\r\n                    <a href=\"javascript:void(0)\">\r\n                        <div class=\"icons-circle-img mb-1\" style=\"background-image: url(assets/img/test-img/img-13.jpg)\"></div>\r\n                        <img src=\"assets/img/test-img/img-10.jpg\" class=\"img-fluid d-none\" alt=\"\" />\r\n                    </a>\r\n                    <h5 class=\"my-2\">News &amp; Events 04</h5>\r\n                    <p class=\"p-pre-wrap max-text-02 mb-1\">Lorem ipsum dolor sit amet, sectetu adip scing varius\r\n                        interdum incid unt quis, libero aenean mturpis. Maecenas hendrerit masa laoreet iaculipede mnisl\r\n                        ulamcorper. Tellus er sodales enim, in tincidunt mauris in odio. Massa ac laoreet iaculipede\r\n                        nisl ullamcorpermassa, ac consectetuer feipsum eget pede. Proin nunc, Donec massa, Nulla\r\n                        pulvinar, nisl ac convallis nonummy.</p>\r\n                    <a href=\"javascript:void(0)\" class=\"link-color-04\">Read More<i\r\n                            class=\"fal fa-arrow-circle-right ml-2\"></i></a>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</section>\r\n\r\n\r\n\r\n<section class=\"pt-5 pb-5 gray-bg-01\">\r\n    <div class=\"container\">\r\n        <h4 class=\"mb-4 mt-3 text-center\">Latest Testimonials</h4>\r\n        <div class=\"row slider autoplay-02\">\r\n\r\n            <div class=\"col-xl-12 col-md-12 py-5 text-center\">\r\n                <i class=\"fal fa-quote-left\" style=\"font-size: 2rem; margin-right: 1rem;\"></i>\r\n                <img src=\"assets/img/test-img/img-14.jpg\" class=\"quote-img\" alt=\"\" />\r\n                <p class=\"p-pre-wrap\">Lorem ipsum dolor sit amet, sectetu adip scing varius interdum incid unt quis,\r\n                    libero aenean mturpis. Maecenas hendrerit masa laoreet iaculipede mnisl ulamcorper. Tellus er\r\n                    sodales enim, in tincidunt mauris in odio. Massa ac laoreet iaculipede nisl ullamcorpermassa, ac\r\n                    consectetuer feipsum eget pede. Proin nunc, Donec massa, Nulla pulvinar, nisl ac convallis nonummy.\r\n                </p>\r\n                <h6 class=\"mt-3\">Mr. Guest Name / Country</h6>\r\n                <i class=\"fal fa-quote-right\" style=\"font-size: 2rem; margin-left: 1rem;\"></i>\r\n            </div>\r\n\r\n            <div class=\"col-xl-12 col-md-12 py-5 text-center\">\r\n                <i class=\"fal fa-quote-left\" style=\"font-size: 2rem; margin-right: 1rem;\"></i>\r\n                <img src=\"assets/img/test-img/img-15.jpg\" class=\"quote-img\" alt=\"\" />\r\n                <p class=\"p-pre-wrap\">Lorem ipsum dolor sit amet, sectetu adip scing varius interdum incid unt quis,\r\n                    libero aenean mturpis.\r\n                    Maecenas hendrerit masa laoreet iaculipede mnisl ulamcorper. Tellus er sodales enim, in tincidunt\r\n                    mauris in odio. Massa ac laoreet iaculipede nisl ullamcorpermassa, ac consectetuer feipsum eget\r\n                    pede. Proin nunc, Donec massa, Nulla pulvinar, nisl ac convallis nonummy.</p>\r\n                <h6 class=\"mt-3\">Miss. Guest Name / Country</h6>\r\n                <i class=\"fal fa-quote-right\" style=\"font-size: 2rem; margin-left: 1rem;\"></i>\r\n            </div>\r\n\r\n            <div class=\"col-xl-12 col-md-12 py-5 text-center\">\r\n                <i class=\"fal fa-quote-left\" style=\"font-size: 2rem; margin-right: 1rem;\"></i>\r\n                <img src=\"assets/img/test-img/img-16.jpg\" class=\"quote-img\" alt=\"\" />\r\n                <p class=\"p-pre-wrap\">Lorem ipsum dolor sit amet, sectetu adip scing varius interdum incid unt quis,\r\n                    libero aenean mturpis.\r\n                    Maecenas hendrerit masa laoreet iaculipede mnisl ulamcorper. Tellus er sodales enim, in tincidunt\r\n                    mauris in odio. Massa ac laoreet iaculipede nisl ullamcorpermassa, ac consectetuer feipsum eget\r\n                    pede. Proin nunc, Donec massa, Nulla pulvinar, nisl ac convallis nonummy.</p>\r\n                <h6 class=\"mt-3\">Mrs. Guest Name / Country</h6>\r\n                <i class=\"fal fa-quote-right\" style=\"font-size: 2rem; margin-left: 1rem;\"></i>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</section> -->","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../core/auth-service.component';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-signin-callback',\r\n  template: `<div></div>`\r\n})\r\n\r\nexport class SigninRedirectCallbackComponent implements OnInit {\r\n  constructor(private _authService: AuthService,\r\n              private _router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this._authService.completeLogin().then(user => {\r\n      this._router.navigate(['/'], { replaceUrl: true });\r\n    })\r\n  }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../core/auth-service.component';\r\n\r\n@Component({\r\n  selector: 'app-signout-callback',\r\n  template: `<div></div>`\r\n})\r\n\r\nexport class SignoutRedirectCallbackComponent implements OnInit {\r\n  constructor(private _authService: AuthService,\r\n              private _router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this._authService.completeLogout().then(_ => {\r\n      this._router.navigate(['/'], { replaceUrl: true });\r\n    })\r\n  }\r\n}","import { Component, OnInit } from '@angular/core';\nimport { ModelContentData } from 'src/app/interface/Model/ModelContentData.class';\nimport { EnumContentData } from 'src/app/Enum/ContentData.enum';\nimport { ServiceMisc } from 'src/app/services/misc.service';\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\nimport { ShowMessage } from 'src/app/interface/Model/ModelShowMessage.class';\n\n@Component({\n  selector: 'app-terms',\n  templateUrl: './terms.component.html',\n  styleUrls: ['./terms.component.css']\n})\nexport class TermsComponent implements OnInit {\n\n  msgShow: ShowMessage = new ShowMessage();\n  modelData: ModelContentData = new ModelContentData();\n\n  constructor(private BLServiceMisc: ServiceMisc,\n    private BLServiceMessage: ServiceShowMessage) { \n\n  }\n\n  ngOnInit(): void {\n    this.BLServiceMisc.ContentDataOneGetByTypeId(EnumContentData.Terms).subscribe({\n      next: obj => {\n        this.modelData = obj;\n      },\n      error: err => this.msgShow.Error(err)\n    });\n  }\n\n}\n","<section class=\"my-5\">\n    <div class=\"container\">\n        <div class='row'>\n            <div class=\"editor\" [innerHTML]=\"modelData.Data\"></div>\n        </div>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../core/auth-service.component';\r\n\r\n@Component({\r\n  selector: 'app-unauthorized',\r\n  templateUrl: 'unauthorized.component.html'\r\n})\r\n\r\nexport class UnauthorizedComponent implements OnInit {\r\n  constructor(private _authService: AuthService) { }\r\n\r\n  ngOnInit() { }\r\n\r\n  logout() {\r\n    this._authService.logout();\r\n  }\r\n}","<div class=\"mat-title\" style=\"color: red; font-weight: bold\">I'm sorry but you have tried to access data or operations that you are not authorized for.</div>\r\n<a href=\"javascript:void(0)\" (click)=\"logout()\" class=\"mat-subheading-1\">Log out and log back in with another account.</a>\r\n","import { ModelPaging } from \"./ModelPaging.interface\"\r\n\r\nexport class ModelAccountSearch extends ModelPaging{\r\n    filterType: number;\r\n}","export class ModelArea\r\n{\r\n    Id: string;\r\n    CityId: string;\r\n    Name: string;\r\n}","export class ModelChangeEmail{\r\n    EmailOld:string;\r\n    EmailNew:string;\r\n}","import { ConfigForm } from 'src/app/Enum/ConfigForm.enum';\r\n\r\nexport class ModelConfigForm{\r\n\r\n    FormType: ConfigForm;\r\n    Form: ModelFieldConfig[];\r\n}\r\n\r\nexport class ModelFieldConfig {\r\n\r\n    order?: number;\r\n    label?: string;\r\n    name?: string;\r\n    inputType?: string;\r\n    options?: ModelOptions[];\r\n    collections?: any;\r\n    type: string;\r\n    value?: any;\r\n    validations?: boolean;\r\n    IsRequired:boolean;\r\n  }\r\n  export class ModelOptions{\r\n    option: string;\r\n  }\r\n  ","import { ConfigForm } from 'src/app/Enum/ConfigForm.enum';\r\n\r\nexport class ModelConfigFormGet{\r\n    type: ConfigForm;\r\n}","import { EnumContentData } from 'src/app/Enum/ContentData.enum';\r\n\r\nexport class ModelContentData {\r\n    _id:string;\r\n    Name:string;\r\n    Type:EnumContentData;\r\n    Data:string;\r\n}","export class ModelCourse\r\n{\r\n    Id: string;\r\n    TrainingCategoryId: string;\r\n    Name: string;\r\n}","export class ModelEntityMember{\r\n    EntityId: string;\r\n    UserId: string;\r\n}","export class ModelEntitySubEntityIds{\r\n    MainEntityId: string;\r\n    SubEntityId: string;\r\n}","export class ModelEntitySubPartner{\r\n    Id: string;\r\n    Name: string;\r\n    Phone:string;\r\n    PartnerIds:string[];\r\n    TrainingCenterIds:string[];\r\n}","export class ModelEntityTrainingCenter{\r\n    Id: string;\r\n    Name: string;\r\n    Phone:string;\r\n    PartnerId: string;\r\n}","export class ModelExamTempate{\r\n    Id: string;\r\n    Name:string;\r\n    Easy: number;\r\n    Medium: number;\r\n    Hard:number;\r\n}","import { ModelPaging } from './ModelPaging.interface';\r\n\r\nexport class ModelFilterQuestions extends ModelPaging{\r\n    TrainingCagtegoryId: string;\r\n    TrainingTypeId: string;\r\n}","import { ModelPaging } from './ModelPaging.interface';\r\n\r\nexport class ModelFilterTraining extends ModelPaging{\r\n    PartnerId: string;\r\n    SubPartnerId: string;\r\n    TrainingCategoryId:string;\r\n    TrainingTypeId: string;\r\n    TrainerId:string;\r\n} ","export class ModelId{\r\n    Id: string;\r\n}","import { LanguageType } from 'src/app/Enum/LanguageType.enum';\r\n\r\nexport class ModelLanguage{\r\n    Lang:LanguageType;\r\n}","export class ModelMyAssignedAccount{\r\n    UserId: string;\r\n    AccountId: string;\r\n    Type: number;\r\n}","export class ModelPaging{\r\n    CurrentPage: number = 1;\r\n    filterText: string = '';\r\n}","\r\nexport interface cQuestionList {\r\n    totalCount: number;\r\n    lstResult: cQuestionItem[];\r\n    pageSize: number;\r\n}\r\nexport class cQuestionItem {\r\n    Id: string;\r\n    Name: string;\r\n    IsActive: boolean;\r\n    Difficulty: number;\r\n    TrainingTypeId: string;\r\n    TrainingCategoryName:string;\r\n    TrainingCategoryId: string;\r\n    TrainingTypeName:string;\r\n    Answer: cAnswerItem[];\r\n\r\n}\r\nexport class cExamQuestionList {\r\n    questions: cQuestionItemTemplate[];\r\n    ExamId: string;\r\n}\r\nexport class cQuestionItemTemplate extends cQuestionItem{\r\n   \r\n    SelectedAnswer: string;\r\n\r\n}\r\nexport class cAnswerItem {\r\n    _id:string;\r\n    Name: string;\r\n    IsCorrectAnswer: boolean;\r\n}\r\n","import { ModelDynamic } from './ModelDynamic.class';\r\n\r\nexport class ModelRequestRegister{\r\n    Type:string;\r\n    PartnerName:string;\r\n    Name:string;\r\n    Email:string;\r\n    Phone:string;\r\n    Message:string;\r\n    data:ModelDynamic[];\r\n}","import { cAttendance } from '../Response/Training.class';\r\n\r\nexport class ModelSaveAttendnace{\r\n    trainingId: string;\r\n    Attendances:cAttendance;\r\n}","export class ShowMessage\r\n{\r\n    type : EnumShowMessage ;\r\n    message: string;\r\n    Error(msg : string):void{\r\n        this.type = EnumShowMessage.Error ;\r\n        this.message= msg;\r\n    }\r\n    Success(msg : string):void{\r\n        this.type = EnumShowMessage.Success;\r\n        this.message= msg;\r\n    }\r\n    Send(msg:string, isSucess:boolean)\r\n    {\r\n        this.type = isSucess? EnumShowMessage.Success : EnumShowMessage.Error;\r\n        this.message= msg;\r\n    }\r\n}\r\nexport enum EnumShowMessage\r\n{\r\n    Success = 1,\r\n    Error = 2\r\n}","import { ModelDynamic } from './ModelDynamic.class';\r\n\r\nexport class ModelTrainee{\r\n    Id: string;\r\n    Name:string;\r\n    Email:string;\r\n    Mobile:string;\r\n    NationalId:string;\r\n    Gender:string=\"1\";\r\n    IdType:string = \"1\"; //NationalID\r\n    DOB:Date;\r\n    TrainingId:string;\r\n    data:ModelDynamic[];\r\n}","export class ModelTraineeTraining{\r\n    TraineeId:string;\r\n    TrainingId:string;\r\n}","export class ModelTrainerCertificateApproval{\r\n    TrainerId: string;\r\n    PartnerId:string;\r\n    TrainingCategoryId: string;\r\n}","export class ModelTraining {\r\n    Id: string;\r\n    PartnerId: string;\r\n    SubPartnerId: string;\r\n    TrainingCenterId: string;\r\n    TrainerId: string;\r\n    Type:string;\r\n    TrainingTypeId: string;\r\n    TrainingCategoryId: string;\r\n    CityId: string;\r\n    AreaId: string;\r\n    StartDate: Date;\r\n    EndDate: Date;\r\n    days: string[];\r\n    IsOnline: boolean;\r\n}","export class ModelTrainingCategory\r\n{\r\n    Id: string;\r\n    Name: string;\r\n    TrainingTypeId: string;\r\n}","import { TranslateType } from 'src/app/Enum/TranslateType.enum';\r\n\r\nexport class ModelTranslateList{\r\n    Type:TranslateType;\r\n    Id:string;\r\n}","import { UserType } from 'src/app/Enum/UserType.enum';\r\n\r\nexport class ModelUserProfile {\r\n    Id: string;\r\n    Name: string;\r\n    Email: string;\r\n    Type: UserType;\r\n    CityId: string;\r\n    AreaId:string;\r\n    TrainerTrainingDetails: string;\r\n    TrainerStartDate: Date;\r\n    TrainerEndDate: Date;\r\n    SelectedPartnerEntityId: string[];\r\n    SelectedSubPartnerEntityId: string[];\r\n}","import { TranslateService } from '@ngx-translate/core';\r\n\r\nexport class UserTypeList {\r\n\r\n    private lst: UserTypeItem[] = [];\r\n    strAdmin: string;\r\n    strPartner: string;\r\n    strSubPartner: string;\r\n    strTrainer: string;\r\n\r\n    constructor(protected BLTranslate: TranslateService) {\r\n\r\n\r\n        this.BLTranslate.get(\"GenericAdmin\").subscribe(res => { this.strAdmin = res; });\r\n        this.BLTranslate.get(\"GenericPartner\").subscribe(res => { this.strPartner = res; });\r\n        this.BLTranslate.get(\"GenericSubPartner\").subscribe(res => { this.strSubPartner = res; });\r\n        this.BLTranslate.get(\"GenericTrainer\").subscribe(res => { this.strTrainer = res; });\r\n\r\n        this.lst.push(new UserTypeItem(1, this.strAdmin));\r\n        this.lst.push(new UserTypeItem(2, this.strPartner));\r\n        this.lst.push(new UserTypeItem(3, this.strSubPartner));\r\n        this.lst.push(new UserTypeItem(4, this.strTrainer));\r\n        //dthis.lst.push(new UserTypeItem(5,\"Trainee\"));\r\n    }\r\n    getAdminUserTypes(): UserTypeItem[] {\r\n        return this.lst.filter(x => x.Id >= 1);\r\n    }\r\n    getPartnerUserTypes(): UserTypeItem[] {\r\n        return this.lst.filter(x => x.Id > 2);\r\n    }\r\n    getSubPartnerUserTypes(): UserTypeItem[] {\r\n        return this.lst.filter(x => x.Id > 3);\r\n    }\r\n    getUserListByType(type: string): UserTypeItem[] {\r\n        switch (type.toLowerCase()) {\r\n            case \"admin\": return this.getAdminUserTypes();\r\n            case \"partner\": return this.getPartnerUserTypes();\r\n            case \"subpartner\": return this.getSubPartnerUserTypes();\r\n            default: return new UserTypeItem[0];\r\n        }\r\n    }\r\n}\r\nexport class UserTypeItem {\r\n    constructor(id: number, name: string) {\r\n        this.Id = id;\r\n        this.Name = name;\r\n    }\r\n    Id: number;\r\n    Name: string;\r\n}","import { cArea } from './Area.class';\r\n\r\nexport class cCityList{\r\n    totalCount: number;\r\n    lstResult:cCityItem[] ;\r\n    pageSize: number;\r\n}\r\nexport class cCityItem{\r\n    Id: string;\r\n    Name: string;\r\n    IsActive: boolean;\r\n    Areas: cArea[];\r\n}","import { cUserProfileItem } from './UserProfile.class';\r\nimport { cEntityTrainingCenterItem } from './EntityTrainingCenter.class';\r\n\r\nexport class cEntityPartnerList{\r\n    totalCount: number;\r\n    lstResult:cEntityPartnerItem[] ;\r\n    pageSize: number;\r\n}\r\nexport class cEntityPartnerItem{\r\n    Id: string;\r\n    Name: string;\r\n    IsActive: boolean;\r\n    Phone:string;\r\n    MinHours:number;\r\n    MaxHours:number;\r\n    Members : cUserProfileItem[];\r\n    TrainingCenters: cEntityTrainingCenterItem[];\r\n\r\n}","import { cEntityPartnerItem } from './EntityPartner.class';\r\nimport { cEntityTrainingCenterItem } from './EntityTrainingCenter.class';\r\nimport { cUserProfileItem } from './UserProfile.class';\r\n\r\nexport class cEntitySubPartnerList{\r\n    totalCount: number;\r\n    lstResult:cEntitySubPartnerItem[] ;\r\n    pageSize: number;\r\n}\r\nexport class cEntitySubPartnerItem{\r\n    Id: string;\r\n    Name: string;\r\n    IsActive: boolean;\r\n    Phone:string;\r\n    Partners:cEntityPartnerItem[];\r\n    TrainingCenters:cEntityTrainingCenterItem[];\r\n    MemberSubPartners: cUserProfileItem[];\r\n}","\r\nexport class cLogoPartnerList{\r\n    totalCount: number;\r\n    lstResult:cLogoPartnerItem[] ;\r\n    pageSize: number;\r\n}\r\nexport class cLogoPartnerItem{\r\n    _id: string;\r\n    IsActive: boolean;\r\n    WebsiteURL:string;\r\n    ImagePath:string;\r\n}","\r\nexport interface cNGOTypeList{\r\n    totalCount: number;\r\n    lstResult:cNGOTypeItem[] ;\r\n    pageSize: number;\r\n}\r\nexport class cNGOTypeItem{\r\n    Id: string;\r\n    Name: string;\r\n    IsActive: boolean;\r\n}","export class StatsCount{\r\n    TraineeCount:string;\r\n    TrainerCount:string;\r\n    TrainingCount:string;\r\n}","import { ModelDynamic } from '../Model/ModelDynamic.class';\r\n\r\nexport class cTraineeList{\r\n    totalCount: number;\r\n    lstResult:cTraineeItem[] ;\r\n    pageSize: number;\r\n}\r\nexport class cTraineeItem{\r\n    \r\n    Id: string;\r\n    Name: string;\r\n    IsActive: boolean;\r\n    Email:string;\r\n    Mobile:string;\r\n    NationalId:string;\r\n    Gender:number =1;\r\n    IdType:number = 1; //NationalID\r\n    DOB:Date;\r\n    data:ModelDynamic[];\r\n}\r\nexport class cTraineeItemInfo extends cTraineeItem{\r\n    IsApproved:boolean;\r\n}","import { cTraineeItem, cTraineeItemInfo } from './Trainee.class';\r\n\r\nexport class cTrainingList {\r\n    totalCount: number;\r\n    lstResult: cTrainingItem[];\r\n    pageSize: number;\r\n}\r\nexport class cTrainingItem {\r\n    Id: string;\r\n    PartnerId: ItemDetails;\r\n    SubPartnerId: ItemDetails;\r\n    TrainingCenterId: ItemDetails;\r\n    TrainerId: string;\r\n    TrainerDetails: ItemDetails;\r\n    TrainerCount:number;\r\n    TrainingTypeId: ItemDetails;\r\n    TrainingCategoryId: ItemDetails;\r\n    CityId: string;\r\n    AreaId: string;\r\n    StartDate: Date;\r\n    EndDate: Date;\r\n    days: string[];\r\n    CanEdit: boolean;\r\n    IsAdminApproved: boolean;\r\n    IsConfirm1: boolean;\r\n    IsConfirm2: boolean;\r\n    Trainees: cTraineeItemInfo[];\r\n    Sessions: cSessionItem[];\r\n    Attendances:cAttendance[];\r\n    Type:number;\r\n    ExamTemplateId:string;\r\n    IsOnline:boolean;\r\n}\r\nexport class ItemDetails {\r\n    Id: string;\r\n    Name: string;\r\n}\r\nexport class cSessionItem {\r\n    Id: string;\r\n    Name: string;\r\n    Day: Date;\r\n    IsAttendanceFilled: boolean;\r\n}\r\nexport class cAttendance\r\n{\r\n    SessionId:string;\r\n    Attendances:cAttendanceTrainee[];\r\n}\r\nexport class cAttendanceTrainee\r\n{\r\n    TraineeId:string;\r\n    IsAttendant:boolean;\r\n}","import { ICourse } from './Course.interface';\r\nimport { cTrainingTypeItem } from './TrainingType.class';\r\n\r\nexport interface ITrainingCategory{\r\n    totalCount: number;\r\n    lstResult:ITrainingCategoryItem[] ;\r\n    pageSize: number;\r\n}\r\nexport class ITrainingCategoryItem{\r\n    Id: string;\r\n    Name: string;\r\n    IsActive: boolean; \r\n    TrainingType: cTrainingTypeItem;\r\n    Course: ICourse[];\r\n}","\r\nexport interface cTrainingTypeList{\r\n    totalCount: number;\r\n    lstResult:cTrainingTypeItem[] ;\r\n    pageSize: number;\r\n}\r\nexport class cTrainingTypeItem{\r\n    Id: string;\r\n    Name: string;\r\n    IsActive: boolean;\r\n}","import { UserType } from 'src/app/Enum/UserType.enum';\r\nimport { UserProfile } from 'src/app/model/user-profile';\r\n\r\nexport class cUserProfileList {\r\n    totalCount: number;\r\n    lstResult: cUserProfileItem[];\r\n    pageSize: number;\r\n}\r\nexport class cUserProfileItem {\r\n    Id: string;\r\n    Name: string;\r\n    IsActive: boolean;\r\n    Email: string;\r\n    Type: string;\r\n    CityId: string;\r\n    AreaId: string;\r\n    TrainerTrainingDetails: string;\r\n    TrainerStartDate: Date;\r\n    TrainerEndDate: Date;\r\n    MyPartnerListIds: cEntityObj[];\r\n    MySubPartnerListIds: cEntityObj[];\r\n}\r\n\r\nexport class cEntityObj {\r\n    Id: string;\r\n    Name: string;\r\n}\r\n\r\nexport class cUserProfileTrainerCertificateList {\r\n    totalCount: number;\r\n    lstResult: cUserProfileTrainerCertificateItem[];\r\n    pageSize: number;\r\n}\r\n\r\n\r\nexport class cUserProfileTrainerCertificateItem {\r\n    TrainerId: string;\r\n    TrainerName: string;\r\n    PartnerId: string;\r\n    PartnerName: string;\r\n    TrainingCategoryId: string;\r\n    TrainingCategoryName: string;\r\n    TrainingTypeId: string;\r\n    TrainingTypeName: string;\r\n    ExamCount: number;\r\n    CertificatePath:string;\r\n}\r\nexport class cUserProfileTrainerCertificateItemWithProfile {\r\n    TrainerName: string;\r\n    lstResult: cUserProfileTrainerCertificateItem[];\r\n}","import { ServiceShowMessage } from '../services/show-message.service';\r\nimport { ShowMessage } from './Model/ModelShowMessage.class';\r\nimport { ServiceLoginUser } from '../services/loginuser.service';\r\nimport { Constants } from '../constants';\r\nimport { AngularEditorConfig } from '@kolkov/angular-editor';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport * as fileSaver from 'file-saver';\r\n\r\nexport class baseComponent {\r\n    message: ShowMessage = new ShowMessage();\r\n    userRole: string;\r\n    IsAdmin: Boolean;\r\n    IsPartner: Boolean;\r\n    IsSubPartner: Boolean;\r\n    IsTrainer: Boolean;\r\n    IsTrainee: Boolean;\r\n    emailPattern = \"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\";\r\n    todayDate = new Date();\r\n    FilesURL: string = Constants.FilesURL;\r\n\r\n    msgGenericError: string;\r\n    msgSavedSuccessfully: string;\r\n    msgDeactivatedSuccessfully: string;\r\n    msgActivatedSuccessfully: string;\r\n    msgsetDeactivate: string;\r\n    msgsetActivate: string;\r\n    msgsetDeleted: string;\r\n    msgDeletedSuccessfully: string;\r\n    msgUpdatedsuccessfully: string;\r\n    msgsetRemove: string;\r\n    CertificatePDFOnly: string;\r\n    CertificateSelectFileError: string;\r\n\r\n    textEditorConfig: AngularEditorConfig = {\r\n        editable: true,\r\n        spellcheck: true,\r\n        minHeight: '5rem',\r\n        translate: 'yes',\r\n        defaultParagraphSeparator: 'p',\r\n        defaultFontName: 'Arial',\r\n        toolbarHiddenButtons: [\r\n            ['insertImage',\r\n                'insertVideo',\r\n                'toggleEditorMode',\r\n                'link',\r\n                'unlink',\r\n                'backgroundColor',\r\n                'justifyLeft',\r\n                'justifyCenter',\r\n                'justifyRight',\r\n                'justifyFull'\r\n            ]\r\n        ]\r\n    };\r\n\r\n    constructor(\r\n        protected BLServiceShowMessage: ServiceShowMessage,\r\n        protected BLServiceLoginUser: ServiceLoginUser,\r\n        protected BLTranslate: TranslateService) {\r\n        this.Init();\r\n    }\r\n    Init() {\r\n        this.BLTranslate.get(\"msgSavedSuccessfully\").subscribe(res => { this.msgSavedSuccessfully = res; });\r\n        this.BLTranslate.get(\"msgDeactivatedSuccessfully\").subscribe(res => { this.msgDeactivatedSuccessfully = res; });\r\n        this.BLTranslate.get(\"msgActivatedSuccessfully\").subscribe(res => { this.msgActivatedSuccessfully = res; });\r\n        this.BLTranslate.get(\"msgsetDeactivate\").subscribe(res => { this.msgsetDeactivate = res; });\r\n        this.BLTranslate.get(\"msgsetActivate\").subscribe(res => { this.msgsetActivate = res; });\r\n        this.BLTranslate.get(\"msgDeletedSuccessfully\").subscribe(res => { this.msgDeletedSuccessfully = res; });\r\n        this.BLTranslate.get(\"msgsetDeleted\").subscribe(res => { this.msgsetDeleted = res; });\r\n        this.BLTranslate.get(\"msgUpdatedsuccessfully\").subscribe(res => { this.msgUpdatedsuccessfully = res; });\r\n        this.BLTranslate.get(\"msgsetRemove\").subscribe(res => { this.msgsetRemove = res; });\r\n        this.BLTranslate.get(\"CertificatePDFOnly\").subscribe(res => { this.CertificatePDFOnly = res; });\r\n        this.BLTranslate.get(\"CertificateSelectFileError\").subscribe(res => { this.CertificateSelectFileError = res; });\r\n        this.BLTranslate.get(\"GenericError\").subscribe(res => { this.msgGenericError = res; });\r\n\r\n        this.userRole = this.BLServiceLoginUser.userRole;\r\n        this.BLServiceLoginUser.UserRoleChanged.subscribe(obj => {\r\n            this.userRole = obj;\r\n        });\r\n\r\n        this.IsAdmin = this.BLServiceLoginUser.IsAdmin;\r\n        this.BLServiceLoginUser.UserIsAdminChanged.subscribe(obj => {\r\n            this.IsAdmin = obj;\r\n        });\r\n\r\n        this.IsPartner = this.BLServiceLoginUser.IsPartner;\r\n        this.BLServiceLoginUser.UserIsPartnerChanged.subscribe(obj => {\r\n            this.IsPartner = obj;\r\n        });\r\n\r\n        this.IsSubPartner = this.BLServiceLoginUser.IsSubPartner;\r\n        this.BLServiceLoginUser.UserIsSubPartnerChanged.subscribe(obj => {\r\n            this.IsSubPartner = obj;\r\n        });\r\n\r\n        this.IsTrainer = this.BLServiceLoginUser.IsTrainer;\r\n        this.BLServiceLoginUser.UserIsTrainerChanged.subscribe(obj => {\r\n            this.IsTrainer = obj;\r\n        });\r\n\r\n        this.IsTrainee = this.BLServiceLoginUser.IsTrainee;\r\n        this.BLServiceLoginUser.UserIsTraineeChanged.subscribe(obj => {\r\n            this.IsTrainee = obj;\r\n        });\r\n    }\r\n    compareDate(date1: Date, date2: Date): number {\r\n        // With Date object we can compare dates them using the >, <, <= or >=.\r\n        // The ==, !=, ===, and !== operators require to use date.getTime(),\r\n        // so we need to create a new instance of Date with 'new Date()'\r\n        let d1 = new Date(new Date(date1).getFullYear(), new Date(date1).getMonth(), new Date(date1).getDate());\r\n        let d2 = new Date(new Date(date2).getFullYear(), new Date(date2).getMonth(), new Date(date2).getDate());\r\n\r\n        // Check if the dates are equal\r\n        let same = d1.getTime() === d2.getTime();\r\n        if (same) return 0;\r\n\r\n        // Check if the first is greater than second\r\n        if (d1 > d2) return 1;\r\n\r\n        // Check if the first is less than second\r\n        if (d1 < d2) return -1;\r\n    }\r\n    compareDateAttendanceTraining(date1: Date, date2: Date): number {\r\n        // With Date object we can compare dates them using the >, <, <= or >=.\r\n        // The ==, !=, ===, and !== operators require to use date.getTime(),\r\n        // so we need to create a new instance of Date with 'new Date()'\r\n        let d1 = new Date(new Date(date1).getFullYear(), new Date(date1).getMonth(), new Date(date1).getDate());\r\n        let d2 = new Date(new Date(date2).getFullYear(), new Date(date2).getMonth(), new Date(date2).getDate(), 12, 0, 0);\r\n\r\n        // Check if the dates are equal\r\n        let same = d1.getTime() === d2.getTime();\r\n        if (same) return 0;\r\n\r\n        // Check if the first is greater than second\r\n        if (d1 > d2) return 1;\r\n\r\n        // Check if the first is less than second\r\n        if (d1 < d2) return -1;\r\n    }\r\n    CompareTwoDates(dateFrom, dateTo) {\r\n        if (dateFrom && dateTo) {\r\n\r\n            var d1 = Date.parse(dateTo);\r\n            var d2 = Date.parse(dateFrom);\r\n\r\n            if (d1 > d2) {\r\n                return true;\r\n            }\r\n            return false\r\n        }\r\n    }\r\n    downloadFile(data: any) {\r\n        \r\n\r\n        window.open(Constants.FilesURL + data);\r\n    }\r\n}","export class cfAutoComplete\r\n{\r\n    constructor(id, name)\r\n    {\r\n        this.Id = id;\r\n        this.Name = name;\r\n    }\r\n    Id:string;\r\n    Name: string;\r\n}","import { UserProfile } from './user-profile';\r\nimport { SimpleClaim } from './simple-claim';\r\n\r\nexport class AuthContext {\r\n  claims: SimpleClaim[];\r\n  userProfile: UserProfile;\r\n  get getUserProfile(){\r\n    if(!!this.userProfile)\r\n    {\r\n      return this.userProfile;\r\n    }\r\n    return  null;\r\n  }\r\n  get userRole(){\r\n    if(!!this.claims && !!this.claims.find(c => c.Type === 'role'))\r\n    {\r\n      return this.claims.find(c => c.Type === 'role').Value;\r\n    }\r\n    return  \"\";\r\n  }\r\n  get userName(){\r\n    if(!!this.userProfile)\r\n    {\r\n      return this.userProfile.FullName;\r\n    }\r\n    return  \"\";\r\n  }\r\n  get isAdmin() {\r\n    return !!this.claims && !!this.claims.find(c =>\r\n      c.Type === 'role' && c.Value.toLowerCase() === 'admin');\r\n  }\r\n  get isPartner(){\r\n    return !!this.claims && !!this.claims.find(c =>\r\n      c.Type === 'role' && c.Value.toLowerCase() === 'partner');\r\n  }\r\n  get isSubPartner(){\r\n    return !!this.claims && !!this.claims.find(c =>\r\n      c.Type === 'role' && c.Value.toLowerCase() === 'subpartner');\r\n  }\r\n  get isTrainer(){\r\n    return !!this.claims && !!this.claims.find(c =>\r\n      c.Type === 'role' && c.Value.toLowerCase() === 'trainer');\r\n  }\r\n  get isTrainee(){\r\n    return !!this.claims && !!this.claims.find(c =>\r\n      c.Type === 'role' && c.Value.toLowerCase() === 'trainee');\r\n  }\r\n}","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Constants } from '../constants';\r\nimport { tap, catchError } from 'rxjs/operators';\r\nimport { ModelId } from '../interface/Model/ModelId.interface';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { ModelPaging } from '../interface/Model/ModelPaging.interface';\r\n\r\nexport class ServiceGeneric<T, W, Z> {\r\n    protected apiURL = Constants.apiRoot\r\n    \r\n    constructor(ControllerName: string,\r\n        protected httpClient: HttpClient) {\r\n        this.apiURL += ControllerName;\r\n    }\r\n    getGetByid(Id: string): Observable<T> {\r\n        var model = new ModelId();\r\n        model.Id = Id;\r\n        return this.httpClient.post<T>(this.apiURL + 'GetById', model).pipe(\r\n            //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n            catchError(this.handleError)\r\n        );\r\n    }\r\n    getListActive(): Observable<T[]> {\r\n        return this.httpClient.get<T[]>(this.apiURL + 'ListActive').pipe(\r\n            //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n            catchError(this.handleError)\r\n        );\r\n    }\r\n    getAll(currentPage: number, filterText: string): Observable<W> {\r\n\r\n        var model = new ModelPaging()\r\n        model.CurrentPage = currentPage;\r\n        model.filterText = filterText;\r\n        return this.httpClient.post<W>(this.apiURL + 'ListAll', model).pipe(\r\n            //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n            catchError(this.handleError)\r\n        );\r\n    }\r\n    setActivate(Id: string): Observable<boolean> {\r\n        var model = new ModelId();\r\n        model.Id = Id;\r\n        return this.httpClient.post<boolean>(this.apiURL + 'Activate', model).pipe(\r\n            //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n            catchError(this.handleError)\r\n        );\r\n    }\r\n    setDeactivate(Id: string): Observable<boolean> {\r\n        var model = new ModelId();\r\n        model.Id = Id;\r\n        return this.httpClient.post<boolean>(this.apiURL + 'Deactivate', model).pipe(\r\n            //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n            catchError(this.handleError)\r\n        );\r\n    }\r\n    \r\n    update(model: Z): Observable<boolean> {\r\n        return this.httpClient.post<boolean>(this.apiURL + 'Update', model).pipe(\r\n            //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n            catchError(this.handleError)\r\n        );\r\n    }\r\n    create(model: Z): Observable<boolean> {\r\n        return this.httpClient.post<boolean>(this.apiURL + 'Create', model).pipe(\r\n            //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n            catchError(this.handleError)\r\n        );\r\n    }\r\n    \r\n    //   memberAddEntityPartner(PartnerId: string, UserId: string):Observable<boolean>{\r\n    //     var model = new ModelEntityMember();\r\n    //     model.EntityId = PartnerId;\r\n    //     model.UserId = UserId;\r\n    //     return this.httpClient.post<boolean>(this.apiURL + 'EntityPartnerAddMember',model).pipe(\r\n    //         //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n    //         catchError(this.handleError)\r\n    //       );\r\n    //   }\r\n    //   memberRemoveEntityPartner(PartnerId: string, UserId: string):Observable<boolean>{\r\n    //     var model = new ModelEntityMember();\r\n    //     model.EntityId = PartnerId;\r\n    //     model.UserId = UserId;\r\n    //     return this.httpClient.post<boolean>(this.apiURL + 'EntityPartnerRemoveMember',model).pipe(\r\n    //         //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n    //         catchError(this.handleError)\r\n    //       );\r\n    //   }\r\n    //#endregion\r\n    protected handleError(err: HttpErrorResponse) {\r\n        // in a real world app, we may send the server to some remote logging infrastructure\r\n        // instead of just logging it to the console\r\n        let errorMessage = '';\r\n        if (err.error instanceof ErrorEvent) {\r\n            // A client-side or network error occurred. Handle it accordingly.\r\n            errorMessage = `An error occurred: ${err.error.message}`;\r\n        } else {\r\n            // The backend returned an unsuccessful response code.\r\n            // The response body may contain clues as to what went wrong,\r\n            errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\r\n        }\r\n        //console.error(errorMessage);\r\n        return throwError(errorMessage);\r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport { Constants } from '../constants';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { cQuestionItem, cQuestionList } from '../interface/Model/ModelQuestions.class';\nimport { ModelId } from '../interface/Model/ModelId.interface';\nimport { tap, catchError } from 'rxjs/operators';\nimport { ModelPaging } from '../interface/Model/ModelPaging.interface';\nimport { ModelFilterQuestions } from '../interface/Model/ModelFilterQuestions.class';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServiceQuestion {\n\n  private apiURL = Constants.apiRoot + 'Question/'\n\n  constructor(private httpClient: HttpClient) { }\n  //#region Question\n  getQuestionGetByid(Id: string): Observable<cQuestionItem> {\n    var model = new ModelId();\n    model.Id = Id;\n    return this.httpClient.post<cQuestionItem>(this.apiURL + 'QuestionGetById', model).pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  getQuestionListActive(model: ModelFilterQuestions): Observable<cQuestionItem[]> {\n    return this.httpClient.post<cQuestionItem[]>(this.apiURL + 'getQuestionListActive', model).pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  getQuestionAll(model: ModelFilterQuestions): Observable<cQuestionList> {\n\n    return this.httpClient.post<cQuestionList>(this.apiURL + 'QuestionListAll', model).pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  setQuestionActivate(Id: string): Observable<boolean> {\n    var model = new ModelId();\n    model.Id = Id;\n    return this.httpClient.post<boolean>(this.apiURL + 'QuestionActivate', model).pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  setQuestionDeactivate(Id: string): Observable<boolean> {\n    var model = new ModelId();\n    model.Id = Id;\n    return this.httpClient.post<boolean>(this.apiURL + 'QuestionDeactivate', model).pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  updateQuestion(model): Observable<boolean> {\n    return this.httpClient.post<boolean>(this.apiURL + 'QuestionUpdate', model).pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  createQuestion(model): Observable<boolean> {\n    return this.httpClient.post<boolean>(this.apiURL + 'QuestionCreate', model).pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  private handleError(err: HttpErrorResponse) {\n    // in a real world app, we may send the server to some remote logging infrastructure\n    // instead of just logging it to the console\n    let errorMessage = '';\n    if (err.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      errorMessage = `An error occurred: ${err.error.message}`;\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\n    }\n    //console.error(errorMessage);\n    return throwError(errorMessage);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { Constants } from '../constants';\r\nimport { HttpClient, HttpErrorResponse, HttpEventType } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { cExamQuestionList, cQuestionItemTemplate } from '../interface/Model/ModelQuestions.class';\r\nimport { ModelId } from '../interface/Model/ModelId.interface';\r\nimport { tap, catchError } from 'rxjs/operators';\r\nimport { ModelPaging } from '../interface/Model/ModelPaging.interface';\r\nimport { ResponseFileUpload } from '../interface/Model/ModelUploadFile.class';\r\nimport { cCertificateList } from '../interface/Response/Certificate.class';\r\nimport { cTrainingTypeList } from '../interface/Response/TrainingType.class';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServiceCertificate {\r\n\r\n  private apiURL = Constants.apiRoot + 'Certificate/'\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n  CertificateListAllByTrainingCenterId(currentPage: number, filterText: string): Observable<cCertificateList> {\r\n    var model = new ModelPaging()\r\n    model.CurrentPage = currentPage;\r\n    model.filterText = filterText;\r\n    return this.httpClient.post<cCertificateList>(this.apiURL + 'CertificateListAllByTrainingCenterId', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  CertificateActivate(Id: string):Observable<boolean>{\r\n    var model = new ModelId();\r\n    model.Id = Id;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'CertificateActivate',model).pipe(\r\n        //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n  CertificateDeActivate(Id: string):Observable<boolean>{\r\n    var model = new ModelId();\r\n    model.Id = Id;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'CertificateDeActivate',model).pipe(\r\n        //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n  CertificateListAllByPartnerId(currentPage: number, filterText: string): Observable<cCertificateList> {\r\n    var model = new ModelPaging()\r\n    model.CurrentPage = currentPage;\r\n    model.filterText = filterText;\r\n    return this.httpClient.post<cCertificateList>(this.apiURL + 'CertificateListAllByPartnerId', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  CertificateListAllGenericByPartnerId(currentPage: number, filterText: string): Observable<cCertificateList> {\r\n    var model = new ModelPaging()\r\n    model.CurrentPage = currentPage;\r\n    model.filterText = filterText;\r\n    return this.httpClient.post<cCertificateList>(this.apiURL + 'CertificateListAllGenericByPartnerId', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  CertificateListAllSystemGeneric(): Observable<cCertificateList> {\r\n    return this.httpClient.get<cCertificateList>(this.apiURL + 'CertificateListAllSystemGeneric').pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  uploadFile(fileToUpload: File, fileType: number, partnerId?: string): Observable<ResponseFileUpload> {\r\n    const formData = new FormData();\r\n    formData.append('file', fileToUpload, fileToUpload.name);\r\n\r\n    if (partnerId) {\r\n      return this.httpClient.post<ResponseFileUpload>(this.apiURL + 'UploadSystemGenericFile?fileType=' + fileType + '&partnerId=' + partnerId, formData).pipe(\r\n        //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n        catchError(this.handleError)\r\n      );\r\n    }\r\n    else {\r\n      return this.httpClient.post<ResponseFileUpload>(this.apiURL + 'UploadSystemGenericFile?fileType=' + fileType, formData).pipe(\r\n        //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n        catchError(this.handleError)\r\n      );\r\n\r\n    }\r\n  }\r\n\r\n  uploadCategoryCertificateFile(fileToUpload: File, fileType: number, partnerId: string, trainingTypeId: string, trainingCategoryId: string): Observable<ResponseFileUpload> {\r\n    const formData = new FormData();\r\n    formData.append('file', fileToUpload, fileToUpload.name);\r\n\r\n    return this.httpClient.post<ResponseFileUpload>(this.apiURL + 'UploadCertificateCategoryFile?fileType=' + fileType + '&partnerId=' + partnerId + '&trainingTypeId=' + trainingTypeId + '&trainingCategoryId=' + trainingCategoryId, formData).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  uploadTrainingCenterCertificateFile(fileToUpload: File, fileType: number, partnerId: string, trainingCenterId: string, trainingTypeId: string, trainingCategoryId: string): Observable<ResponseFileUpload> {\r\n    const formData = new FormData();\r\n    formData.append('file', fileToUpload, fileToUpload.name);\r\n\r\n    return this.httpClient.post<ResponseFileUpload>(this.apiURL + 'UploadCertificateTrainingCenterFile?fileType=' + fileType + '&partnerId=' + partnerId + '&trainingCenterId=' + trainingCenterId + '&trainingTypeId=' + trainingTypeId + '&trainingCategoryId=' + trainingCategoryId, formData).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  private handleError(err: HttpErrorResponse) {\r\n    // in a real world app, we may send the server to some remote logging infrastructure\r\n    // instead of just logging it to the console\r\n    let errorMessage = '';\r\n    if (err.error instanceof ErrorEvent) {\r\n      // A client-side or network error occurred. Handle it accordingly.\r\n      errorMessage = `An error occurred: ${err.error.message}`;\r\n    } else {\r\n      // The backend returned an unsuccessful response code.\r\n      // The response body may contain clues as to what went wrong,\r\n      errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\r\n    }\r\n    //console.error(errorMessage);\r\n    return throwError(errorMessage);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Constants } from '../constants';\r\nimport { ModelConfigForm } from '../interface/Model/ModelConfigForm.class';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { tap, catchError } from 'rxjs/operators';\r\nimport { ConfigForm } from '../Enum/ConfigForm.enum';\r\nimport { FieldConfig, Validator } from '../common/ConfigForms/field.interface';\r\nimport { ModelConfigFormGet } from '../interface/Model/ModelConfigFormGet.class';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServiceConfigForm {\r\n  \r\n  protected apiURL = Constants.apiRoot;\r\n\r\n  constructor(protected httpClient: HttpClient) {\r\n    this.apiURL += \"ConfigForm/\";\r\n  }\r\n  GetByType(type: ConfigForm): Observable<FieldConfig[]> {\r\n    var model = new ModelConfigFormGet();\r\n    model.type = type;\r\n    return this.httpClient.post<FieldConfig[]>(this.apiURL + 'GetByType', model).pipe(\r\n      tap(data => {\r\n        \r\n        //console.log('All: ' + JSON.stringify(data));\r\n      }),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  Update(model: ModelConfigForm): Observable<boolean> {\r\n    return this.httpClient.post<boolean>(this.apiURL + 'Update', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  protected handleError(err: HttpErrorResponse) {\r\n    // in a real world app, we may send the server to some remote logging infrastructure\r\n    // instead of just logging it to the console\r\n    let errorMessage = '';\r\n    if (err.error instanceof ErrorEvent) {\r\n        // A client-side or network error occurred. Handle it accordingly.\r\n        errorMessage = `An error occurred: ${err.error.message}`;\r\n    } else {\r\n        // The backend returned an unsuccessful response code.\r\n        // The response body may contain clues as to what went wrong,\r\n        errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\r\n    }\r\n    //console.error(errorMessage);\r\n    return throwError(errorMessage);\r\n}\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Constants } from '../constants';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { cContentDataItem, cContentDataList } from '../interface/Response/ContentData.class';\nimport { ModelId } from '../interface/Model/ModelId.interface';\nimport { tap, catchError } from 'rxjs/operators';\nimport { ModelPaging } from '../interface/Model/ModelPaging.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServiceContentData {\n\n  private apiURL = Constants.apiRoot + 'ContentData/'\n\n  constructor(private httpClient: HttpClient) { }\n  ContentDataOneGetByTypeId(type): Observable<cContentDataItem> {\n    var model = new ModelId();\n    model.Id = <string>type;\n    return this.httpClient.post<cContentDataItem>(this.apiURL + 'ContentDataOneGetByTypeId', model).pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  getContentDataGetByid(Id: string): Observable<cContentDataItem> {\n    var model = new ModelId();\n    model.Id = Id;\n    return this.httpClient.post<cContentDataItem>(this.apiURL + 'ContentDataGetById', model).pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  getContentDataListActive(): Observable<cContentDataItem[]> {\n    return this.httpClient.get<cContentDataItem[]>(this.apiURL + 'ContentDataListActive').pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  getContentDataAll(currentPage: number, filterText: string): Observable<cContentDataList> {\n\n    var model = new ModelPaging()\n    model.CurrentPage = currentPage;\n    model.filterText = filterText;\n    return this.httpClient.post<cContentDataList>(this.apiURL + 'ContentDataListAll', model).pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  setContentDataActivate(Id: string): Observable<boolean> {\n    var model = new ModelId();\n    model.Id = Id;\n    return this.httpClient.post<boolean>(this.apiURL + 'ContentDataActivate', model).pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  setContentDataDeactivate(Id: string): Observable<boolean> {\n    var model = new ModelId();\n    model.Id = Id;\n    return this.httpClient.post<boolean>(this.apiURL + 'ContentDataDeactivate', model).pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  updateContentData(model): Observable<boolean> {\n    return this.httpClient.post<boolean>(this.apiURL + 'ContentDataUpdate', model).pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  createContentData(model): Observable<boolean> {\n    return this.httpClient.post<boolean>(this.apiURL + 'ContentDataCreate', model).pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  updateSiteLogo(fileToUpload: File): Observable<boolean> {\n    const formData = new FormData();\n    formData.append('file', fileToUpload, fileToUpload.name);\n    return this.httpClient.post<boolean>(this.apiURL + 'updateSiteLogo', formData).pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  private handleError(err: HttpErrorResponse) {\n    // in a real world app, we may send the server to some remote logging infrastructure\n    // instead of just logging it to the console\n    let errorMessage = '';\n    if (err.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      errorMessage = `An error occurred: ${err.error.message}`;\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\n    }\n    //console.error(errorMessage);\n    return throwError(errorMessage);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse, HttpParams } from '@angular/common/http';\r\nimport { Observable,throwError } from 'rxjs';\r\nimport { tap, catchError, map } from 'rxjs/operators';\r\nimport { ITrainingCategory,ITrainingCategoryItem } from '../interface/Response/TrainingCategory.interface';\r\nimport { Constants } from '../constants';\r\nimport { ModelPaging } from '../interface/Model/ModelPaging.interface';\r\nimport { ModelId } from '../interface/Model/ModelId.interface';\r\nimport { ModelCourse } from '../interface/Model/ModelCourse.class';\r\nimport { cNGOTypeItem, cNGOTypeList } from '../interface/Response/NGOType.class';\r\nimport { cCityItem, cCityList } from '../interface/Response/City.class';\r\nimport { ModelArea } from '../interface/Model/ModelArea.class';\r\nimport { cTrainingTypeItem, cTrainingTypeList } from '../interface/Response/TrainingType.class';\r\nimport { ModelTrainingCategory } from '../interface/Model/ModelTrainingCategory.class';\r\n\r\n\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class ServiceDataManagement {\r\n    private apiURL = Constants.apiRoot + 'DataManagement/'\r\n    \r\n    constructor(private httpClient: HttpClient) { }\r\n    //#region TrainingType\r\n    getTrainingTypeGetByid(Id: string):Observable<cTrainingTypeItem>{\r\n      var model = new ModelId();\r\n      model.Id = Id;\r\n      return this.httpClient.post<cTrainingTypeItem>(this.apiURL + 'TrainingTypeGetById',model).pipe(\r\n          //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)\r\n        );\r\n    }\r\n    getTrainingTypeListActive():Observable<cTrainingTypeItem[]>{\r\n      return this.httpClient.get<cTrainingTypeItem[]>(this.apiURL + 'TrainingTypeListActive').pipe(\r\n          //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)\r\n        );\r\n    }\r\n    getTrainingTypeAll(currentPage: number, filterText: string):Observable<cTrainingTypeList>{\r\n      \r\n        var model = new ModelPaging()\r\n        model.CurrentPage = currentPage;\r\n        model.filterText = filterText;\r\n        return this.httpClient.post<cTrainingTypeList>(this.apiURL + 'TrainingTypeListAll',model).pipe(\r\n            //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n            catchError(this.handleError)\r\n          );\r\n    }\r\n    setTrainingTypeActivate(Id: string):Observable<boolean>{\r\n      var model = new ModelId();\r\n      model.Id = Id;\r\n      return this.httpClient.post<boolean>(this.apiURL + 'TrainingTypeActivate',model).pipe(\r\n          //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)\r\n        );\r\n    }\r\n    setTrainingTypeDeactivate(Id: string):Observable<boolean>{\r\n      var model = new ModelId();\r\n      model.Id = Id;\r\n      return this.httpClient.post<boolean>(this.apiURL + 'TrainingTypeDeactivate',model).pipe(\r\n          //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)\r\n        );\r\n    }\r\n    updateTrainingType(Id: string, Name:string):Observable<boolean>{\r\n      var model = new cTrainingTypeItem();\r\n      model.Id = Id;\r\n      model.Name = Name;\r\n      return this.httpClient.post<boolean>(this.apiURL + 'TrainingTypeUpdate',model).pipe(\r\n          //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)\r\n        );\r\n    }\r\n    createTrainingType(Name:string):Observable<boolean>{\r\n      var model = new cTrainingTypeItem();\r\n      model.Name = Name;\r\n      return this.httpClient.post<boolean>(this.apiURL + 'TrainingTypeCreate',model).pipe(\r\n          //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)\r\n        );\r\n    }\r\n    //#endregion\r\n    //#region TrainingCategory\r\n    getTrainingCategoryGetByid(Id: string):Observable<ITrainingCategoryItem>{\r\n      var model = new ModelId();\r\n      model.Id = Id;\r\n      return this.httpClient.post<ITrainingCategoryItem>(this.apiURL + 'TrainingCategoryGetById',model).pipe(\r\n          //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)\r\n        );\r\n    }\r\n    getTrainingCategoryAll(currentPage: number, filterText: string):Observable<ITrainingCategory>{\r\n      \r\n        var model = new ModelPaging()\r\n        model.CurrentPage = currentPage;\r\n        model.filterText = filterText;\r\n        return this.httpClient.post<ITrainingCategory>(this.apiURL + 'TrainingCategoryListAll',model).pipe(\r\n            //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n            catchError(this.handleError)\r\n          );\r\n    }\r\n    getTrainingCategoryListByTrainingType(TrainingTypeId: string):Observable<ITrainingCategoryItem[]>{\r\n      var model = new ModelId()\r\n      model.Id = TrainingTypeId;\r\n      return this.httpClient.post<ITrainingCategoryItem[]>(this.apiURL + 'TrainingCategoryListByTrainingType',model).pipe(\r\n          //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)\r\n        );\r\n  }\r\n    setTrainingCategoryActivate(Id: string):Observable<boolean>{\r\n      var model = new ModelId();\r\n      model.Id = Id;\r\n      return this.httpClient.post<boolean>(this.apiURL + 'TrainingCategoryActivate',model).pipe(\r\n          //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)\r\n        );\r\n    }\r\n    setTrainingCategoryDeactivate(Id: string):Observable<boolean>{\r\n      var model = new ModelId();\r\n      model.Id = Id;\r\n      return this.httpClient.post<boolean>(this.apiURL + 'TrainingCategoryDeactivate',model).pipe(\r\n          //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)\r\n        );\r\n    }\r\n    updateTrainingCategory(Id: string, Name:string, TrainingTypeId:string):Observable<boolean>{\r\n      var model = new ModelTrainingCategory();\r\n      model.Id = Id;\r\n      model.Name = Name;\r\n      model.TrainingTypeId = TrainingTypeId;\r\n      return this.httpClient.post<boolean>(this.apiURL + 'TrainingCategoryUpdate',model).pipe(\r\n          //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)\r\n        );\r\n    }\r\n    createTrainingCategory(Name:string, TrainingTypeId:string):Observable<boolean>{\r\n      var model = new ModelTrainingCategory();\r\n      model.Name = Name;\r\n      model.TrainingTypeId = TrainingTypeId;\r\n      return this.httpClient.post<boolean>(this.apiURL + 'TrainingCategoryCreate',model).pipe(\r\n          //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)\r\n        );\r\n    }\r\n    //#endregion\r\n    //#region Course\r\n    setCourseActivate(TrainingCategoryId: string,Id: string):Observable<boolean>{\r\n      var model = new ModelCourse();\r\n      model.Id = Id;\r\n      model.TrainingCategoryId = TrainingCategoryId;\r\n      return this.httpClient.post<boolean>(this.apiURL + 'CourseActivate',model).pipe(\r\n          //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)\r\n        );\r\n    }\r\n    setCourseDeactivate(TrainingCategoryId: string,Id: string):Observable<boolean>{\r\n      var model = new ModelCourse();\r\n      model.Id = Id;\r\n      model.TrainingCategoryId = TrainingCategoryId;\r\n      return this.httpClient.post<boolean>(this.apiURL + 'CourseDeactivate',model).pipe(\r\n          //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)\r\n        );\r\n    }\r\n    createCourse(Id: string, Name:string):Observable<boolean>{\r\n      var model = new ModelCourse();\r\n      model.TrainingCategoryId = Id;\r\n      model.Name = Name;\r\n      return this.httpClient.post<boolean>(this.apiURL + 'CourseCreate',model).pipe(\r\n          //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)\r\n        );\r\n    }\r\n    updateCourse(TrainingCategoryId: string, Id: string, Name:string):Observable<boolean>{\r\n      var model = new ModelCourse();\r\n      model.Id = Id;\r\n      model.Name = Name;\r\n      model.TrainingCategoryId = TrainingCategoryId;\r\n      return this.httpClient.post<boolean>(this.apiURL + 'CourseUpdate',model).pipe(\r\n          //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)\r\n        );\r\n    }\r\n    //#endregion\r\n    //#region NGOType\r\n    getNGOTypeGetByid(Id: string):Observable<cNGOTypeItem>{\r\n      var model = new ModelId();\r\n      model.Id = Id;\r\n      return this.httpClient.post<cNGOTypeItem>(this.apiURL + 'NGOTypeGetById',model).pipe(\r\n          //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)\r\n        );\r\n    }\r\n    getNGOTypeAll(currentPage: number, filterText: string):Observable<cNGOTypeList>{\r\n      \r\n        var model = new ModelPaging()\r\n        model.CurrentPage = currentPage;\r\n        model.filterText = filterText;\r\n        return this.httpClient.post<cNGOTypeList>(this.apiURL + 'NGOTypeListAll',model).pipe(\r\n            //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n            catchError(this.handleError)\r\n          );\r\n    }\r\n    setNGOTypeActivate(Id: string):Observable<boolean>{\r\n      var model = new ModelId();\r\n      model.Id = Id;\r\n      return this.httpClient.post<boolean>(this.apiURL + 'NGOTypeActivate',model).pipe(\r\n          //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)\r\n        );\r\n    }\r\n    setNGOTypeDeactivate(Id: string):Observable<boolean>{\r\n      var model = new ModelId();\r\n      model.Id = Id;\r\n      return this.httpClient.post<boolean>(this.apiURL + 'NGOTypeDeactivate',model).pipe(\r\n          //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)\r\n        );\r\n    }\r\n    updateNGOType(Id: string, Name:string):Observable<boolean>{\r\n      var model = new cNGOTypeItem();\r\n      model.Id = Id;\r\n      model.Name = Name;\r\n      return this.httpClient.post<boolean>(this.apiURL + 'NGOTypeUpdate',model).pipe(\r\n          //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)\r\n        );\r\n    }\r\n    createNGOType(Name:string):Observable<boolean>{\r\n      var model = new cNGOTypeItem();\r\n      model.Name = Name;\r\n      return this.httpClient.post<boolean>(this.apiURL + 'NGOTypeCreate',model).pipe(\r\n          //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)\r\n        );\r\n    }\r\n    //#endregion\r\n    //#region City\r\n    getCityGetByid(Id: string):Observable<cCityItem>{\r\n      var model = new ModelId();\r\n      model.Id = Id;\r\n      return this.httpClient.post<cCityItem>(this.apiURL + 'CityGetById',model).pipe(\r\n          //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)\r\n        );\r\n    }\r\n    getCityListActive():Observable<cCityItem[]>{\r\n      return this.httpClient.get<cCityItem[]>(this.apiURL + 'CityListActive').pipe(\r\n          //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)\r\n        );\r\n    }\r\n    getCityAll(currentPage: number, filterText: string):Observable<cCityList>{\r\n      \r\n        var model = new ModelPaging()\r\n        model.CurrentPage = currentPage;\r\n        model.filterText = filterText;\r\n        return this.httpClient.post<cCityList>(this.apiURL + 'CityListAll',model).pipe(\r\n            //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n            catchError(this.handleError)\r\n          );\r\n    }\r\n    setCityActivate(Id: string):Observable<boolean>{\r\n      var model = new ModelId();\r\n      model.Id = Id;\r\n      return this.httpClient.post<boolean>(this.apiURL + 'CityActivate',model).pipe(\r\n          //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)\r\n        );\r\n    }\r\n    setCityDeactivate(Id: string):Observable<boolean>{\r\n      var model = new ModelId();\r\n      model.Id = Id;\r\n      return this.httpClient.post<boolean>(this.apiURL + 'CityDeactivate',model).pipe(\r\n          //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)\r\n        );\r\n    }\r\n    updateCity(Id: string, Name:string):Observable<boolean>{\r\n      var model = new cCityItem();\r\n      model.Id = Id;\r\n      model.Name = Name;\r\n      return this.httpClient.post<boolean>(this.apiURL + 'CityUpdate',model).pipe(\r\n          //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)\r\n        );\r\n    }\r\n    createCity(Name:string):Observable<boolean>{\r\n      var model = new cCityItem();\r\n      model.Name = Name;\r\n      return this.httpClient.post<boolean>(this.apiURL + 'CityCreate',model).pipe(\r\n          //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)\r\n        );\r\n    }\r\n    //#endregion\r\n    //#region Area\r\n    setAreaActivate(TrainingCategoryId: string,Id: string):Observable<boolean>{\r\n      var model = new ModelArea();\r\n      model.Id = Id;\r\n      model.CityId = TrainingCategoryId;\r\n      return this.httpClient.post<boolean>(this.apiURL + 'AreaActivate',model).pipe(\r\n          //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)\r\n        );\r\n    }\r\n    setAreaDeactivate(CityId: string,Id: string):Observable<boolean>{\r\n      var model = new ModelArea();\r\n      model.Id = Id;\r\n      model.CityId = CityId;\r\n      return this.httpClient.post<boolean>(this.apiURL + 'AreaDeactivate',model).pipe(\r\n          //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)\r\n        );\r\n    }\r\n    createArea(Id: string, Name:string):Observable<boolean>{\r\n      var model = new ModelArea();\r\n      model.CityId = Id;\r\n      model.Name = Name;\r\n      return this.httpClient.post<boolean>(this.apiURL + 'AreaCreate',model).pipe(\r\n          //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)\r\n        );\r\n    }\r\n    updateArea(CityId: string, Id: string, Name:string):Observable<boolean>{\r\n      var model = new ModelArea();\r\n      model.Id = Id;\r\n      model.Name = Name;\r\n      model.CityId = CityId;\r\n      return this.httpClient.post<boolean>(this.apiURL + 'AreaUpdate',model).pipe(\r\n          //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n          catchError(this.handleError)\r\n        );\r\n    }\r\n    //#endregion\r\n    \r\n    private handleError(err: HttpErrorResponse) {\r\n        // in a real world app, we may send the server to some remote logging infrastructure\r\n        // instead of just logging it to the console\r\n        let errorMessage = '';\r\n        if (err.error instanceof ErrorEvent) {\r\n          // A client-side or network error occurred. Handle it accordingly.\r\n          errorMessage = `An error occurred: ${err.error.message}`;\r\n        } else {\r\n          // The backend returned an unsuccessful response code.\r\n          // The response body may contain clues as to what went wrong,\r\n          errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\r\n        }\r\n        //console.error(errorMessage);\r\n        return throwError(errorMessage);\r\n      }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Constants } from '../constants';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { ModelId } from '../interface/Model/ModelId.interface';\r\nimport { cEntityPartnerItem, cEntityPartnerList } from '../interface/Response/EntityPartner.class';\r\nimport { ModelPaging } from '../interface/Model/ModelPaging.interface';\r\nimport { cEntityTrainingCenterItem, cEntityTrainingCenterList } from '../interface/Response/EntityTrainingCenter.class';\r\nimport { ModelEntityTrainingCenter } from '../interface/Model/ModelEntityTrainingCenter.class';\r\nimport { cEntitySubPartnerItem, cEntitySubPartnerList } from '../interface/Response/EntitySubPartner.class';\r\nimport { ModelEntitySubPartner } from '../interface/Model/ModelEntitySubPartner.class';\r\nimport { ModelEntityMember } from '../interface/Model/ModelEntityMember.class';\r\nimport { ModelEntitySubEntityIds } from '../interface/Model/ModelEntitySubEntityIds.class';\r\nimport { cEntityPartnerReportsItem, cEntityPartnerReportsList } from '../interface/Response/PartnerReports.class';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ServiceEntityManagement {\r\n  private apiURL = Constants.apiRoot + 'EntityManagement/'\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n  //#region EntityPartner\r\n  getEntityPartnerGetByid(Id: string): Observable<cEntityPartnerItem> {\r\n    var model = new ModelId();\r\n    model.Id = Id;\r\n    return this.httpClient.post<cEntityPartnerItem>(this.apiURL + 'EntityPartnerGetById', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  \r\n  getEntityPartnerListActive(query: string = \"\"): Observable<cEntityPartnerItem[]> {\r\n    return this.httpClient.post<cEntityPartnerItem[]>(this.apiURL + 'EntityPartnerListActive', query).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  EntityPartnerReportListAll(currentPage: number, filterText: string): Observable<cEntityPartnerReportsList> {\r\n    var model = new ModelPaging()\r\n    model.CurrentPage = currentPage;\r\n    model.filterText = filterText;\r\n    return this.httpClient.post<cEntityPartnerReportsList>(this.apiURL + 'EntityPartnerReportListAll', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  getEntityPartnerAll(currentPage: number, filterText: string): Observable<cEntityPartnerList> {\r\n    var model = new ModelPaging()\r\n    model.CurrentPage = currentPage;\r\n    model.filterText = filterText;\r\n    return this.httpClient.post<cEntityPartnerList>(this.apiURL + 'EntityPartnerListAll', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  getEntityPartnerGetMy(): Observable<cEntityPartnerItem[]> {\r\n    return this.httpClient.get<cEntityPartnerItem[]>(this.apiURL + 'EntityPartnerGetMy').pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  setEntityPartnerActivate(Id: string): Observable<boolean> {\r\n    var model = new ModelId();\r\n    model.Id = Id;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'EntityPartnerActivate', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  setEntityPartnerDeactivate(Id: string): Observable<boolean> {\r\n    var model = new ModelId();\r\n    model.Id = Id;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'EntityPartnerDeactivate', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  updateEntityPartner(model: cEntityPartnerItem): Observable<boolean> {\r\n    // var model = new cEntityPartnerItem();\r\n    // model.Id = Id;\r\n    // model.Name = Name;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'EntityPartnerUpdate', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  createEntityPartner(model: cEntityPartnerItem): Observable<boolean> {\r\n    return this.httpClient.post<boolean>(this.apiURL + 'EntityPartnerCreate', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  memberAddEntityPartner(PartnerId: string, UserId: string): Observable<boolean> {\r\n    var model = new ModelEntityMember();\r\n    model.EntityId = PartnerId;\r\n    model.UserId = UserId;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'EntityPartnerAddMember', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  memberRemoveEntityPartner(PartnerId: string, UserId: string): Observable<boolean> {\r\n    var model = new ModelEntityMember();\r\n    model.EntityId = PartnerId;\r\n    model.UserId = UserId;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'EntityPartnerRemoveMember', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  //#endregion\r\n  //#region EntitySubPartner\r\n  getEntitySubPartnerGetByid(Id: string): Observable<cEntitySubPartnerItem> {\r\n    var model = new ModelId();\r\n    model.Id = Id;\r\n    return this.httpClient.post<cEntitySubPartnerItem>(this.apiURL + 'EntitySubPartnerGetById', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  getEntitySubPartnerListActive(query: string = \"\", PartnerIds: string[] = null): Observable<cEntitySubPartnerItem[]> {\r\n    return this.httpClient.post<cEntitySubPartnerItem[]>(this.apiURL + 'EntitySubPartnerListActive', { \"query\": query, \"PartnerIds\": PartnerIds }).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  getEntitySubPartnerAll(currentPage: number, filterText: string): Observable<cEntitySubPartnerList> {\r\n\r\n    var model = new ModelPaging()\r\n    model.CurrentPage = currentPage;\r\n    model.filterText = filterText;\r\n    return this.httpClient.post<cEntitySubPartnerList>(this.apiURL + 'EntitySubPartnerListAll', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  getEntitySubPartnerGetMyByPartnerId(partnerId: string): Observable<cEntitySubPartnerItem[]> {\r\n    var model = new ModelId();\r\n    model.Id = partnerId;\r\n    return this.httpClient.post<cEntitySubPartnerItem[]>(this.apiURL + 'EntitySubPartnerGetMyByPartnerId', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  getEntitySubPartnerGetMy(): Observable<cEntitySubPartnerItem[]> {\r\n    return this.httpClient.get<cEntitySubPartnerItem[]>(this.apiURL + 'EntitySubPartnerGetMy').pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  setEntitySubPartnerActivate(Id: string): Observable<boolean> {\r\n    var model = new ModelId();\r\n    model.Id = Id;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'EntitySubPartnerActivate', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  setEntitySubPartnerDeactivate(Id: string): Observable<boolean> {\r\n    var model = new ModelId();\r\n    model.Id = Id;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'EntitySubPartnerDeactivate', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  updateEntitySubPartner(model: ModelEntitySubPartner): Observable<boolean> {\r\n    return this.httpClient.post<boolean>(this.apiURL + 'EntitySubPartnerUpdate', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  createEntitySubPartner(model: ModelEntitySubPartner): Observable<boolean> {\r\n    return this.httpClient.post<boolean>(this.apiURL + 'EntitySubPartnerCreate', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  memberAddEntitySubPartner(PartnerId: string, UserId: string): Observable<boolean> {\r\n    var model = new ModelEntityMember();\r\n    model.EntityId = PartnerId;\r\n    model.UserId = UserId;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'EntitySubPartnerAddMember', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  memberRemoveEntitySubPartner(PartnerId: string, UserId: string): Observable<boolean> {\r\n    var model = new ModelEntityMember();\r\n    model.EntityId = PartnerId;\r\n    model.UserId = UserId;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'EntitySubPartnerRemoveMember', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  AddPartnerEntityToEntitySubPartner(PartnerId: string, SubPartnerId: string): Observable<boolean> {\r\n    var model = new ModelEntityMember();\r\n    //UserId is Partner Id, EntityId Is subparnterId\r\n    model.EntityId = SubPartnerId;\r\n    model.UserId = PartnerId;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'EntitySubPartnerAddEntityPartner', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  RemovePartnerEntityToEntitySubPartner(PartnerId: string, SubPartnerId: string): Observable<boolean> {\r\n    var model = new ModelEntityMember();\r\n    //UserId is Partner Id, EntityId Is subparnterId\r\n    model.EntityId = SubPartnerId;\r\n    model.UserId = PartnerId;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'EntitySubPartnerRemoveEntityPartner', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  //#endregion\r\n  //#region EntityTrainingCenter\r\n  // getEntityTrainingCenterGetByid(Id: string):Observable<cEntityTrainingCenterItem>{\r\n  //   var model = new ModelId();\r\n  //   model.Id = Id;\r\n  //   return this.httpClient.post<cEntityTrainingCenterItem>(this.apiURL + 'EntityTrainingCenterGetById',model).pipe(\r\n  //       //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n  //       catchError(this.handleError)\r\n  //     );\r\n  // }\r\n  // getEntityTrainingCenterListActive():Observable<cEntityTrainingCenterItem[]>{\r\n  //     return this.httpClient.get<cEntityTrainingCenterItem[]>(this.apiURL + 'EntityTrainingCenterListActive').pipe(\r\n  //         //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n  //         catchError(this.handleError)\r\n  //       );\r\n  //   }\r\n  //   getEntityTrainingCenterAll(currentPage: number, filterText: string):Observable<cEntityTrainingCenterList>{\r\n\r\n  //       var model = new ModelPaging()\r\n  //       model.CurrentPage = currentPage;\r\n  //       model.filterText = filterText;\r\n  //       return this.httpClient.post<cEntityTrainingCenterList>(this.apiURL + 'EntityTrainingCenterListAll',model).pipe(\r\n  //           //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n  //           catchError(this.handleError)\r\n  //         );\r\n  //   }\r\n  setEntityTrainingCenterActivate(PartnerId: string, Id: string): Observable<boolean> {\r\n    var model = new ModelEntitySubEntityIds();\r\n    model.MainEntityId = PartnerId;\r\n    model.SubEntityId = Id;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'EntityTrainingCenterActivate', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  setEntityTrainingCenterDeactivate(PartnerId: string, Id: string): Observable<boolean> {\r\n    var model = new ModelEntitySubEntityIds();\r\n    model.MainEntityId = PartnerId;\r\n    model.SubEntityId = Id;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'EntityTrainingCenterDeactivate', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  updateEntityTrainingCenter(model: ModelEntityTrainingCenter): Observable<boolean> {\r\n    return this.httpClient.post<boolean>(this.apiURL + 'EntityTrainingCenterUpdate', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  createEntityTrainingCenter(model: ModelEntityTrainingCenter): Observable<boolean> {\r\n    return this.httpClient.post<boolean>(this.apiURL + 'EntityTrainingCenterCreate', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  AddEntityTrainingCenterToSubPartner(TrainginCenterId: string, SubPartnerId: string): Observable<boolean> {\r\n    var model = new ModelEntitySubEntityIds();\r\n    model.MainEntityId = TrainginCenterId;\r\n    model.SubEntityId = SubPartnerId;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'AddEntityTrainingCenterToSubPartner', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  RemoveEntityTrainingCenterToSubPartner(TrainginCenterId: string, SubPartnerId: string): Observable<boolean> {\r\n    var model = new ModelEntitySubEntityIds();\r\n    model.MainEntityId = TrainginCenterId;\r\n    model.SubEntityId = SubPartnerId;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'RemoveEntityTrainingCenterToSubPartner', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  AddEntityTrainingCenterToSubPartnerByPartnerID(PartnerId: string, SubPartnerId: string): Observable<boolean> {\r\n    var model = new ModelEntitySubEntityIds();\r\n    model.MainEntityId = PartnerId;\r\n    model.SubEntityId = SubPartnerId;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'AddEntityTrainingCenterToSubPartnerByPartnerID', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  RemoveEntityTrainingCenterToSubPartnerByPartnerID(PartnerId: string, SubPartnerId: string): Observable<boolean> {\r\n    var model = new ModelEntitySubEntityIds();\r\n    model.MainEntityId = PartnerId;\r\n    model.SubEntityId = SubPartnerId;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'RemoveEntityTrainingCenterToSubPartnerByPartnerID', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  //#endregion\r\n  private handleError(err: HttpErrorResponse) {\r\n    // in a real world app, we may send the server to some remote logging infrastructure\r\n    // instead of just logging it to the console\r\n    let errorMessage = '';\r\n    if (err.error instanceof ErrorEvent) {\r\n      // A client-side or network error occurred. Handle it accordingly.\r\n      errorMessage = `An error occurred: ${err.error.message}`;\r\n    } else {\r\n      // The backend returned an unsuccessful response code.\r\n      // The response body may contain clues as to what went wrong,\r\n      errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\r\n    }\r\n    //console.error(errorMessage);\r\n    return throwError(errorMessage);\r\n  }\r\n}","import { Injectable } from '@angular/core';\nimport { Constants } from '../constants';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { cExamTemplateItem, cExamTemplateList } from '../interface/Response/ExamTemplate.class';\nimport { ModelId } from '../interface/Model/ModelId.interface';\nimport { tap, catchError } from 'rxjs/operators';\nimport { ModelPaging } from '../interface/Model/ModelPaging.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServiceExamTemplate {\n\n  private apiURL = Constants.apiRoot + 'ExamTemplate/'\n\n  constructor(private httpClient: HttpClient) { }\n  //#region ExamTemplate\n  getExamTemplateGetByid(Id: string): Observable<cExamTemplateItem> {\n    var model = new ModelId();\n    model.Id = Id;\n    return this.httpClient.post<cExamTemplateItem>(this.apiURL + 'ExamTemplateGetById', model).pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  ExamTemplateListActive(): Observable<cExamTemplateItem[]> {\n    \n    return this.httpClient.get<cExamTemplateItem[]>(this.apiURL + 'ExamTemplateListActive').pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  getExamTemplateAll(currentPage: number, filterText: string): Observable<cExamTemplateList> {\n    var model = new ModelPaging()\n    model.CurrentPage = currentPage;\n    model.filterText = filterText;\n    \n    return this.httpClient.post<cExamTemplateList>(this.apiURL + 'ExamTemplateListAll', model).pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  setExamTemplateActivate(Id: string): Observable<boolean> {\n    var model = new ModelId();\n    model.Id = Id;\n    return this.httpClient.post<boolean>(this.apiURL + 'ExamTemplateActivate', model).pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  setExamTemplateDeactivate(Id: string): Observable<boolean> {\n    var model = new ModelId();\n    model.Id = Id;\n    return this.httpClient.post<boolean>(this.apiURL + 'ExamTemplateDeactivate', model).pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  updateExamTemplate(model): Observable<boolean> {\n    return this.httpClient.post<boolean>(this.apiURL + 'ExamTemplateUpdate', model).pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  createExamTemplate(model): Observable<boolean> {\n    return this.httpClient.post<boolean>(this.apiURL + 'ExamTemplateCreate', model).pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  private handleError(err: HttpErrorResponse) {\n    // in a real world app, we may send the server to some remote logging infrastructure\n    // instead of just logging it to the console\n    let errorMessage = '';\n    if (err.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      errorMessage = `An error occurred: ${err.error.message}`;\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\n    }\n    //console.error(errorMessage);\n    return throwError(errorMessage);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { Constants } from '../constants';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport {  cExamQuestionList, cQuestionItemTemplate } from '../interface/Model/ModelQuestions.class';\r\nimport { ModelId } from '../interface/Model/ModelId.interface';\r\nimport { tap, catchError } from 'rxjs/operators';\r\nimport { ModelPaging } from '../interface/Model/ModelPaging.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServiceExam {\r\n\r\n  private apiURL = Constants.apiRoot + 'Exam/'\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n  takeExam(Id: string): Observable<cExamQuestionList> {\r\n    var model = new ModelId();\r\n    model.Id = Id;\r\n    return this.httpClient.post<cExamQuestionList>(this.apiURL + 'TakeExam', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  SubmitExam(examId:string, questions:cQuestionItemTemplate[]){\r\n    var model = new cExamQuestionList();\r\n    model.questions = questions;\r\n    model.ExamId = examId;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'SubmitExam', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  private handleError(err: HttpErrorResponse) {\r\n    // in a real world app, we may send the server to some remote logging infrastructure\r\n    // instead of just logging it to the console\r\n    let errorMessage = '';\r\n    if (err.error instanceof ErrorEvent) {\r\n      // A client-side or network error occurred. Handle it accordingly.\r\n      errorMessage = `An error occurred: ${err.error.message}`;\r\n    } else {\r\n      // The backend returned an unsuccessful response code.\r\n      // The response body may contain clues as to what went wrong,\r\n      errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\r\n    }\r\n    //console.error(errorMessage);\r\n    return throwError(errorMessage);\r\n  }\r\n}\r\n","import { Injectable, OnInit } from '@angular/core';\r\nimport { AuthService } from '../core/auth-service.component';\r\nimport { UserProfile } from '../model/user-profile';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { AuthContext } from '../model/auth-context';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServiceLoginUser implements OnInit {\r\n  AuthContext: AuthContext;\r\n  isLoggedIn = false;\r\n  userName: string;\r\n  userRole: string;\r\n  IsAdmin: boolean;\r\n  IsPartner: boolean;\r\n  IsSubPartner: boolean;\r\n  IsTrainer: boolean;\r\n  IsTrainee: boolean;\r\n\r\n  private _userName = new Subject<string>();\r\n  UserNameChanged = this._userName.asObservable();\r\n\r\n  private _userRole = new Subject<string>();\r\n  UserRoleChanged = this._userRole.asObservable();\r\n\r\n  private _userIsLoggedIn = new Subject<boolean>();\r\n  UserIsLoggedInChanged = this._userIsLoggedIn.asObservable();\r\n\r\n  private _userIsAdmin = new Subject<boolean>();\r\n  UserIsAdminChanged = this._userIsAdmin.asObservable();\r\n\r\n  private _userIsPartner = new Subject<boolean>();\r\n  UserIsPartnerChanged = this._userIsPartner.asObservable();\r\n\r\n  private _userIsSubPartner = new Subject<boolean>();\r\n  UserIsSubPartnerChanged = this._userIsSubPartner.asObservable();\r\n\r\n  private _userIsTrainer = new Subject<boolean>();\r\n  UserIsTrainerChanged = this._userIsTrainer.asObservable();\r\n\r\n  private _userIsTrainee = new Subject<boolean>();\r\n  UserIsTraineeChanged = this._userIsTrainee.asObservable();\r\n\r\n  constructor(private _authService: AuthService) {\r\n    this._authService.loginChanged.subscribe(loggedIn => {\r\n      this.isLoggedIn = loggedIn;\r\n      this._userIsLoggedIn.next(loggedIn);\r\n    });\r\n    this._authService.authContextChanged.subscribe(obj => {\r\n      this.AuthContext = obj;\r\n      if (this.isLoggedIn && this.AuthContext) {\r\n        this.userName = obj.userProfile.FullName;\r\n        this.userRole = obj.userProfile.Role;\r\n        this.IsAdmin = obj.isAdmin;\r\n        this.IsPartner = obj.isPartner;\r\n        this.IsSubPartner = obj.isSubPartner;\r\n        this.IsTrainer = obj.isTrainer;\r\n        this.IsTrainee = obj.isTrainee;\r\n\r\n        this._userName.next(obj.userProfile.FullName);\r\n        this._userRole.next(obj.userProfile.Role);\r\n        this._userIsAdmin.next(obj.isAdmin);\r\n        this._userIsPartner.next(obj.isPartner);\r\n        this._userIsSubPartner.next(obj.isSubPartner);\r\n        this._userIsTrainer.next(obj.isTrainer);\r\n        this._userIsTrainee.next(obj.isTrainee);\r\n      }\r\n    });\r\n  }\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n}\r\n","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Constants } from '../constants';\nimport { ModelId } from '../interface/Model/ModelId.interface';\nimport { ModelPaging } from '../interface/Model/ModelPaging.interface';\nimport { cLogoPartnerItem, cLogoPartnerList } from '../interface/Response/LogoPartner.class';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServiceLogoPartner {\n\n  private apiURL = Constants.apiRoot + 'LogoPartner/'\n\n  constructor(private httpClient: HttpClient) { }\n  getLogoPartnerGetByid(Id: string): Observable<cLogoPartnerItem> {\n    var model = new ModelId();\n    model.Id = Id;\n    return this.httpClient.post<cLogoPartnerItem>(this.apiURL + 'LogoPartnerGetById', model).pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  getLogoPartnerListActive(): Observable<cLogoPartnerItem[]> {\n    return this.httpClient.get<cLogoPartnerItem[]>(this.apiURL + 'LogoPartnerListActive').pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  getLogoPartnerAll(currentPage: number, filterText: string): Observable<cLogoPartnerList> {\n\n    var model = new ModelPaging()\n    model.CurrentPage = currentPage;\n    model.filterText = filterText;\n    return this.httpClient.post<cLogoPartnerList>(this.apiURL + 'LogoPartnerListAll', model).pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  setLogoPartnerActivate(Id: string): Observable<boolean> {\n    var model = new ModelId();\n    model.Id = Id;\n    return this.httpClient.post<boolean>(this.apiURL + 'LogoPartnerActivate', model).pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  setLogoPartnerDeactivate(Id: string): Observable<boolean> {\n    var model = new ModelId();\n    model.Id = Id;\n    return this.httpClient.post<boolean>(this.apiURL + 'LogoPartnerDeactivate', model).pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  createLogoPartner(WebsiteURL: string, fileToUpload: File): Observable<boolean> {\n    const formData = new FormData();\n    formData.append('file', fileToUpload, fileToUpload.name);\n\n    return this.httpClient.post<boolean>(this.apiURL + 'LogoPartnerCreate?WebsiteURL=' + WebsiteURL , formData).pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  updateLogoPartner(Id: string, WebsiteURL: string, fileToUpload: File): Observable<boolean> {\n    const formData = new FormData();\n    formData.append('file', fileToUpload, fileToUpload.name);\n    return this.httpClient.post<boolean>(this.apiURL + 'LogoPartnerUpdate?WebsiteURL=' + WebsiteURL + \"&Id=\" + Id, formData).pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  private handleError(err: HttpErrorResponse) {\n    // in a real world app, we may send the server to some remote logging infrastructure\n    // instead of just logging it to the console\n    let errorMessage = '';\n    if (err.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      errorMessage = `An error occurred: ${err.error.message}`;\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\n    }\n    //console.error(errorMessage);\n    return throwError(errorMessage);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Constants } from '../constants';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { cQuestionItem } from '../interface/Model/ModelQuestions.class';\nimport { ModelId } from '../interface/Model/ModelId.interface';\nimport { tap, catchError } from 'rxjs/operators';\nimport { cContentDataItem } from '../interface/Response/ContentData.class';\nimport { cEntityPartnerItem } from '../interface/Response/EntityPartner.class';\nimport { ConfigForm } from '../Enum/ConfigForm.enum';\nimport { FieldConfig } from '../common/ConfigForms/field.interface';\nimport { ModelConfigFormGet } from '../interface/Model/ModelConfigFormGet.class';\nimport { StatsCount } from '../interface/Response/StatsCount.class';\nimport { ModelLanguage } from '../interface/Model/ModelLanguage.class';\nimport { LanguageType } from '../Enum/LanguageType.enum';\nimport { cLogoPartnerItem } from '../interface/Response/LogoPartner.class';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServiceMisc {\n\n  private apiURL = Constants.apiRoot + 'Misc/'\n\n  constructor(private httpClient: HttpClient) { }\n  SetLanguage(strLang: string): Observable<cQuestionItem> {\n    var model = new ModelLanguage()\n    switch (strLang){\n      case \"en\" : model.Lang = LanguageType.English;\n      break;\n      case \"ar\" : model.Lang = LanguageType.Arabic;\n      break;\n      case \"fr\" : model.Lang = LanguageType.French;\n      break;\n    }\n    return this.httpClient.post<cQuestionItem>(this.apiURL + 'SetLanguage', model).pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  RequestRegister(model): Observable<cQuestionItem> {\n    return this.httpClient.post<cQuestionItem>(this.apiURL + 'RequestRegister', model).pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  ContentDataOneGetByTypeId(type): Observable<cContentDataItem> {\n    var model = new ModelId();\n    model.Id = <string>type;\n    return this.httpClient.post<cContentDataItem>(this.apiURL + 'ContentDataOneGetByTypeId', model).pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  getEntityPartnerListAllActiveAnonymous(): Observable<cEntityPartnerItem[]> {\n    return this.httpClient.get<cEntityPartnerItem[]>(this.apiURL + 'EntityPartnerListAllActiveAnonymous').pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  GetByType(type: ConfigForm): Observable<FieldConfig[]> {\n    var model = new ModelConfigFormGet();\n    model.type = type;\n    return this.httpClient.post<FieldConfig[]>(this.apiURL + 'GetByType', model).pipe(\n      tap(data => {\n\n        //console.log('All: ' + JSON.stringify(data));\n      }),\n      catchError(this.handleError)\n    );\n  }\n  GetStats(): Observable<StatsCount> {\n    return this.httpClient.get<StatsCount>(this.apiURL + 'GetStats').pipe(\n      tap(data => {\n\n        //console.log('All: ' + JSON.stringify(data));\n      }),\n      catchError(this.handleError)\n    );\n  }\n  getLogoPartnerListActive(): Observable<cLogoPartnerItem[]> {\n    return this.httpClient.get<cLogoPartnerItem[]>(this.apiURL + 'LogoPartnerListActive').pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  private handleError(err: HttpErrorResponse) {\n    // in a real world app, we may send the server to some remote logging infrastructure\n    // instead of just logging it to the console\n    let errorMessage = '';\n    if (err.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      errorMessage = `An error occurred: ${err.error.message}`;\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\n    }\n    //console.error(errorMessage);\n    return throwError(errorMessage);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { ShowMessage } from '../interface/Model/ModelShowMessage.class';\r\nimport { Observable, Subject, observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServiceShowMessage {\r\n\r\n  constructor() { }\r\n  private _msgSubject = new Subject<ShowMessage>();\r\n\r\n  msgChanged = this._msgSubject.asObservable();\r\n  \r\n  sendMessage(message: ShowMessage) {\r\n      this._msgSubject.next(message);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ServiceGeneric } from './GenericService.service';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { cTraineeItem, cTraineeList } from '../interface/Response/Trainee.class';\r\nimport { ModelTrainee } from '../interface/Model/ModelTrainee.class';\r\nimport { ModelTraineeTraining } from '../interface/Model/ModelTraineeTraining.class';\r\nimport { Observable } from 'rxjs';\r\nimport { tap, catchError } from 'rxjs/operators';\r\nimport { ModelPaging } from '../interface/Model/ModelPaging.interface';\r\nimport { MyTraining } from '../interface/Response/MyTraining.class';\r\nimport { ModelId } from '../interface/Model/ModelId.interface';\r\nimport { ModelUserProfile } from '../interface/Model/ModelUserProfile.class';\r\nimport { ImportTrainee } from '../interface/Response/ImportTrainee.class';\r\n//import { saveAs } from 'file-saver/FileSaver';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServiceTrainee extends ServiceGeneric<cTraineeItem, cTraineeList, ModelTrainee> {\r\n  constructor(protected httpClient: HttpClient) {\r\n    super(\"Trainee/\", httpClient);\r\n  }\r\n  RemoveTraining(trainingId: string, traineeId: string): Observable<boolean> {\r\n    var model = new ModelTraineeTraining();\r\n    model.TraineeId = traineeId;\r\n    model.TrainingId = trainingId;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'RemoveTraining', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  AddTraining(trainingId: string, traineeId: string): Observable<boolean> {\r\n    var model = new ModelTraineeTraining();\r\n    model.TraineeId = traineeId;\r\n    model.TrainingId = trainingId;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'AddTraining', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  ListSearch(filterText: string): Observable<cTraineeItem[]> {\r\n    var model = new ModelPaging()\r\n    model.CurrentPage = 1;\r\n    model.filterText = filterText;\r\n    return this.httpClient.post<cTraineeItem[]>(this.apiURL + 'ListSearch', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  GetTraineeTraining(Id: string): Observable<MyTraining> {\r\n    var model = new ModelId()\r\n    model.Id = Id;\r\n    return this.httpClient.post<MyTraining>(this.apiURL + 'GetTraineeTraining', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  GetMyTraining(): Observable<MyTraining> {\r\n    return this.httpClient.get<MyTraining>(this.apiURL + 'GetMyTraining').pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  TraineeRegister(trainingId: string): Observable<boolean> {\r\n    var model = new ModelId();\r\n    model.Id = trainingId;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'TraineeRegister', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  ApproveTraineeRegister(model): Observable<boolean> {\r\n\r\n    return this.httpClient.post<boolean>(this.apiURL + 'ApproveTraineeRegister', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  ImportTrainee(fileToUpload: File, TrainingId: string): Observable<ImportTrainee> {\r\n    const formData = new FormData();\r\n    formData.append('file', fileToUpload, fileToUpload.name);\r\n    return this.httpClient.post<ImportTrainee>(this.apiURL + 'ImportTrainee?TrainingId=' + TrainingId, formData).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  DownloadTrainingCertificate(trainingId: string): Observable<string> {\r\n    var model = new ModelId();\r\n    model.Id = trainingId;\r\n    return this.httpClient.post<string>(this.apiURL + 'DownloadTrainingCertificate', model).pipe(\r\n      //tap(data => saveAs(data, \"CourseCertificates.zip\")),\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  ResendActivationLink(Email: string): Observable<boolean> {\r\n    var model = new ModelUserProfile();\r\n    model.Email = Email;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'ResendActivationLink', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  ResendPasswordLink(Email: string): Observable<boolean> {\r\n    var model = new ModelUserProfile();\r\n    model.Email = Email;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'ResendPasswordLink', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  getMyProfile(): Observable<cTraineeItem> {\r\n    return this.httpClient.get<cTraineeItem>(this.apiURL + 'getMyProfile').pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  updateMyProfile(model: ModelTrainee): Observable<boolean> {\r\n    return this.httpClient.post<boolean>(this.apiURL + 'updateMyProfile', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { cTrainingItem, cTrainingList, cAttendance } from '../interface/Response/Training.class';\r\nimport { ModelTraining } from '../interface/Model/ModelTraining.class';\r\nimport { ServiceGeneric } from './GenericService.service';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { tap, catchError } from 'rxjs/operators';\r\nimport { ModelFilterTraining } from '../interface/Model/ModelFilterTraining.class';\r\nimport { Observable } from 'rxjs';\r\nimport { ModelId } from '../interface/Model/ModelId.interface';\r\nimport { ModelTraineeTraining } from '../interface/Model/ModelTraineeTraining.class';\r\nimport { ModelSaveAttendnace } from '../interface/Model/ModelSaveAttendance.class';\r\nimport { ModelEntitySubEntityIds } from '../interface/Model/ModelEntitySubEntityIds.class';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServiceTraining extends ServiceGeneric<cTrainingItem, cTrainingList, ModelTraining> {\r\n  constructor(protected httpClient: HttpClient) {\r\n    super(\"Training/\", httpClient);\r\n  }\r\n  ExportTrainingTrainee(Id:string): Observable<Blob> {\r\n    var model = new ModelId();\r\n        model.Id = Id;\r\n    return this.httpClient.post<Blob>(this.apiURL + 'ExportTrainingTrainee', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  SaveExamTemplate(model: ModelEntitySubEntityIds): Observable<boolean> {\r\n    return this.httpClient.post<boolean>(this.apiURL + 'SaveExamTemplate', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  ExportTraining(model: ModelFilterTraining): Observable<Blob> {\r\n    return this.httpClient.post<Blob>(this.apiURL + 'ExportTraining', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  searchTraining(model: ModelFilterTraining): Observable<cTrainingList> {\r\n    return this.httpClient.post<cTrainingList>(this.apiURL + 'ListAll', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  SetAdminApproved(trainingId: string): Observable<cTrainingList> {\r\n    var model = new ModelId();\r\n    model.Id = trainingId;\r\n    return this.httpClient.post<cTrainingList>(this.apiURL + 'SetAdminApproved', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  SetConfirmed1(trainingId: string): Observable<cTrainingList> {\r\n    var model = new ModelId();\r\n    model.Id = trainingId;\r\n    return this.httpClient.post<cTrainingList>(this.apiURL + 'SetConfirmed1', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  SetConfirmed2(trainingId: string): Observable<cTrainingList> {\r\n    var model = new ModelId();\r\n    model.Id = trainingId;\r\n    return this.httpClient.post<cTrainingList>(this.apiURL + 'SetConfirmed2', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  SaveAttendnace(trainingId: string, att: cAttendance) {\r\n    var model = new ModelSaveAttendnace();\r\n    model.trainingId = trainingId;\r\n    model.Attendances = att;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'SaveAttendnace', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Constants } from '../constants';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { ModelTranslateList } from '../interface/Model/ModelTranslateList.class';\nimport { Observable, throwError } from 'rxjs';\nimport { TranslateList } from '../interface/Response/TranslateList.classl';\nimport { tap, catchError } from 'rxjs/operators';\nimport { TranslateType } from '../Enum/TranslateType.enum';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServiceTranslateList {\n\n  private apiURL = Constants.apiRoot + 'Translate/'\n\n  constructor(private httpClient: HttpClient) { }\n  \n  ListTranslationByType(model: ModelTranslateList): Observable<TranslateList> {\n    return this.httpClient.post<TranslateList>(this.apiURL + 'ListTranslationByType', model).pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  SaveListTranslation(model: TranslateList): Observable<TranslateList> {\n    return this.httpClient.post<TranslateList>(this.apiURL + 'SaveListTranslation', model).pipe(\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  private handleError(err: HttpErrorResponse) {\n    // in a real world app, we may send the server to some remote logging infrastructure\n    // instead of just logging it to the console\n    let errorMessage = '';\n    if (err.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      errorMessage = `An error occurred: ${err.error.message}`;\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\n    }\n    //console.error(errorMessage);\n    return throwError(errorMessage);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { ModelId } from '../interface/Model/ModelId.interface';\r\nimport { tap, catchError } from 'rxjs/operators';\r\nimport { cUserProfileItem, cUserProfileList, cUserProfileTrainerCertificateItem, cUserProfileTrainerCertificateItemWithProfile, cUserProfileTrainerCertificateList } from '../interface/Response/UserProfile.class';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { HttpErrorResponse, HttpClient } from '@angular/common/http';\r\nimport { Constants } from '../constants';\r\nimport { ModelPaging } from '../interface/Model/ModelPaging.interface';\r\nimport { ModelUserProfile } from '../interface/Model/ModelUserProfile.class';\r\nimport { ServiceGeneric } from './GenericService.service';\r\nimport { ModelAccountSearch } from '../interface/Model/ModelAccountSearch.class';\r\nimport { ModelMyAssignedAccount } from '../interface/Model/ModelMyAssignedAccount.class';\r\nimport { ModelTrainerCertificateApproval } from '../interface/Model/ModelTrainerCertificateApproval.class';\r\nimport { ModelChangeEmail } from '../interface/Model/ModelChangeEmail.class';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServiceUserProfile extends ServiceGeneric<cUserProfileItem, cUserProfileList, ModelUserProfile> {\r\n  constructor(protected httpClient: HttpClient) {\r\n    super(\"AccountManagement/\", httpClient);\r\n  }\r\n  getSearch(currentPage: number, filterText: string, filterType: string): Observable<cUserProfileList> {\r\n\r\n    var model = new ModelAccountSearch()\r\n    model.CurrentPage = currentPage;\r\n    model.filterText = filterText;\r\n    model.filterType = +filterType;\r\n\r\n    return this.httpClient.post<cUserProfileList>(this.apiURL + 'ListAll', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  GetTrainerCertificate(currentPage: number, filterText: string): Observable<cUserProfileTrainerCertificateList> {\r\n\r\n    var model = new ModelPaging()\r\n    model.CurrentPage = currentPage;\r\n    model.filterText = filterText;\r\n\r\n    return this.httpClient.post<cUserProfileTrainerCertificateList>(this.apiURL + 'GetTrainerCertificate', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  UpdateUserEmail(model: ModelChangeEmail): Observable<boolean> {\r\n\r\n    return this.httpClient.post<boolean>(this.apiURL + 'UpdateUserEmail', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  CertificateApprove(model: ModelTrainerCertificateApproval): Observable<boolean> {\r\n\r\n    return this.httpClient.post<boolean>(this.apiURL + 'CertificateApprove', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  GetMyTrainersBySubPartnerId(subPartnerId: string): Observable<cUserProfileItem[]> {\r\n    var model = new ModelId();\r\n    model.Id = subPartnerId;\r\n    return this.httpClient.post<cUserProfileItem[]>(this.apiURL + 'GetMyTrainersBySubPartnerId', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  GetMyTrainers(): Observable<cUserProfileItem[]> {\r\n    return this.httpClient.get<cUserProfileItem[]>(this.apiURL + 'GetMyTrainers').pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  GetPartnerSearch(filterText: string, currentPage: number = 1): Observable<cUserProfileItem[]> {\r\n    var model = new ModelPaging()\r\n    model.CurrentPage = currentPage;\r\n    model.filterText = filterText;\r\n    return this.httpClient.post<cUserProfileItem[]>(this.apiURL + 'GetPartnerSearch', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  GetSubPartnerSearch(filterText: string, currentPage: number = 1): Observable<cUserProfileItem[]> {\r\n    var model = new ModelPaging()\r\n    model.CurrentPage = currentPage;\r\n    model.filterText = filterText;\r\n    return this.httpClient.post<cUserProfileItem[]>(this.apiURL + 'GetSubPartnerSearch', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  AddAccountToMyAssignedToAccount(UserId: string, AccountId, type: number): Observable<boolean> {\r\n    var model = new ModelMyAssignedAccount()\r\n    model.UserId = UserId;\r\n    model.AccountId = AccountId;\r\n    model.Type = type;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'AddAccountToMyAssignedToAccount', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  RemoveAccountToMyAssignedToAccount(UserId: string, AccountId: string, type: number): Observable<boolean> {\r\n    var model = new ModelMyAssignedAccount()\r\n    model.UserId = UserId;\r\n    model.AccountId = AccountId;\r\n    model.Type = type;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'RemoveAccountToMyAssignedToAccount', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  ResendActivationLink(Email: string): Observable<boolean> {\r\n    var model = new ModelUserProfile();\r\n    model.Email = Email;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'ResendActivationLink', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  ResendPasswordLink(Email: string): Observable<boolean> {\r\n    var model = new ModelUserProfile();\r\n    model.Email = Email;\r\n    return this.httpClient.post<boolean>(this.apiURL + 'ResendPasswordLink', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n  MyTrainerCertificate(Id: string): Observable<cUserProfileTrainerCertificateItemWithProfile> {\r\n    var model = new ModelId();\r\n    model.Id = Id;\r\n    return this.httpClient.post<cUserProfileTrainerCertificateItemWithProfile>(this.apiURL + 'MyTrainerCertificate', model).pipe(\r\n      //tap(data => console.log('All: ' + JSON.stringify(data))),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n}","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { cEntitySubPartnerItem } from 'src/app/interface/Response/EntitySubPartner.class';\r\nimport { cUserProfileItem } from 'src/app/interface/Response/UserProfile.class';\r\nimport { ServiceUserProfile } from 'src/app/services/userprofile.service';\r\nimport { ServiceEntityManagement } from 'src/app/services/entitymanagement.service';\r\nimport { cEntityPartnerItem } from 'src/app/interface/Response/EntityPartner.class';\r\nimport { DynamicFormComponent } from 'src/app/common/ConfigForms/components/dynamic-form/dynamic-form.component';\r\nimport { FieldConfig, Validator } from 'src/app/common/ConfigForms/field.interface';\r\nimport { ServiceConfigForm } from 'src/app/services/config-form.service';\r\nimport { ConfigForm } from 'src/app/Enum/ConfigForm.enum';\r\nimport { cTraineeItem } from 'src/app/interface/Response/Trainee.class';\r\nimport { baseComponent } from 'src/app/interface/baseComponent.class';\r\nimport { ServiceShowMessage } from 'src/app/services/show-message.service';\r\nimport { ServiceLoginUser } from 'src/app/services/loginuser.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-test',\r\n  templateUrl: './test.component.html',\r\n  styleUrls: ['./test.component.scss']\r\n})\r\nexport class TestComponent extends baseComponent implements OnInit {\r\n  modelObj: cTraineeItem = new cTraineeItem();\r\n@ViewChild(DynamicFormComponent) dyForm: DynamicFormComponent;\r\nregConfig: FieldConfig[] = [];\r\n\r\n  constructor(private BLServiceUserProfile:ServiceUserProfile,\r\n    private BLServiceConfigForm: ServiceConfigForm,\r\n        private BLserviceEntity:ServiceEntityManagement,\r\n        BLServiceShowMessage: ServiceShowMessage,\r\n        BLServiceLoginUser: ServiceLoginUser,BLTranslate: TranslateService,){\r\n          super(BLServiceShowMessage, BLServiceLoginUser, BLTranslate);\r\n    }\r\n    \r\n  ngOnInit() {\r\n    this.InitDynamicForm();\r\n  }\r\n  InitDynamicForm() {\r\n    this.BLServiceConfigForm.GetByType(ConfigForm.Trainee).subscribe({\r\n      next: lst => {\r\n        this.regConfig = <FieldConfig[]>[];\r\n        lst.forEach(item => {\r\n\r\n          var obj = new FieldConfig();\r\n\r\n          obj.inputType = item.inputType;\r\n          obj.label = item.label;\r\n          obj.name = item.name;\r\n          obj.options = item.options;\r\n          obj.order = item.order;\r\n          obj.type = item.type;\r\n          obj.validations.push(new Validator(item.label));\r\n          if (this.modelObj.data)\r\n            obj.value = this.modelObj.data[item.name];\r\n\r\n          this.regConfig.push(obj);\r\n        });\r\n        this.dyForm.fields = this.regConfig;\r\n        this.dyForm .createControl();\r\n      },\r\n      error: err => this.message.Error(err)\r\n    });\r\n\r\n  }\r\n  loadData(){\r\n    \r\n  }\r\n}\r\n","<section class=\"my-5\">\r\n    <div class=\"container\" >\r\n    \r\n       <p>test works!</p>\r\n       <div class=\"row\">\r\n        <!-- <cust-add-trainee  [IsCreate]=\"true\" (Reload)=\"loadData()\"></cust-add-trainee> -->\r\n    </div>\r\n\r\n    </div>\r\n</section>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TestComponent } from './test.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { SharedModule } from 'src/app/common/sharedmodule.module';\r\n\r\n\r\n// RECOMMENDED\r\n\r\n// NOT RECOMMENDED (Angular 9 doesn't support this kind of import)\r\n//import { TypeaheadModule } from 'ngx-bootstrap';\r\n\r\n@NgModule({\r\n  declarations: [TestComponent],\r\n  imports: [\r\n    SharedModule,    \r\n    RouterModule.forChild([\r\n      { path: 'Test/Test', component: TestComponent}\r\n    ])\r\n  ],providers: [\r\n  ]\r\n})\r\nexport class TestModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}